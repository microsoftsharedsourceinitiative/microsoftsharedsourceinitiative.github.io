<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>INTERNAL_I8042_HOOK_KEYBOARD</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="INTERNAL_I8042_HOOK_KEYBOARD">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_internal_i8042_hook_keyboard_kr"></A>INTERNAL_I8042_HOOK_KEYBOARD</H1>

<P>INTERNAL_I8042_HOOK_KEYBOARD is used by I8042prt to connect optional callback routines that supplement keyboard initialization and the keyboard ISR. The callbacks can be supplied by an optional, vendor-supplied, upper-level filter driver.</P>

<PRE class=syntax>typedef struct _INTERNAL_I8042_HOOK_KEYBOARD {
  OUT PVOID  Context;
  OUT PI8042_KEYBOARD_INITIALIZATION_ROUTINE  InitializationRoutine;
  OUT PI8042_KEYBOARD_ISR  IsrRoutine;
  IN PI8042_ISR_WRITE_PORT  IsrWritePort;
  IN PI8042_QUEUE_PACKET  QueueKeyboardPacket;
  IN PVOID  CallContext;
} INTERNAL_I8042_HOOK_KEYBOARD, *PINTERNAL_I8042_HOOK_KEYBOARD;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Context</B></DT>

<DD>Pointer, if non-NULL, to the context that must be used with the <B>InitializationRoutine</B> and <B>IsrRoutine</B> routines. Otherwise, <B>Context</B> is NULL. </DD>

<DT><B>InitializationRoutine</B></DT>

<DD>Pointer, if non-NULL, to an optional <A HREF="i8042ref_0ysy.htm">PI8042_KEYBOARD_INITIALIZATION_ROUTINE</A>callback. I8042prt uses this callback to initialize a device after the device is reset. Otherwise, <B>IntializatonRoutine</B> is NULL.</DD>

<DT><B>IsrRoutine</B></DT>

<DD>Pointer, if non-NULL, to an optional <A HREF="i8042ref_0f1u.htm">PI8042_KEYBOARD_ISR</A> callback that customizes the operation of the I8042prt keyboard ISR. Otherwise, <B>IsrRoutine </B>is NULL.</DD>

<DT><B>IsrWritePort</B></DT>

<DD>Pointer to the system-supplied <A HREF="i8042ref_1k1e.htm">PI8042_ISR_WRITE_PORT</A> callback, which writes data to a keyboard.</DD>

<DT><B>QueueKeyboardPacket</B></DT>

<DD>Pointer to the system-supplied <A HREF="i8042ref_4l6a.htm">PI8042_QUEUE_PACKET</A> callback, which queues a keyboard input data packet for processing by the keyboard's ISR deferred procedure call.</DD>

<DT><B>CallContext</B></DT>

<DD>Pointer to the context that must be used with the <B>IsrWritePort</B> and <B>QueueKeyboardPacket</B> routines. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ntdd8042.h</I>. Include <I>ntdd8042.h</I>.</P>

<H4>Comments</H4>

<P>This structure is only used with an <A HREF="i8042ref_627m.htm">IOCTL_INTERNAL_I8042_HOOK_KEYBOARD</A> request. </P>

<P><B>Context</B>, <B>InitializationRoutine</B>, and <B>IsrRoutine</B> can be supplied by an optional, vendor-supplied, upper-level filter driver.</P>

<P><B>IsrWritePort</B>, <B>QueueKeyboardPacket</B>, and <B>CallContext</B> are supplied by I8042prt.</P>

<P>For more information about connecting to a keyboard and hooking callbacks for the keyboard, see <A HREF="km-ovr_2iw7.htm">Features of the Kbfiltr and Moufiltr Drivers</A> and <A HREF="km-ovr_8unb.htm">Operation of Non-HIDClass Keyboard and Mouse Drivers</A>.</P>

<H4>See Also</H4>

<P><A HREF="i8042ref_627m.htm">IOCTL_INTERNAL_I8042_HOOK_KEYBOARD</A>, <A HREF="kfilref_0fqq.htm"><B>KbFilter_InitializationRoutine</B></A>, <A HREF="kfilref_41ma.htm"><B>KbFilter_IsrHook</B></A>, PI8042_ISR_WRITE_PORT, <A HREF="i8042ref_0f1u.htm">PI8042_KEYBOARD_ISR</A>, <A HREF="i8042ref_4l6a.htm">PI8042_QUEUE_PACKET</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: INTERNAL_I8042_HOOK_KEYBOARD"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
