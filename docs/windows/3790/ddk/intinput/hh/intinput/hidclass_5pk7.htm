<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using the HID_DEVICE_EXTENSION Structure</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Using the HID_DEVICE_EXTENSION Structure">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_fdo_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_using_the_hid_device_extension_structure_kg"></A>Using the HID_DEVICE_EXTENSION Structure</H3>

<P>A HID minidriver must use a <A HREF="hidstrct_1kfm.htm">HID_DEVICE_EXTENSION</A> structure as the layout for the device extension created by the HID class driver for a functional device object (<A HREF="JavaScript:hhobj_1.Click()">FDO</A>). The HID class driver sets the members of this structure when it initializes the FDO. A HID minidriver must not change the information in this structure.</P>

<P>A HID_DEVICE_EXTENSION structure contains the following members: 

<UL>
	<LI><B>PhysicalDeviceObject</B> is a pointer to the physical device object (PDO) that represents the underlying input device.</LI>

	<LI><B>NextDeviceObject</B> is a pointer to the top of the device stack beneath the FDO.</LI>

	<LI><B>MiniDeviceExtension</B> is a pointer to the HID minidriver device extension.</LI>
</UL>

<P>Given a pointer to the FDO of an input device, the following GET_MINIDRIVER_DEVICE_EXTENSION macro returns a pointer to a HID minidriver extension:</P>

<PRE>#define GET_MINIDRIVER_DEVICE_EXTENSION(DO) ((PDEVICE_EXTENSION) (((PHID_DEVICE_EXTENSION)(DO)-&gt;DeviceExtension)-&gt;MiniDeviceExtension))
</PRE>

<P>PDEVICE_EXTENSION is a pointer to a device-specific device extension declared by a HID minidriver. </P>

<P>Similarly, a HID minidriver can obtain a pointer to the input device's PDO and the top of the device stack beneath the input device's FDO.</P>

<P>When a HID minidriver sends an IRP down the device stack, it should use <B>NextDeviceObject</B> as the target device object.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Using%20the%20HID_DEVICE_EXTENSION%20Structure"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
