<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reserved HIDClass-Related Routines and Data Types</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Reserved HIDClass-Related Routines and Data Types">
<META NAME="MS-HKWD" CONTENT="DeviceObjectState">
<META NAME="MS-HKWD" CONTENT="HID_DRIVER_CONFIG">
<META NAME="MS-HKWD" CONTENT="HID_INTERFACE_HIDPARSE">
<META NAME="MS-HKWD" CONTENT="HID_INTERFACE_NOTIFY_PNP">
<META NAME="MS-HKWD" CONTENT="HIDD_CONFIGURATION">
<META NAME="MS-HKWD" CONTENT="HidD_GetConfiguration">
<META NAME="MS-HKWD" CONTENT="HidD_GetMsGenreDescriptor">
<META NAME="MS-HKWD" CONTENT="HidD_SetConfiguration">
<META NAME="MS-HKWD" CONTENT="HIDP_COLLECTION_DESC">
<META NAME="MS-HKWD" CONTENT="HIDP_DEVICE_DESC">
<META NAME="MS-HKWD" CONTENT="HidP_FreeCollectionDescription">
<META NAME="MS-HKWD" CONTENT="HIDP_GETCOLDESC_DBG">
<META NAME="MS-HKWD" CONTENT="HidP_GetCollectionDescription">
<META NAME="MS-HKWD" CONTENT="HIDP_KEYBOARD_DIRECTION">
<META NAME="MS-HKWD" CONTENT="HIDP_KEYBOARD_MODIFIER_STATE">
<META NAME="MS-HKWD" CONTENT="HIDP_REPORT_IDS">
<META NAME="MS-HKWD" CONTENT="HidP_SysPowerCaps">
<META NAME="MS-HKWD" CONTENT="HidP_SysPowerEvent">
<META NAME="MS-HKWD" CONTENT="HidP_TranslateUsageAndPagesToI8042ScanCodes">
<META NAME="MS-HKWD" CONTENT="PHID_STATUS_CHANGE">
<META NAME="MS-HKWD" CONTENT="PHIDP_INSERT_SCANCODES">
<META NAME="MS-HKWD" CONTENT="PHIDP_REPORT_DESCRIPTOR">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_reserved_hidclass_related_routines_and_data_types_kg"></A>Reserved HIDClass-Related Routines and Data Types</H1>

<P>This section lists, in alphabetical order, the HIDClass-related routines, structures, enumeration types and data types that are reserved for internal system use.</P>

<P class=indent1><A HREF="#ddk_deviceobjectstate_kr"><B>DeviceObjectState</B></A></P>

<P class=indent1><A HREF="#ddk_hid_driver_config_kr">HID_DRIVER_CONFIG</A></P>

<P class=indent1><A HREF="#ddk_hid_interface_hidparse_kr">HID_INTERFACE_HIDPARSE</A></P>

<P class=indent1><A HREF="#ddk_hid_interface_notify_pnp_kr">HID_INTERFACE_NOTIFY_PNP</A></P>

<P class=indent1><A HREF="#ddk_hidd_configuration_kr">HIDD_CONFIGURATION</A></P>

<P class=indent1><A HREF="#ddk_hidd_getconfiguration_kr"><B>HidD_GetConfiguration</B></A></P>

<P class=indent1><A HREF="#ddk_hidd_getmsgenredescriptor_kr"><B>HidD_GetMsGenreDescriptor</B></A></P>

<P class=indent1><A HREF="#ddk_hidd_setconfiguration_kr"><B>HidD_SetConfiguration</B></A></P>

<P class=indent1><A HREF="#ddk_hidp_collection_desc_kr">HIDP_COLLECTION_DESC</A></P>

<P class=indent1><A HREF="#ddk_hidp_device_desc_kr">HIDP_DEVICE_DESC</A></P>

<P class=indent1><A HREF="#ddk_hidp_freecollectiondescription_kr"><B>HidP_FreeCollectionDescription</B></A></P>

<P class=indent1><A HREF="#ddk_hidp_getcoldesc_dbg_kr">HIDP_GETCOLDESC_DBG</A></P>

<P class=indent1><A HREF="#ddk_hidp_getcollectiondescription_kr"><B>HidP_GetCollectionDescription</B></A></P>

<P class=indent1><A HREF="#ddk_hidp_keyboard_direction_kr">HIDP_KEYBOARD_DIRECTION</A></P>

<P class=indent1><A HREF="#ddk_hidp_keyboard_modifier_state_kr">HIDP_KEYBOARD_MODIFIER_STATE</A></P>

<P class=indent1><A HREF="#ddk_hidp_report_ids_kr">HIDP_REPORT_IDS</A></P>

<P class=indent1><A HREF="#ddk_hidp_syspowercaps_kr"><B>HidP_SysPowerCaps</B></A></P>

<P class=indent1><A HREF="#ddk_hidp_syspowerevent_kr"><B>HidP_SysPowerEvent</B></A></P>

<P class=indent1><A HREF="#ddk_hidp_translateusageandpagestoi8042scancodes_kr"><B>HidP_TranslateUsageAndPagesToI8042ScanCodes</B></A></P>

<P class=indent1><A HREF="#ddk_phid_status_change_kr">PHID_STATUS_CHANGE</A></P>

<P class=indent1><A HREF="#ddk_phidp_insert_scancodes_kr">PHIDP_INSERT_SCANCODES</A></P>

<P class=indent1><A HREF="#ddk_phidp_report_descriptor_kr">PHIDP_REPORT_DESCRIPTOR</A></P>



<H3><A NAME="ddk_deviceobjectstate_kr"></A>DeviceObjectState</H3>

<P>The <B>DeviceObjectState</B> enumeration type is reserved for internal system use.</P>

<PRE class=syntax>enum DeviceObjectState {
  DeviceObjectStarted,
  DeviceObjectStopped,
  DeviceObjectRemoved
};</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidclass.h</I>.</P>



<H3><A NAME="ddk_hid_driver_config_kr"></A>HID_DRIVER_CONFIG</H3>

<P>The HID_DRIVER_CONFIG structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HID_DRIVER_CONFIG {
  ULONG  Size;
  ULONG  RingBufferSize;
} HID_DRIVER_CONFIG, *PHID_DRIVER_CONFIG;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidclass.h</I>.</P>



<H3><A NAME="ddk_hid_interface_hidparse_kr"></A>HID_INTERFACE_HIDPARSE</H3>

<P>The HID_INTERFACE_HIDPARSE structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HID_INTERFACE_HIDPARSE {
#ifndef __cplusplus
  INTERFACE;
#else
  INTERFACE  i;
#endif
  PHIDP_GETCAPS  HidpGetCaps;
} HID_INTERFACE_HIDPARSE, *PHID_INTERFACE_HIDPARSE;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidclass.h</I>.</P>



<H3><A NAME="ddk_hid_interface_notify_pnp_kr"></A>HID_INTERFACE_NOTIFY_PNP</H3>

<P>The HID_INTERFACE_NOTIFY_PNP structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HID_INTERFACE_NOTIFY_PNP {
#ifndef __cplusplus
  INTERFACE;
#else
  INTERFACE  i;
#endif
  PHID_STATUS_CHANGE  StatusChangeFn;
  PVOID CallbackContext;
} HID_INTERFACE_NOTIFY_PNP, *PHID_INTERFACE_NOTIFY_PNP;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidclass.h</I>.</P>



<H3><A NAME="ddk_hidd_configuration_kr"></A>HIDD_CONFIGURATION</H3>

<P>The HIDD_CONFIGURATION structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HIDD_CONFIGURATION {
  PVOID  cookie;
  ULONG  size;
  ULONG  RingBufferSize;
} HIDD_CONFIGURATION, *PHIDD_CONFIGURATION;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidsdi.h</I>.</P>



<H3><A NAME="ddk_hidd_getconfiguration_kr"></A>HidD_GetConfiguration</H3>

<P>The <B>HidD_GetConfiguration</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>BOOLEAN __stdcall
  HidD_GetConfiguration(
    IN HANDLE  </B><I>HidDeviceObject</I><B>,</B>
<B>    OUT PHIDD_CONFIGURATION  </B><I>Configuration</I><B>,</B>
<B>    IN ULONG  </B><I>ConfigurationLength</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidsdi.h</I>.</P>



<H3><A NAME="ddk_hidd_getmsgenredescriptor_kr"></A>HidD_GetMsGenreDescriptor</H3>

<P>The <B>HidD_GetMsGenreDescriptor</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>BOOLEAN __stdcall
  HidD_GetMsGenreDescriptor(
    IN HANDLE  </B><I>HidDeviceObject</I><B>,</B>
<B>    OUT PVOID  </B><I>Buffer</I><B>,</B>
<B>    IN ULONG  </B><I>BufferLength</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidsdi.h</I>.</P>



<H3><A NAME="ddk_hidd_setconfiguration_kr"></A>HidD_SetConfiguration</H3>

<P>The <B>HidD_SetConfiguration</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>BOOLEAN __stdcall
  HidD_SetConfiguration(
    IN HANDLE  </B><I>HidDeviceObject</I><B>,</B>
<B>    IN PHIDD_CONFIGURATION  </B><I>Configuration</I><B>,</B>
<B>    IN ULONG  </B><I>ConfigurationLength</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidsdi.h</I>.</P>



<H3><A NAME="ddk_hidp_collection_desc_kr"></A>HIDP_COLLECTION_DESC</H3>

<P>The HIDP_COLLECTION_DESC structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HIDP_COLLECTION_DESC {
  USAGE  UsagePage;
  USAGE  Usage;
  UCHAR  CollectionNumber;
  UCHAR  Reserved [15];
  USHORT  InputLength;
  USHORT  OutputLength;
  USHORT  FeatureLength;
  USHORT  PreparsedDataLength;
  PHIDP_PREPARSED_DATA  PreparsedData;
} HIDP_COLLECTION_DESC, *PHIDP_COLLECTION_DESC;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_device_desc_kr"></A>HIDP_DEVICE_DESC</H3>

<P>The HIDP_DEVICE_DESC structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HIDP_DEVICE_DESC {
  PHIDP_COLLECTION_DESC  CollectionDesc;
  ULONG  CollectionDescLength;
  PHIDP_REPORT_IDS  ReportIDs;
  ULONG  ReportIDsLength;
  HIDP_GETCOLDESC_DBG  Dbg;
} HIDP_DEVICE_DESC, *PHIDP_DEVICE_DESC;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_freecollectiondescription_kr"></A>HidP_FreeCollectionDescription</H3>

<P>The <B>HidP_FreeCollectionDescription</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>VOID
  HidP_FreeCollectionDescription(
    IN PHIDP_DEVICE_DESC  </B><I>DeviceDescription</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_getcoldesc_dbg_kr"></A>HIDP_GETCOLDESC_DBG</H3>

<P>The HIDP_GETCOLDESC_DBG structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HIDP_GETCOLDESC_DBG {
  ULONG  BreakOffset;
  ULONG  ErrorCode;
  ULONG  Args[6];
} HIDP_GETCOLDESC_DBG, *PHIDP_GETCOLDESC_DBG;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_getcollectiondescription_kr"></A>HidP_GetCollectionDescription</H3>

<P>The <B>HidP_GetCollectionDescription</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>NTSTATUS
  HidP_GetCollectionDescription(
    IN PHIDP_REPORT_DESCRIPTOR  </B><I>ReportDesc</I><B>,</B>
<B>    IN ULONG  </B><I>DescLength</I><B>,</B>
<B>    IN POOL_TYPE  </B><I>PoolType</I><B>,</B>
<B>    OUT PHIDP_DEVICE_DESC  </B><I>DeviceDescription</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_keyboard_direction_kr"></A>HIDP_KEYBOARD_DIRECTION</H3>

<P>The HIDP_KEYBOARD_DIRECTION enumeration type is reserved for internal system use.</P>

<PRE class=syntax>typedef enum _HIDP_KEYBOARD_DIRECTION {
  HidP_Keyboard_Break,
  HidP_Keyboard_Make
} HIDP_KEYBOARD_DIRECTION;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpi.h</I>.</P>



<H3><A NAME="ddk_hidp_keyboard_modifier_state_kr"></A>HIDP_KEYBOARD_MODIFIER_STATE</H3>

<P>The HIDP_KEYBOARD_MODIFIER_STATE structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HIDP_KEYBOARD_MODIFIER_STATE {
  union {
    struct {
      ULONG  LeftControl: 1;
      ULONG  LeftShift: 1;
      ULONG  LeftAlt: 1;
      ULONG  LeftGUI: 1;
      ULONG  RightControl: 1;
      ULONG  RightShift: 1;
      ULONG  RightAlt: 1;
      ULONG  RigthGUI: 1;
      ULONG  CapsLock: 1;
      ULONG  ScollLock: 1;
      ULONG  NumLock: 1;
      ULONG  Reserved: 21;
    };
    ULONG ul;
  };
} HIDP_KEYBOARD_MODIFIER_STATE, *PHIDP_KEYBOARD_MODIFIER_STATE;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpi.h</I>.</P>



<H3><A NAME="ddk_hidp_report_ids_kr"></A>HIDP_REPORT_IDS</H3>

<P>The HIDP_REPORT_IDS structure is reserved for internal system use.</P>

<PRE class=syntax>typedef struct _HIDP_REPORT_IDS {
  UCHAR  ReportID;
  UCHAR  CollectionNumber;
  USHORT  InputLength;
  USHORT  OutputLength;
  USHORT  FeatureLength;
} HIDP_REPORT_IDS, *PHIDP_REPORT_IDS;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_syspowercaps_kr"></A>HidP_SysPowerCaps</H3>

<P>The <B>HidP_SysPowerCaps</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>NTSTATUS
  HidP_SysPowerCaps(
    IN PHIDP_PREPARSED_DATA  </B><I>Ppd</I><B>,</B>
<B>    OUT PULONG  </B><I>OutputBuffer</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_syspowerevent_kr"></A>HidP_SysPowerEvent</H3>

<P>The <B>HidP_SysPowerEvent</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>NTSTATUS
  HidP_SysPowerEvent(
    IN PCHAR  </B><I>HidPacket</I><B>,</B>
<B>    IN USHORT  </B><I>HidPacketLength</I><B>,</B>
<B>    IN PHIDP_PREPARSED_DATA  </B><I>Ppd</I><B>,</B>
<B>    OUT PULONG  </B><I>OutputBuffer</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpddi.h</I>.</P>



<H3><A NAME="ddk_hidp_translateusageandpagestoi8042scancodes_kr"></A>HidP_TranslateUsageAndPagesToI8042ScanCodes</H3>

<P>The <B>HidP_TranslateUsageAndPagesToI8042ScanCodes</B> routine is reserved for internal system use.</P>

<PRE class=syntax><B>NTSTATUS __stdcall
  HidP_TranslateUsageAndPagesToI8042ScanCodes(
    IN PUSAGE_AND_PAGE  </B><I>ChangedUsageList</I><B>,</B>
<B>    IN ULONG  </B><I>UsageListLength</I><B>,</B>
<B>    IN HIDP_KEYBOARD_DIRECTION  </B><I>KeyAction</I><B>,</B>
<B>    IN OUT PHIDP_KEYBOARD_MODIFIER_STATE  </B><I>ModifierState</I><B>,</B>
<B>    IN PHIDP_INSERT_SCANCODES  </B><I>InsertCodesProcedure</I><B>,</B>
<B>    IN PVOID  </B><I>InsertCodesContext</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpi.h</I>.</P>



<H3><A NAME="ddk_phid_status_change_kr"></A>PHID_STATUS_CHANGE</H3>

<P>The PHID_STATUS_CHANGE routine is reserved for internal system use.</P>

<PRE class=syntax><B>typedef VOID (*PHID_STATUS_CHANGE)(
    PVOID  </B><I>Context</I><B>, </B>
<B>    enum DeviceObjectState </B><I>State</I>
<I>    </I><B>);</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidclass.h</I>.</P>



<H3><A NAME="ddk_phidp_insert_scancodes_kr"></A>PHIDP_INSERT_SCANCODES</H3>

<P>The PHIDP_INSERT_SCANCODES routine is reserved for internal system use.</P>

<PRE class=syntax><B>typedef BOOLEAN (*PHIDP_INSERT_SCANCODES)(
    IN PVOID  </B><I>Context</I><B>,</B>
<B>    IN PCHAR  </B><I>NewScanCodes</I><B>,</B>
<B>    IN ULONG  </B><I>Length</I>
<B>    );</B></PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpi.h</I>.</P>



<H3><A NAME="ddk_phidp_report_descriptor_kr"></A>PHIDP_REPORT_DESCRIPTOR</H3>

<P>The PHIDP_REPORT_DESCRIPTOR data type is reserved for internal system use.</P>

<PRE class=syntax>typedef PUCHAR  PHIDP_REPORT_DESCRIPTOR;</PRE>

<H4>Headers</H4>

<P>Declared in <I>hidpi.h</I>.</P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Reserved%20HIDClass-Related%20Routines%20and%20Data%20Types"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
