<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HID Minidriver AddDevice Routine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_fdo_dg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_adddevice_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_hid_minidriver_adddevice_routine_kg"></A>HID Minidriver <I>AddDevice</I> Routine</H4>

<P>The HID class driver handles creating and initializing the functional device object (<A HREF="JavaScript:hhobj_1.Click()">FDO</A>) for an underlying input device. The HID class driver also operates the FDO from the perspective of the upper-level interface to the underlying device and its child devices (HID collections).</P>

<P>The HID class driver <A HREF="JavaScript:hhobj_2.Click()"><I>AddDevice</I></A> routine calls the HID minidriver <I>AddDevice</I> routine so that the minidriver can do internal device-specific initialization.</P>

<P>The parameters passed to the HID minidriver <I>AddDevice</I> routine are the minidriver driver object and the FDO. (Note that the HID class driver passes the FDO to the minidriver <I>AddDevice</I> routine, not to the physical device object for the underlying input device.)</P>

<P>The HID minidriver <I>AddDevice</I> routine obtains a pointer to the minidriver device extension from the FDO — see <A HREF="hidclass_5pk7.htm">Using the HID_DEVICE_EXTENSION structure</A>.

<UL>
	<LI>Typically, the HID minidriver <I>AddDevice</I> routine does the following: </LI>

	<LI>Initializes the minidriver device extension. The device extension is only used by the minidriver.</LI>

	<LI>Returns STATUS_SUCCESS. If the minidriver returns an error status, the HID class driver deletes the FDO and returns the error status to the Plug and Play Manager.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: HID%20Minidriver%20AddDevice%20Routine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
