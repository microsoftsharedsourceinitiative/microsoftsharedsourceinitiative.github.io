<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>284 - Format string mismatch.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf284formatstringmismatch"></A>284 - Format string mismatch.</H1>

<H1 class="dtH1">Additional Information: Object passed when string is required in call to <I>&lt;function&gt;. </I></H1>

<H1 class="dtH1">Consequence: Object will be converted to integer, not string.</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning indicates that the format string specifies that a string is required (for example, a <B>%s</B> specification for <B>printf</B> or <B>scanf</B>) but a C++ object has been passed instead. </P>

<P>This defect is likely to result in a crash or corruption of some form. Even if the code behaves correctly on 32-bit architectures, it is likely to cause problems when porting to 64-bit architectures.</P>

<P>This message is often reported because of passing a C++ object implementing some string type (for example, <B>std::string</B>, <B>CComBSTR</B>, or <B>_bstr_t</B>) into a C <B>printf</B>-style call. Depending on the implementation of the C++ class (that is, if the proper cast operators are defined), C++ string objects can often be used transparently whenever C strings are required. However, because parameters to <B>printf</B>-style functions are essentially untyped, no conversion to a string occurs.</P>

<P>Depending on the object, it may be appropriate to insert a <B>static_cast</B> operator to the appropriate string type (for example, <B>char *</B> or <B>TCHAR *</B>) or to call a member function that returns a string (for example, <B>c_str()</B>, on instances of <B>std::string</B>).</P>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<P><CODE>CComBSTR bstrValue;</CODE></P>

<P><CODE>sprintf(buff,</CODE></P>

<P><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"The string is : %S",</CODE></P>

<P><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bstrValue);</CODE></P>

<P><B>Corrected Source</B></P>

<P><CODE>CComBSTR bstrValue;</CODE></P>

<P><CODE>sprintf(buff,</CODE></P>

<P><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"The string is : %S",</CODE></P>

<P><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static_cast&lt;BSTR&gt;(bstrValue));</CODE></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
