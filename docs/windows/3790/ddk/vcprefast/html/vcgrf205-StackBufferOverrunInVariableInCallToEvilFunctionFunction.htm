<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>205 - Stack buffer overrun in &lt;variable&gt; in call to evil function &lt;function&gt;.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf205-stackbufferoverruninvariableincalltoevilfunctionfunction"></A>205 - Stack buffer overrun in &lt;variable&gt; in call to evil function &lt;function&gt;.</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning indicates that a stack variable is being passed into function that gives no way of controlling how many bytes are copied into a buffer (such as <B>gets</B>). This defect is likely to result in an exploitable security hole or a program crash.</P>

<P>When making the changes, ensure that the code behaves correctly in the case of very long data. It is possible to fix the buffer overrun and stop the PREfast warning but have code that still behaves incorrectly. A useful technique for helping to address problem is often to use a function that includes the buffer size (such as <B>fgets</B> or <B>_fgetws</B>) instead. Handle the case where the length of the data exceeds the buffer size. In some cases, more significant changes can be required.</P>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<PRE class="code">char buff[_MAX_PATH];

if (! gets(buff))    // Does not account for if something longer than
{;}                  // MAX_PATH is provided as input.</PRE>

<P><B>Corrected Source</B></P>

<PRE class="code">char buff[_MAX_PATH];

if (! fgets(buff, sizeof buff, stdin))
{;}</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
