<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>53 - Call to &lt;function&gt; may not zero-terminate string &lt;variable&gt;.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf53-calltofunctionmaynotzero-terminatestringvariable"></A>53 - Call to &lt;function&gt; may not zero-terminate string &lt;variable&gt;.</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning indicates that the specified function (for example, <B>strncpy</B>) has been called in such a way that the resulting string may not be zero terminated. This defect can result in an exploitable buffer overrun or crash.</P>

<P>Most C standard library and Win32 string handling functions require and produce zero-terminated strings. A few counted-string functions (including <B>strncpy</B>, <B>wcsncpy</B>, <B>_mbsncpy</B>, <B>_snprintf</B>, <B>_snwprintf</B>, <B>mbstowcs</B>, and <B>wcstombs</B>) do not produce zero-terminated strings if they exactly fill their buffer. In this case, a subsequent call to a string function that expects to see a zero termination will run off the end of the buffer looking for the zero.</P>

<P>The program should make sure that the string ends with a zero. In general, one useful approach is to pass a length to the counted-string function one smaller than the size of the buffer and then explicitly assign zero to the last character in the buffer.</P>

<BLOCKQUOTE class="dtBlock">
<B>Note&nbsp;&nbsp;&nbsp;</B>PREfast can sometimes report this warning on certain idioms guaranteed to be safe in practice. Because of the frequency and potential consequences of this defect, PREfast acts in favor of finding potential issues rather than its normal bias of reducing noise.</BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<PRE class="code">char buff[_MAX_PATH];
strncpy(buff, input, _MAX_PATH); // If strlen(input) &gt; _MAX_PATH,
                                  // buff will not be zero terminated.
return strlen(buff); // Program could potentially crash here.</PRE>

<P><B>Corrected Source</B></P>

<PRE class="code">char buff[_MAX_PATH];
strncpy(buff, input, _MAX_PATH - 1);
buff[_MAX_PATH - 1] = 0;
return strlen(buff); // Construction will be zero terminated.</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
