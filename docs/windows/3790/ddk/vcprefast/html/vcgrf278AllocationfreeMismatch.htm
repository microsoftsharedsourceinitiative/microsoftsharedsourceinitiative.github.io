<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>278 - Allocation/free mismatch.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf278allocationfreemismatch"></A>278 - Allocation/free mismatch.</H1>

<H1 class="dtH1">Additional Information: <I>&lt;variable&gt;</I> is allocated with array new [], but deleted with scalar delete (see allocation at <I>&lt;location&gt;).</I></H1>

<H1 class="dtH1">Consequence: Destructors will not be called.</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning appears only in C++ code and indicates that the calling function has inconsistently allocated memory with the array <B>new []</B> operator but freed it with the scalar <B>delete</B> operator. This is undefined behavior according to the C++ standard and the Microsoft Visual C++ implementation. This can cause problems for three reasons:

<UL type="disc">
	<LI>The constructors for the individual objects in the array are invoked, but the destructors are not invoked. </li>

	<LI>If global (or class-specific) <B>operator new</B> and <B>operator delete</B> are not compatible with <B>operator new[]</B> and <B>operator delete[]</B>, unexpected results can occur.</li>

	<LI>It is always very risky to rely on undefined behavior.</li>
</UL>

<P>The exact ramifications of this defect are difficult to predict. It can result in leaks (for classes with destructors that perform memory deallocation), inconsistent behavior (for classes with destructors that perform some semantically significant operation), or memory corruptions and crashes (in situations where operators have been overridden). In other cases, the mismatch may be unimportant, depending on the implementation of the compiler and its libraries. PREfast cannot always distinguish between these situations.</P>

<P>If memory is allocated with array <B>new []</B>, it should be typically be freed with array <B>delete[]</B>.</P>

<P>In situations where the underlying object in the array is a primitive type such as <B>int</B>, <B>float</B>, <B>enum</B>, or <B>pointer</B>, there are no destructors to be called. In this case, warning 283 is reported instead. </P>

<P>This message is often reported on character or wide-character arrays. In this case, unless operators are being overridden, there may not be any significant consequences of the mismatch. It may be more appropriate to treat the warning as a maintenance issue instead of as an active defect.</P>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<PRE class="code">C *pC = new C[arraySize];

delete pC;</PRE>

<P><B>Corrected Source</B></P>

<PRE class="code">C *pC = new C[arraySize];

delete[] pC;</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
