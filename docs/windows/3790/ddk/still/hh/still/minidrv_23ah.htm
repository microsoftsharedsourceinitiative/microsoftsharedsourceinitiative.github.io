<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IWiaMiniDrv::drvGetWiaFormatInfo</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IWiaMiniDrv::drvGetWiaFormatInfo">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Still&nbsp;Image&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iwiaminidrv_drvgetwiaformatinfo_si"></A>IWiaMiniDrv::drvGetWiaFormatInfo</H1>

<P>The <B>IWiaMiniDrv::drvGetWiaFormatInfo</B> method finds the image formats and media types that the WIA hardware device supports.</P>

<PRE class=syntax><B>HRESULT
  drvGetWiaFormatInfo(
</B><I>    </I><B>IN BYTE </B><I> *pWiasContext</I><B>,</B>
<I>    </I><B>IN LONG </B><I> lFlags</I><B>,</B>
<I>    </I><B>OUT LONG </B><I> *pcelt</I><B>,</B>
<I>    </I><B>OUT WIA_FORMAT_INFO </B><I> **ppwfi</I><B>,</B>
<I>    </I><B>OUT LONG </B><I> *plDevErrVal</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pWiasContext</I></DT>

<DD>Pointer to a WIA item context.</DD>

<DT><I>lFlags</I></DT>

<DD>Is currently unused. </DD>

<DT><I>pcelt</I></DT>

<DD>Points to a memory location that will receive the number of items in the array pointed to by <I>ppwfi</I>.</DD>

<DT><I>ppwfi</I></DT>

<DD>Points to a memory location that will receive the address of the first element of an array of WIA_FORMAT_INFO structures (described in the Platform SDK documentation).</DD>

<DT><I>plDevErrVal</I></DT>

<DD>Points to a memory location that will receive a status code for this method. If this method returns S_OK, the value stored will be zero. Otherwise, a minidriver-specific error code will be stored at the location pointed to by this parameter.
</DD>
</DL>

<H4>Return Value</H4>

<P>On success, the method should return S_OK and clear the device error value pointed to by <I>plDevErrVal</I>. If this method is called for items that do not contain any data, it should return E_INVALIDARG. If the method fails, it should return a standard COM error code and place a minidriver-specific error code value in the memory pointed to by <I>plDevErrVal</I>. </P>

<P>The value pointed to by <I>plDevErrVal</I> can be converted to a string by calling <A HREF="minidrv_0n8p.htm"><B>IWiaMiniDrv::drvGetDeviceErrorStr</B></A>.</P>

<H4>Headers</H4>

<P>Declared in <I>wiamindr.h</I>. Include <I>wiamindr.h</I>.</P>

<H4>Comments</H4>

<P>This method creates an array of WIA_FORMAT_INFO structures (defined in the Platform SDK documentation) that describe the media types and image formats that the WIA hardware device supports. For each element in the array, the media type can be one of TYMED_CALLBACK, TYMED_MULTIPAGE_CALLBACK, TYMED_FILE, or TYMED_MULTIPAGE_FILE (constants defined in the Platform SDK documentation). Typical values for the image format include WiaImgFmt_JPEG, and WiaImgFmt_BMP (also defined in the Platform SDK documentation), among others. </P>

<P>The minidriver can define a global array to hold the WIA_FORMAT_INFO structures, or it can allocate memory for the array. The WIA service will not free the allocated memory, so the minidriver should store a pointer to that memory in the driver item context. The minidriver can then free this memory in a call to <A HREF="minidrv_7kq1.htm"><B>IWiaMiniDrv::drvFreeDrvItemContext</B></A>.</P>

<P>This method is available in Windows&nbsp;Me and in Windows&nbsp;XP and later.</P>

<H4>See Also</H4>

<P><A HREF="minidrv_0n8p.htm"><B>IWiaMiniDrv::drvGetDeviceErrorStr</B></A>, <A HREF="minidrv_7kq1.htm"><B>IWiaMiniDrv::drvFreeDrvItemContext</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IWiaMiniDrv::drvGetWiaFormatInfo"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
