<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IOCTL_SET_TIMEOUT</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IOCTL_SET_TIMEOUT">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Still&nbsp;Image&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioctl_set_timeout_si"></A>IOCTL_SET_TIMEOUT</H1>

<P>Sets the timeout value for USB bulk IN, bulk OUT, or interrupt pipe access.</P>

<H4>DeviceIoControl Parameters</H4>

<DL>
<DT><I>hDevice</I></DT>

<DD>Device handle, obtained by calling <B>CreateFile</B>.</DD>

<DT><I>dwIoControlCode</I></DT>

<DD>IOCTL_SET_TIMEOUT</DD>

<DT><I>lpInBuffer</I></DT>

<DD>Pointer to a <A HREF="stifnc_9qcp.htm">USBSCAN_TIMEOUT</A> structure.</DD>

<DT><I>nInBufferSize</I></DT>

<DD>Size of the input buffer.</DD>

<DT><I>lpOutBuffer</I></DT>

<DD>NULL.</DD>

<DT><I>nOutBufferSize</I></DT>

<DD>Zero.</DD>

<DT><I>lpBytesReturned</I></DT>

<DD>Pointer to a location to receive the number of bytes written.</DD>

<DT><I>lpOverlapped</I></DT>

<DD>Optional pointer to an OVERLAPPED structure (described in the Platform SDK documentation).
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>usbscan.h</I>. Include <I>usbscan.h</I>.</P>

<H4>Comments</H4>

<P>When the <B>DeviceloControl</B> function is called with the IOCTL_SET_TIMEOUT I/O control code, the caller must specify the address of a <A HREF="stifnc_9qcp.htm">USBSCAN_TIMEOUT</A> structure as the function's <I>lpInBuffer</I> parameter.</P>

<P>Using the USBSCAN_TIMEOUT structure's contents, the kernel-mode driver resets the timeout value for each type of operation: bulk IN read, bulk OUT write, or interrupt.</P>

<P>For more information, see <A HREF="wia_drv_basic_6pex.htm">Accessing Kernel-Mode Drivers for Still Image Devices</A>.</P>

<H4>Code Example</H4>

<PRE>USBSCAN_TIMEOUT TimeOut;
DWORD BytesReturned = 0;
HANDLE hUSB = (HANDLE)INVALID_HANDLE_VALUE;

hUSB = CreateFile(DevicePortName,                  // file name
                 GENERIC_READ | GENERIC_WRITE,     // desired access
                 0,                 // sharing mode
                 NULL,              // security descriptor
                 OPEN_EXISTING,     // creation disposition
                 0,                 // file attributes
                 NULL               // template file
                 );

if (hUSB != INVALID_HANDLE_VALUE)
{
  TimeOut.TimeoutRead = 20;       // Read Timeout 20 sec
  TimeOut.TimeoutWrite = 20;  // Write Timeout 20 sec
  TimeOut.TimeoutEvent = 0;       // 0 = No Timeout
  if (!DeviceIoControl(m_hUSB,
                       IOCTL_SET_TIMEOUT,
                       &amp;TimeOut,
                       sizeof(TimeOut),
                       NULL,
                       0,
                       &amp;BytesReturned,
                       NULL))
  {
     hr = HRESULT_FROM_WIN32(::GetLastError());
     return hr;
  } 
}</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IOCTL_SET_TIMEOUT"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
