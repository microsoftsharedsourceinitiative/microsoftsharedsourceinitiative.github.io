<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PTS_DATA</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PTS_DATA">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Smart&nbsp;Card&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_ntstruct_pts_data"></A>PTS_DATA</H1>

<P>The PTS_DATA structure is used for protocol type selection (PTS).</P>

<PRE class=syntax>typedef struct _PTS_DATA {
  UCHAR  Type;
  UCHAR  Fl;
  UCHAR  Dl;
  ULONG  CLKFrequency;
  ULONG  DataRate;
  UCHAR  StopBits;
} PTS_DATA, *PPTS_DATA;
 </PRE>

<H4>Members</H4>

<DL>
<DT><B>Type</B></DT>

<DD>Controls how the remaining members of this structure will be calculated. This member can have one of the following values.

<TABLE>

<TR VALIGN="top">
<TH align=left width=38%>Type</TH>
<TH align=left width=62%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=38%>PTS_TYPE_DEFAULT</TD>
<TD width=62%>Calculates standard parameters for PTS.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>PTS_TYPE_OPTIMAL</TD>
<TD width=62%>Calculates the best possible parameters for PTS.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>PTS_TYPE_USER</TD>
<TD width=62%>Calculates user defined parameters for PTS.</TD>
</TR>
</TABLE><BR>


<P>The smart card driver library fills in the remaining members of this structure when the reader driver calls its <B>SmartcardUpdateCardCapabilities</B> routine. However, in some cases, the reader driver might be responsible for setting these parameters. For instance, if a PTS request specifying optimal parameters fails, the reader driver can set these parameters in a callback function that sets the protocol. The callback function should do this by setting the type to PTS_TYPE_DEFAULT and calling <B>SmartcardUpdateCardCapabilities</B> again. 
</DD>

<DT><B>Fl</B></DT>

<DD>The Fl value to be used as part of PTS1 for the PTS request.</DD>

<DT><B>Dl </B></DT>

<DD>The Dl value to be used as part of PTS1 for the PTS request.</DD>

<DT><B>CLKFrequency</B></DT>

<DD>Contains the new clock frequency. Some smart card readers need to be programmed with the new clock frequency to be used after the PTS request.</DD>

<DT><B>DataRate</B></DT>

<DD>Contains the new data rate. Some smart card readers (for example, serial readers) need to be set to the new data rate to be used after a PTS request.</DD>

<DT><B>StopBits </B></DT>

<DD>Contains the number of stop bits to be used with the currently-inserted card.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>winsmcrd.h</I>. Include <I>winsmcrd.h</I>. </P>

<H4>Comments</H4>

<P>The smart card reader driver library assigns values to the members of this structure before calling the callback function that sets the protocol. The driver library takes into account the characteristics of the currently-inserted smart card, the supported clock frequencies, and supported data rates of the reader when assigning these values. </P>

<H4></H4>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PTS_DATA"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
