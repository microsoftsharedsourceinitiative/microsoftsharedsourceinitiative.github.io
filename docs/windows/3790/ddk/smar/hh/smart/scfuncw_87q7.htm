<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SmartcardT1Request (WDM)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SmartcardT1Request (WDM)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Smart&nbsp;Card&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_ntfunc_smartcardt1request_wdm_"></A>SmartcardT1Request (WDM)</H1>

<P>The <B>SmartcardT1Request</B> routine copies request data from the caller's buffer to the buffer that is managed by the smartcard library routines, from which it is transmitted to the card reader, and then checks the T=1 protocol status. </P>

<PRE class=syntax><B>NTSTATUS 
  SmartcardT1Request(
    PSMARTCARD_EXTENSION  </B><I>SmartcardExtension</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>SmartcardExtension</I></DT>

<DD>Pointer to a structure of type  <A HREF="scstruct_50a6.htm">SMARTCARD_EXTENSION</A> that contains the device extension of the smart card device. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>SmartcardT1Request</B> returns an NTSTATUS value. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=46%>Value</TH>
<TH align=left width=54%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=46%>STATUS_SUCCESS</TD>
<TD width=54%>Buffer successfully set up.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>STATUS_INSUFFICIENT_RESOURCES</TD>
<TD width=54%>Smartcard library buffer was not properly allocated.</TD>
</TR>
</TABLE><BR>

<H4>Headers</H4>

<P>Declared in <I>smclib.h</I>. Include <I>smclib.h</I>.</P>

<H4>Comments</H4>

<P>The caller must allocate a <A HREF="scstruct_50a6.htm">SMARTCARD_EXTENSION</A> structure and pass a pointer to this structure to the the <A HREF="scfuncw_2xsv.htm"><B>SmartcardInitialize</B> (WDM)</A> routine. <B>SmartcardInitialize</B> allocates two internal buffers that are managed by the smartcard library routines and initializes the <B>SmartcardRequest</B> and <B>SmartcardReply</B> members of the SMARTCARD_EXTENSION structure to point to these two internal buffers. <B>SmartcardT1Request</B> uses one of these buffers, therefore <B>SmartcardInitialize</B> must be called before <B>SmartcardT1Request</B>.</P>

<P>A caller of the <B>SmartcardT1Request</B> routine must copy the request data to the location pointed to by the <B>IoRequest.RequestBuffer</B> member of the previously allocated and initialized SMARTCARD_EXTENSION structure, and then pass a pointer to this structure to <B>SmartcardT1Request</B> in the <I>SmartcardExtension </I>parameter.</P>

<P>This <B>SmartcardT1Request</B> routine copies the data in the caller's buffer at <B>IoRequest.RequestBuffer</B> to the smartcard library buffer at <I>SmartcardExtension-&gt;SmartcardRequest.Buffer</I>. <B>SmartcardT1Request</B> then sets <I>SmartcardExtension-&gt;SmartcardRequest.BufferLength</I> to the number of bytes to be transmitted to the smart card. </P>

<P>Do not change any members of the <A HREF="scstruct_8wkh.htm">T1_DATA</A> structure. They will be initialized automatically. The only member that can be safely modified is <B>NAD</B>. Changing any member might lead to protocol errors.</P>

<P>The driver must call <A HREF="scfuncw_03hb.htm"><B>SmartcardT1Reply</B> (WDM)</A> to read the data associated with the reply to this request.</P>

<P>If your driver must send header data to the reader before the T=1 data, you should set <I>SmartcardExtension-&gt;SmartcardRequest.BufferLength </I>to the number of bytes you need for your header before you call this function. The packet will look like this:</P>

<P><IMG SRC="images/scfunc2.gif" ALT="" BORDER=0></P>

<P>Here is an example of a T=1 transmission.</P>

<PRE>// Run this loop as long as the protocol requires to send data
do {
    // Copy data to <I>SmartcardExtension-&gt;SmartcardRequest.Buffer </I>
    // embedded in a T=1 frame 
    status = SmartcardT1Request(SmartcardExtension);
    if (status != STATUS_SUCCESS)
        return status;

    // Send T=1 frame to smart card
    status = DriverSendDataToSmartcard(…);
    if (status != STATUS_SUCCESS)
        return status;

// Now set appropiate timeout (This example calculates the time-out in ms)
// Timeout = SmartcardExtension-&gt;CardCapabilities.T1.BWT *                 
//    (SmartcardExtension-&gt;T1.Wtx ? SmartcardExtension-&gt;T1.Wtx : 1);

    
    // receive T=1 frame from smart card
    status = DriverReceiveDataFromSmartcard(…);
    if (status != STATUS_SUCCESS)
        return status;
    
    // Check T=1 protocol status and copy any data back to user buffer
    status = SmartcardT1Reply(SmartcardExtension);

} while (status == STATUS_MORE_PROCESSING_REQUIRED);

return status;</PRE>

<P><B>SmartcardT1Request</B> functions the same for both WDM and VxD drivers.</P>

<H4>See Also</H4>

<P><A HREF="scfuncw_03hb.htm"><B>SmartcardT1Reply</B> (WDM)</A>, <A HREF="scfunc_4c7z.htm"><B>SmartcardT1Request</B> (VxD)</A>, <A HREF="scfunc_67z3.htm"><B>SmartcardT1Reply</B> (VxD)</A>, <A HREF="scstruct_50a6.htm">SMARTCARD_EXTENSION</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SmartcardT1Request%20(WDM)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
