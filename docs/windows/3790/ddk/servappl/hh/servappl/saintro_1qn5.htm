<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reading from and Writing to an NVRAM Boot Counter</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Reading from and Writing to an NVRAM Boot Counter">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Server&nbsp;Appliance&nbsp;High&nbsp;Availability&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_reading_from_and_writing_to_an_nvram_boot_counter_sa"></A>Reading from and Writing to an NVRAM Boot Counter</H2>

<P>The NVRAM miniport driver reads and writes the value of a boot counter that is stored in the NVRAM device. The driver reads the counter value to inform an application of the number of times that fail over to alternate operating systems occurred. The driver writes the counter value if an application requested to force a fail over to occur on a subsequent boot. </P>

<P>An application uses the <A HREF="saioctl_4x7l.htm">IOCTL_NVRAM_READ_BOOT_COUNTER</A> code to read the counter value and the <A HREF="saioctl_461t.htm">IOCTL_NVRAM_WRITE_BOOT_COUNTER</A> code to write the counter value. When the SA port driver receives these IOCTL codes for servicing, the port driver must call the miniport driver's <A HREF="samini_27c1.htm"><I>SaRead</I></A> and <A HREF="samini_8za9.htm"><I>SaWrite</I></A> functions respectively. </P>

<P>For boot counter reads, the SA port driver specifies a pointer to the <A HREF="sastruct_3tsx.htm">SA_NVRAM_BOOT_COUNTER</A> structure in the <I>DataBuffer</I> parameter of the miniport driver's <I>SaRead</I> function. The NVRAM miniport driver obtains the number of the boot counter from which to read from the <B>Number</B> member of this structure. The NVRAM miniport driver then reads from the boot counter and indicates the count value in the <B>Value</B> member and the values for the Advanced RISC Computing (ARC) path in the <B>DeviceId</B> member. The NVRAM miniport driver then returns the structure to the SA port driver.</P>

<P>For boot counter writes, the SA port driver specifies a pointer to the SA_NVRAM_BOOT_COUNTER structure in the <I>DataBuffer</I> parameter of the miniport driver's <I>SaWrite</I> function. The <B>Number</B> member of this structure specifies the number of the boot counter to write to. The <B>Value</B> member specifies the count value to write to the boot counter. The <B>DeviceId</B> member specifies the ARC path to write to the boot counter.</P>

<P>For more information on the storage layout of an NVRAM device, see <A HREF="saintro_2n4x.htm">NVRAM</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Reading%20from%20and%20Writing%20to%20an%20NVRAM%20Boot%20Counter"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
