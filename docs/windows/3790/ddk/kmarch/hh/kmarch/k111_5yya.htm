<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ZwSetValueKey</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ZwSetValueKey">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_zwsetvaluekey_kr"></A>ZwSetValueKey</H1>

<P>The <B>ZwSetValueKey</B> routine replaces or creates a value entry for a key in the registry.</P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>ZwSetValueKey(</B>
    <B>IN HANDLE</B>  <I>KeyHandle</I><B>,</B>
    <B>IN PUNICODE_STRING</B>  <I>ValueName</I><B>,</B>
    <B>IN ULONG</B>  <I>TitleIndex</I>  <B>OPTIONAL,</B>
    <B>IN ULONG</B>  <I>Type</I><B>,</B>
    <B>IN PVOID</B>  <I>Data</I><B>,</B>
    <B>IN ULONG</B>  <I>DataSize</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>KeyHandle</I></DT>

<DD>Handle to the key for which a value entry is to be written in the registry. This handle is created by a successful call to <A HREF="k111_4omq.htm"><B>ZwCreateKey</B></A> or <A HREF="k111_55pu.htm"><B>ZwOpenKey</B></A>.</DD>

<DT><I>ValueName</I></DT>

<DD>Pointer to the name of the value entry for which the data is to be written. This parameter can be a NULL pointer if the value entry has no name. If a name string is specified and the given name is not unique relative to its containing key, the data for an existing value entry is replaced.</DD>

<DT><I>TitleIndex</I></DT>

<DD>Reserved.  Device and intermediate drivers should set this parameter to zero.</DD>

<DT><I>Type</I></DT>

<DD>Specifies the type of the data to be written for <I>ValueName.</I> System-defined types include the following.

<TABLE>

<TR VALIGN="top">
<TH align=left width=49%>REG_<I>XXX </I>Type</TH>
<TH align=left width=51%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_BINARY</TD>
<TD width=51%>Binary data in any form</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_DWORD</TD>
<TD width=51%>A 4-byte numerical value</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_DWORD_LITTLE_ENDIAN</TD>
<TD width=51%>A 4-byte numerical value whose least significant byte is at the lowest address, which is identical to type REG_DWORD</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_DWORD_BIG_ENDIAN</TD>
<TD width=51%>A 4-byte numerical  value whose least significant byte is at the highest address</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_EXPAND_SZ</TD>
<TD width=51%>A zero-terminated Unicode string, containing unexpanded references to environment variables, such as "%PATH%"</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_LINK</TD>
<TD width=51%>A Unicode string naming a symbolic link; this type is irrelevant to device and intermediate drivers.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_MULTI_SZ</TD>
<TD width=51%>An array of zero-terminated strings, terminated by another zero</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_NONE</TD>
<TD width=51%>Data with no particular type</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_SZ</TD>
<TD width=51%>A zero-terminated Unicode string</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_RESOURCE_LIST</TD>
<TD width=51%>A device driver's list of hardware resources, used by the driver or one of the physical devices it controls, in the <B>\ResourceMap</B> tree</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_RESOURCE_REQUIREMENTS_LIST</TD>
<TD width=51%>A device driver's list of possible hardware resources it or one of the physical devices it controls can use, from which the system writes a subset into the <B>\ResourceMap</B> tree</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_FULL_RESOURCE_DESCRIPTOR</TD>
<TD width=51%>A list of hardware resources that a physical device is using, detected and written into the <B>\HardwareDescription</B> tree by the system</TD>
</TR>
</TABLE><BR>



<P>Device drivers need not, and should not attempt to, call <B>ZwSetValueKey</B> directly to write value entries in a subkey of the <B>\Registry..\ResourceMap</B> key. Only the system can write value entries to the <B>\Registry..\HardwareDescription</B> tree.
</DD>

<DT><I>Data</I></DT>

<DD>Pointer to a caller-allocated buffer containing the data for the value entry.</DD>

<DT><I>DataSize</I></DT>

<DD>Specifies the size in bytes of the <I>Data</I> buffer. If <I>Type</I> is any of the REG_<I>XXX</I>_SZ, this value must include the terminating zero(s).
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Return Value</H4>

<P><B>ZwSetValueKey</B> returns an NTSTATUS value. Possible return values include:</P>

<P class=indent1>STATUS_SUCCESS<BR>
STATUS_ACCESS_DENIED<BR>
STATUS_INVALID_HANDLE</P>

<H4>Comments</H4>

<P>The<I> KeyHandle</I> passed to <B>ZwSetValueKey</B> must have been opened with the KEY_SET_VALUE <I>DesiredAccess</I> flag set for this call to succeed. For a description of possible values for <I>DesiredAccess</I>, see <A HREF="k111_4omq.htm"><B>ZwCreateKey</B></A>.</P>

<P>If the given key has no existing value entry with a name matching the given <I>ValueName</I>, <B>ZwSetValueKey</B> creates a new value entry with the given name. If a matching value entry name exists, this routine overwrites the original value entry for the given <I>ValueName</I>. Thus, <B>ZwSetValueKey</B> preserves a unique name for each value entry of any particular key. While each value entry name must be unique to its containing key, many different keys in the registry can have value entries with the same names.</P>

<P>Callers of <B>ZwSetValueKey</B> must be running at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k103_34fm.htm"><B>HalAssignSlotResources</B></A>, <A HREF="k104_0wqa.htm"><B>IoAssignResources</B></A>, <A HREF="k104_0egi.htm"><B>IoQueryDeviceDescription</B></A>, <A HREF="k104_2gqa.htm"><B>IoReportResourceUsage</B></A>, <A HREF="k111_03aq.htm"><B>ZwClose</B></A>, <A HREF="k111_4omq.htm"><B>ZwCreateKey</B></A>, <A HREF="k111_95wy.htm"><B>ZwFlushKey</B></A>, <A HREF="k111_55pu.htm"><B>ZwOpenKey</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ZwSetValueKey"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
