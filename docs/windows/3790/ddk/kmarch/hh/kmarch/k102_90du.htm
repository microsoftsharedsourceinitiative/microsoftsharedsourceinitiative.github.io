<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExInterlockedPopEntrySList</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ExInterlockedPopEntrySList">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_exinterlockedpopentryslist_kr"></A>ExInterlockedPopEntrySList</H1>

<P>The <B>ExInterlockedPopEntrySList</B> routine removes the first entry from a sequenced, singly linked list so that access to this queue is synchronized in a multiprocessor-safe way.</P>

<PRE class=syntax><B>PSINGLE_LIST_ENTRY 
</B>  <B>ExInterlockedPopEntrySList(</B>
    <B>IN PSLIST_HEADER</B>  <I>ListHead</I><B>,</B>
    <B>IN PKSPIN_LOCK</B>  <I>Lock</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ListHead</I></DT>

<DD>Pointer to the head of the sequenced, singly linked list from which an entry is to be removed.</DD>

<DT><I>Lock</I></DT>

<DD>Pointer to a caller-supplied spin lock.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>ExInterlockedPopEntrySList</B> returns a pointer to the first entry in the list. If the list was empty, it returns NULL.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P><B>ExInterlockedPopEntrySList</B> removes the entry at the head of the list. Before calling this routine, the list must be initialized with <B>ExInitializeSListHead</B> and one or more caller-allocated entries should be inserted with <B>ExInterlockedPushEntrySList</B>. </P>

<P>Drivers that retry I/O operations should use a doubly linked interlocked queue and the <B>ExInterlockedInsert/Remove..List</B> routines, rather than an S-List.</P>

<P>The caller must provide resident storage for the <I>Lock</I>, which must be initialized with <B>KeInitializeSpinLock</B> before the first call to <B>ExInterlockedPushEntrySList</B>. A caller <I>must not</I> be holding this spin lock when it calls <B>ExInterlockedPush/PopEntrySList</B>. </P>

<P>Callers of <B>ExInterlockedPopEntrySList</B> can be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k102_94fm.htm"><B>ExInitializeSListHead</B></A>, <A HREF="k102_8h82.htm"><B>ExInterlockedRemoveHeadList</B></A>, <A HREF="k102_7pyq.htm"><B>ExInterlockedPushEntrySList</B></A>, <A HREF="k102_68xf.htm"><B>ExQueryDepthSList</B></A>, <A HREF="k105_60xe.htm"><B>KeInitializeSpinLock</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ExInterlockedPopEntrySList"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
