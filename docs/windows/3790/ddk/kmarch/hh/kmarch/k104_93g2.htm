<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoGetDmaAdapter</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoGetDmaAdapter">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iogetdmaadapter_kr"></A>IoGetDmaAdapter</H1>

<P>The <B>IoGetDmaAdapter</B> routine returns a pointer to the DMA adapter structure for a physical device object.</P>

<PRE class=syntax><B>PDMA_ADAPTER
</B>  <B>IoGetDmaAdapter(</B>
<B>    IN PDEVICE_OBJECT  </B><I>PhysicalDeviceObject</I><B>,</B>
<B>    IN PDEVICE_DESCRIPTION  </B><I>DeviceDescription</I><B>,</B>
<B>    IN OUT PULONG  </B><I>NumberOfMapRegisters</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>PhysicalDeviceObject</I></DT>

<DD>Pointer to the physical device object for the device requesting the DMA adapter structure.</DD>

<DT><I>DeviceDescription</I></DT>

<DD>Pointer to a <A HREF="k112_7f76.htm">DEVICE_DESCRIPTION</A> structure, which describes the attributes of the physical device.</DD>

<DT><I>NumberOfMapRegisters</I></DT>

<DD>Pointer to, on output, the maximum number of map registers that the driver can allocate for any DMA transfer operation.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoGetDmaAdapter </B>returns a pointer to a <A HREF="k112_86k2.htm">DMA_ADAPTER</A> structure, which contains pointers to functions that support system-defined DMA operations. If the structure cannot be allocated, the routine returns NULL.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>Before calling this routine, a driver must zero-initialize the structure passed at <I>DeviceDescription</I> and then supply the relevant information for its device.</P>

<P>On success, the <B>DmaOperations</B> member of the routine's return value points to a <A HREF="k112_3tf6.htm">DMA_OPERATIONS</A> structure, which is a table of pointers to functions that the driver can use to perform subsequent DMA operations. If the driver passes DEVICE_DESCRIPTION_VERSION or DEVICE_DESCRIPTION_VERSION1 in the <B>Version</B> member of the <I>DeviceDescription</I> parameter, <B>IoGetDmaAdapter</B> returns a pointer to version 1 of the DMA_OPERATIONS structure. If the driver passes DEVICE_DESCRIPTION_VERSION2, <B>IoGetDmaAdapter</B> returns version 2 of the table if version 2 is supported, otherwise it returns NULL. Drivers must check to see if version 2 is supported before attempting to use any version 2 function.</P>

<P>PnP drivers call <B>IoGetDmaAdapter</B> when handling a PnP IRP_MN_START_DEVICE request for a device. This IRP includes information about the device's hardware resources that the driver must supply in the <I>DeviceDescription</I> structure. </P>

<P>In <I>NumberOfMapRegisters</I>, the caller specifies the optimal number of map registers it can use. On output, the I/O Manager returns the number of map registers it allocated. Drivers should check the returned value; there is no guarantee a driver will receive the same number of map registers it requested. </P>

<P>To free the adapter object, the driver should call <B>PutDmaAdapter</B> through the pointer returned in the DMA_ADAPTER structure.</P>

<P>Drivers must call this routine while running at IRQL&nbsp;= PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="k112_7f76.htm">DEVICE_DESCRIPTION</A>, <A HREF="k112_86k2.htm">DMA_ADAPTER</A>, <A HREF="kdma_3l4i.htm"><B>PutDmaAdapter</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoGetDmaAdapter"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
