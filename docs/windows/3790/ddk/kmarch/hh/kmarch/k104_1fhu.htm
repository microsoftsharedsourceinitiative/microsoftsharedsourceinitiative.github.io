<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoCompleteRequest</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoCompleteRequest">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iocompleterequest_kr"></A>IoCompleteRequest</H1>

<P>The <B>IoCompleteRequest</B> routine indicates that the caller has completed all processing for a given I/O request and is returning the given IRP to the I/O Manager.</P>

<PRE class=syntax><B>VOID 
</B>  <B>IoCompleteRequest(</B>
<B>    IN PIRP</B>  <I>Irp</I><B>,</B>
<B>    IN CCHAR</B>  <I>PriorityBoost</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Irp</I></DT>

<DD>Pointer to the IRP to be completed.</DD>

<DT><I>PriorityBoost</I></DT>

<DD>Specifies a system-defined constant by which to increment the runtime priority of the original thread that requested the operation. This value is IO_NO_INCREMENT if the original thread requested an operation the driver could complete quickly (so the requesting thread is not compensated for its assumed wait on I/O) or if the IRP is completed with an error. Otherwise, the set of <I>PriorityBoost</I> constants are device-type-specific. See <I>ntddk.h </I>or<I> wdm.h </I>for these constants.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>When a driver has finished all processing for a given IRP, it calls <B>IoCompleteRequest</B>. The I/O Manager checks the IRP to determine whether any higher-level drivers have set up an <I>IoCompletion</I> routine for the IRP. If so, each <I>IoCompletion</I> routine is called, in turn, until every layered driver in the chain has completed the IRP.</P>

<P>When all drivers have completed a given IRP, the I/O Manager returns status to the original requester of the operation. Note that a higher-level driver that sets up a driver-created IRP must supply an <I>IoCompletion</I> routine to release the IRP it created. </P>

<P>Never call <B>IoCompleteRequest</B> while holding a spin lock. Attempting to complete an IRP while holding a spin lock can cause deadlocks.</P>

<P>Callers of <B>IoCompleteRequest</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_5w6q.htm"><B>IoSetCompletionRoutine</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoCompleteRequest"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
