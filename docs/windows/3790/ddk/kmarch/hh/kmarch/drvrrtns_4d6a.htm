<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>AddDevice</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="AddDevice">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_adddevice_kr"></A><I>AddDevice</I></H1>

<P>The <I>AddDevice</I> routine is responsible for creating functional device objects (FDO) or filter device objects (filter DO) for devices enumerated by the Plug and Play (PnP) Manager.</P>

<PRE class=syntax><B>NTSTATUS
</B><I>  Xxx</I><B>AddDevice(</B>
<B>    IN PDRIVER_OBJECT  </B><I>DriverObject</I><B>,</B>
<B>    IN PDEVICE_OBJECT  </B><I>PhysicalDeviceObject</I><B> </B>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DriverObject</I></DT>

<DD>Caller-supplied pointer to a <A HREF="k112_6jaq.htm">DRIVER_OBJECT</A> structure. This is the driver's driver object.</DD>

<DT><I>PhysicalDeviceObject</I></DT>

<DD>Caller-supplied pointer to a <A HREF="k112_32cy.htm">DEVICE_OBJECT</A> structure representing a physical device object (PDO) created by a lower-level driver.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the routine succeeds, it must return STATUS_SUCCESS. Otherwise, it must return one of the error status values defined in <I>ntstatus.h</I>.</P>

<H4>Comments</H4>

<P>All kernel-mode drivers that support PnP must provide an <I>AddDevice</I> routine.</P>

<P>A driver's <I>AddDevice </I>routine executes in a system thread context at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<P>A driver's <I>AddDevice</I> routine should be named <I>Xxx</I><B>AddDevice</B>, where <I>Xxx</I> is a driver-specific prefix. The driver's <B>DriverEntry</B> routine must store the <I>AddDevice</I> routine's address in <B>DriverObject-&gt;DriverExtension-&gt;AddDevice</B>.</P>

<P>An <I>AddDevice</I> routine's primary responsibilities are calling <A HREF="k104_8piq.htm"><B>IoCreateDevice</B></A> to create a device object, then calling <A HREF="k104_9tiq.htm"><B>IoAttachDeviceToDeviceStack</B></A> to attach the device object to the device stack. For detailed information about implementing a driver's <I>AddDevice</I> routine, see <A HREF="drvcomps_2o13.htm">Writing an <I>AddDevice</I> Routine</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: AddDevice"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
