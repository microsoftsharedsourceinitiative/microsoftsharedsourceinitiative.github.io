<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WNODE_HEADER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WNODE_HEADER">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wnode_header_kr"></A>WNODE_HEADER</H1>

<P>The WNODE_HEADER structure is the first member of all other WNODE_<I>XXX</I> structures. It contains information common to all such structures. </P>

<PRE class=syntax>typedef struct _WNODE_HEADER {
  ULONG       BufferSize;
  UINT_PTR    ProviderId;
  union {
    ULONG64    HistoricalContext;
    struct {
      ULONG    Version;
      ULONG    Linkage;
    };
  };
  union {
    HANDLE           KernelHandle;
    LARGE_INTEGER    TimeStamp;
  };
  GUID        Guid;
  ULONG       ClientContext;
  ULONG       Flags;
} WNODE_HEADER, *PWNODE_HEADER;</PRE>

<H4>Members</H4>

<DL>
<DT><B>BufferSize</B></DT>

<DD>Specifies the size in bytes of the nonpaged buffer to receive any WNODE_<I>XXX</I> data to be returned, including this WNODE_HEADER, additional members of a WNODE_<I>XXX</I> structure of the type indicated by <B>Flags</B>, and any WMI- or driver-determined data that accompanies that structure. </DD>

<DT><B>ProviderId</B></DT>

<DD>If <B>Flags</B> is set to WNODE_FLAG_EVENT_ITEM or WNODE_FLAG_EVENT_REFERENCE then <B>ProviderId</B> should contain the Id of the WMI Provider associated with the device object. The ProviderId value can be gotten by calling IoWMIDeviceObjectToProviderId. If <B>Flags</B> is set to any other value, then this member is reserved.</DD>

<DT><B>HistoricalContext</B></DT>

<DD>Reserved for WMI. </DD>

<DT><B>Version</B></DT>

<DD>Reserved for WMI.</DD>

<DT><B>Linkage</B></DT>

<DD>Reserved for WMI. </DD>

<DT><B>KernelHandle</B></DT>

<DD>Reserved for WMI.</DD>

<DT><B>TimeStamp</B></DT>

<DD>Indicates the system time a driver collected the WNODE_<I>XXX</I> data, in units of 100 nanoseconds since 1/1/1601. A driver can call <B>KeQuerySystemTime</B> to obtain this value. If the block is to be written to a log file (WNODE_FLAG_LOG_WNODE), an NT driver might also set WNODE_FLAG_USE_TIMESTAMP in <B>Flags</B> to request the system logger to leave the value of <B>TimeStamp </B>unchanged. </DD>

<DT><B>Guid</B></DT>

<DD>Indicates the GUID that represents the data block associated with the WNODE_<I>XXX</I> to be returned. </DD>

<DT><B>ClientContext</B></DT>

<DD>Reserved for WMI.</DD>

<DT><B>Flags</B></DT>

<DD>Indicates the type of WNODE_<I>XXX</I> structure that contains the WNODE_HEADER:

<DL>
<DT>WNODE_FLAG_ALL_DATA</DT>

<DD>The rest of a WNODE_ALL_DATA structure follows the WNODE_HEADER in the buffer. 

<P>WMI sets this flag in the WNODE_HEADER it passes with an IRP_MN_QUERY_ALL_DATA request.


<P>A driver sets this flag in the WNODE_HEADER of an event that consists of all instances of a data block. If the data block size is identical for all instances, a driver also sets WNODE_FLAG_FIXED_INSTANCE_SIZE. 
</DD>

<DT>WNODE_FLAG_EVENT_ITEM</DT>

<DD>A driver sets this flag to indicate that the WNODE_XXX structure was generated as an event. This flag is valid only if WNODE_FLAG_ALL_DATA, WNODE_FLAG_SINGLE_INSTANCE, or WNODE_FLAG_SINGLE_ITEM is also set. </DD>

<DT>WNODE_FLAG_EVENT_REFERENCE </DT>

<DD>The rest of a WNODE_EVENT_REFERENCE structure follows the WNODE_HEADER in the buffer. 

<P>A driver sets this flag when it generates an event that is larger than the maximum size specified in the registry for an event. WMI uses the information in the WNODE_EVENT_REFERENCE to request the event data and schedules such a request according to the value of WNODE_FLAG_SEVERITY_MASK. 
</DD>

<DT>WNODE_FLAG_METHOD_ITEM</DT>

<DD>The rest of a WNODE_METHOD_ITEM structure follows the WNODE_HEADER in the buffer. 

<P>WMI sets this flag in the WNODE_HEADER it passes with an IRP_MN_EXECUTE_METHOD request. 
</DD>

<DT>WNODE_FLAG_SINGLE_INSTANCE</DT>

<DD>The rest of a WNODE_SINGLE_INSTANCE structure follows the WNODE_HEADER in the buffer.

<P>WMI sets this flag in the WNODE_HEADER it passes with a request to query or change an instance.


<P>A driver sets this flag in the WNODE_HEADER of an event that consists of a single instance of a data block. 
</DD>

<DT>WNODE_FLAG_SINGLE_ITEM</DT>

<DD>The rest of a WNODE_SINGLE_ITEM structure follows the WNODE_HEADER in the buffer.

<P>WMI sets this flag in the WNODE_HEADER it passes with a request to change an item.


<P>A driver sets this flag in the WNODE_HEADER of an event that consists of a single data item.
</DD>

<DT>WNODE_FLAG_TOO_SMALL</DT>

<DD>The rest of a WNODE_TOO_SMALL structure follows the WNODE_HEADER in the buffer. 

<P>A driver sets this flag when it passes a WNODE_TOO_SMALL, indicating that the buffer is too small for all of the WNODE_<I>XXX</I> data to be returned.
</DD>
</DL>


<P>In addition, <B>Flags</B> might be set with one or more of the following flags that provide additional information about the WNODE_<I>XXX</I>: 


<DL>
<DT>WNODE_FLAG_FIXED_INSTANCE_SIZE</DT>

<DD>All instances of a data block are the same size. This flag is valid only if WNODE_FLAG_ALL_DATA is also set. </DD>

<DT>WNODE_FLAG_INSTANCES_SAME</DT>

<DD>The number of instances and the dynamic instance names in a WNODE_ALL_DATA to be returned are identical to those returned from the previous WNODE_ALL_DATA query. This flag is valid only if WNODE_FLAG_ALL_DATA is also set. This flag is ignored for data blocks registered with static instance names.

<P>For optimized performance, a driver should set this flag if it can track changes to the number or names of its data blocks. WMI can then skip the processing required to detect and update dynamic instance names. 
</DD>

<DT>WNODE_FLAG_STATIC_INSTANCE_NAMES </DT>

<DD>The WNODE_<I>XXX</I> data to be returned does not include instance names. 

<P>WMI sets this flag before requesting WNODE_<I>XXX</I> data for data blocks registered with static instance names. After receiving the returned WNODE_<I>XXX</I> from the driver, WMI fills in the static instance names specified at registration before passing the returned WNODE_<I>XXX</I> to a data consumer. 
</DD>

<DT>WNODE_FLAG_PDO_INSTANCE_NAMES  </DT>

<DD>Static instance names are based on the device instance ID of the PDO for the device. A driver requests such names by setting WMIREG_FLAG_INSTANCE_PDO in the WMIREGGUID it uses to register the block.

<P>WMI sets this flag before requesting WNODE_<I>XXX</I> data for data blocks registered with PDO-based instance names.
</DD>

<DT>WNODE_FLAG_SEVERITY_MASK </DT>

<DD>The driver-determined severity level of the event associated with a returned WNODE_EVENT_REFERENCE, with 0x00 indicating the least severe and 0xff indicating the most severe level. 

<P>WMI uses the value of this flag to prioritize its requests for the event data.
</DD>

<DT>WNODE_FLAG_USE_TIMESTAMP </DT>

<DD>The system logger should not modify the value of <B>TimeStamp</B> set by the driver. </DD>
</DL>


<P>An NT driver might also set <B>Flags</B> to one or more of the following values for event blocks to be written to a system log file:


<DL>
<DT>WNODE_FLAG_LOG_WNODE</DT>

<DD>An event block is to be sent to the system logger. The event header is a standard WNODE_HEADER structure. If the driver clears WNODE_FLAG_TRACED_GUID, the block will also be sent to WMI for delivery to any data consumers that have enabled the event. The driver must allocate the WNODE_<I>XXX </I>from pool memory. WMI frees the memory after delivering the event to data consumers.</DD>

<DT>WNODE_FLAG_TRACED_GUID</DT>

<DD>An event block is to be sent only to the system logger. It does not get sent to WMI data consumers. The event header is an EVENT_TRACE_HEADER structure, declared in <I>evntrace.h</I>, instead of a WNODE_HEADER. The driver must allocate memory for the WNODE_<I>XXX</I> and free it after <B>IoWMIWriteEvent</B> returns. The driver can allocate such memory either from the stack or, to minimize the overhead of allocating and freeing the memory, from the driver's thread local storage if the driver creates and maintains its own thread pool. </DD>

<DT>WNODE_FLAG_USE_GUID_PTR</DT>

<DD>The <B>Guid</B> member points to a GUID in memory, rather than containing the GUID itself. The system logger dereferences the pointer before passing the data to the consumer. This flag is valid only if WNODE_FLAG_LOG_WNODE or WNODE_FLAG_TRACED_GUID are also set.</DD>

<DT>WNODE_FLAG_USE_MOF_PTR</DT>

<DD>Data that follows the fixed members of a WNODE_<I>XXX</I> structure consists of an array of MOF_FIELD structures, defined in <I>evntrace.h</I>, that contain pointers to data and sizes rather than the data itself. The array can contain up to MAX_MOF_FIELD elements. The system logger dereferences the pointers before passing the data to the consumer This flag is valid only for blocks registered with WMIREG_FLAG_TRACED_GUID. 
</DD>
</DL>
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>wmistr.h</I>.  Include <I>wmistr.h</I>.</P>

<H4>Comments</H4>

<P>In an IRP_MN_CHANGE_<I>XXX</I> or <A HREF="k901_6hf6.htm">IRP_MN_EXECUTE_METHOD</A> request, <B>BufferSize</B> in the IRP indicates the maximum size in bytes of the output buffer, while <B>BufferSize</B> in the input WNODE_HEADER for such a request indicates the size in bytes of the input data in the buffer.</P>

<H4>See Also</H4>

<P><A HREF="k104_2uya.htm"><B>IoWMIWriteEvent</B></A>,<A HREF="k104_233m.htm"><B>IoWMIDeviceObjectToProviderId</B></A>, <A HREF="k105_41iq.htm"><B>KeQuerySystemTime</B></A>, <A HREF="k112_1dpu.htm">WNODE_ALL_DATA</A>, <A HREF="k112_45de.htm">WNODE_EVENT_ITEM</A>, <A HREF="k112_17zm.htm">WNODE_EVENT_REFERENCE</A>, <A HREF="k112_8mya.htm">WNODE_METHOD_ITEM</A>, <A HREF="k112_7a2a.htm">WNODE_SINGLE_INSTANCE</A>, <A HREF="k112_20c2.htm">WNODE_SINGLE_ITEM</A>, <A HREF="k112_3642.htm">WNODE_TOO_SMALL</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WNODE_HEADER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
