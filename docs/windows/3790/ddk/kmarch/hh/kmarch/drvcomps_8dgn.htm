<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling Transfers Asynchronously</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Handling Transfers Asynchronously">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_handling_transfers_asynchronously_kg"></A>Handling Transfers Asynchronously</H3>

<P>Except for highest-level drivers, all drivers handle <A HREF="k113_7fhu.htm">IRP_MJ_READ</A> and <A HREF="k113_45o2.htm">IRP_MJ_WRITE</A> requests asynchronously. The <I>DispatchRead</I> and <I>DispatchWrite</I> routines in even a highest-level driver cannot wait for lower-level drivers to finish processing an asynchronous read or write request; they must pass such a request on to lower drivers and return STATUS_PENDING. </P>

<P>Similarly, a lowest-level device driver's <I>DispatchReadWrite</I> routine must pass the transfer request on to other driver routines that process device I/O requests and then return STATUS_PENDING.</P>

<P>A higher-level driver sometimes must set up partial-transfer IRPs and pass them on to lower drivers. The higher-level driver can complete the original read/write IRP only when its partial-transfer requests have been completed by the lower drivers. </P>

<P>For example, a SCSI class driver’s <I>DispatchReadWrite</I> routine is required to split large transfer requests that exceed the underlying HBA’s transfer capabilities into a set of partial-transfer requests. The class driver must set up the parameters in its partial-transfer IRPs so that the SCSI port/miniport drivers can satisfy each partial-transfer request in a single DMA operation. </P>

<P>Other device drivers that use DMA or PIO also might need to split up large transfer requests for themselves. </P>

<P>For more information about using DMA and PIO, see <A HREF="iputoput_92cn.htm">Input/Output_Techniques</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20Transfers%20Asynchronously"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
