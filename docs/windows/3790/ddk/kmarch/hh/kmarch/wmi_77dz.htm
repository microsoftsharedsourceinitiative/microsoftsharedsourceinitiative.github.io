<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WMI Class Names and Base Classes</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WMI Class Names and Base Classes">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_wmi_class_names_and_base_classes_kg"></A>WMI Class Names and Base Classes</H2>

<P>WMI class names are case-insensitive, must start with a letter, and cannot begin or end with an underscore. All remaining characters must be letters, digits, or underscores. </P>

<P>WMI client applications can access a driver's WMI class names and display them to users. Descriptive class names can help make classes more intuitive to use. </P>

<P>WMI class names must be unique within the WMI name space. Consequently a driver's WMI class names cannot duplicate those defined by another driver. </P>

<P>To help prevent name collisions, a driver writer can define a driver-specific base class and derive all of the driver's WMI classes from that base class. The class name and base class name together are more likely to yield a unique name. For example, the following shows an abstract base class for a serial driver's data blocks:</P>

<PRE>// Serial driver's base class for data blocks
[abstract]
class MSSerial {
}
 
// Example class definition for a data block
[
    //Class qualifiers 
]
class MSSerial_StandardSerialInformation : MSSerial 
{
    //Data items
}</PRE>

<P>Device-specific custom data blocks should include the manufacturer, model, and type of driver or device in the base class name. For example:</P>

<PRE>[abstract]
class Adaptec1542 {
}
 
class Adaptec1542_Bandwidth : Adaptec1542 {
    //Data items
}
 
class Adaptec1542_Speed : Adaptec1542 {
    //Data items
}</PRE>

<P>WMI allows only one abstract base class in a given class hierarchy. Classes that define event blocks must derive from <B>WmiEvent</B>, which is an abstract base class, so the <B>abstract</B> qualifier cannot be used in a driver-defined base class for event blocks. Instead, derive a nonabstract base class from <B>WmiEvent</B>, then derive individual event classes from that base class. For example:</P>

<PRE>//Serial driver's base class for event blocks
class MSSerialEvent : WmiEvent 
{
}
 
//Example class definition for an event block
[
    //Class qualifiers 
]
class MSSerial_SendEvent : MSSerialEvent 
{
    //Data items
}</PRE>

<P>For more information about defining base classes in MOF format, see the Platform SDK.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WMI%20Class%20Names%20and%20Base%20Classes"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
