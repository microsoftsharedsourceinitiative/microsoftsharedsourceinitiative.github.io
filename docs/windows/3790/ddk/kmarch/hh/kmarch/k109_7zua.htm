<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>InitializeListHead</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="InitializeListHead">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_initializelisthead_kr"></A>InitializeListHead</H1>

<P>The <B>InitializeListHead</B> routine initializes any doubly linked, driver-managed interlocked queue or driver-maintained doubly linked list.</P>

<PRE class=syntax><B>VOID 
</B>  <B>InitializeListHead(</B>
<B>    IN PLIST_ENTRY</B>  <I>ListHead</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ListHead</I></DT>

<DD>Pointer to the driver-allocated storage for the head of the interlocked queue or list. For an interlocked queue, the storage must be resident and the driver also must provide storage for a spin lock.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P>A driver that sets up internal interlocked queues for IRPs or manages internal linked lists must call <B>InitializeListHead</B>. A PnP driver should make the call from its AddDevice routine after creating the relevant device object; other drivers can call from the <B>DriverEntry</B> routine.</P>

<P>The <I>ListHead</I> of type LIST_ENTRY is doubly linked. Entries in an interlocked queue can be queued and dequeued by calling <B>ExInterlockedInsert..List</B> and <B>ExInterlockedRemoveHeadList</B>. Entries can be inserted into and removed from a driver-maintained list with <B>Insert..List</B> and <B>Remove..List</B>.</P>

<P>For an interlocked queue, a driver must provide resident storage: in the device extension of a driver-created device object, in the controller extension of a driver-created controller object, or in nonpaged pool allocated by the driver. The driver also must provide storage for a spin lock, which must be initialized with <B>KeInitializeSpinLock</B> before the driver's initial call to <B>ExInterlocked</B><I>Xxx</I> with the spin lock.</P>

<P>For a driver-maintained list, the driver must synchronize access to the list so that it is impossible for any two routines to be inserting and/or removing entries from the list simultaneously in SMP machines. Consequently, most drivers use the <B>ExInterlocked</B><I>Xxx</I> routines to manage the necessary synchronization, rather than setting up a driver-managed list, which is likely to require spin lock protection anyway.</P>

<P>Callers of <B>InitializeListHead</B> can be running at IRQL&nbsp;&gt;= DISPATCH_LEVEL only if the caller-allocated storage for <I>ListHead</I> is resident.</P>

<H4>See Also</H4>

<P><A HREF="k102_84oi.htm"><B>ExInterlockedInsertHeadList</B></A>, <A HREF="k102_5xv6.htm"><B>ExInterlockedInsertTailList</B></A>, <A HREF="k102_8h82.htm"><B>ExInterlockedRemoveHeadList</B></A>, <A HREF="k102_68xe.htm"><B>ExInterlockedPopEntryList</B></A>, <A HREF="k102_8eya.htm"><B>ExInterlockedPushEntryList</B></A>, <A HREF="k109_44s2.htm"><B>InsertHeadList</B></A>, <A HREF="k109_1xyq.htm"><B>InsertTailList</B></A>, <A HREF="k109_2j76.htm"><B>IsListEmpty</B></A>, <A HREF="k105_60xe.htm"><B>KeInitializeSpinLock</B></A>, <A HREF="k109_6kky.htm"><B>PopEntryList</B></A>, <A HREF="k109_94tu.htm"><B>PushEntryList</B></A>, <A HREF="k109_88c2.htm"><B>RemoveEntryList</B></A>, <A HREF="k109_4hbm.htm"><B>RemoveHeadList</B></A>, <A HREF="k109_2aia.htm"><B>RemoveTailList</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: InitializeListHead"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
