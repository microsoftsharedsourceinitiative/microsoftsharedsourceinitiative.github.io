<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Overview of the Windows I/O Model</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Overview of the Windows I/O Model">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_overview_of_the_windows_i_o_model_kg"></A>Overview of the Windows I/O Model</H1>

<P>Every operating system has an implicit or explicit I/O model for handling the flow of data to and from peripheral devices. One feature of the Microsoft® Windows® I/O model is its support for asynchronous I/O. In addition, the I/O model has the following general features:

<UL>
	<LI>The I/O Manager presents a consistent interface to all kernel-mode drivers, including lowest-level, intermediate, and file system drivers. All I/O requests to drivers are sent as I/O request packets (IRPs). </LI>

	<LI>I/O operations are layered. The I/O Manager exports I/O system services, which user-mode protected subsystems call to carry out I/O operations on behalf of their applications and/or end users. The I/O Manager intercepts these calls, sets up one or more IRPs, and routes them through possibly layered drivers to physical devices.</LI>

	<LI>The I/O Manager defines a set of standard routines, some required and others optional, that drivers can support. All drivers follow a relatively consistent implementation model, given the differences among peripheral devices and the differing functionality required of bus, function, filter, and file system drivers.</LI>

	<LI>Like the operating system itself, drivers are object-based. Drivers, their devices, and system hardware are represented as objects. The I/O Manager and other operating system components export kernel-mode support routines that drivers can call to get work done by manipulating the appropriate objects.</LI>
</UL>

<P>In addition to using IRPs to convey traditional I/O requests, the I/O Manager works with the PnP and Power Managers to send IRPs containing PnP and power requests.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Overview%20of%20the%20Windows%20I%2FO%20Model"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
