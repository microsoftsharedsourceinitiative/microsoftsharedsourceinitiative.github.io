<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Standard Event Objects</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Standard Event Objects">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_standard_event_objects_kg"></A>Standard Event Objects</H3>

<P>The system provides several standard event objects. Drivers can use these event objects to be notified by the system whenever certain conditions occur. The standard event objects are as follows:

<DL>
<DT><B>\\KernelObjects\HighMemoryCondition</B></DT>

<DD>This event is set whenever the amount of free memory exceeds a system-defined amount. Drivers can wait on this event as a signal to aggressively allocate memory.</DD>

<DT><B>\\KernelObjects\LowMemoryCondition</B></DT>

<DD>This event is set whenever the amount of free memory falls below a system-defined amount. Drivers that have allocated large amounts of memory can wait on this event as a signal to free unused memory.
</DD>
</DL>

<P>For Windows Server 2003 and later operating systems, there are several additional standard event objects:

<DL>
<DT><B>\\KernelObjects\HighPagedPoolCondition</B></DT>

<DD>This event is set whenever the amount of free paged pool exceeds a system-defined amount. Drivers can wait on this event as a signal to aggressively allocate memory from paged pool.  </DD>

<DT><B>\\KernelObjects\LowPagedPoolCondition</B></DT>

<DD>This event is set whenever the amount of free paged pool falls below a system-defined amount. Drivers that have allocated large amounts of memory can wait on this event as a signal to free unused memory from paged pool.  </DD>

<DT><B>\\KernelObjects\HighNonPagedPoolCondition</B></DT>

<DD>This event is set whenever the amount of free nonpaged pool exceeds a system-defined amount. Drivers can wait on this event as a signal to aggressively allocate memory from nonpaged pool.  </DD>

<DT><B>\\KernelObjects\LowNonPagedPoolCondition</B></DT>

<DD>This event is set whenever the amount of free nonpaged pool falls below a system-defined amount. Drivers that have allocated large amounts of memory can wait on this event as a signal to free unused memory from nonpaged pool.  
</DD>
</DL>

<P>Each of these events are notification events. They remain set as long as the triggering condition remains true.</P>

<P>To open a handle to any of these events, use <A HREF="k104_7bg2.htm"><B>IoCreateNotificationEvent</B></A>. A driver that waits for any of these events should create a dedicated thread to do the waiting. The thread can wait for one or more of these events by calling either <A HREF="k105_40c2.htm"><B>KeWaitForSingleObject</B></A> or <A HREF="k105_18oi.htm"><B>KeWaitForMultipleObjects</B></A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Standard%20Event%20Objects"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
