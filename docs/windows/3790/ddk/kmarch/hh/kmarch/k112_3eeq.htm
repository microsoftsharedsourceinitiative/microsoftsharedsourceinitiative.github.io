<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CM_EISA_FUNCTION_INFORMATION</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="CM_EISA_FUNCTION_INFORMATION">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_cm_eisa_function_information_kr"></A>CM_EISA_FUNCTION_INFORMATION</H1>

<P>The CM_EISA_FUNCTION_INFORMATION structure defines detailed EISA configuration information returned by <B>HalGetBusData</B> for the input <I>BusDataType</I> <B>EisaConfiguration</B>, or by <B>HalGetBusDataByOffset</B> for the input <I>BusDataType</I> <B>EisaConfiguration</B> and the <I>Offset</I> zero, assuming the caller-allocated <I>Buffer</I> is of sufficient <I>Length</I>.</P>

<PRE class=syntax>typedef struct _CM_EISA_FUNCTION_INFORMATION {
  ULONG  CompressedId;
  UCHAR  IdSlotFlags1;
  UCHAR  IdSlotFlags2;
  UCHAR  MinorRevision;
  UCHAR  MajorRevision;
  UCHAR  Selections[26];
  UCHAR  FunctionFlags;
  UCHAR  TypeString[80];
  EISA_MEMORY_CONFIGURATION  EisaMemory[9];
  EISA_IRQ_CONFIGURATION  EisaIrq[7];
  EISA_DMA_CONFIGURATION  EisaDma[4];
  EISA_PORT_CONFIGURATION  EisaPort[20];
  UCHAR  InitializationData[60];
} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION;</PRE>

<H4>Members</H4>

<DL>
<DT><B>CompressedId</B></DT>

<DD>The EISA compressed identification of the device at this slot. The value is identical to the <B>CompressedId</B> member of the <A HREF="k112_1vw2.htm">CM_EISA_SLOT_INFORMATION</A> structure.</DD>

<DT><B>IdSlotFlags1</B></DT>

<DD>The EISA slot identification flags.</DD>

<DT><B>IdSlotFlags2</B></DT>

<DD>The EISA slot identification flags.</DD>

<DT><B>MinorRevision</B></DT>

<DD>Information supplied by the manufacturer.</DD>

<DT><B>MajorRevision</B></DT>

<DD>Information supplied by the manufacturer.</DD>

<DT><B>Selections[26]</B></DT>

<DD>The EISA selections for the device.</DD>

<DT><B>FunctionFlags</B></DT>

<DD>Indicates which of the members has available information. Callers can use the following system-defined masks to determine whether a particular type of configuration information can be or has been returned by <B>HalGetBusData</B> or <B>HalGetBusDataByOffset</B>:

<P>EISA_FUNCTION_ENABLED<BR>
EISA_FREE_FORM_DATA<BR>
EISA_HAS_PORT_INIT_ENTRY<BR>
EISA_HAS_PORT_RANGE<BR>
EISA_HAS_DMA_ENTRY<BR>
EISA_HAS_IRQ_ENTRY<BR>
EISA_HAS_MEMORY_ENTRY<BR>
EISA_HAS_TYPE_ENTRY<BR>
EISA_HAS_INFORMATION


<P>The EISA_HAS_INFORMATION mask is a combination of the following:


<P>EISA_HAS_PORT_RANGE<BR>
EISA_HAS_DMA_ENTRY<BR>
EISA_HAS_IRQ_ENTRY<BR>
EISA_HAS_MEMORY_ENTRY<BR>
EISA_HAS_TYPE_ENTRY
</DD>

<DT><B>TypeString[80]</B></DT>

<DD>Specifies the type of device.</DD>

<DT><B>EisaMemory[9]</B></DT>

<DD>Describes the EISA device memory configuration information, defined as follows:

<PRE>typedef struct _EISA_MEMORY_CONFIGURATION {
    EISA_MEMORY_TYPE ConfigurationByte;
    UCHAR DataSize;
    USHORT AddressLowWord;
    UCHAR AddressHighByte;
    USHORT MemorySize;
} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION;</PRE>
</DD>

<DT><B>EisaIrq[7]</B></DT>

<DD>Describes the EISA interrupt configuration information, defined as follows:

<PRE>typedef struct _EISA_IRQ_CONFIGURATION {
    EISA_IRQ_DESCRIPTOR ConfigurationByte;
    UCHAR Reserved;
} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION;</PRE>
</DD>

<DT><B>EisaDma[4]</B></DT>

<DD>Describes the EISA DMA configuration information, defined as follows:

<PRE>typedef struct _EISA_DMA_CONFIGURATION {
    DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
    DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION;</PRE>
</DD>

<DT><B>EisaPort[20]</B></DT>

<DD>Describes the EISA device port configuration information, defined as follows:

<PRE>typedef struct _EISA_PORT_CONFIGURATION {
    EISA_PORT_DESCRIPTOR Configuration;
    USHORT PortAddress;
} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION;</PRE>
</DD>

<DT><B>InitializationData[60]</B></DT>

<DD>Vendor-supplied, device-specific initialization data, if any.
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P>The information returned by <B>HalGetBusData</B> or <B>HalGetBusDataByOffset</B> in CM_EISA_FUNCTION_INFORMATION and/or in the CM_EISA_SLOT_INFORMATION header immediately preceding it is read-only.</P>

<H4>See Also</H4>

<P><A HREF="k112_1vw2.htm">CM_EISA_SLOT_INFORMATION</A>, <A HREF="k103_3o6q.htm"><B>HalGetBusData</B></A>, <A HREF="k103_5waa.htm"><B>HalGetBusDataByOffset</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: CM_EISA_FUNCTION_INFORMATION"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
