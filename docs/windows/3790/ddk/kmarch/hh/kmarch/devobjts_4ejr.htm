<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Example WDM Device Objects</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Example WDM Device Objects">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_interrupt_object_kg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_example_wdm_device_objects_kg"></A>Example WDM Device Objects</H2>

<P>The following figure illustrates the device objects that represent the keyboard and mouse devices shown previously in the figure illustrating <A HREF="wdmintro_0jon.htm#ddk_figure_2..6_kg">Keyboard and Mouse Hardware Configurations</A>. The keyboard and mouse drivers shown in the figure illustrating <A HREF="wdmintro_0jon.htm#ddk_figure_2..7_kg">Keyboard and Mouse Driver Layers</A> create these device objects by calling an I/O support routine (<A HREF="k104_8piq.htm"><B>IoCreateDevice</B></A>).</P>

<P><B><IMG SRC="images/2sampdos.gif" ALT="" BORDER=0></B></P>

<P><B>Keyboard and Mouse Device Objects</B></P>

<P>For the keyboard and mouse devices, both their respective port and class drivers create device objects. The port driver creates a physical device object (PDO) to represent the physical port. Each class driver creates its own functional device object (FDO) to represent the keyboard or mouse device as a target for I/O requests.</P>

<P>Each class driver calls an I/O support routine to get a pointer to the next-lower-level driver's device object, so the class driver can chain itself above that driver, which is the port driver. Then the class driver can send I/O requests down to the port driver for the target PDO representing its physical device.</P>

<P>An optional filter driver added to the configuration would create a filter device object (filter DO). Like the class driver, an optional filter driver chains itself to the next-lower driver in the device stack and sends I/O requests for the target PDO down to the next-lower driver.</P>

<P>As shown previously in the <A HREF="wdmintro_0jon.htm#ddk_figure_2..7_kg">Keyboard and Mouse Driver Layers</A> figure, each port driver is a bus (lowest-level) driver, so every port driver of a device that generates interrupts must set up interrupt object(s) and register an ISR.</P>

<P>A dual-device port driver, like the i8042 driver for the keyboard and auxiliary device controller shown in the <A HREF="wdmintro_0jon.htm#ddk_figure_2..6_kg">Keyboard and Mouse Hardware Configurations</A>, must set up device-specific <A HREF="JavaScript:hhobj_1.Click()">interrupt objects</A> if each device uses a different interrupt vector. When writing such a driver, you can either implement separate ISRs for each device or implement a single ISR for both devices.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Example%20WDM%20Device%20Objects"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
