<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Error Handling</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Error Handling">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_error_handling_kr"></A>Error Handling</H1>

<DL>
<DT><A HREF="k104_0m9e.htm"><B>IoAllocateErrorLogEntry</B></A> </DT>

<DD>Allocates and initializes an error log packet; returns a pointer so the caller can supply error log data and call <B>IoWriteErrorLogEntry</B> with the packet.</DD>

<DT><A HREF="k104_82wi.htm"><B>IoFreeErrorLogEntry</B></A></DT>

<DD>Frees an error log entry allocated by <B>IoAllocateErrorLogEntry</B>.</DD>

<DT><A HREF="k104_0p82.htm"><B>IoWriteErrorLogEntry</B></A> </DT>

<DD>Queues a previously allocated error log packet, filled in by the driver, to the system error logging thread.</DD>

<DT><A HREF="k104_350y.htm"><B>IoIsErrorUserInduced</B></A> </DT>

<DD>Returns a Boolean value indicating whether an I/O request failed due to one of the following (user-correctable) conditions: STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_UNRECOGNIZED_MEDIA, STATUS_VERIFY_REQUIRED, STATUS_WRONG_VOLUME, STATUS_MEDIA_WRITE_PROTECTED, or STATUS_NO_MEDIA_IN_DEVICE. If the result is TRUE, a removable-media driver must call <B>IoSetHardErrorOrVerifyDevice</B> before completing the IRP.</DD>

<DT><A HREF="k104_4aia.htm"><B>IoSetHardErrorOrVerifyDevice</B></A> </DT>

<DD>Supplies the device object for which the given IRP was failed due to a user-induced error, such as supplying the incorrect media for the requested operation or changing the media before the requested operation was completed. (A file system driver uses the associated device object to send a popup to the user; the user can then correct the error or retry the operation.)</DD>

<DT><A HREF="k104_125u.htm"><B>IoSetThreadHardErrorMode</B></A> </DT>

<DD>Enables or disables error reporting for the current thread using <B>IoRaiseHardError</B> or <B>IoRaiseInformationalHardError</B>.</DD>

<DT><A HREF="k104_4wtu.htm"><B>IoGetDeviceToVerify</B></A> </DT>

<DD>Returns a pointer to the device object, representing a removable-media device that is the target of the given thread's I/O request. (This routine is useful only to file systems or other highest-level drivers.)</DD>

<DT><A HREF="k104_4w1e.htm"><B>IoRaiseHardError</B></A> </DT>

<DD>Causes a popup to be sent to the user indicating that the given IRP was failed on the given device object for an optional VPB, so that the user can correct the error or retry the operation.</DD>

<DT><A HREF="k104_1cxe.htm"><B>IoRaiseInformationalHardError</B></A> </DT>

<DD>Causes a popup to be sent to the user, showing an I/O error status and optional string supplying more information.</DD>

<DT><A HREF="k102_6ipe.htm"><B>ExRaiseStatus</B></A> </DT>

<DD>Raises an error status so that a caller-supplied structured exception handler is called. (This routine is useful only to highest-level drivers that supply exception handlers, in particular to file systems.)</DD>

<DT><A HREF="k105_9kfm.htm"><B>KeBugCheckEx</B></A> </DT>

<DD>Brings down the system in a controlled manner, displaying the bug-check code and possibly more information, after the caller discovers an unrecoverable inconsistency that will corrupt the system unless it is brought down. After the system is brought down, this routine displays bug-check and possibly other information. (This routine can be called when debugging under-development drivers. Otherwise, drivers should never call this routine when they can handle an error by failing an IRP and by calling <B>IoAllocateErrorLogEntry</B> and <B>IoWriteErrorLogEntry</B>.)</DD>

<DT><A HREF="k105_8omq.htm"><B>KeBugCheck</B></A> </DT>

<DD>Brings down the system in a controlled manner when the caller discovers an unrecoverable inconsistency that will corrupt the system if the caller continues to run. <B>KeBugCheckEx</B> is preferable.</DD>

<DT><A HREF="k105_0oxe.htm"><B>KeInitializeCallbackRecord</B></A> </DT>

<DD>Initializes a bug-check callback record before a device driver calls <B>KeRegisterBugCheckCallback</B>. </DD>

<DT><A HREF="k105_29wy.htm"><B>KeRegisterBugCheckCallback</B></A> </DT>

<DD>Registers the device driver's bug-check callback routine, which is called if a system bug check occurs. Such a driver-supplied routine saves driver-determined state information, such as the contents of device registers, that would not otherwise be written into the system crash-dump file. </DD>

<DT><A HREF="k105_2d6a.htm"><B>KeDeregisterBugCheckCallback</B></A> </DT>

<DD>Removes a device driver's callback routine from the set of registered bug-check callback routines. 


</DD>
</DL>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Error%20Handling"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
