<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KeRegisterNmiCallback</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KeRegisterNmiCallback">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_keregisternmicallback_kr"></A>KeRegisterNmiCallback</H1>

<P>The <B>KeRegisterNmiCallback</B> routine registers a routine to be called whenever a nonmaskable interrupt (NMI) occurs. </P>

<PRE class=syntax><B>PVOID
  KeRegisterNmiCallback(
    PNMI_CALLBACK  </B><I>CallbackRoutine</I><B>,</B>
<B>    PVOID  </B><I>Context</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>CallbackRoutine</I></DT>

<DD>Pointer to a function of the form:

<PRE>BOOLEAN
XxxNmiCallback(IN PVOID Context, IN BOOLEAN Handled);</PRE>

</DD>

<DT><I>Context</I></DT>

<DD>Specifies the value to be passed as the <I>Context</I> parameter of <I>XxxNmiCallback</I> when it is called.
</DD>
</DL>

<H4>Return Value</H4>

<P>On success, <B>KeRegisterNmiCallback</B> returns an opaque pointer that the caller passes to <A HREF="k105_9yya.htm"><B>KeDeregisterNmiCallback</B></A> to deregister the callback. The routine returns NULL if it is unable to register the callback.</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h</I>. Include <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P><B>KeRegisterNmiCallback</B> is only available in Windows&nbsp;Server 2003 and later operating systems.</P>

<P>When a nonmaskable interrupt occurs, the system calls each registered callback in reverse order from the order in which they were registered. For the first callback, the system passes FALSE as the <I>Handled</I> parameter. For each subsequent callback, if any previous callback returned TRUE, the system passes TRUE as the <I>Handled</I> parameter, otherwise it passes FALSE. If any callback returns a value of TRUE, the system considers the interrupt to have been handled. Otherwise, the system calls the HAL's default handler for the interrupt, which normally bugchecks the system.</P>

<P>The callback routine must be able to be run at IRQL&nbsp;= HIGH_LEVEL.</P>

<P><B>KeRegisterNmiCallback</B> routine can only be called at IRQL&nbsp;&lt;= APC_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k105_9yya.htm"><B>KeDeregisterNmiCallback</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KeRegisterNmiCallback"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
