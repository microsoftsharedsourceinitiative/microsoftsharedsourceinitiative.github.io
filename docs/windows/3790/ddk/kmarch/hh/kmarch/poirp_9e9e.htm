<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP_MN_QUERY_POWER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IRP_MN_QUERY_POWER">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_irp_mn_query_power_dr"></A>IRP_MN_QUERY_POWER</H1>

<H4>Major Code</H4>

<P><A HREF="k113_7jjm.htm">IRP_MJ_POWER</A></P>

<H4>When Sent</H4>

<P>The Power Manager or a device power policy owner sends this IRP to determine whether it can change the system or device power state, typically to go to sleep. A driver must call <B>PoRequestPowerIrp</B> to allocate and send this IRP.</P>

<P>The Power Manager sends this IRP at IRQL&nbsp;= PASSIVE_LEVEL to device stacks that set the DO_POWER_PAGABLE flag in the PDO. </P>

<P>The Power Manager can send the IRP at IRQL&nbsp;= DISPATCH_LEVEL if the DO_POWER_INRUSH flag is set. Such drivers cannot directly or indirectly access any paged code or data.</P>

<H4>Input</H4>

<P><B>Parameters.Power.Type</B> specifies the type of power state being set, either <B>SystemPowerState</B> or <B>DevicePowerState</B>.</P>

<P><B>Parameters.Power.State</B> specifies the power state itself, as follows: 

<UL>
	<LI>If <B>Parameters.Power.Type</B> is <B>SystemPowerState</B>, the value is an enumerator of the SYSTEM_POWER_STATE type.</LI>

	<LI>If <B>Parameters.Power.Type</B> is <B>DevicePowerState</B>, the value is an enumerator of the DEVICE_POWER_STATE type.</LI>
</UL>

<P><B>Parameters.Power.ShutdownType</B> specifies additional information about the requested transition. Possible values are enumerators of the POWER_ACTION type.</P>

<H4>Output</H4>

<P>None.</P>

<H4>I/O Status Block</H4>

<P>A driver sets <B>Irp-&gt;IoStatus.Status</B> to STATUS_SUCCESS to indicate that the device can enter the requested state. A driver sets any appropriate failure status to indicate that it cannot enter the requested state.</P>

<H4>Operation</H4>

<P>The parameters for IRP_MN_QUERY_POWER are identical to those for IRP_MN_SET_POWER. Rather than notifying drivers of an irrevocable change to the power state, however, IRP_MN_QUERY_POWER queries whether the system or a device can enter a particular power state. </P>

<P>A driver must not change the power state of its device in response to an IRP_MN_QUERY_POWER request. </P>

<P>For each IRP_MN_QUERY_POWER request a driver receives, it must call <B>PoStartNextPowerIrp</B>, as described in <A HREF="pwrmgmt_7tt3.htm">Calling <B>PoStartNextPowerIrp</B></A>.</P>

<H4>IRP_MN_QUERY_POWER for a System Power State</H4>

<P>The Power Manager sends this IRP to ensure that it can change the system power state without disrupting work, such as dropping network connections. </P>

<P>Whenever possible, the Power Manager queries before sending IRP_MN_SET_POWER to request a system sleep state or a normal system shutdown. However, under some critical conditions (such as the user pressing the Power Off button or a battery expiring), the Power Manager might send an IRP_MN_SET_POWER request without first sending a query power request. The Power Manager queries only for sleep states; it never queries before returning to the working state.</P>

<P>When a driver receives a system power query IRP, it should fail the IRP if it cannot support any of the device states that are valid for the queried system state. For more information, see <A HREF="pwrmgmt_1o2v.htm"><B>DeviceState</B></A>. Otherwise, the driver should pass the IRP to the next lower driver. The bus driver completes the IRP.</P>

<P>When a device power policy owner receives a system power query IRP, it should set an <I>IoCompletion</I> routine in the IRP before passing it down. In the <I>IoCompletion</I> routine, it should send an IRP_MN_QUERY_POWER for a device state that is valid for the queried system state. For more information, see <A HREF="pwrmgmt_8tyf.htm">Handling a System Query Power IRP in a Device Power Policy Owner</A>.</P>

<P>When the IRP specifies <B>PowerSystemShutdown</B> (S5), the value at <B>Parameters.Power.ShutdownType</B> provides a reason for the shutdown. The <B>ShutdownType</B> tells the driver whether the system is resetting (<B>PowerActionShutdownReset</B>) or powering off indefinitely to reboot later (<B>PowerActionShutdownOff</B>). For drivers of most devices, the difference is inconsequential. However, for certain devices, such as a video streaming device that performs DMA, a driver might opt to power down its device when the system is resetting, thus stopping any ongoing I/O. </P>

<P>On Microsoft® Windows®&nbsp;2000 and later systems, the value at <B>ShutdownType </B>can also be <B>PowerActionShutdown</B>. In this case, the driver cannot tell what type of shutdown is requested and should therefore proceed as for a reset. </P>

<P>If a driver fails an IRP_MN_QUERY_POWER request for a system power state, the Power Manager typically responds by issuing an IRP_MN_SET_POWER IRP. Usually, this IRP will reaffirm the current system state. However, it is possible that drivers might receive an IRP_MN_SET_POWER to the queried state or to some other intermediate state. Drivers should be prepared to handle these situations.</P>

<H4>IRP_MN_QUERY_POWER for a Device Power State</H4>

<P>A device power policy owner sends this IRP to its stack in response to a system IRP_MN_QUERY_POWER request. </P>

<P>If a driver can put its device in the requested device state, it sets <B>IoStatus.Status</B> to STATUS_SUCCESS and passes the IRP down to the next lower driver, and so forth until the IRP reaches the bus driver. If any driver in the stack must fail the IRP, that driver should complete the IRP immediately by calling <B>IoCompleteRequest</B> and returning a failure status. Drivers that fail the IRP do not pass it further down the stack.</P>

<P>By returning STATUS_SUCCESS, the driver guarantees that it will not start any operation that would change its ability to set the requested power state. The driver should queue any IRPs that require such operations until it completes a set-power IRP that returns the device to an acceptable power state.</P>

<P>On Windows&nbsp;2000 and later systems, when the IRP specifies <B>PowerDeviceD1</B>, <B>PowerDeviceD2</B>, or <B>PowerDeviceD3</B>, the value at <B>Parameters.Power.ShutdownType</B> provides information about the current system power IRP, if a system power IRP is active. In this case, the value at <B>ShutdownType</B> indicates the currently requested system power state, or <B>PowerActionNone</B> if a system request is not outstanding. On Windows 98/Me, this field always contains <B>PowerActionNone</B> when the IRP requests a device power state. </P>

<H4>See Also</H4>

<P><A HREF="poirp_6hde.htm">IRP_MN_SET_POWER</A>, <A HREF="portn_55gy.htm"><B>PoRequestPowerIrp</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP_MN_QUERY_POWER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
