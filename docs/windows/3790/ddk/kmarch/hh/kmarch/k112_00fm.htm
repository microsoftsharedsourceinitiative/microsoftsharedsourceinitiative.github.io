<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>POOL_TYPE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="POOL_TYPE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_pool_type_kr"></A>POOL_TYPE</H1>

<P>The POOL_TYPE enumeration type specifies the type of system memory to allocate. </P>

<PRE class=syntax>typedef enum _POOL_TYPE {
  NonPagedPool,
  PagedPool,
  NonPagedPoolMustSucceed,
  DontUseThisType,
  NonPagedPoolCacheAligned,
  PagedPoolCacheAligned,
  NonPagedPoolCacheAlignedMustS
} POOL_TYPE;</PRE>

<H4>Enumerators</H4>

<DL>
<DT><B>NonPagedPool</B></DT>

<DD><I>Nonpaged pool</I>, which is nonpageable system memory. Nonpaged pool can be accessed from any IRQL, but it is a scarce resource and drivers should allocate it only when necessary.

<P>The system can only allocate buffers larger than PAGE_SIZE from nonpaged pool in multiples of PAGE_SIZE. Requests for buffers larger than PAGE_SIZE, but not a PAGE_SIZE multiple, waste nonpageable memory.
</DD>

<DT><B>PagedPool</B></DT>

<DD><I>Paged pool</I>, which is pageable system memory. Paged pool can only be allocated and accessed at IRQL &lt; DISPATCH_LEVEL.</DD>

<DT><B>NonPagedPoolMustSucceed</B></DT>

<DD>This value is <I>for</I> <I>internal use only,</I> and is only allowed during system startup. Otherwise, drivers must not specify this value, because a "must succeed" request crashes the system if the requested memory size is unavailable.</DD>

<DT><B>NonPagedPoolCacheAligned</B></DT>

<DD>Nonpaged pool, aligned on processor cache boundaries. This value is <I>for internal use only</I>.</DD>

<DT><B>PagedPoolCacheAligned</B></DT>

<DD>Paged pool, aligned on processor cache boundaries. This value is <I>for internal use only</I>.</DD>

<DT><B>NonPagedPoolCacheAlignedMustS</B></DT>

<DD>This value is <I>for</I> <I>internal use only,</I> and is only allowed during system startup. It is the cache-aligned equivalent of <B>NonPagedPoolMustSucceed</B>. 
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P>When the system allocates a buffer from pool memory of PAGE_SIZE or greater, it aligns the buffer on a page boundary. Memory requests smaller than PAGE_SIZE are not necessarily aligned on page boundaries, but always fit within a single page, and are aligned on an 8-byte boundary.</P>

<H4>See Also</H4>

<P><A HREF="k102_2omq.htm"><B>ExAllocatePoolWithTag</B></A>, <A HREF="k102_8svm.htm"><B>ExAllocatePoolWithQuotaTag</B></A>, <A HREF="k102_9ir6.htm"><B>ExAllocatePoolWithTagPriority</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: POOL_TYPE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
