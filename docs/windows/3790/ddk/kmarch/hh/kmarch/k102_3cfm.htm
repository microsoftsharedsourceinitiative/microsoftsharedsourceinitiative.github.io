<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExAllocatePool</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ExAllocatePool">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_exallocatepool_kr"></A>ExAllocatePool</H1>

<P>The <B>ExAllocatePool</B> routine is <B>obsolete</B>, and is exported only for existing binaries. Use <A HREF="k102_2omq.htm"><B>ExAllocatePoolWithTag</B></A> instead.</P>

<P><B>ExAllocatePool</B> allocates pool memory of the specified type and returns a pointer to the allocated block. </P>

<PRE class=syntax><B>PVOID 
</B>  <B>ExAllocatePool(</B>
    <B>IN POOL_TYPE</B>  <I>PoolType</I><B>,</B>
    <B>IN SIZE_T</B>  <I>NumberOfBytes</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>PoolType</I></DT>

<DD>Specifies the type of pool memory to allocate. For a description of the available pool memory types, see <A HREF="k112_00fm.htm">POOL_TYPE</A>.</DD>

<DT><I>NumberOfBytes</I></DT>

<DD>Specifies the number of bytes to allocate.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>ExAllocatePool</B> returns NULL if there is insufficient memory in the free pool to satisfy the request. Otherwise the routine returns a pointer to the allocated memory.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>This routine is used for the general pool allocation of memory.</P>

<P>If the <I>NumberOfBytes</I> requested is PAGE_SIZE or greater, a page-aligned buffer is allocated. Memory allocations of PAGE_SIZE or less do not cross page boundaries. Memory allocations of less than PAGE_SIZE are not necessarily page-aligned but are aligned on an 8-byte boundary.</P>

<P>A successful allocation requesting <I>NumberOfBytes</I> &lt; PAGE_SIZE of nonpaged pool gives the caller exactly the number of requested bytes of memory. Any successful allocation that requests <I>NumberOfBytes</I> &gt; PAGE_SIZE wastes all unused bytes on the last-allocated page.</P>

<P>If <B>ExAllocatePool</B> returns NULL, the caller should return the NTSTATUS value STATUS_INSUFFICIENT_RESOURCES or should delay processing to another point in time.</P>

<P>Callers of <B>ExAllocatePool</B> must be executing at IRQL&nbsp;&lt;= DISPATCH_LEVEL. A caller executing at DISPATCH_LEVEL must specify a <B>NonPaged</B><I>Xxx</I> value for <I>PoolType</I>. A caller executing at IRQL&nbsp;&lt; DISPATCH_LEVEL can specify any POOL_TYPE value.</P>

<H4>See Also</H4>

<P><A HREF="k102_2omq.htm"><B>ExAllocatePoolWithTag</B></A>, <A HREF="k102_6uuq.htm"><B>ExFreePool</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ExAllocatePool"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
