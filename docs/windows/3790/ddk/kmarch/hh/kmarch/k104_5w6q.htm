<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoSetCompletionRoutine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoSetCompletionRoutine">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iosetcompletionroutine_kr"></A>IoSetCompletionRoutine</H1>

<P>The <B>IoSetCompletionRoutine</B> routine registers an <A HREF="drvrrtns_4rsi.htm"><I>IoCompletion</I></A> routine to be called when the next-lower-level driver has completed the requested operation for the given IRP.</P>

<PRE class=syntax><B>VOID 
</B>  <B>IoSetCompletionRoutine(</B>
<B>    IN PIRP</B>  <I>Irp</I><B>,</B>
<B>    IN PIO_COMPLETION_ROUTINE</B>  <I>CompletionRoutine</I><B>,</B>
<B>    IN PVOID</B>  <I>Context</I><B>,</B>
<B>    IN BOOLEAN    </B><I>InvokeOnSuccess</I><B>,</B>
<B>    IN BOOLEAN</B>  <I>InvokeOnError</I><B>,</B>
<B>    IN BOOLEAN</B>  <I>InvokeOnCancel</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Irp</I></DT>

<DD>Pointer to the IRP that the driver wants to track.</DD>

<DT><I>CompletionRoutine</I></DT>

<DD>Specifies the entry point for the driver-supplied <A HREF="drvrrtns_4rsi.htm"><I>IoCompletion</I></A> routine to be called when the next-lower driver completes the packet.</DD>

<DT><I>Context</I></DT>

<DD>Pointer to a driver-determined context to pass to the <A HREF="drvrrtns_4rsi.htm"><I>IoCompletion</I></A> routine.</DD>

<DT><I>InvokeOnSuccess</I></DT>

<DD>Specifies whether the completion routine is called if the IRP is completed with a success status value in the IRP's <A HREF="k112_08qa.htm">IO_STATUS_BLOCK</A> structure, based on results of the NT_SUCCESS macro (defined in <I>ntdef.h</I>).</DD>

<DT><I>InvokeOnError</I></DT>

<DD>Specifies whether the completion routine is called if the IRP is completed with a nonsuccess status value in the IRP's IO_STATUS_BLOCK structure.</DD>

<DT><I>InvokeOnCancel</I></DT>

<DD>Specifies whether the completion routine is called if a driver or the kernel has called <A HREF="k104_1j8y.htm"><B>IoCancelIrp</B></A> to cancel the IRP.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>This routine sets the transfer address of the <A HREF="drvrrtns_4rsi.htm"><I>IoCompletion</I></A> routine in the given IRP. The lowest-level driver in a chain of layered drivers cannot call this routine.</P>

<P><B>IoSetCompletionRoutine</B> registers the specified routine to be called when the next-lower-level driver has completed the requested operation in any or all of the following ways:

<UL>
	<LI>With a success status value</LI>

	<LI>With a nonsuccess status value</LI>

	<LI>By canceling the IRP</LI>
</UL>

<P>Usually, the I/O status block is set by the underlying device driver. It is read but not altered by any higher-level drivers’ <I>IoCompletion</I> routines.</P>

<P>Higher-level drivers that allocate IRP’s with <B>IoAllocateIrp</B> or <B>IoBuildAsynchronousFsdRequest</B> must call this routine with all <I>InvokeOnXxx</I> parameters set to TRUE before passing the driver-allocated IRP to <B>IoCallDriver</B>. When the <I>IoCompletion</I> routine is called with such an IRP, it must free the driver-allocated IRP and any other resources that the driver set up for the request, such as MDLs with <B>IoBuildPartialMdl</B>. Such a driver should return STATUS_MORE_PROCESSING_REQUIRED when it calls <B>IoFreeIrp</B> to forstall the I/O Manager’s completion processing for the driver-allocated IRP.</P>

<P>Non-PnP drivers that might be unloaded before their <I>IoCompletion</I> routines execute should use <A HREF="k104_17zm.htm"><B>IoSetCompletionRoutineEx</B></A> instead.</P>

<P>Callers of <B>IoSetCompletionRoutine</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k112_49bm.htm">IO_STACK_LOCATION</A>, <A HREF="k104_42pe.htm"><B>IoAllocateIrp</B></A>, <A HREF="k104_4gqa.htm"><B>IoBuildAsynchronousFsdRequest</B></A>, <A HREF="k112_3z5e.htm">IRP</A>, <A HREF="k104_96eq.htm"><B>IoBuildPartialMdl</B></A>, <A HREF="k104_82wj.htm"><B>IoFreeIrp</B></A>, <A HREF="#ddk_iosetcompletionroutine_kr"><B>IoSetCompletionRoutine</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoSetCompletionRoutine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
