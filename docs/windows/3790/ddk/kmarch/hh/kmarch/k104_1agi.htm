<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoCallDriver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoCallDriver">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_object_kg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iocalldriver_kr"></A>IoCallDriver</H1>

<P>The <B>IoCallDriver</B> routine sends an IRP to the driver associated with a specified device object.</P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>IoCallDriver(</B>
<B>    IN PDEVICE_OBJECT</B>  <I>DeviceObject</I><B>,</B>
<B>    IN OUT PIRP</B>  <I>Irp</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceObject</I></DT>

<DD>Pointer to a <A HREF="JavaScript:hhobj_1.Click()">device object</A>, representing the target device for the requested I/O operation.</DD>

<DT><I>Irp</I></DT>

<DD>Pointer to the <A HREF="k112_3z5e.htm">IRP</A>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoCallDriver</B> returns the NTSTATUS value that a lower driver set in the <A HREF="irps_0ofb.htm">I/O status block</A> for the given request, or STATUS_PENDING if the request was queued for additional processing.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>Before a calling <B>IoCallDriver</B>, the calling driver must set up the I/O stack location in the IRP for the target driver. For more information, see <A HREF="irps_1oh3.htm">Passing IRPs Down the Driver Stack</A>.</P>

<P><B>IoCallDriver</B> assigns the <I>DeviceObject</I> input parameter to the <I>DeviceObject</I> member of the <A HREF="k112_49bm.htm">IO_STACK_LOCATION</A> structure for the driver being called.</P>

<P>An IRP passed in a call to <B>IoCallDriver</B> becomes inaccessible to the higher-level driver, unless the higher-level driver has called <A HREF="k104_5w6q.htm"><B>IoSetCompletionRoutine</B></A> to set up an <A HREF="drvrrtns_4rsi.htm"><I>IoCompletion</I></A> routine for the IRP. If it has, the IRP input to the <I>IoCompletion</I> routine has its I/O status block set by the lower drivers, and all lower-level drivers’ I/O stack locations are filled with zeros.</P>

<P>Drivers must not use <B>IoCallDriver</B> to pass power IRPs (<A HREF="k113_7jjm.htm">IRP_MJ_POWER</A>). Use <A HREF="portn_7tki.htm"><B>PoCallDriver</B></A> instead. </P>

<P>Callers of <B>IoCallDriver</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_42pe.htm"><B>IoAllocateIrp</B></A>, <A HREF="k104_4gqa.htm"><B>IoBuildAsynchronousFsdRequest</B></A>, <A HREF="k104_8ble.htm"><B>IoBuildDeviceIoControlRequest</B></A>, <A HREF="k104_61pu.htm"><B>IoBuildSynchronousFsdRequest</B></A>, <A HREF="k104_5w6q.htm"><B>IoSetCompletionRoutine</B></A>, <A HREF="portn_7tki.htm"><B>PoCallDriver</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoCallDriver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
