<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Extended Example: Using IoIs32bitProcess</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Extended Example: Using IoIs32bitProcess">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_extended_example_using_iois32bitprocess_kg"></A>Extended Example: Using IoIs32bitProcess</H3>

<P>The following example shows how to modify a 32-bit driver for 64-bit by adding a call to <A HREF="k104_8zea.htm"><B>IoIs32bitProcess</B></A>. Note that this example shows only the portions of the driver code that need to be modified. </P>

<H4>Original Driver Code</H4>

<PRE>typedef struct _TESTDRV_EVENT_BUFFER {
     HANDLE Handle;
     ULONG Key;
} TESTDRV_EVENT_BUFFER, *PTESTDRV_EVENT_BUFFER;

NTSTATUS
TestdrvFsControl (
    IN PTESTDRV_DEVICE_OBJECT TestdrvDeviceObject,
    IN PIRP Irp
    )
{
.
.
    InputBufferLength = 
        IrpSp-&gt;Parameters.FileSystemControl.InputBufferLength;
    

    if (InputBufferLength &lt; sizeof(TESTDRV_EVENT_BUFFER)) {

        DebugTrace(0, Dbg, "System buffer size is too small\n", 0);

        FsRtlCompleteRequest( Irp, STATUS_INVALID_PARAMETER );
        return STATUS_INVALID_PARAMETER;
    }

    Buffer = Irp-&gt;AssociatedIrp.SystemBuffer;
    
    // start using the event buffer
.
.
.
}</PRE>

<H4>Driver Code With Thunking Support</H4>

<PRE>typedef struct _TESTDRV_EVENT_BUFFER {
     HANDLE Handle;
     ULONG Key;
} TESTDRV_EVENT_BUFFER, *PTESTDRV_EVENT_BUFFER;

<span style="color:#ff0000"><B>//
// Define a 32-bit thunking structure 
//

#if defined(_WIN64)
typedef struct _TESTDRV_EVENT_BUFFER32 {
     UINT32 Handle;
     ULONG Key;
} TESTDRV_EVENT_BUFFER32, *PTESTDRV_EVENT_BUFFER32;
#endif

//
// Intercept the input buffer as a 32-bit structure and thunk it to 
//    64-bit</B></span>    
NTSTATUS
TestdrvFsControl (
    IN PTESTDRV_DEVICE_OBJECT TestdrvDeviceObject,
    IN PIRP Irp
    )
{
    TESTDRV_EVENT_BUFFER LocalBuffer;
.
.
    InputBufferLength  =                             
             IrpSp-&gt;Parameters.FileSystemControl.InputBufferLength;
    
<span style="color:#ff0000"><B>#if defined(_WIN64)
    if (IoIs32bitProcess(Irp)) {
        PTESTDRV_EVENT_BUFFER32 Buffer32;

        if (InputBufferLength &lt; sizeof(TESTDRV_EVENT_BUFFER32)) {
            DebugTrace(0, Dbg, "Irp32 : System buffer size is too
                        small\n", 0);

            FsRtlCompleteRequest( Irp, STATUS_INVALID_PARAMETER );
            return STATUS_INVALID_PARAMETER;
</B>        <B>}</B>
<B>        Buffer = &amp;LocalBuffer;</B>
<B>        Buffer32 = Irp-&gt;AssociatedIrp.SystemBuffer;</B>
<B>        Buffer-&gt;Handle = (HANDLE)Buffer32-&gt;Handle;</B>
<B>        Buffer-&gt;Key = Buffer32-&gt;Key;</B>
<B>    }</B>
<B>    else {</B>
<B>#endif</B></span>    
    if (InputBufferLength &lt; sizeof(TESTDRV_EVENT_BUFFER)) {

        DebugTrace(0, Dbg, "System buffer size is too small\n", 0);

        FsRtlCompleteRequest( Irp, STATUS_INVALID_PARAMETER );
        return STATUS_INVALID_PARAMETER;
    }

    Buffer = Irp-&gt;AssociatedIrp.SystemBuffer;
<span style="color:#ff0000"><B>#if defined(_WIN64)
    }
#endif</B></span>    
    
    // start using the Event Buffer
.
.
.</PRE>

<P>}</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Extended%20Example:%20Using%20IoIs32bitProcess"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
