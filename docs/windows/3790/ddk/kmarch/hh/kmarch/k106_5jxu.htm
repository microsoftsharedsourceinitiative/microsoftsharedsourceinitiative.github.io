<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MmUnlockPagableImageSection</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MmUnlockPagableImageSection">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_mmunlockpagableimagesection_kr"></A>MmUnlockPagableImageSection</H1>

<P>The <B>MmUnlockPagableImageSection</B> routine releases a section of driver code or driver data, previously locked into system space with <B>MmLockPagableCodeSection</B>, <B>MmLockPagableDataSection</B> or <B>MmLockPagableSectionByHandle</B>, so the section can be paged out again.</P>

<PRE class=syntax><B>VOID 
</B>  <B>MmUnlockPagableImageSection(</B>
<B>    IN PVOID</B>  <I>ImageSectionHandle</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ImageSectionHandle</I></DT>

<DD>Specifies the handle returned by a call to <A HREF="k106_2dde.htm"><B>MmLockPagableCodeSection</B></A> or <A HREF="k106_6xbm.htm"><B>MmLockPagableDataSection</B></A>.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P>The handle for a driver’s pageable section must not be released if the driver has any outstanding IRPs in its device queue(s) or internal queue(s). A call to <B>MmUnlockPagableImageSection</B> restores the pageability of that entire section when there are no more references to the handle for that section. </P>

<P>The memory manager maintains the reference count on the handle to a section. A pageable section is only available to be paged out when the reference count is zero. Every lock request increments the count; every unlock request decrements the count. A driver must unlock a section as many times as it locks a section to make the section available to be paged out.</P>

<P>A handle is always valid, no matter what the count. If the count on a handle is zero and a call is made to <B>MmLockPagableSectionByHandle</B>, the count is set to one, and if the section has been paged out, it will be paged in.</P>

<P>In most cases, <B>MmUnlockPagableImageSection</B> is called before a driver’s Unload routine. That is, a driver with a pageable section is likely to have its DispatchClose and/or DispatchShutdown routine call <B>MmUnlockPagableImageSection</B> before its Unload routine is called. However, care should be taken in unloadable drivers to release any pageable section before the driver itself is unloaded from the system.</P>

<P>For more information on paging code and data, see <A HREF="memmgmt_6i07.htm">Making Drivers Pageable</A>.</P>

<P>Callers of <B>MmUnlockPagableImageSection</B> must be running at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k106_7os2.htm"><B>MmPageEntireDriver</B></A>,<A HREF="k106_70s2.htm"> <B>MmResetDriverPaging</B></A>,<A HREF="k106_2dde.htm"> <B>MmLockPagableCodeSection</B></A>, <A HREF="k106_6xbm.htm"><B>MmLockPagableDataSection</B></A>, <A HREF="k106_5vea.htm"><B>MmLockPagableSectionByHandle</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MmUnlockPagableImageSection"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
