<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>InterruptService</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="InterruptService">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_interruptservice_kr"></A><I>InterruptService</I></H1>

<P>The <I>InterruptService</I> routine quickly services a device interrupt and schedules post-interrupt processing of received data, if necessary.</P>

<PRE class=syntax><B>BOOLEAN
</B><I>InterruptService</I><B>(</B>
<B>    IN struct _KINTERRUPT  *</B><I>Interrupt</I><B>,</B>
<B>    IN PVOID  </B><I>ServiceContext</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Interrupt</I></DT>

<DD>Caller-supplied pointer to an interrupt object.</DD>

<DT><I>ServiceContext</I></DT>

<DD>Caller-supplied pointer to context information, specified in a previous call to <A HREF="k104_7h9u.htm"><B>IoConnectInterrupt</B></A>.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the routine determines that the interrupt did not come from one of the driver's devices, it must return FALSE. Otherwise, the routine must service the interrupt and return TRUE.</P>

<H4>Comments</H4>

<P>To register an ISR for a specific interrupt vector and processor affinity, a driver must call <A HREF="k104_7h9u.htm"><B>IoConnectInterrupt</B></A>.</P>

<P>A driver's <I>InterruptService</I> routine (ISR) executes in an interrupt context, at some system-assigned <A HREF="intrupts_0kh3.htm#ddk_dirql_kg">DIRQL</A>, as specified by the <I>SynchronizeIrql</I> parameter to <B>IoConnectInterrupt</B>. (Other devices, with higher DIRQL values, can interrupt the ISR.)</P>

<P>Before the system calls an ISR, it acquires the interrupt's spin lock (the <I>SpinLock</I> parameter to <B>IoConnectInterrupt</B>), so the ISR cannot simultaneously execute on another processor. After the ISR returns, the system releases the spin lock.</P>

<P>An ISR must first determine if the interrupt came from one of the driver's devices, by examining context information supplied by <I>Context</I>. If the interrupt is not from one of the driver's devices, the routine must immediately return FALSE so the I/O Manager can call other drivers that have registered ISRs for the same processor and interrupt vector.</P>

<P>For more information about implementing ISRs, see <A HREF="intrupts_8yw7.htm">Interrupt Objects and ISRs</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: InterruptService"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
