<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Introduction to Standard Driver Routines</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Introduction to Standard Driver Routines">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_stack_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_introduction_to_standard_driver_routines_kg"></A>Introduction to Standard Driver Routines</H1>

<P>Each kernel-mode driver is constructed around a set of system-defined, <A HREF="drvrrtns_99rm.htm">standard driver routines</A>. Kernel-mode drivers process <I>I/O request packets</I> (IRPs) within these standard routines by calling system-supplied driver support routines. </P>

<P>All drivers, regardless of their level in a chain of attached drivers, must have a basic set of standard routines in order to process IRPs. Whether a driver must implement additional standard routines depends on whether the driver controls a physical device or is layered over a physical device driver, as well as on the nature of the underlying physical device. Lowest-level drivers that control physical devices have more required routines than higher-level drivers, which typically pass IRPs to a lower driver for processing. </P>

<P>Standard driver routines can be divided into two groups: those that each kernel-mode driver must have, and those that are optional, depending on the driver type and location in the <A HREF="JavaScript:hhobj_1.Click()">device stack</A>.</P>

<P>This section describes required standard routines. Other sections describe the optional routines.</P>

<P>Following are two tables. The first table lists required standard routines. The second lists most of the optional routines.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left colspan=2 width=100%>Required Standard Driver Routines</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%> <B>DriverEntry</B></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose:</I> Initializes the driver and its driver object.
<P><I>Where Described:</I> <A HREF="drvcomps_8c6f.htm">Writing a <B>DriverEntry</B> Routine</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>AddDevice</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose</I>: Initializes devices and creates device objects.
<P><I>Where Described:</I> <A HREF="drvcomps_2o13.htm">Writing an <I>AddDevice</I> Routine</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>Dispatch Routines</TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose:</I> Receive and process IRPs.
<P><I>Where Described:</I> <A HREF="drvcomps_11uv.htm">Writing Dispatch Routines</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>Unload</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose</I>: Release system resources acquired by the driver.
<P><I>Where Described: </I><A HREF="drvcomps_82av.htm">Writing an <I>Unload</I> Routine</A></P>
</TD>
</TR>
</TABLE><BR>

<TABLE>

<TR VALIGN="top">
<TH align=left colspan=2 width=100%>Optional Standard Driver Routines</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%> <I>Reinitialize</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose</I>: Completes driver initialization if <B>DriverEntry</B> cannot.
<P><I>Where Described: </I><A HREF="drvcomps_94br.htm">Writing a <I>Reinitialize</I> Routine</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>StartIo</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Starts an I/O operation on a physical device.
<P><I>Where Described: </I><A HREF="irps_6i07.htm">Writing a <I>StartIo</I> Routine</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>Interrupt Service Routine</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Saves the state of a device when it interrupts.
<P><I>Where Described: </I><A HREF="intrupts_4ron.htm">Writing an ISR</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>Deferred Procedure Calls</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Completes the processing of a device interrupt after an ISR saves the device state.
<P><I>Where Described: </I><A HREF="intrupts_4zhj.htm">DPC Objects and DPCs</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>SynchCritSection</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Synchronizes access to driver data.
<P><I>Where Described: </I><A HREF="intrupts_6g13.htm">Using Critical Sections</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>AdapterControl</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Initiates DMA operations.
<P><I>Where Described: </I><A HREF="iputoput_2wtj.htm">Adapter Objects and DMA</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>IoCompletion</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Completes a driver's processing of an IRP.
<P><I>Where Described: </I><A HREF="irps_6crr.htm">Completing IRPs</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>Cancel</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Cancels a driver's processing of an IRP.
<P><I>Where Described: </I><A HREF="irps_6unb.htm">Canceling IRPs</A></P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><I>CustomTimerDpc, IoTimer</I></TD>
</TR>

<TR VALIGN="top">
<TD width=11%>&nbsp;</TD>
<TD width=89%><I>Purpose: </I>Timing and synchronizing events
<P><I>Where Described: </I><A HREF="synchro_2dgn.htm">Synchronization Techniques</A></P>
</TD>
</TR>
</TABLE><BR>

<P>The current IRP and target device object are input parameters to many standard routines. Every driver processes each IRP in stages through its set of standard routines.</P>

<P>By convention, the system-supplied drivers prepend an identifying, driver-specific or device-specific prefix to the name of every standard routine except <B>DriverEntry</B>. As an example, this documentation uses "DD", as shown in the figure of a <A HREF="drvcomps_6js7.htm#ddk__bmc_24drvobj.wmf__kg">Driver Object</A>. Following this convention makes it easier to debug and maintain drivers.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Introduction%20to%20Standard%20Driver%20Routines"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
