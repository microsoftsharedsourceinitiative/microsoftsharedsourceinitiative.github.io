<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExFreeToPagedLookasideList</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ExFreeToPagedLookasideList">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_exfreetopagedlookasidelist_kr"></A>ExFreeToPagedLookasideList</H1>

<P>The <B>ExFreeToPagedLookasideList</B> routine returns a pageable entry to the given lookaside list or to paged pool.</P>

<PRE class=syntax><B>VOID 
</B>  <B>ExFreeToPagedLookasideList(</B>
    <B>IN PPAGED_LOOKASIDE_LIST</B>  <I>Lookaside</I><B>,</B>
    <B>IN PVOID</B>  <I>Entry</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Lookaside</I></DT>

<DD>Pointer to the resident head of the lookaside list, which the caller already initialized with <A HREF="k102_4pma.htm"><B>ExInitializePagedLookasideList</B></A>. </DD>

<DT><I>Entry</I></DT>

<DD>Pointer to the entry to be freed. The caller obtained this pointer from a preceding call to <A HREF="k102_77w2.htm"><B>ExAllocateFromPagedLookasideList</B></A>. 
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P><B>ExFreeToPagedLookasideList</B> is the reciprocal of <B>ExAllocateFromPagedLookasideList</B>. It releases a caller-allocated entry back to the caller's lookaside list or to paged pool when that entry is no longer in use. </P>

<P>The same entry can be reallocated or another entry can be allocated later with a subsequent call to <B>ExAllocateFromPagedLookasideList</B>. The user of a lookaside list can allocate and free such entries dynamically, as needed, until it calls <B>ExDeletePagedLookasideList</B>. <B>ExDeletePagedLookasideList</B> releases any outstanding entries in the list before it clears the system state for the given lookaside list and returns control.</P>

<P>If the specified lookaside list has not yet reached the system-determined maximum number of entries, <B>ExFreeToPagedLookasideList</B> inserts the given entry at the front of the list. Otherwise, the buffer at <I>Entry</I> is released back to paged pool using the caller-supplied <I>Free</I> routine, if any, that was set up when the lookaside list was initialized or <B>ExFreePool</B>.</P>

<P>Callers of <B>ExFreeToPagedLookasideList</B> must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k102_77w2.htm"><B>ExAllocateFromPagedLookasideList</B></A>, <A HREF="k102_63zm.htm"><B>ExDeletePagedLookasideList</B></A>, <A HREF="k102_4pma.htm"><B>ExInitializePagedLookasideList</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ExFreeToPagedLookasideList"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
