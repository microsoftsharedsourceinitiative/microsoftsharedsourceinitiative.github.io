<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>RtlSecureZeroMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="RtlSecureZeroMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_rtlsecurezeromemory_kr"></A>RtlSecureZeroMemory</H1>

<P>The <B>RtlSecureZeroMemory</B> routine fills a block of memory with zeros in a guaranteed manner.</P>

<PRE class=syntax><B>VOID 
</B>  <B>RtlSecureZeroMemory(</B>
<B>    IN PVOID</B>  <I>ptr</I><B>,</B>
<B>    IN SIZE_T</B>  <I>cnt</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ptr</I></DT>

<DD>Pointer to the memory buffer to be filled with zeros.</DD>

<DT><I>cnt</I></DT>

<DD>Specifies the number of bytes to be filled with zeroes.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h</I>. Include <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>This routine is available on Windows Server 2003 and later. (Because the routine is declared inline, the body of the routine can be included in earlier versions of the operating system.)</P>

<P>The effect of <B>RtlSecureZeroMemory</B> is identical to that of <A HREF="k109_4nci.htm"><B>RtlZeroMemory</B></A>, except that it is guaranteed to zero the memory location, even if it is not subsequently written to. (The compiler can optimize away a call to <B>RtlZeroMemory</B>, if it determines that the caller does not access that memory range again.)</P>

<P>Use <B>RtlSecureZeroMemory</B> to guarantee that sensitive information has been zeroed out. For example, suppose that a function uses a local array variable to store password information. Once the function exits, the password information can remain in the same memory location unless zeroed out by <B>RtlSecureZeroMemory</B>. </P>

<P><B>RtlSecureZeroMemory</B> is slower than <B>RtlZeroMemory</B>; therefore, if security is not an issue, use <B>RtlZeroMemory</B> instead.</P>

<P>Callers of <B>RtlSecureZeroMemory</B> can be running at any IRQL if the <I>ptr</I> block is in nonpaged pool. Otherwise, the caller must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k109_93g2.htm"><B>RtlFillMemory</B></A>, <A HREF="k109_4nci.htm"><B>RtlZeroMemory</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: RtlSecureZeroMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
