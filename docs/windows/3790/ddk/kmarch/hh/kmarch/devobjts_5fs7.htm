<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>When are WDM Device Objects Created?</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="When are WDM Device Objects Created?">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_when_are_wdm_device_objects_created_kg"></A>When Are WDM Device Objects Created?</H2>

<P>This section describes each kind of device object and mentions when each is created.</P>

<P>The following figure shows the possible kinds of device objects that can be attached in a device stack, representing the drivers handling I/O requests for a device.</P>

<P><IMG SRC="images/objlyr.gif" ALT="" BORDER=0></P>

<P><B>Possible Device Object Layers for a Device</B></P>

<P>Starting at the bottom of this figure:

<UL>
	<LI>A bus driver creates a PDO for each device that it enumerates on its bus. 
<P>A bus driver creates a PDO for a child device when it enumerates the device. A bus driver enumerates a device in response to an <A HREF="pnp-irps_5aia.htm">IRP_MN_QUERY_DEVICE_RELATIONS</A> request for <B>BusRelations</B> from the PnP Manager. The bus driver creates a PDO for a child device if the device has been added to the bus since the last time the bus driver responded to a query-relations request for <B>BusRelations</B> (or if this is the first query-relations request since the machine was booted). 

<P>A PDO represents the device to the bus driver, as well as to other kernel-mode system components such as the Power Manager, the PnP Manager, and the I/O Manager. 

<P>Other drivers for a device attach device objects on top of the PDO, but the PDO is always at the bottom of the device stack.
</LI>

	<LI>Optional bus filter drivers create filter DOs for each device they filter. 
<P>When the PnP Manager detects a new device in a <B>BusRelations</B> list, it determines whether there are any bus filter drivers for the device. If so, for each such driver the PnP Manager ensures it is loaded (calls <B>DriverEntry</B> if necessary) and calls the driver's <A HREF="drvrrtns_4d6a.htm"><I>AddDevice</I></A> routine. If the bus filter driver filters operations for this device, the filter driver creates a device object and attaches it to the device stack in its <I>AddDevice</I> routine. If more than one bus filter driver exists and is relevant to this device, each such filter driver creates and attaches its own device object.
</LI>

	<LI>Optional, lower-level filter drivers create filter DOs for each device they filter. 
<P>If an optional, lower-level filter driver exists for this device, the PnP Manager ensures that such a driver is loaded after the bus driver and any bus filter drivers. The PnP Manager calls the filter driver's <I>AddDevice</I> routine. In its <I>AddDevice</I> routine, the lower-level filter driver creates a filter DO for the device and attaches it to the device stack. If more than one lower-level filter driver exists, each such driver would create and attach its own filter DO.
</LI>

	<LI>The function driver creates an FDO for the device. 
<P>The PnP Manager ensures that the function driver for the device is loaded and calls the function driver's <I>AddDevice</I> routine. The function driver creates an FDO and attaches it to the device stack. 
</LI>

	<LI>Optional, upper-level filter drivers create a filter DO for each device they filter. 
<P>If any optional, upper-level filter drivers exist for the device, the PnP Manager ensures they are loaded after the function driver and calls their <I>AddDevice</I> routines. Each such filter driver attaches its device object to the device stack.
</LI>
</UL>

<P>In summary, the device stack contains a device object for each driver that is involved in handling I/O to a particular device. The parent bus driver has a PDO, the function driver has an FDO, and each optional filter driver has a filter DO. </P>

<P>Note that all devices, bus adapter/controller devices and nonbus devices, have a PDO and an FDO in their device stack. The PDO for a bus adapter/controller is created by the bus driver for the parent bus. For example, if a SCSI adapter plugs into a PCI bus, the PCI bus driver creates a PDO for the SCSI adapter. </P>

<P>If a device is being used in raw mode, there are no function or filter drivers (no FDO or filter DOs). There is just a PDO for the parent bus driver and zero or more bus filter DOs. </P>

<P>See <A HREF="devobjts_3y93.htm">Creating a Device Object</A> for information about which driver routines are responsible for creating and attaching device objects.</P>

<P>The device stack plus some additional information constitutes the <I>devnode</I> for a device. The PnP Manager maintains information in a device's devnode such as whether the device has been started and which drivers, if any, have registered for notification of changes on the device. The kernel debugger command <B>!devnode</B> displays information about a devnode.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: When%20are%20WDM%20Device%20Objects%20Created%3F"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
