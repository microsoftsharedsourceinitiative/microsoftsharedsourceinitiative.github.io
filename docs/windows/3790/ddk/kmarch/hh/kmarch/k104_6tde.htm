<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoAcquireRemoveLock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoAcquireRemoveLock">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioacquireremovelock_kr"></A>IoAcquireRemoveLock</H1>

<P>The <B>IoAcquireRemoveLock</B> routine increments the count for a remove lock, indicating that the associated device object should not be detached from the device stack or deleted.</P>

<PRE class=syntax><B>NTSTATUS
</B>  <B>IoAcquireRemoveLock(</B>
    <B>IN PIO_REMOVE_LOCK</B>  <I>RemoveLock</I><B>,</B>
    <B>IN OPTIONAL PVOID</B>  <I>Tag</I> 
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>RemoveLock</I></DT>

<DD>Pointer to an IO_REMOVE_LOCK structure that the caller initialized with a previous call to <A HREF="k104_814i.htm"><B>IoInitializeRemoveLock</B></A>. </DD>

<DT><I>Tag</I></DT>

<DD>Optionally points to a caller-supplied tag that identifies this instance of acquiring the remove lock. For example, a driver Dispatch routine typically sets this parameter to a pointer to the IRP the routine is processing.

<P>If a driver specifies a <I>Tag</I> on a call to <B>IoAcquireRemoveLock</B>, the driver must supply the same <I>Tag</I> in the corresponding call to <A HREF="k104_8n5e.htm"><B>IoReleaseRemoveLock</B></A>.


<P>The <I>Tag</I> does not have to be unique, but should be something meaningful during debugging. 


<P>The I/O system uses this parameter on checked builds only.

</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoAcquireRemoveLock</B> returns STATUS_SUCCESS if the call was successful. One possible error return value is the following:

<DL>
<DT>STATUS_DELETE_PENDING</DT>

<DD>The driver has received an <A HREF="pnp-irps_4noy.htm">IRP_MN_REMOVE_DEVICE</A> for the device and has called <A HREF="k104_5zg2.htm"><B>IoReleaseRemoveLockandWait</B></A>. That routine is waiting for all remove locks to clear before returning control to the driver. 
</DD>
</DL>

<P>If the routine returns any value besides STATUS_SUCCESS, do not start any new operations on the device.</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h. </I>Include <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>A driver must initialize a remove lock with a call to <A HREF="k104_814i.htm"><B>IoInitializeRemoveLock</B></A> before using the lock.</P>

<P>A driver must call <A HREF="k104_8n5e.htm"><B>IoReleaseRemoveLock</B></A> to release the lock when it is no longer needed. </P>

<P>Callers of <B>IoAcquireRemoveLock</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<P>For more information, see <A HREF="plugplay_80iv.htm">Using Remove Locks</A>.</P>

<P></P>

<H4>See Also</H4>

<P><A HREF="k104_814i.htm"><B>IoInitializeRemoveLock</B></A>, <A HREF="k104_8n5e.htm"><B>IoReleaseRemoveLock</B></A>, <A HREF="k104_5zg2.htm"><B>IoReleaseRemoveLockAndWait</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoAcquireRemoveLock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
