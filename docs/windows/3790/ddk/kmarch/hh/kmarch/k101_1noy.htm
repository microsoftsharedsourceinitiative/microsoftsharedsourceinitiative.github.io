<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DMA</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DMA">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_dma_kr"></A>DMA</H1>

<DL>
<DT><A HREF="k104_93g2.htm"><B>IoGetDmaAdapter</B></A> </DT>

<DD>Returns a pointer to an adapter object that represents either the DMA channel to which the driver's device is connected or the driver's bus-master adapter. Also returns the maximum number of map registers the driver can specify for each DMA transfer.</DD>

<DT><A HREF="k106_5nhu.htm"><B>MmGetMdlVirtualAddress</B></A> </DT>

<DD>Returns the base virtual address of a buffer described by a given MDL. The returned address, used as an index to a physical address entry in the MDL, can be input to <A HREF="kdma_1hv6.htm"><B>MapTransfer</B></A>.</DD>

<DT><A HREF="k106_0nqq.htm"><B>MmGetSystemAddressForMdlSafe</B></A></DT>

<DD>Returns a nonpaged system-space virtual address for the base of the memory area described by an MDL. It maps the physical pages described by the MDL into system space, if they are not already mapped to system space. </DD>

<DT><A HREF="k106_8ofm.htm"><B>ADDRESS_AND_SIZE_TO_SPAN_PAGES</B></A> </DT>

<DD>Returns the number of pages spanned by the virtual range defined by a virtual address and a length in bytes. A driver can use this macro to determine whether a transfer request must be split into partial transfers.</DD>

<DT><A HREF="kdma_92r6.htm"><B>AllocateAdapterChannel</B></A> </DT>

<DD>Reserves exclusive access to a DMA channel and map registers for a device. When the channel and registers are available, this routine calls a driver-supplied <A HREF="drvrrtns_7vea.htm"><I>AdapterControl</I></A> routine to carry out an I/O operation through either the system DMA controller or a bus-master adapter.</DD>

<DT><A HREF="kdma_6otu.htm"><B>AllocateCommonBuffer</B></A> </DT>

<DD>Allocates and maps a logically contiguous region of memory that is simultaneously accessible from both the processor and a device. This routine returns TRUE if the requested length was allocated.</DD>

<DT><A HREF="kdma_97w2.htm"><B>BuildMdlFromScatterGatherList</B></A> </DT>

<DD>Builds an MDL corresponding to a scatter/gather list.</DD>

<DT><A HREF="kdma_41te.htm"><B>BuildScatterGatherList</B></A> </DT>

<DD>Prepares the system for scatter/gather DMA for a device and calls a driver-supplied routine to carry out the I/O operation. This function provides the same functionality as <B>GetScatterGatherList</B>, except it uses a driver-supplied buffer to hold the scatter/gather list.</DD>

<DT><A HREF="kdma_3cxe.htm"><B>CalculateScatterGatherList</B></A> </DT>

<DD>Computes the buffer size needed to hold a scatter/gather list for a memory buffer.</DD>

<DT><A HREF="kdma_9cxe.htm"><B>FlushAdapterBuffers</B></A> </DT>

<DD>Forces any data remaining in either a bus-master adapter's or the system DMA controller's internal buffers to be written into memory or to the device.</DD>

<DT><A HREF="kdma_3bua.htm"><B>FreeAdapterChannel</B></A> </DT>

<DD>Releases an adapter object that represents a system DMA channel, and optionally releases any allocated map registers.</DD>

<DT><A HREF="kdma_8h0y.htm"><B>FreeCommonBuffer</B></A> </DT>

<DD>Releases and unmaps a previously allocated common buffer. Arguments must match those passed in an earlier call to <B>AllocateCommonBuffer</B>.</DD>

<DT><A HREF="kdma_5rqq.htm"><B>FreeMapRegisters</B></A> </DT>

<DD>Releases a set of map registers that were saved from a call to <B>AllocateAdapterChannel</B>. A driver calls this routine after using the registers in one or more calls to <B>MapTransfer</B>, flushing the cache by calling <B>FlushAdapterBuffers</B>, and completing the bus-master DMA transfer.</DD>

<DT><A HREF="kdma_186q.htm"><B>GetDmaAlignment</B></A> </DT>

<DD>Returns the buffer alignment requirements for a DMA controller or device.</DD>

<DT><A HREF="kdma_0pbm.htm"><B>GetScatterGatherList</B></A></DT>

<DD>Prepares the system for scatter/gather DMA for a device and calls a driver-supplied routine to carry out the I/O operation. For devices that support scatter/gather DMA, this routine combines the functionality of <B>AllocateAdapterChannel</B> and <B>MapTransfer</B>.</DD>

<DT><A HREF="k105_6asy.htm"><B>KeFlushIoBuffers</B></A> </DT>

<DD>Flushes the memory region described by an MDL from all processors' caches into memory.</DD>

<DT><A HREF="kdma_1hv6.htm"><B>MapTransfer</B></A> </DT>

<DD>Sets up map registers for an adapter object previously allocated by <B>AllocateAdapterChannel</B> to map a transfer from a locked-down buffer. Returns the logical address of the mapped region and, for bus-master devices that support scatter/gather, the number of bytes mapped.</DD>

<DT><A HREF="kdma_3l4i.htm"><B>PutDmaAdapter</B></A></DT>

<DD>Frees an adapter object previously allocated by <B>IoGetDmaAdapter</B>.</DD>

<DT><A HREF="kdma_5u42.htm"><B>PutScatterGatherList</B></A></DT>

<DD>Frees map registers and scatter/gather list previously allocated by <B>GetScatterGatherList</B>. </DD>

<DT><A HREF="kdma_0muq.htm"><B>ReadDmaCounter</B></A> </DT>

<DD>Returns the number of bytes yet to be transferred during the current system DMA operation (in autoinitialize mode).
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DMA"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
