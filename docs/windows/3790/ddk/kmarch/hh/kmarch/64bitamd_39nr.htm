<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Parameter Passing</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_parameter_passing_kg"></A>Parameter Passing</H4>

<P>The caller passes the first four integer arguments in registers. Integer values are passed (in order left to right) in RCX, RDX, R8, and R9 registers. The caller passes arguments five and above onto the stack. All arguments are right-justified in the register in which they are passed. This is done so the callee can refrain from processing the upper bits of the register if required and can access only the portion of the register that is necessary. </P>

<P>The caller passes floating-point and double-precision arguments in XMM0 – XMM3 (up to four) registers with the integer slot (RCX, RDX, R8, and R9) that would typically be used for that cardinal slot being ignored (see example) and vice versa.</P>

<P>The caller never passes __m128 and __m64 types, arrays, and strings by immediate value, but rather passes a pointer to memory allocated by the caller. The caller passes structures and unions of size 8, 16, 32, or 64 bits and __m64 as if they were integers of the same size. The caller passes structures and unions other than these sizes as a pointer to memory allocated by the caller. For these aggregate types that are passed as a pointer (including __m128 and __m64 types), the caller-allocated temporary memory is 16-byte aligned. </P>

<P>Intrinsic functions that do not allocate stack space and do not call other functions can use other volatile registers to pass additional register arguments, because there is a tight binding between the compiler and the intrinsic function implementation. This is a further opportunity for improving performance.</P>

<P>The callee must dump the register parameters into their shadow space if required. The following table summarizes how parameters are passed.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=46%>Parameter Type</TH>
<TH align=left width=54%>How Passed</TH>
</TR>

<TR VALIGN="top">
<TD width=46%>Floating point</TD>
<TD width=54%>First four parameters – XMM0 through XMM3. Others passed on stack.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>Integer</TD>
<TD width=54%>First four parameters – RCX, RDX, R8, R9. Others passed on stack.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>Aggregates (8, 16, 32, or 64 bits) and __m64</TD>
<TD width=54%>First four parameters – RCX, RDX, R8, R9. Others passed on stack.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>Aggregates (other)</TD>
<TD width=54%>By pointer. First four parameters passed as pointers in RCX, RDX, R8, and R9.</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>__m128</TD>
<TD width=54%>By pointer. First four parameters passed as pointers in RCX, RDX, R8, and R9.</TD>
</TR>
</TABLE><BR>

<P>The following examples show how the caller passes various parameters to the callee:</P>

<H4>Example of argument passing 1 – all integers</H4>

<PRE>func1(int a, int b, int c, int d, int e);</PRE>

<P>Arguments a in RCX, b in RDX, c in R8, d in R9, and e pushed on stack.</P>

<H4>Example of argument passing 2 – all floats</H4>

<PRE>func2(float a, double b, float c, double d, float e);</PRE>

<P>Arguments a in XMM0, b in XMM1, c in XMM2, d in XMM3, and e pushed on stack.</P>

<H4>Example of argument passing 3 – mixed ints and floats</H4>

<PRE>func3(int a, double b, int c, float d);
</PRE>

<P>Arguments a in RCX, b in XMM1, c in R8, and d in XMM3.</P>

<H4>Example of argument passing 4 –__m64, __m128, and aggregates</H4>

<PRE>func4(__m64 a, _m128 b, struct c, float d);</PRE>

<P>Arguments a in RCX, pointer to b in RDX, pointer to c in R8, and d in XMM3.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Parameter%20Passing"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
