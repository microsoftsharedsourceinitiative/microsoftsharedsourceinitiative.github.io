<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using a System-Defined Callback Object</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Using a System-Defined Callback Object">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_using_a_system_defined_callback_object_kg"></A>Using a System-Defined Callback Object</H2>

<P>The system defines two callback objects for driver use:</P>

<P class=indent1>\Callback\SetSystemTime</P>

<P class=indent1>\Callback\PowerState</P>

<P>Drivers that use the system time (for example, file system drivers) might register for the SetSystemTime callback. This callback provides for notification when the system time changes.</P>

<P>The PowerState callback provides for notification when one of the following occurs:

<UL>
	<LI>The system switches from AC to DC power or vice versa.</LI>

	<LI>The system power policy changes as the result of a user or application request. </LI>

	<LI>A transition to a system sleep or shutdown state is imminent. A driver can request notification so that it can lock code into memory in anticipation of shutdown. Callback routines will be notified before the Power Manager sends the system set-power IRP.</LI>
</UL>

<P>To use a system-defined callback, a driver initializes an attribute block (<A HREF="k109_66uq.htm"><B>InitializeObjectAttributes</B></A>) with the callback's name, then opens the callback object (<A HREF="k102_967m.htm"><B>ExCreateCallback</B></A>), just as for a driver-defined callback. The driver should not request that the callback object be created. </P>

<P>With the handle returned by <B>ExCreateCallback</B>, the driver calls <A HREF="k102_0cs2.htm"><B>ExRegisterCallback</B></A> to register a notification routine, passing a pointer to an arbitrary context and a pointer to its routine. A driver can register its callback routine any time. When the specified condition occurs, the system calls the registered callback routine at IRQL&lt;=DISPATCH_LEVEL. </P>

<P>When the driver no longer requires notification, it should call <A HREF="k102_6gfm.htm"><B>ExUnregisterCallback</B></A> to delete its callback routine from the list of registered callbacks and to remove its reference to the callback object.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Using%20a%20System-Defined%20Callback%20Object"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
