<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Releasing Device and Controller Objects</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_releasing_device_and_controller_objects_kg"></A>Releasing Device and Controller Objects</H4>

<P>Before a driver deletes a device or controller object, it must release its references to external resources, such as pointers to other drivers’ objects and/or to interrupt objects, that it stored in the corresponding device or controller extension. It can then call <A HREF="k104_3wky.htm"><B>IoDeleteDevice</B></A> for each device object that the driver created. A non-WDM driver that previously called <B>IoCreateController</B> must also call <A HREF="k104_1yd0.htm"><B>IoDeleteController</B></A>.</P>

<P>Any Kernel-defined object for which the driver provides storage in a device extension is automatically freed when the <I>Unload</I> routine calls <B>IoDeleteDevice</B> with the corresponding device object. In general, any object that the <B>DriverEntry</B> or <I>Reinitialize</I> routine set up by calling <B>KeInitialize</B><I>Xxx</I> can be freed by a call to <B>IoDeleteDevice</B> if the driver provided storage for that object in its device extension. For example, if a driver has a <I>CustomTimerDpc</I> routine and has provided storage for the necessary DPC and timer objects in its device extension, the call to <B>IoDeleteDevice</B> releases these system resources.</P>

<P>Similarly, any Kernel-defined object for which the driver provides storage in a controller extension is automatically freed when the <I>Unload</I> routine calls <B>IoDeleteController</B> with the corresponding controller object.</P>

<P>If the <B>DriverEntry</B> or <I>Reinitialize</I> routine called <B>IoGetConfigurationInformation</B> to increment the count for a particular type of device, the <I>Unload</I> routine also must call <A HREF="k104_3dma.htm"><B>IoGetConfigurationInformation</B></A> and decrement the count for its devices in the I/O Manager’s global configuration information structure as it deletes the corresponding device objects.</P>

<P>Before it returns control, an <I>Unload</I> routine also is responsible for freeing any other driver-allocated resources that have not yet been freed by other driver routines. </P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Releasing%20Device%20and%20Controller%20Objects"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
