<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling an IRP_MN_REMOVE_DEVICE Request</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Handling an IRP_MN_REMOVE_DEVICE Request">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_handling_an_irp_mn_remove_device_request_kg"></A>Handling an IRP_MN_REMOVE_DEVICE Request</H2>

<P>The PnP Manager uses this IRP to direct drivers to remove a device's software representation (device objects, and so forth). The PnP Manager sends this IRP when a device has been removed in an orderly fashion (for example, initiated by a user in the Unplug or Eject Hardware program), by surprise (a user pulls the device from its slot without prior warning), or when the user requests to update drivers. </P>

<P>On Windows&nbsp;2000 and later systems, the PnP Manager sends this IRP when the Device Manager disables the device. On Windows 98/Me, the Pnp Manager sends stop IRPs instead. See <A HREF="plugplay_26jr.htm">Stopping a Device</A> for details.</P>

<P>The PnP Manager does the following before sending this IRP to the drivers for a device:

<UL>
	<LI>Sends IRP_MN_REMOVE_DEVICE requests to the device's children, if any.</LI>

	<LI>Notifies any user-mode components and kernel-mode drivers that registered for notification that the device is being removed. The PnP Manager calls any user-mode components that registered for target device notification on a handle to the device and calls any kernel-mode drivers that registered for <B>EventCategoryTargetDeviceChange</B>. </LI>

	<LI>(On Windows&nbsp;2000 and later systems) If a file system is mounted on the device, the PnP Manager sends a remove request to the file system and any file system filters. In response, a file system typically dismounts the volume.</LI>
</UL>

<P>The top driver in a device stack handles a remove IRP and passes it to the next lower driver. The parent bus driver for a device is the last driver to perform its remove-device operations. A driver handles remove IRPs in its <I>DispatchPnP</I> routine.</P>

<P>Before a driver returns success for an IRP_MN_REMOVE_DEVICE request, it must ensure that all resources for the device have been released. This IRP could be the last call before the driver is unloaded.</P>

<P>Removing one device can create the need to remove a series of other devices. The PnP Manager coordinates the removal of the additional device objects from the top level down to the root-device level.</P>

<P>This section describes:</P>

<P class=indent1><A HREF="plugplay_99gn.htm">Removing a Device in a Function Driver</A> </P>

<P class=indent1><A HREF="plugplay_6tyf.htm">Removing a Device in a Filter Driver</A> </P>

<P class=indent1><A HREF="plugplay_4isn.htm">Removing a Device in a Bus Driver</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20an%20IRP_MN_REMOVE_DEVICE%20Request"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
