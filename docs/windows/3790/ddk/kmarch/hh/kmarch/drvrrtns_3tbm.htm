<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CustomDPC</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="CustomDPC">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_customdpc_kr"></A><I>CustomDPC</I></H1>

<P>The <I>CustomDpc</I> routine finishes the servicing of an I/O operation, after an <A HREF="drvrrtns_29ma.htm"><I>InterruptService</I></A> routine returns.</P>

<PRE class=syntax><B>VOID
</B><I>  CustomDPC</I><B>(</B>
<B>    IN struct _KDPC  *</B><I>Dpc</I><B>,</B>
<B>    IN PVOID  </B><I>DeferredContext</I><B>,</B>
<B>    IN PVOID  </B><I>SystemArgument1</I><B>,</B>
<B>    IN PVOID  </B><I>SystemArgument2</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Dpc</I></DT>

<DD>Caller-supplied pointer to a <A HREF="k112_3gs2.htm">KDPC</A> structure, which represents the DPC object that is associated with this <I>CustomDpc</I> routine.</DD>

<DT><I>DeferredContext</I></DT>

<DD>Caller-supplied pointer to driver-defined context information that was specified in a previous call to <A HREF="k105_9d0y.htm"><B>KeInitializeDpc</B></A>.</DD>

<DT><I>SystemArgument1</I></DT>

<DD>Caller-supplied pointer to driver-supplied information that was specified in a previous call to <A HREF="k105_75iq.htm"><B>KeInsertQueueDpc</B></A>.</DD>

<DT><I>SystemArgument2</I></DT>

<DD>Caller-supplied pointer to driver-supplied information that was specified in a previous call to <B>KeInsertQueueDpc</B>.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Comments</H4>

<P>A driver's <I>CustomDpc </I>routine<I> </I>executes in a DPC context, at IRQL&nbsp;= <A HREF="intrupts_0kh3.htm#ddk_dispatch_level_kg">DISPATCH_LEVEL</A>.</P>

<P>To create a DPC object and register a <I>CustomDpc</I> routine for that object, a driver must call <B>KeInitializeDPC</B>. (If you need only one DPC routine, you can use a <A HREF="drvrrtns_9ycy.htm"><I>DpcForIsr</I></A> routine and the system-allocated DPC object.)</P>

<P>To queue a <I>CustomDpc</I> routine for execution, a driver's <A HREF="drvrrtns_29ma.htm"><I>InterruptService</I></A> routine must call <B>KeInsertQueueDpc</B>.</P>

<P>One or more <I>CustomDpc</I> routines can be used instead of, or in conjunction with, a <I>DpcForIsr</I> routine. A driver that maintains several internal IRP queues typically supplies a <I>CustomDpc</I> routine for each queue. Each <I>CustomDpc</I> routine is typically responsible for at least the following tasks:

<UL>
	<LI>Completing the I/O operation that is described by the current IRP.</LI>

	<LI>Dequeuing the next IRP from one of the driver's IRP queues. (Drivers that use the system-supplied IRP queue together with a <I>StartIo</I> routine call <A HREF="k104_7eb6.htm"><B>IoStartNextPacket</B></A>.)</LI>

	<LI>Setting the I/O status block in the current IRP and calling <A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A> for the completed request.</LI>
</UL>

<P>A <I>CustomDpc</I> routine might also retry a failed operation or set up the next transfer for a large I/O request that is broken into smaller pieces.</P>

<P>For more information about <I>CustomDpc </I>routines, see <A HREF="intrupts_4zhj.htm">DPC Objects and DPCs</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: CustomDPC"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
