<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DriverEntry's Required Responsibilities</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DriverEntry's Required Responsibilities">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_driverentry_s_required_responsibilities_kg"></A>DriverEntry's Required Responsibilities</H2>

<P>The required, ordered responsibilities of a <A HREF="drvrrtns_6r76.htm"><B>DriverEntry</B></A> routine are as follows:

<OL>
	<LI>Supply entry points for the driver's standard routines.
<P>The driver stores entry points for many of its standard routines in the driver object or driver extension. Such entry points include those for the driver's <A HREF="drvrrtns_4d6a.htm"><I>AddDevice</I></A> routine, dispatch routines, <A HREF="drvrrtns_6isy.htm"><I>StartIo</I></A> routine, and <A HREF="drvrrtns_7d82.htm"><I>Unload</I></A> routine. For example, a driver would set the entry points for its <I>AddDevice</I>, <A HREF="drvrrtns_8uya.htm"><I>DispatchPnP</I></A>, and <A HREF="drvrrtns_00mq.htm"><I>DispatchPower</I></A> routines with statements like the following (<I>Xxx</I> is a placeholder for a vendor-supplied prefix identifying the driver):

<PRE>    :
DriverObject-&gt;DriverExtension-&gt;AddDevice = <I>Xxx</I>AddDevice;
DriverObject-&gt;MajorFunction[IRP_MJ_PNP] = <I>Xxx</I>DispatchPnp;
DriverObject-&gt;MajorFunction[IRP_MJ_POWER] = <I>Xxx</I>DispatchPower;
    :</PRE>

<P>Additional standard routines, such as ISRs or <I>IoCompletion</I> routines, are specified by calling system support routines. For more information, see the descriptions of individual <A HREF="drvrrtns_99rm.htm">standard driver routines</A>.
</LI>

	<LI>Create and/or initialize various driver-wide objects, types, or resources the driver uses. Note that most standard routines use objects on a per-device basis, so drivers should set up such objects in their <I>AddDevice</I> routines or after receiving an <A HREF="pnp-irps_1gqa.htm">IRP_MN_START_DEVICE</A> request. 
<P>If the driver has a device-dedicated thread or waits on any Kernel-defined dispatcher objects, the <B>DriverEntry</B> routine might initialize <A HREF="synchro_4s9z.htm">kernel dispatcher objects</A>. (Depending on how the driver uses the object(s), it might instead perform this task in its <I>AddDevice</I> routine or after receiving an IRP_MN_START_DEVICE request.)
</LI>

	<LI>Free any memory that it allocated and is no longer required. </LI>

	<LI>Return NTSTATUS indicating whether the driver successfully loaded and can accept and process requests from the PnP Manager to configure, add, and start its devices. (See <A HREF="drvcomps_0fxj.htm"><B>DriverEntry</B> Return Values</A>.)</LI>
</OL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DriverEntry's%20Required%20Responsibilities"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
