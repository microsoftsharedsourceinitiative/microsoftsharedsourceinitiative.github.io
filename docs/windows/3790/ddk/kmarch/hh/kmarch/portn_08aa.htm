<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PoRegisterSystemState</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PoRegisterSystemState">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_poregistersystemstate_dr"></A>PoRegisterSystemState</H1>

<P>The <B>PoRegisterSystemState</B> routine registers the system as busy due to certain activity. </P>

<PRE class=syntax><B>PVOID
</B>  <B>PoRegisterSystemState(</B>
    <B>IN PVOID</B>  <I>StateHandle</I><B>,</B>
    <B>IN EXECUTION_STATE</B>  <I>Flags</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>StateHandle</I></DT>

<DD>Pointer to a caller-supplied buffer for a registration state handle. The size, in bytes, of the buffer is <B>sizeof</B>(ULONG). If NULL, this is a new registration. If non-NULL, this parameter points to a handle that was returned by a previous call to <B>PoRegisterSystemState</B>.</DD>

<DT><I>Flags</I></DT>

<DD>Indicates the type of activity, as specified by a bitwise OR of one or more of the following values:

<DL>
<DT>ES_SYSTEM_REQUIRED</DT>

<DD>The system is not idle, regardless of apparent load.</DD>

<DT>ES_DISPLAY_REQUIRED</DT>

<DD>Use of the display is required.</DD>

<DT>ES_USER_PRESENT</DT>

<DD>A user is present.</DD>

<DT>ES_CONTINUOUS</DT>

<DD>The settings are continuous and should remain in effect until explicitly changed.
</DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<P><B>PoRegisterSystemState</B> returns a handle to be used later to change or unregister the system busy state. It returns NULL if the handle could not be allocated.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h.</I></P>

<H4>Comments</H4>

<P><B>PoRegisterSystemState</B> registers the system busy state as indicated by the flags. The registration persists until the caller explicitly changes it with another call to <B>PoRegisterSystemState</B> or cancels it with a call to <A HREF="portn_6j1u.htm"><B>PoUnregisterSystemState</B></A>.</P>

<P>The <I>Flags</I> parameter specifies the type of activity in progress. Drivers can specify any combination of the flags.</P>

<P>Setting ES_CONTINUOUS makes the busy state persist until a driver explicitly changes or cancels it by calling <B>PoRegisterSystemState</B> or <B>PoUnregisterSystemState</B>. </P>

<P>A driver can set the system busy state to request that the <A HREF="pwrmgmt_30vb.htm">Power Manager</A> avoid system power state transitions out of the system working state (S0) while driver activity is occurring. Note, however, that under some circumstances (such as a critically low battery) the Power Manager may override this request and put the system to sleep anyway.</P>

<P>Callers of <B>PoRegisterSystemState </B>must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="portn_4kfm.htm"><B>PoSetSystemState</B></A>, <A HREF="portn_6j1u.htm"><B>PoUnregisterSystemState</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PoRegisterSystemState"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
