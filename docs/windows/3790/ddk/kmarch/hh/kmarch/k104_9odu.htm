<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoMarkIrpPending</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoMarkIrpPending">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iomarkirppending_kr"></A>IoMarkIrpPending</H1>

<P>The <B>IoMarkIrpPending</B> routine marks the specified IRP, indicating that a driver’s dispatch routine subsequently returned STATUS_PENDING because further processing is required by other driver routines.</P>

<PRE class=syntax><B>VOID 
</B>  <B>IoMarkIrpPending(</B>
<B>    IN OUT PIRP</B>  <I>Irp</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Irp</I></DT>

<DD>Pointer to the IRP to be marked as pending.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>Unless an IRP's dispatch routine completes the IRP (by calling <A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A>) or passes the IRP on to lower drivers, it must call <B>IoMarkIrpPending</B> with the IRP. Otherwise, the I/O Manager attempts to complete the IRP as soon as the dispatch routine returns control.</P>

<P>After calling <B>IoMarkIrpPending</B>, the dispatch routine must return STATUS_PENDING, even if some routine completes the IRP (by calling <A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A>) before the dispatch routine that called <B>IoMarkIrpPending</B> returns.</P>

<P>If a driver queues incoming IRPs, it should call <B>IoMarkIrpPending</B> before it queues each IRP. Otherwise, an IRP could be dequeued, completed by another driver routine, and freed by the system before the call to <B>IoMarkIrpPending</B> occurs, thereby causing a crash. </P>

<P>If a driver sets an <A HREF="drvrrtns_4rsi.htm"><I>IoCompletion</I></A> routine for an IRP and then passes the IRP down to a lower driver, the <I>IoCompletion</I> routine should check the <B>IRP-&gt;PendingReturned</B> flag. If the flag is set, the <I>IoCompletion</I> routine must call <B>IoMarkIrpPending</B> with the IRP. (<I>IoCompletion</I> routines do not return STATUS_PENDING, however. For more information, see <A HREF="irps_046f.htm">Implementing an <I>IoCompletion</I> Routine</A>.)</P>

<P>A driver that passes down the IRP and then waits on an event should not mark the IRP pending. Instead, its <I>IoCompletion</I> routine should signal the event and return STATUS_MORE_PROCESSING_REQUIRED. </P>

<P>Callers of <B>IoMarkIrpPending</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A>, <A HREF="k104_1nsi.htm"><B>IoStartPacket</B></A>, <A HREF="k112_3z5e.htm">IRP</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoMarkIrpPending"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
