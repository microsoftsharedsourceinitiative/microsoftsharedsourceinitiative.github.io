<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PoRequestPowerIrp</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PoRequestPowerIrp">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pdo_dg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_fdo_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_porequestpowerirp_dr"></A>PoRequestPowerIrp</H1>

<P>The <B>PoRequestPowerIrp</B> routine allocates a power <A HREF="k112_3z5e.htm">IRP</A> and sends it to the top driver in the device stack for the specified device. </P>

<PRE class=syntax><B>NTSTATUS
</B>  <B>PoRequestPowerIrp(</B>
    <B>IN PDEVICE_OBJECT</B>  <I>DeviceObject</I><B>,</B>
    <B>IN UCHAR </B> <I>MinorFunction</I><B>,</B>
    <B>IN POWER_STATE  </B><I>PowerState</I><B>,</B>
    <B>IN PREQUEST_POWER_COMPLETE</B>  <I>CompletionFunction</I><B>,</B>
    <B>IN PVOID </B> <I>Context</I><B>,</B>
    <B>OUT PIRP </B> <I>*Irp</I> OPTIONAL
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceObject</I></DT>

<DD>Pointer to the target <A HREF="k112_32cy.htm">DEVICE_OBJECT</A> for the IRP. On Windows&nbsp;2000 and later systems, this parameter can point to a physical device object (<A HREF="JavaScript:hhobj_1.Click()">PDO</A>) or a functional device object (<A HREF="JavaScript:hhobj_2.Click()">FDO</A>). On Windows&nbsp;98/Me, this parameter must point to the PDO of the underlying device.</DD>

<DT><I>MinorFunction</I></DT>

<DD>Specifies one of the following minor power IRP codes: <A HREF="poirp_9e9e.htm">IRP_MN_QUERY_POWER</A>, <A HREF="poirp_6hde.htm">IRP_MN_SET_POWER</A>, or <A HREF="poirp_44fm.htm">IRP_MN_WAIT_WAKE</A>.</DD>

<DT><I>PowerState</I></DT>

<DD>Specifies a power state to pass in the IRP. For IRP_MN_SET_POWER and IRP_MN_QUERY_POWER, specify the requested new <A HREF="pwrmgmt_20fb.htm">device power state</A>. Possible values are DEVICE_POWER_STATE enumerator values. 

<P>For IRP_MN_WAIT_WAKE, specify the lowest (least-powered) <A HREF="pwrmgmt_919j.htm">system power state</A> from which the device should be allowed to wake the system Possible values are SYSTEM_POWER_STATE enumerator values. 
</DD>

<DT><I>CompletionFunction</I></DT>

<DD>Pointer to the caller's <I>PowerCompletion</I> callback to be called when the IRP has completed. The callback is declared as follows:

<PRE>VOID
(*PREQUEST_POWER_COMPLETE) (
    IN PDEVICE_OBJECT DeviceObject,
    IN UCHAR MinorFunction,
    IN POWER_STATE PowerState,
    IN PVOID Context,
    IN PIO_STATUS_BLOCK IoStatus
    );</PRE>


<P>The callback parameters are as follows:


<DL>
<DT><I>DeviceObject</I></DT>

<DD>Pointer to the target device object for the completed power IRP.</DD>

<DT><I>MinorFunction</I></DT>

<DD>Specifies the minor function code in the power IRP.</DD>

<DT><I>PowerState</I></DT>

<DD>Specifies the device power state passed to <B>PoRequestPowerIrp</B>.</DD>

<DT><I>Context</I></DT>

<DD>Pointer to the context passed to <B>PoRequestPowerIrp</B>. </DD>

<DT><I>IoStatus</I></DT>

<DD>Pointer to the <A HREF="k112_08qa.htm">IO_STATUS_BLOCK</A> structure for the completed IRP. </DD>
</DL>
</DD>

<DT><I>Context</I></DT>

<DD>Pointer to a caller-supplied context to be passed through to the <I>PowerCompletion</I> callback. When the caller requests a device set-power IRP in response to a system set-power IRP, the <I>Context </I>should contain the system set-power IRP that triggered the request.</DD>

<DT><I>Irp</I></DT>

<DD>Pointer to a caller-supplied variable in which this routine returns a pointer to the IRP it allocates. This parameter can be NULL.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>PoRequestPowerIrp</B> returns one of the following: 

<DL>
<DT>STATUS_PENDING</DT>

<DD>The IRP has been sent.</DD>

<DT>STATUS_INSUFFICIENT_RESOURCES</DT>

<DD>The routine could not allocate the IRP. </DD>

<DT>STATUS_INVALID_PARAMETER_2</DT>

<DD><I>MinorFunction </I>does not signify a valid minor power IRP code.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>A driver calls <B>PoRequestPowerIrp</B> — not <A HREF="k104_42pe.htm"><B>IoAllocateIrp</B></A> — to allocate and send a power IRP that has minor IRP code IRP_MN_SET_POWER, IRP_MN_QUERY_POWER, or IRP_MN_WAIT_WAKE. (A driver must call <B>IoAllocateIrp</B> to send a power IRP with minor IRP code <A HREF="poirp_5omq.htm">IRP_MN_POWER_SEQUENCE</A>.) </P>

<P>A device power policy owner calls this routine to send a wait/wake, query, or set-power IRP. </P>

<P>If <B>PoRequestPowerIrp</B> returns a status value of STATUS_PENDING, the routine successfully allocated a device power IRP and sent it to the top of the device stack for the device. After the bus driver and all other drivers have completed the IRP, and the I/O Manager has called all <I>IoCompletion</I> routines set by drivers as they passed the IRP down the device stack, the <I>CompletionFunction</I> is called with the given <I>Context</I>. If <B>PoRequestPowerIrp</B> returns a status other than STATUS_PENDING, the routine did not send a device power IRP and the <I>CompletionFunction</I> is not called.</P>

<P>The <I>CompletionFunction</I> performs any additional tasks the sender of the IRP requires after all other drivers have completed the IRP. It need not free the IRP; the Power Manager does that. On Windows 98/Me, the <I>CompletionFunction</I> is always called at IRQL&nbsp;= PASSIVE_LEVEL, and drivers must complete IRPs at IRQL&nbsp;= PASSIVE_LEVEL. On Windows&nbsp;2000 and later systems, the <I>CompletionFunction</I> can be called at IRQL&nbsp;= PASSIVE_LEVEL or IRQL&nbsp;= DISPATCH_LEVEL. </P>

<P>A device power policy owner calls <B>PoRequestPowerIrp</B> to send a device query- or set-power IRP when it receives a system query- or set-power IRP. The driver should set an <I>IoCompletion</I> routine in the system IRP and pass the system IRP to the next lower driver. The <I>IoCompletion</I> routine calls <B>PoRequestPowerIrp</B> to send the device IRP, passing the system IRP in the <I>Context </I>parameter. The <I>Context </I>parameter is subsequently passed to the <I>CompletionFunction</I> for the device IRP. In the <I>CompletionFunction</I>, the driver can complete the system IRP. For more information, see <A HREF="pwrmgmt_94tj.htm">Sending IRP_MN_QUERY_POWER or IRP_MN_SET_POWER for Device Power States</A> and <A HREF="pwrmgmt_27fr.htm">Wait/Wake Callback Routines</A>. </P>

<P>Drivers can use the returned <I>Irp </I>to cancel an IRP_MN_WAIT_WAKE IRP. Drivers requesting other power IRPs can pass NULL for this parameter. </P>

<P>Callers of <B>PoRequestPowerIrp </B>must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_42pe.htm"><B>IoAllocateIrp</B></A>, <A HREF="k112_08qa.htm">IO_STATUS_BLOCK</A>, <A HREF="k112_3z5e.htm">IRP</A>, <A HREF="portn_83ua.htm"><B>PoStartNextPowerIrp</B></A>, <A HREF="poirp_5omq.htm">IRP_MN_POWER_SEQUENCE</A>, <A HREF="poirp_6hde.htm">IRP_MN_SET_POWER</A>, <A HREF="poirp_9e9e.htm">IRP_MN_QUERY_POWER</A>, <A HREF="poirp_44fm.htm">IRP_MN_WAIT_WAKE</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PoRequestPowerIrp"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
