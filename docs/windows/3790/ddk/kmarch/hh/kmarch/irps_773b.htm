<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using the System's Cancel Spin Lock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Using the System's Cancel Spin Lock">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_using_the_system_s_cancel_spin_lock_kg"></A>Using the System's Cancel Spin Lock</H3>

<P>The system provides a single <I>cancel spin lock</I>, which is acquired or released when certain system routines are called.</P>

<P>Driver routines that change the state of cancelable IRPs, including all routines that might complete an IRP with STATUS_CANCELLED, must acquire and release the system cancel spin lock according to the guidelines in this section.</P>

<P>In drivers that use the I/O Manager-supplied device queue, any driver routine other than the <I>Cancel </I>routine that changes the cancelable state of an IRP must first call <A HREF="k104_9fw2.htm"><B>IoAcquireCancelSpinLock</B></A> to acquire the system cancel spin lock.</P>

<P>Acquiring the cancel spin lock ensures that only the caller can change the cancelable state of that IRP. While the caller holds the spin lock, the I/O Manager cannot call the driver’s <I>Cancel </I>routine for that IRP. Likewise, another driver routine, such as a <I>DispatchCleanup</I> routine, cannot simultaneously try to change the cancelable state of that IRP.</P>

<P>In drivers that manage their own queues of IRPs and use driver-supplied spin locks to synchronize queue access, the driver routines do not need to acquire the cancel spin lock before calling <A HREF="k104_6hiq.htm"><B>IoSetCancelRoutine</B></A>. However, these drivers should check the <I>Cancel </I>routine pointer that <B>IoSetCancelRoutine</B> returns to determine whether the <I>Cancel </I>routine has already started. See <A HREF="irps_712f.htm">Using a Driver-Supplied Spin Lock</A> for details.</P>

<P>Any driver routine that calls <B>IoAcquireCancelSpinLock</B> must call <B>IoReleaseCancelSpinLock</B> as soon as possible.</P>

<P>A driver must <I>never</I> call <A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A> with an IRP while holding a spin lock. Attempting to complete an IRP while holding a spin lock can cause a deadlock.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Using%20the%20System's%20Cancel%20Spin%20Lock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
