<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling Device Interface Change Events</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Handling Device Interface Change Events">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_handling_device_interface_change_events_kg"></A>Handling Device Interface Change Events</H3>

<P>When driver or user-mode component enables or disables a device interface, the PnP Manager calls any notification callback routines that registered for <B>EventCategoryDeviceInterfaceChange</B> on the device interface class. The PnP Manager specifies a <I>NotificationStructure</I>.<B>Event</B> of GUID_DEVICE_INTERFACE_ARRIVAL or GUID_DEVICE_INTERFACE_REMOVAL.</P>

<P>When handling a GUID_DEVICE_INTERFACE_ARRIVAL event, a notification callback routine should:

<UL>
	<LI>Perform driver-defined tasks for handling the new interface.
<P>A callback routine might, for example, queue a worker routine to open the device. A callback routine must not open the device directly. If the provider of the interface causes blocking PnP events, the notification callback routine can cause a deadlock if it tries to open the device in the callback thread.

<P>A callback routine might enable an interface of its own in response to the availability of the new interface.
</LI>
</UL>

<P>When handling a GUID_DEVICE_INTERFACE_REMOVAL event, a notification callback routine should:

<UL>
	<LI>Undo whatever operations it performed when the interface was enabled.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20Device%20Interface%20Change%20Events"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
