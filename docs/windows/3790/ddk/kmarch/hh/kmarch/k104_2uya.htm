<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoWMIWriteEvent</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoWMIWriteEvent">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iowmiwriteevent_kr"></A>IoWMIWriteEvent</H1>

<P>The <B>IoWMIWriteEvent</B> routine delivers a given event to the user-mode WMI components for notification.</P>

<PRE class=syntax><B>NTSTATUS
</B>  <B>IoWMIWriteEvent(</B>
<B>    IN PVOID  </B><I>WnodeEventItem</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>WnodeEventItem</I></DT>

<DD>Pointer to a WNODE_EVENT_ITEM structure to be delivered to the user-mode WMI components that requested notification of the event.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoWMIWriteEvent</B> returns a status code from the following list:

<DL>
<DT>STATUS_SUCCESS</DT>

<DD>Indicates that WMI has successfully queued the event for delivery to the user-mode WMI components.</DD>

<DT>STATUS_UNSUCCESSFUL</DT>

<DD>Indicates that WMI services are unavailable.</DD>

<DT>STATUS_BUFFER_OVERFLOW</DT>

<DD>Indicates that the event item specified exceeds the maximum allowed size.</DD>

<DT>STATUS_INSUFFICENT_RESOURCES</DT>

<DD>Indicates that insufficient resources were available for WMI to queue the event for delivery.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>The WNODE_EVENT_ITEM structure that is allocated by the caller and passed in <I>WnodeEventItem</I> must be allocated from nonpaged pool. If <B>IoWMIWriteEvent</B> returns STATUS_SUCCESS, the memory for the event item will automatically be freed by the system. If <B>IoWMIWriteEvent</B> returns anything other than STATUS_SUCCESS, it is the caller's responsibility to free the buffer.</P>

<P>Drivers should only call <B>IoWMIWriteEvent</B> for events that have been enabled for WMI. This ensures that there is an event consumer waiting for indication on that event.</P>

<P>Callers of this routine must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k112_45de.htm">WNODE_EVENT_ITEM</A>, <A HREF="k104_233m.htm"><B>IoWmiDeviceObjectToProviderId</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoWMIWriteEvent"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
