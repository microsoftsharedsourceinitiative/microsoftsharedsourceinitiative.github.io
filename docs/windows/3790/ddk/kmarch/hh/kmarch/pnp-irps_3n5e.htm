<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP_MN_STOP_DEVICE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IRP_MN_STOP_DEVICE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_irp_mn_stop_device_dr"></A>IRP_MN_STOP_DEVICE</H1>

<P>All PnP drivers must handle this IRP.</P>

<H4>Major Code</H4>

<P><A HREF="k113_8ur6.htm">IRP_MJ_PNP</A> </P>

<H4>When Sent</H4>

<P>The PnP Manager sends this IRP to stop a device so it can reconfigure the device's hardware resources. </P>

<P>On Windows&nbsp;2000 and later systems, the PnP Manager sends this IRP only if a prior <A HREF="pnp-irps_6d4i.htm">IRP_MN_QUERY_STOP_DEVICE</A> completed successfully. </P>

<P>On Windows 98/Me, the PnP Manager also sends this IRP when a device is being disabled and when a device stack has failed an IRP_MN_START_DEVICE request. In cases of failed start, the PnP Manager sends this IRP without a preceding <A HREF="pnp-irps_6d4i.htm">IRP_MN_QUERY_STOP_DEVICE</A> request.</P>

<P>The PnP Manager sends this IRP at IRQL PASSIVE_LEVEL in the context of a system thread.</P>

<H4>Input</H4>

<P>None</P>

<H4>Output</H4>

<P>None</P>

<H4>I/O Status Block</H4>

<P>A driver must set <B>Irp-&gt;IoStatus.Status</B> to STATUS_SUCCESS.</P>

<H4>Operation</H4>

<P>This IRP is handled first by the driver at the top of the device stack and then passed down to each lower driver in the stack.</P>

<P>In response to this IRP, Windows&nbsp;2000 and later drivers stop the device and release any hardware resources being used by the device, such as I/O ports and interrupts. </P>

<P>On Windows&nbsp;2000 and later, a stop IRP is used solely to free a device's hardware resources so they can be reconfigured. Once the resources are reconfigured, the device is restarted. A stop IRP is not a precursor to a remove IRP. See <A HREF="plugplay_15t3.htm">Plug and Play</A> for more information about the order in which PnP IRPs are sent to devices.</P>

<P>On Windows 98/Me, a stop IRP is also used after a failed start and when a device is being disabled. WDM drivers that run on these operating systems should stop the device, fail any incoming I/O, and disable and deregister any user-mode interfaces. </P>

<P>A driver must not fail this IRP. If a driver cannot release the device's hardware resources, it must fail the preceding query-stop IRP.</P>

<P>See <A HREF="plugplay_26jr.htm">Stopping a Device </A> for detailed information on handling stop IRPs.</P>

<H4>Sending This IRP</H4>

<P>Reserved for system use. Drivers must not send this IRP.</P>

<H4>See Also</H4>

<P><A HREF="pnp-irps_6d4i.htm">IRP_MN_QUERY_STOP_DEVICE</A>, <A HREF="pnp-irps_1gqa.htm">IRP_MN_START_DEVICE</A>, <A HREF="k104_3epe.htm"><B>IoSetDeviceInterfaceState</B></A>, <A HREF="k104_27n6.htm"><B>IoRegisterDeviceInterface</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP_MN_STOP_DEVICE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
