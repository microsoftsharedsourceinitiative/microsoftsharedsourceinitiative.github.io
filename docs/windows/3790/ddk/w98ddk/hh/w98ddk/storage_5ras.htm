<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DCB_cd_entry</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4254"></A>DCB_cd_entry</H3>

<PRE>#include &lt;dcb.h&gt;

typedef struct  _DCB_cd_entry { /* */
    PVOID  DCB_cd_io_address;   // address of request routine
    ULONG  DCB_cd_flags;        // demand bits; see below
    ULONG  DCB_cd_ddb;          // driver's DDB pointer
    ULONG  DCB_cd_next;         // address of next cd entry
    USHORT DCB_cd_expan_off;    // offset of expansion area
    UCHAR  DCB_cd_layer_flags;  // flags for layer's use
    UCHAR  DCB_cd_lgn;          // load group number
} DCB_cd_entry, *pDCB_cd_entry;
</PRE>

<P>Contains information about a calldown entry. 

<DL>
<DT><B>DCB_cd_flags</B> </DT>

<DD>Can be one of these values: 

<TABLE>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_srb_cdb </TD>
<TD width=66%>There must be an SRB and CDB for each IOR. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_rsrv_1 </TD>
<TD width=66%>Reserved; must be zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_logical </TD>
<TD width=66%>Media address must be logical and DCB must be for a logical device. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_physical </TD>
<TD width=66%>Media adresses must be physical and DCB must be for a physical device. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_small_memory </TD>
<TD width=66%>Data buffers must reside in in low 16M. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_rsrv_2 </TD>
<TD width=66%>Reserved; must be zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_rsrv_3 </TD>
<TD width=66%>Reserved; must be zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_rsrv_4 </TD>
<TD width=66%>Reserved; must be zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_not_512 </TD>
<TD width=66%>Sector size on the media is not 512 bytes. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_word_align </TD>
<TD width=66%>Data buffers must be word aligned (see ILB_int_io_criteria_rtn).</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_dword_align </TD>
<TD width=66%>Data buffers must be doubleword aligned (see ILB_int_io_criteria_rtn).</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_phys_sgd </TD>
<TD width=66%>Scatter/gather descriptors must contain physical addresses (they will contain linear addresses if this demand bit is not set). </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_phys_sgd_ptr </TD>
<TD width=66%>Do not use (keep this bit clear). Originally intended for use in ILB_int_io_criteria_rtn.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_do_a_b_toggling </TD>
<TD width=66%>For single floppy drive system, voltrack needs to do the toggling between A and B when accesses are made to these drive letters. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_query_remov </TD>
<TD width=66%>Lower level must be called to check if media is removable/has changed. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_request_sns </TD>
<TD width=66%>Port driver cannot perform SCSI autosense. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_lock_unlock_media </TD>
<TD width=66%>Media supports software locking. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_load_eject_media </TD>
<TD width=66%>Media supports electronic eject. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_clear_media_chg </TD>
<TD width=66%>Command to clear media change. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_serialize </TD>
<TD width=66%>Layer requires request serialization. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_prot_mode </TD>
<TD width=66%>Override real mode checks for this device; for example, ATAPI cdrom. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_no_xclusive </TD>
<TD width=66%>Indicates exclusive access is not required for abs write. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_pageability </TD>
<TD width=66%>Indicates that access to this volume can cause paging. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DCB_dmd_preload (0x00800000)</TD>
<TD width=66%>(OSR2) Allows a “preload driver” access to a port driver’s DCB before the port driver sees the DCB (via IOS_Register). Set this bit in your driver when you insert yourself into the calldown chain for a device. This flag was added to correct a bug in IOS.VXD in the retail version of Windows 95, where DRP_FC_NEED_PRELOAD did not work correctly. It occurs specifically on bus-mastering IDE controllers and SCSI controllers. The problem has been fixed in OSR2, and a fixed version of IOS.VXD is available from our Web site. You will need to either use this fixed version of IOS, or run on OSR2 or a newer version of Windows 95/98, when using DCB_dmd_preload.
<P>The basic problem is that IOS will wipe out the demand flags for a DCB when a preload driver inserts itself into the calldown chain for that DCB. This isn't a real problem for something like a standard IDE controller, which does not set any demand flags. It is a problem for SCSI controllers, particularly those that do bus-mastering, since the DCB's demand flags are used to indicate that the device requires physical addresses, etc. </P>
</TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<H4>See Also</H4>

<P><B>IOR</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DCB_cd_entry"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
