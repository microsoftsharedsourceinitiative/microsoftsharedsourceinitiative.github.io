<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>On-card Memory for ISA Cards</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_dxddk_on_card_memory_for_isa_cards_dsound"></A>On-card Memory for ISA Cards</H3>

<P>On-card memory for industry standard architecture (ISA) cards is not really a feature by itself; rather, it is required before the cards can provide other accelerations. With ISA cards, bus performance is a major bottleneck. Especially at high-sampling frequencies, a single stream of audio consumes a significant proportion of the bus bandwidth. Direct memory access (DMA) alleviates the CPU overhead associated with this transfer, but the bus traffic may end up stalling the CPU anyway. </P>

<P>Hardware acceleration of DirectSound requires that sound buffers be passed to the sound card before processing. Peripheral component interconnect (PCI) buses have the bandwidth to transmit multiple streams of audio to the card; with an ISA bus, this transfer would add overhead that would negate the benefits of hardware acceleration. </P>

<P>There is one case, however, in which the bus bandwidth is no longer an issue. When DirectSound applications create sound buffers, they can specify the buffers as either streaming or static. There is no difference in capabilities or structure between these two types; the only difference is the application's intended use of them. Streaming sound buffers are used for long and continually changing sounds, such as the soundtrack to a movie or a background song. Static sound buffers are used for short sounds that intend to be reused, such as a bullet sound or monster noise. </P>

<P>Static sound buffers are ideal for on-board memory. They are written infrequently so they don't consume significant bus bandwidth, but they can then be played consuming very few CPU cycles. Since many games use this kind of sound, on-board memory can be a major advantage. The memory should be 256K bytes or higher to be most useful to games. </P>

<P>Each hardware static sound buffer should support the following capabilities: 

<UL>
	<LI>Play and stop. </LI>

	<LI>Automatic looping back to start of buffer. </LI>

	<LI>Automatic stop at end of buffer if looping not specified. </LI>

	<LI>Should be able to stop after playing a specified number of bytes. If the number of bytes is greater than the length of the buffer, the buffer should automatically loop back to the beginning and continue until the specified number of bytes have been played. </LI>

	<LI>Volume and pan control. Most applications use these controls; if the hardware doesn't offer them, DirectSound is unable to use the hardware for these buffers. </LI>

	<LI>Frequency (pitch) control. This is also needed for the same reasons as volume and pan, but is not requested as often. </LI>

	<LI>Memory re-use. Two logical sound buffers should be able to use the same memory, but have different play cursors and different effects. For example, a gunshot sound could be played twice simultaneously using different volume and pan settings. This is required to take advantage of the <B>IDirectSound::DuplicateSoundBuffer</B> method. </LI>
</UL>

<P>In addition, hardware buffers are not useful without the second feature, hardware mixing, described in the following section. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: On-card%20Memory%20for%20ISA%20Cards"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
