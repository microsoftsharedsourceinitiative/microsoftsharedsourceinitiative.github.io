<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Signal_Semaphore_No_Switch</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1650"></A>Signal_Semaphore_No_Switch</H1>

<PRE>include vmm.inc

mov     eax, SemaphoreHandle
VMMCall Signal_Semaphore_No_Switch
 </PRE>

<P>Signals a semaphore, releasing (unblocking) a single thread if there are any threads blocked waiting for the semaphore. The threads are released in order of priority; that is, the highest priority thread is released first even if it has been blocked for the shortest time. Unlike the <B>Signal_Semaphore</B> service, this service never causes an immediate context switch. Instead any threads that need to be released are released the next time events are serviced. This service also differs in that it preserves the state of processor interrupt mask; that is, if interrupts are disabled on entry they are still disabled when this service returns. Uses Flags. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>SemaphoreHandle</I></DT>

<DD>Handle of the semaphore. 
</DD>
</DL>

<H4>See Also</H4>

<P><B>Create_Semaphore</B>, <B>Signal_Semaphore</B>, <B>Wait_Semaphore</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Signal_Semaphore_No_Switch"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
