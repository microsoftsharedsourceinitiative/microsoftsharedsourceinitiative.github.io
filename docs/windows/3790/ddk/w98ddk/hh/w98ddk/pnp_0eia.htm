<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Plug and Play System Components</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_3552"></A>Plug and Play System Components</H1>

<P>The Plug and Play framework defines a single object that has several attributes. This object is called a device node. One of its attributes identifies devices that provide resources (buses). The collection of device nodes that describes a computer is called the devnode tree. </P>

<P>The Plug and Play framework defines several software components that have been added to the operating system: Configuration Manager, enumerators, and resource arbitrators. </P>

<P>Enumerators build the devnode tree and may participate in configuring the devices on their bus. The enumeration process takes place every time the computer starts. There are two phases of enumeration in the current implementation of the operating system: BIOS POST, and protected-mode. At the end of the enumeration process, the devnode tree includes information about available system resources, required device drivers, and resource requirements. </P>

<P>Configuration Manager uses resource arbitrators to find a working resource allocation which satisfies the overall requirements of currently enumerated devices. Device drivers are then notified of their assigned configuration. </P>

<P>Windows 95 accommodates dynamic system events by broadcasting system messages to applications and device drivers. When an event such as the insertion or removal of a device occurs, applications and device drivers are notified. They can then take any required action or, in some cases, veto the configuration change. </P>

<P>The Plug and Play framework also uses and extends the registry and device information files (with the .INF filename extension). </P>

<P>The registry stores information about all devices ever installed on a particular machine, including devices that are not Plug and Play enabled (but detected when the operating system was installed), Plug and Play devices which have been located by an enumerator, device-specific state information, bindings of devices to device drivers, and data about the last known configuration, which is used to accelerate the allocation of resources. </P>

<P>The device information files contain information about known devices and their configurations. The system provides some class-information files (for example, SCSI.INF and MODEM.INF); others are provided by the device manufacturer. When a new device is detected or enumerated, all known .INF files are searched for entries matching the device ID. When a match is found, the appropriate files are copied and the required data is copied into a newly created registry entry. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Plug%20and%20Play%20System%20Components"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
