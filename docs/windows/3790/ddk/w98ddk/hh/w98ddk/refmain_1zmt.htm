<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Command Quick Reference</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Command Quick Reference">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_command_quick_reference_me"></A>Command Quick Reference</H3>

<P>The following is a quick reference list of System Debugger commands, ordered by Command Type:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=18%>Command</TH>
<TH align=left width=19%>Command Type</TH>
<TH align=left width=19%>Additional Arguments</TH>
<TH align=left width=44%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=18%><B>?</B></TD>
<TD width=19%>&nbsp;</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>print help menu</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>?</B></TD>
<TD width=19%>&nbsp;</TD>
<TD width=19%>&lt;expr&gt; | [h|d|t|o|q|b].&lt;expr&gt;</TD>
<TD width=44%>display expression (h = hex, d or t = decimal, o or q = octal, b = binary)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>?</B></TD>
<TD width=19%>&nbsp;</TD>
<TD width=19%>"printf string", &lt;expr&gt;, &lt;expr&gt;,</TD>
<TD width=44%>printf command</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>BC</B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[&lt;bp list&gt; | *] </TD>
<TD width=44%>clear breakpoint(s)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>BD </B></TD>
<TD width=19%> Breakpoint/Step</TD>
<TD width=19%> [&lt;bp list&gt; | *] </TD>
<TD width=44%>disable breakpoint(s)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>BE </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[&lt;bp list&gt; | *] </TD>
<TD width=44%>enable breakpoint(s)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>BL </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>list breakpoint(s)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>BP</B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[&lt;bp&gt;] [&lt;addr&gt;] [&lt;passcnt&gt;] ["&lt;bp cmds&gt;"] </TD>
<TD width=44%>set a breakpoint</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>BR</B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[&lt;bp&gt;] E|W|R|1|2|4 [&lt;addr&gt;] [&lt;passcnt&gt;] ["&lt;bp cmds&gt;"] </TD>
<TD width=44%>set a Pentium processor debug register (hardware breakpoint).</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>C </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;range&gt; &lt;addr&gt; </TD>
<TD width=44%>compare bytes</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>D</B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump memory</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DA </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump asciiz string</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DB </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump memory in bytes</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DD </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump memory in dwords</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DG[A] </B></TD>
<TD width=19%>80386 Data Structure</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump GDT entries</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DI[A] </B></TD>
<TD width=19%>80386 Data Structure</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump IDT entries</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DL[A|P|S|H] </B></TD>
<TD width=19%>80386 Data Structure</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump LDT entries</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DP[A|D] </B></TD>
<TD width=19%>80386 Data Structure</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump page directory/table entries</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DT </B></TD>
<TD width=19%>80386 Data Structure</TD>
<TD width=19%>[&lt;addr&gt;] </TD>
<TD width=44%>dump TSS</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DW </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>dump memory in words</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>DX </B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>dump contents of loadall buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>E </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;addr&gt; [&lt;list&gt;] </TD>
<TD width=44%>enter memory</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>F </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;range&gt; &lt;list&gt; </TD>
<TD width=44%>fill  memory</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>G[S|H||T|Z] </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[=&lt;addr&gt; [&lt;addr&gt; ...]] </TD>
<TD width=44%>go</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>H </B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&lt;word&gt; &lt;word&gt; </TD>
<TD width=44%>hexadd</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>I </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;word&gt; </TD>
<TD width=44%>input a byte from port</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>ID </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;word&gt; </TD>
<TD width=44%>input a dword from port</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>IW </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;word&gt; </TD>
<TD width=44%>input a word from port</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>J </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>&lt;expr&gt; [&lt;cmds&gt;] </TD>
<TD width=44%>execute &lt;cmds&gt; if &lt;expr&gt; is true (non-zero)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>K[V|S|B] </B></TD>
<TD width=19%>Disassemble / Stack Trace</TD>
<TD width=19%>[&lt;SS:BPaddr&gt;] [&lt;CS:IPaddr&gt;] </TD>
<TD width=44%>stack trace</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>K[V|S|B]T </B></TD>
<TD width=19%>Disassemble / Stack Trace</TD>
<TD width=19%>[TDB] </TD>
<TD width=44%>task stack trace</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>KA </B></TD>
<TD width=19%>Disassemble / Stack Trace</TD>
<TD width=19%>&lt;numargs&gt; </TD>
<TD width=44%>set number of stack dump arguments</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>LA </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;mapname&gt;] </TD>
<TD width=44%>list absolute symbols in active maps</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>LG </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;mapname&gt;] </TD>
<TD width=44%>list groups in active maps</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>LM </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>list linked and active maps</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>LN </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;addr&gt;] </TD>
<TD width=44%>list near symbols</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>LS </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;addr&gt;] </TD>
<TD width=44%>list symbols in group</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>LSE </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>&lt;re&gt; </TD>
<TD width=44%>list symbols specified by regular expression</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>M </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;range&gt; &lt;addr&gt; </TD>
<TD width=44%>move</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>O </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;word&gt; &lt;byte&gt; </TD>
<TD width=44%>output a byte to port</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>OD </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;word&gt; &lt;dword&gt; </TD>
<TD width=44%>output a dword to port</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>OW </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;word&gt; &lt;word&gt; </TD>
<TD width=44%>output a word to port</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>P[N|T|Z] </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[=&lt;addr&gt;] [&lt;word&gt;] </TD>
<TD width=44%>program step</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>R[T]|[&lt;reg&gt;]</B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>[[=] &lt;word&gt;]</TD>
<TD width=44%>Register<BR>
The values used in the R cmd for changing the flags register are:
<P><IMG SRC="images/refart_1.gif" ALT="" BORDER=0></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>S </B></TD>
<TD width=19%>Register, Memory, Port</TD>
<TD width=19%>&lt;range&gt; &lt;list&gt; </TD>
<TD width=44%>search</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>T[A|C|N|S|X|Z] </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>[=&lt;addr&gt;] [&lt;word&gt;] [&lt;addr&gt;] </TD>
<TD width=44%>trace</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>U </B></TD>
<TD width=19%>Disassemble / Stack Trace</TD>
<TD width=19%>[&lt;range&gt;] </TD>
<TD width=44%>unassemble</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>V</B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>Display debugger version/date</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>V[1 | 3] </B></TD>
<TD width=19%>Interrupt Vector</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>specify rings to intercept a trap vector</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>V2 </B></TD>
<TD width=19%>&nbsp;</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>enable/disable NMI trapping in Ring 0</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>VC[N|P|V|R|F] </B></TD>
<TD width=19%>Interrupt Vector</TD>
<TD width=19%>&lt;byte&gt; ... </TD>
<TD width=44%>stop intercepting trap vector</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>VL[N|P|V|R|F] </B></TD>
<TD width=19%>Interrupt Vector</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>list trap vectors intercepted</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>VO [N|P|R|V]</B></TD>
<TD width=19%>Interrupt Vector</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>lists interrupt vectors in the display format based on the newvec option. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>VS[N|P|V|R|F] </B></TD>
<TD width=19%>Interrupt Vector</TD>
<TD width=19%>&lt;byte&gt; ... </TD>
<TD width=44%>intercept trap vector, ring 3 only</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>VT[N|P|V|R|F] </B></TD>
<TD width=19%>Interrupt Vector</TD>
<TD width=19%>&lt;byte&gt; ... </TD>
<TD width=44%>intercept trap vector, all rings</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>W </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;map name&gt;] </TD>
<TD width=44%>make named map active</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>WA </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;mapname&gt; | *] </TD>
<TD width=44%>add a map to the active list</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>WR </B></TD>
<TD width=19%>Symbol, Symbol Map</TD>
<TD width=19%>[&lt;mapname&gt; | *] </TD>
<TD width=44%>remove a map from the active list</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>X</B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>Dumps a listing of the current execution environment (Bug report info).</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>Y[?] </B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>display/modify debugger options</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>Z  </B></TD>
<TD width=19%>Breakpoint/Step</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>zap the previous INT 1 or the current INT 3 with NOP's</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>ZD </B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>execute the default command</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>ZL </B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>list the default command</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>ZS </B></TD>
<TD width=19%>Miscellaneous</TD>
<TD width=19%>&nbsp;</TD>
<TD width=44%>set the default command</TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Command%20Quick%20Reference"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
