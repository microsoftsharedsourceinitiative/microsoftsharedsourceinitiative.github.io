<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExtDeviceModePropSheet</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_3908"></A>ExtDeviceModePropSheet</H1>

<PRE>int ExtDeviceModePropSheet(HWND hWnd, HINSTANCE hinstDriver, 
    LPCSTR lpszDevice, LPCSTR lpszPort, DWORD dwReserved,
    LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam)
 </PRE>

<P>Presents a property sheet to the user for controlling the attributes of a printer. 

<UL>
	<LI>Returns IDOK or IDCANCEL if successful; otherwise, returns -1. </LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TD width=41%><I>hWnd</I> </TD>
<TD width=59%>Parent window for the dialog box. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>hinstDriver</I> </TD>
<TD width=59%>Module instance of the device driver. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>lpszDevice</I> </TD>
<TD width=59%>Points to a null-terminated string that contains the friendly name of the printer. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>lpszPort</I> </TD>
<TD width=59%>Points to a null-terminated string that contains the name of the port to which the printer is connected, such as LPT1. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>dwReserved</I> </TD>
<TD width=59%>Unused; set to zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>lpfnAddPage</I> </TD>
<TD width=59%>See the definition of the <B>ExtDeviceMode</B> function. The printer driver enumerates property pages back to the caller using the <I>lpfnAddPage</I> and <I>lParam</I> parameters. The function specified by <I>lpfnAddPage</I> is called by the driver to enumerate each HPROPSHEETPAGE. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>lParam</I> </TD>
<TD width=59%>See the definition of the <B>ExtDeviceMode</B> function. The value of this parameter is passed back to the function specified by the <I>lpfnAddPage</I> parameter. </TD>
</TR>
</TABLE><BR>

<P>In order to support the new property sheet dialog boxes, printer drivers must fully support the new DEVMODE structure as well as this <B>ExtDeviceModePropSheet</B> DDI. For the basic information about property sheet management and manipulation, see the Win32 SDK documentation. The basic property sheet definitions can be found in PRSHT.H in %SDKROOT%\INC16 after the Win32 SDK is installed. The <B>ExtDeviceModePropSheet</B> definitions can be found in PRINT.H in %SDKROOT%\INC16. </P>

<P>When a printer driver receives an <B>ExtDeviceModePropSheet</B> call, it must build each of the property sheet dialogs it provides. The driver calls <B>lpfnAddPage</B> once for each property sheet it provides and should return from the <B>ExtDeviceModePropSheet</B> call only after all the property sheets have been added by calls to <B>lpfnAddPage</B>. </P>

<P>Note that since creating property sheets is an asynchronous process, the driver <B>ExtDeviceModePropSheet</B> function will return before the dialogs are actually created. Therefore, any data that is used to process the dialogs or update the system after the dialogs close must be dynamically allocated and a pointer to the structure passed in the PropSheetPage.lParam field. This data will then be accessible in the WM_INITDIALOG message and should be associated with that window. The simplest way to do this is to use </P>

<PRE>SetWindowLong(hWnd,DLG_USER,lpMyData)
 </PRE>

<P>A printer driver must assume that pointers passed to the <B>ExtDeviceModePropSheet</B> function will be invalid until the property sheet pages are actually created, so any data passed as parameters must be stored in the dynamically allocated structure. </P>

<P>The driver should use a release function to correctly terminate the property sheets (see the Win32 SDK documentation for more information about this). Terminating a property sheet also involves updating the default <B>DEVMODE</B> structure, sending a WM_DEVMODECHANGE message, freeing the allocated data structure, etc. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ExtDeviceModePropSheet"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
