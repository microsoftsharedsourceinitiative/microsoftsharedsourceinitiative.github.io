<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Range Lists</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_3574"></A>Range Lists</H2>

<P>A <I>range list</I> is a sorted list of IO port or memory address ranges (in DWORD form) in which no two ranges overlap. Resource arbitrators that manage I/O and memory resources use the range list services to discover whether a given IO or memory range conflicts with any other range. These services detect attempts to create range lists containing overlaps and either fail or create merged ranges where there would have been overlaps. Each range must specify a continguous range of addresses, but the range list itself can contain multiple ranges, none of which necessarily need to be contiguous with any other range in the list. </P>

<P>There are these range list services. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=67%>Service </TH>
<TH align=left width=33%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Add_Range</B> </TD>
<TD width=33%>Adds a memory range to a range list. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Create_Range_List</B> </TD>
<TD width=33%>Creates a list of memory ranges. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Delete_Range</B> </TD>
<TD width=33%>Deletes a memory range from a range list. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Dump_Range_List</B> </TD>
<TD width=33%>Dumps a range list to a debugging terminal. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Dup_Range_List</B> </TD>
<TD width=33%>Copies a range list. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_First_Range</B> </TD>
<TD width=33%>Retrieves the first range element in a range list. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Free_Range_List</B> </TD>
<TD width=33%>Frees the specified range list and memory allocated to it. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Intersect_Range_List</B> </TD>
<TD width=33%>Creates a range list from the intersection of two specified range lists. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Invert_Range_List</B> </TD>
<TD width=33%>Creates a range list that is the inverse of a specified range list; all claimed memory ranges in the new list are specified as free in the old list, and vice versa. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Next_Range</B> </TD>
<TD width=33%>Retrieves the next range element in a range list. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Test_Range_Available</B> </TD>
<TD width=33%>Checks a memory range against a range list to ensure no conflicts exist. </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Range%20Lists"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
