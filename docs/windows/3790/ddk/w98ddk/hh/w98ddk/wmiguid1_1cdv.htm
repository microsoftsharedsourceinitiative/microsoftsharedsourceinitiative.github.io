<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP Support Requirements</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_wmiguid1_irp_support_requirements"></A>IRP Support Requirements</H2>

<P>WMI defines 10 minor IRP codes for IRP major code IRP_MJ_SYSTEM_CONTROL. These IRPS are used to interface with device drivers that register as WMI data providers. Each minor code represents a different action that the driver can perform and can take up to four pointers, which are members of the WMI structure, that are passed in the IRP stack. All WMI IRPs are dispatched at PASSIVE_LEVEL.</P>

<PRE>struct {
    UINT_PTR  ProviderId;
    PVOID     DataPath;
    ULONG     BufferSize;
    PVOID     Buffer;
} WMI
</PRE>

<H4>Members</H4>

<DL>
<DT><B>ProviderId </B></DT>

<DD>Designates the device within the device stack to which the IRP is targeted. Upon reception of the IRP, the driver should inspect <B>ProviderId</B>. If it does not match the WMI provider ID of the device, then the driver must forward this request to the next device in the stack because this indicates that the IRP is intended for a device residing lower in the driver stack. If <B>ProviderId</B><I> </I>matches that of the device, the driver should process the request and complete the IRP returning success or an error, as appropriate. </DD>

<DT><B>DataPath </B></DT>

<DD>Pointer to the GUID representing the data block being enabled, disabled, queried, or set. WMI sets the WNODE_FLAG_STATIC_INSTANCE_NAME flag for static instance data blocks and passes instance names as indexes into the list registered by the data provider. WMI resets the flag and passes the full instance name text for data blocks registered as dynamic instance name providers.</DD>

<DT><B>Buffersize </B></DT>

<DD>Specifies the actual or maximum length of the buffer respectively, depending on the minor function code. If <B>BufferSize</B><I> </I>is smaller than what is needed to fill the appropriate WNODE response, the data provider should instead fill in a WNODE_TOO_SMALL. If <B>BufferSize</B> is smaller than sizeof(WNODE_TOO_SMALL), then the driver should return an error of STATUS_BUFFER_TOO_SMALL.</DD>

<DT><B>Buffer</B></DT>

<DD>Pointer to the input and/or output buffer. This buffer is always nonpaged.
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP%20Support%20Requirements"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
