<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>.t (VMM Debug Binary Utility)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT=".t (VMM Debug Binary Utility)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_4689"></A>.t (VMM Debug Binary Utility)</H1>

<P>Toggles the trace switch. At start time the debugging VMM does not performing any fault logging, but when this command is invoked, then the message "start tracing" is displayed, at which point debugging code in the VMM starts logging each fault/exception that occurs. The logging includes the current registers, whether executing V86 client, PM client or VMM/VxD code, system time, fault #, etc. Both the fault entry into the VMM and the exit from the VMM are logged. The logged information can be viewed with the ".S" commands.</P>

<P>Invoking ".T" a second time displays the message "stop tracing", at which point the logging will stop, but any previously logged information can still be viewed. So, ".T" toggles the logging state between logging and not logging. Each time that logging is started, the current log is lost, so it is only possible to view the most recently logged session. The logging is done into a circular queue, so it will start overwriting at some point, but the queue is defined large enough to give a good view into the types of faults that are occurring. </P>

<P>This command is very useful for determining problems that are related to fault processing and sequencing, such as virtually handling I/O instructions being executed by the client. It is also useful for when the Windows/386 wants to blow-up; it may be possible to determine what happened just prior to the crash to find out what was at fault. It is often helpful to turn on procedure call tracing also. Refer to the ".VMM" command for details on call tracing. The debugging macro Queue_Out, logs messages into a separate circular queue. Each message is associated to a fault log item.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: .t%20(VMM%20Debug%20Binary%20Utility)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
