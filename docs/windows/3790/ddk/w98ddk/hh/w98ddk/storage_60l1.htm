<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IFSMgr_RemoveFileSystemApiHook</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4515"></A>IFSMgr_RemoveFileSystemApiHook</H3>

<PRE>IFSMgr_RemoveFileSystemApiHook(
 pIFSFileHookFunc HookFunc
 )
 </PRE>

<P>This service is called to remove a previously installed a file system API hook. This function will always succeed unless an invalid parameter is passed in. There is no situation in which a previously installed hook cannot be removed. However, hookers that provide basic functionality that the system depends upon should never unhook themselves until the system shuts down. Otherwise, the behavior of the entire system will be affected. However, the IFS manager does not do any explicit checking to prevent this case from happening. 

<DL>
<DT><I>HookFunc</I> </DT>

<DD>Supplies the address of the hook function to be removed. This should the same as the function that was previously installed to hook the file system APIs. </DD>
</DL>

<UL>
	<LI>Returns zero if the hook was successfully removed. Returns -1 if the hook was not removed. The only way this function can fail is if an invalid function address is passed in. </LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IFSMgr_RemoveFileSystemApiHook"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
