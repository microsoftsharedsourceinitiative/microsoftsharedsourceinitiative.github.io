<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Driver Interface Rules</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_320"></A>Driver Interface Rules</H3>

<P>NETDI uses upper and lower interfaces to describe the possible relations between the layered drivers in the network system. The lower interface is the software or hardware interface that the driver talks to. For example, a network adapter driver might talk to Ethernet or token ring. The upper interface is the software interface that the driver provides. For example, an NDIS 3.1 network adapter driver provides ndis3 as an upper interface; an NDIS 3.1 transport driver has ndis3 as a lower interface and might provide NetBios or ipx as its upper interface. </P>

<P>The following interface names are predefined to cover the most common interfaces; however, any string of alphanumeric characters is a legal interface name. This allows you to create private interfaces between components. When defining your own interface, include the manufacturer name in the interface name to avoid conflicts with other vendors. </P>

<TABLE>

<TR VALIGN="top">
<TD width=41%><I>ethernet</I> </TD>
<TD width=59%>lower edge for an Ethernet network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>tokenring</I> </TD>
<TD width=59%>lower edge for a token ring network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>serial</I> </TD>
<TD width=59%>lower edge for a serial network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>fddi</I> </TD>
<TD width=59%>lower edge for an FDDI network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>baseband</I> </TD>
<TD width=59%>lower edge for a baseband network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>broadband</I> </TD>
<TD width=59%>lower edge for a broadband network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>arcnet</I> </TD>
<TD width=59%>lower edge for an ARCNET network adapter </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>odi</I> </TD>
<TD width=59%>ODI </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>ndis2</I> </TD>
<TD width=59%>NDIS 2.1 </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>ndis3</I> </TD>
<TD width=59%>NDIS 3.X </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>netbios</I> </TD>
<TD width=59%>NetBIOS </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>ipx</I> </TD>
<TD width=59%>IPX </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>tdi </TD>
<TD width=59%>TDI interface to TCP/IP </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>winsock</I> </TD>
<TD width=59%>the Windows Sockets interface </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>winnet31</I> </TD>
<TD width=59%>upper edge for a Windows 3.1 compatible WinNet driver </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>multinet31 </I></TD>
<TD width=59%>upper edge for a Windows for Workgroups multinetwork compatible WinNet driver </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><I>winnet4</I> </TD>
<TD width=59%>upper edge for a Window 4.0 network provider </TD>
</TR>
</TABLE><BR>

<P>NETDI matches the upper and lower interfaces of drivers to validate bindings between drivers. In addition, NETDI also checks for other required or excluded interfaces down the chain of bound driver and in the entire network subsystem. If an object has a lower edge that does not match the upper edge of any of the installed components, NETDI will attempt to install a component that does match the interface. For example, the Client for Windows Networks has a lower edge of NetBIOS. If the user tries to install this client without a NetBIOS protocol, NETDI will automatically install a protocol to match the required interface. In this case it would install NetBEUI. </P>

<P>The following list shows the registry entries for specifying interfaces requirements for a network driver. An <I>interface list</I> is a comma-separated list of interface names, for example, ndis2, ndis3, odi. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=25%>Driver Sub Key </TH>
<TH align=left width=25%>Value Name </TH>
<TH align=left width=25%>Value </TH>
<TH align=left width=25%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=25%>Ndi\Interfaces </TD>
<TD width=25%>DefUpper </TD>
<TD width=25%><I>interface list</I> </TD>
<TD width=25%>These are the currently available upper interfaces. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Ndi\Interfaces </TD>
<TD width=25%>DefLower </TD>
<TD width=25%><I>interface list</I> </TD>
<TD width=25%>These are the currently available lower interfaces. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Ndi\Interfaces </TD>
<TD width=25%>UpperRange </TD>
<TD width=25%><I>interface list</I> </TD>
<TD width=25%>These are all possible upper interfaces. This value is maintained by NETDI and should not be set in an INF file. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Ndi\Interfaces </TD>
<TD width=25%>LowerRange </TD>
<TD width=25%><I>interface list</I> </TD>
<TD width=25%>These are all possible lower interfaces. This value is maintained by NETDI and should not be set in an INF file. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Ndi\Interfaces </TD>
<TD width=25%>RequireAny </TD>
<TD width=25%><I>interface list</I> </TD>
<TD width=25%>The driver requires that any driver in the system supports this interface. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Ndi\Interfaces </TD>
<TD width=25%>ExcludeAny </TD>
<TD width=25%><I>interface list</I> </TD>
<TD width=25%>The driver requires that no driver in the system supports this interface. </TD>
</TR>
</TABLE><BR>

<P>The current upper and lower interfaces are queried in an NDI procedure by sending the appropriate NDI_GET_UPPER_INTERFACES and NDI_GET_LOWER_INTERFACES messages. The default NDI procedure reads the interface list from the registry. A custom NDI procedure can therefore enable or disable interfaces by returning a different interface list. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Driver%20Interface%20Rules"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
