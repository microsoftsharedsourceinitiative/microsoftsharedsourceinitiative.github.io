<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>t (Trace)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="t (Trace)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_4647"></A>t (Trace)</H1>

<PRE>t[a|c|n|s|x|z][=start_addr][count][addr]
 </PRE>

<P>The <B>t</B> command executes one or more instructions along with the default command string and then displays the decoded instruction. If you include the <I>start_addr</I> parameter, tracing starts at the specified address. Otherwise, the command steps through the next machine instruction and then executes the default command string. The <B>t</B> command uses the hardware trace mode of the Intel microprocessor. Consequently, you can also trace instructions stored in read-only memory (ROM). 

<DL>
<DT><B>a</B> </DT>

<DD>Indicates that an ending address is specified for the trace. Instructions are traced until the address in <I>addr</I> is reached. </DD>

<DT><B>c</B> </DT>

<DD>Suppresses all output and counts instructions traced. An ending address is required for this command. Instructions are traced until the address in <I>addr</I> is reached. </DD>

<DT><B>n</B> </DT>

<DD>Suppresses the register display so just the assembly line is displayed. This works only if the default command, <B>zd</B>, is set to <B>r</B> (the normal setting). </DD>

<DT><B>s</B> </DT>

<DD>Suppresses output; the instruction and count are displayed for each <B>call</B> and the return from that call. </DD>

<DT><B>x</B> </DT>

<DD>Forces the debugger to trace regions of code known to be untraceable (_PGSwitchContext, for example). </DD>

<DT><B>z</B> </DT>

<DD>Allows original trap handler address to be traced into without having to unhook the exception. Use this option instead of <B>vcp d; t; vsp d</B>. </DD>

<DT><I>start_addr</I> </DT>

<DD>Specifies the instruction address at which to start tracing. The equal sign (=) is required. </DD>

<DT><I>count</I> </DT>

<DD>Specifies the number of instructions to execute and trace. </DD>

<DT><I>addr</I> </DT>

<DD>Specifies the instruction address at which to stop tracing. 
</DD>
</DL>

<P>The following command causes the debugger to execute 16 (10h) instructions beginning at 011A in the current selector: </P>

<PRE>t=011A 10
 </PRE>

<P>The debugger executes and displays the results of the default command string for each instruction. The display is scrolled until the last instruction is executed. Press the CTRL+S key combination to stop the scrolling and CTRL+Q to resume. </P>

<P>This command does not trace into INTs (but will trace out), and tracing through popf or popfd usually does not work.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: t%20(Trace)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
