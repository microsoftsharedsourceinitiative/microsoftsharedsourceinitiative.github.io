<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Virtual Machine Manager</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_4711"></A>Virtual Machine Manager</H2>

<P>The VMM is a 32-bit protected-mode operating system. Its primary responsibility is to create, run, monitor, and terminate virtual machines. The VMM provides services that manage memory, tasks, interrupts, and protection faults. The VMM works with virtual devices, 32-bit protected-mode dynamic-link libraries, to allow the virtual devices to intercept interrupts and faults in order to control the access an application has to hardware devices and installed software. </P>

<P>Both the VMM and the virtual devices run in a single, 32-bit, flat model address space at privilege level zero (also called ring 0). The system creates two global descriptor table (GDT) selectors, one for code and the other for data, and uses these selectors in the CS, DS, SS, and ES segment registers. Both selectors have a base address of zero and a limit of four gigabytes, so all the segment registers point to the same address space. The VMM and virtual devices never change these registers. </P>

<P>The VMM provides single-threaded, preemptive multitasking. It runs multiple applications simultaneously by sharing CPU time between the virtual machines in which the applications run. The VMM is also nonreentrant. This means virtual devices must synchronize access to the VMM services. The VMM provides services, such as semaphores and events, to help virtual devices prevent re-entering the VMM. </P>

<P>The VMM creates and initializes the system virtual machine when it first starts. Initially, the WIN.COM program loads VMM32.VXD which contains the VMM and the default virtual devices. The VMM, loaded into extended memory allocated using an XMS driver, initializes itself and the virtual devices, and switches to protected-mode execution. When initializing, virtual devices typically install callback procedures for interrupts and faults, and allocate memory for resources associated with the system virtual machine. The virtual shell device (SHELL), typically the last virtual device to be initialized, starts Windows in the system virtual machine by loading the Windows kernel, KRNL386.EXE. The kernel loads all other required pieces of Windows which culminates in the starting of Windows 95 Shell. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Virtual%20Machine%20Manager"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
