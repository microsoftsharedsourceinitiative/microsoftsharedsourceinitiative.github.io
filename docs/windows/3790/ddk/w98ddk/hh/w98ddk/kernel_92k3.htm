<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Hook_Device_PM_API</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1403"></A>Hook_Device_PM_API</H1>

<PRE>include vmm.inc

mov     eax, ID                 ; device ID
mov     esi, OFFSET32 Callback  ; points to new API callback
VMMCall Hook_Device_PM_API
 </PRE>

<P>Installs an API callback procedure allowing a virtual device to intercept calls to the protected-mode API of another virtual device. This service is intended to support virtual devices that need to monitor calls to the APIs of other virtual devices. Most virtual devices will never need this service. Uses ESI, Flags. 

<UL>
	<LI>Returns with the carry flag clear if successful, set if the specified virtual device does not support a protected-mode API. If successful, the ESI register contains the address of the previous callback procedure. </LI>
</UL>

<DL>
<DT><I>ID</I></DT>

<DD>Identifier of the virtual device to monitor. </DD>

<DT><I>Callback</I></DT>

<DD>Address of the callback procedure to install. For more information about the callback procedure, see below. 
</DD>
</DL>

<P>The system calls the callback procedure whenever an application in a virtual machine calls the API for the specified virtual machine. The system calls the callback as follows: </P>

<PRE>mov     ebx, VM             ; current VM handle
mov     ebp, OFFSET32 crs   ; points to Client_Reg_Struc
call    [Callback]
 </PRE>

<P>The <I>VM</I> parameter is a handle identifying the current virtual machine and the <I>crs</I> parameter points to a <B>Client_Reg_Struc</B> structure containing the register values of the current virtual machine. Other registers contain the parameter values intended for the API. </P>

<P>The callback procedure can carry out tasks, but eventually must pass execution to the previous API callback procedure, preserving the EBX and EBP registers when it calls. </P>

<H4>See Also</H4>

<P><B>Hook_Device_V86_API</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Hook_Device_PM_API"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
