<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Brush Support</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_505"></A>Brush Support</H2>

<P><B>DIB_RealizeObject</B> converts logical drawing objects to physical drawing objects. For brushes, the logical brush structure, <B>LOGBRUSH</B>, has two colors in it, <B>lbColor</B> and <B>lbBkColor</B>. The member <B>lbColor</B> is a logical color. This is the color that the display driver should use to generate a solid brush. Since the display driver may not be able to directly support this logical color (for example, it might not be one of the 16 colors that a driver running in 16 color mode can support), it should create a dither pattern that closely approximates this color. From GDI's perspective, this is still a solid brush because the brush style <B>lbStyle</B> is BS_SOLID. </P>

<P>Brushes have three sections: the color part, the monochrome part, and the transparency mask (which is used with hatched brushes). The color part is used to draw on the screen or DDB, and the monochrome part is used to draw on old-style monochrome bitmaps. </P>

<P>The member <B>lbBkColor</B> is only used when a hatched brush is realized. The <B>lbBkColor</B> member is a physical color that has been previously converted from logical to physical with a call to <B>DIB_ColorInfo</B>. </P>

<P>When the DIB Engine realizes a hatched brush, it maps all 1 bits in the pattern to the foreground color and all 0 bits in the pattern to the background color and puts the results into the <B>dp8BrushBits </B>member of the <B>DIB_Brush8</B> structure. During realization the DIB engine also converts the logical foreground color into a physical color and stores it into <B>dp8FgColor </B>member. The DIB engine does this so that drivers that have hardware acceleration can draw fast hatched brushes by loading the color in <B>dp8FgColor</B> into their foreground color register, loading the color in <B>dp8BgColor </B>into their background color register, and then drawing with the bit pattern in the <B>dp8BrushMask</B> portion of the brush. Common video hardware has color expand capability that will automatically map the 1 bits to the contents of their foreground color register and the 0 bits to the contents of their background color register. </P>

<P>In summary, the <B>dp8FgColor</B> member contains a logical color if the brush style is BS_SOLID or BS_PATTERN (although it is not used for pattern brushes). If the brush style is BS_HATCHED, <B>dp8FgColor</B> contains a physical color. The <B>dp8BgColor </B>member is only used with BS_HATCHED style brushes and it is a physical color. </P>

<H4>See Also</H4>

<P><B>DIB_Brush</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Brush%20Support"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
