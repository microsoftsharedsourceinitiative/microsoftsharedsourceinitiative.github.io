<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Hook_Device_Service</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1404"></A>Hook_Device_Service</H1>

<PRE>include vmm.inc

GetVxDServiceOrdinal eax, Service
mov     esi, OFFSET32 HookProc  ; points to the hook procedure to install
VMMCall Hook_Device_Service

jc      not_installed           ; carry flag set if error
IF WIN31COMPAT
mov     [Real_Proc], esi
ENDIF
 </PRE>

<P>Allows one virtual device to monitor or replace the services of another virtual device, or of the VMM itself. Uses ESI, Flags. 

<UL>
	<LI>Returns with the carry flag clear if successful, set otherwise. If successful, the ESI register contains the address of the specified service. </LI>
</UL>

<DL>
<DT><I>Service</I></DT>

<DD>Virtual device or VMM service to hook. </DD>

<DT><I>HookProc</I></DT>

<DD>Address of the hook procedure to install. The hook procedure is called with the same parameters as the service specified by the <I>Service</I> parameter. 
</DD>
</DL>

<P>When a dynamically-loaded VxD is unloaded, it must remove any service hook procedures it has installed by using the <B>Unhook_Device_Service</B> service. </P>

<P>Virtual devices that use this service must use extreme care to preserve the full functionality of the virtual device whose services are monitored or replaced. </P>

<P>More than one virtual device can hook a device service. The last hook installed is the first one called. </P>

<P>The hook procedure must save and restore registers that are not modified by the hooked service. Also, if flags are a passed as an entry or exit parameter, the hook procedure must also preserve the flags. </P>

<P>If the hooked service uses the C calling convention, the hook procedure must copy the entire parameter stack frame before attempting to call the hooked service. If the hooked service uses a register-based calling convention, the hook procedure must preserve all registers, even registers that are not currently used as input or output parameters. </P>

<P>The hook procedure must have been declared with the HOOK_PROC attribute to the <B>BeginProc</B> macro. </P>

<H4>See Also</H4>

<P><B>Unhook_Device_Service</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Hook_Device_Service"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
