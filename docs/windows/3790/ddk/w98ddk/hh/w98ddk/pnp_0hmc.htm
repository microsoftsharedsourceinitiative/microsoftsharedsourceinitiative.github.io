<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Loading Base Drivers Specified in the Registry</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_3644"></A>Loading Base Drivers Specified in the Registry</H3>

<P>VMM32 examines the registry branch SYSTEM\CurrentControlSet\Services\VxD and enumerates all keys under this branch. ("Enumerate" here refers to the enumeration of registry keys, not to Plug and Play enumeration.) If it finds a value "StaticVxD=", it will load that static VxD and execute its real mode initialization portion. For example: </P>

<PRE>SYSTEM\CurrentControlSet\Services\VxD\V86MemoryManger
         Description=MS-DOS Virtual 8086 Memory Manager
         Manufacturer=Microsoft
         StaticVxD=*V86MMGR
         Start=0
         EMMEXCLUDE=E000-EFFF
 SYSTEM\CurrentControlSet\Services\VxD\ConfigMG
         Description=Plug and Play Configuration Manager
         Manufacturer=Microsoft
         StaticVxD=*CONFIGMG
         Start=0
 SYSTEM\CurrentControlSet\Services\VxD\IOServices
         Description=IO Services Driver Version 4.0
         Manufacturer=Microsoft
         StaticVxD=*IOS
         Start=0
 </PRE>

<P>Entries exist in this section of the registry for every VxD that is not directly associated with any hardware. These drivers used to be specified under [386ENH] in SYSTEM.INI. Examples of these devices are DOSMGR, V86MMGR, Reboot, VMPoll, and BiosXlat. </P>

<P>Device specific information can be stored in the registry under the same key as the driver. In the preceding example, the V86MemoryManager key contains the value EMMEXCLUDE=E000-EFFF, which is a setting specific to the V86MMGR VxD. Any other VxD-specific information can be grouped with the driver it is associated with in the same way. VxDs can use the VMM services <B>_GetRegistryKey</B> or <B>_GetRegistryPath</B> to discern the location from which they were loaded, and then use this information to read any associated values. Although loading VxDs from SYSTEM.INI (and the associated <B>ReadProfileString</B> and <B>WriteProfileString</B> functions) will still be supported for compatibility with older drivers and setup programs, driver writers are encouraged to use this location and load method for new VxDs and associated switch settings. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Loading%20Base%20Drivers%20Specified%20in%20the%20Registry"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
