<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_PageLock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1258"></A>_PageLock</H1>

<PRE>include vmm.inc

VMMCall _PageLock, &lt;hMem, nPages, PageOff, flags&gt;

or      eax, eax        ; nonzero if locked, zero if error
jz      not_locked
 </PRE>

<P>Locks one or more pages in the specified memory block. Uses EAX, ECX, EDX, and Flags. </P>

<P>Returns a nonzero value in the EAX register if successful, zero otherwise. 

<DL>
<DT><I>hMem</I></DT>

<DD>Handle (base linear address) of the memory block that contains the pages to lock. This value have been previously returned by the <B>_PageAllocate</B>, <B>_PageReAllocate,</B> or <B>_PageReserve</B> service. </DD>

<DT><I>nPages</I></DT>

<DD>Number of pages to lock. </DD>

<DT><I>PageOff</I></DT>

<DD>Offset in pages from the start of the memory block to the first page to lock. </DD>

<DT><I>flags</I></DT>

<DD>Operation flags. Can be zero or the PAGELOCKEDIFDP value. All other values are reserved. 

<P>If the PAGELOCKEDIFDP value is specified, pages are locked only if the virtual swap device uses MS-DOS or BIOS functions to write pages to the hardware. The PAGELOCKEDIFDP value cannot be used until after the <B>Init_Complete</B> message has been processed. 

</DD>
</DL>

<P>The <B>_LinPageLock</B> service is the preferred method of locking pages. </P>

<P>This service returns an error if the sum of the <I>PageOff</I> and <I>nPages</I> parameters is greater than the number of pages in the memory block. </P>

<P>This service has no effect on memory blocks allocated using the PAGEFIXED value; such memory is always locked. </P>

<P>Virtual devices must not assume that the requested number of pages can always be locked. </P>

<P>Each page in a memory block has an individual lock count. This service increments the lock count each time the page is locked, and decrements the count each time the page is unlocked. The lock count must be zero for the page to be unlocked. This means that if the handle is locked 5 times, it has to be unlocked 5 times. Virtual devices must not leave handles locked when not needed. </P>

<H4>See Also</H4>

<P><B>_PageAllocate</B>, <B>_PageUnLock</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _PageLock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
