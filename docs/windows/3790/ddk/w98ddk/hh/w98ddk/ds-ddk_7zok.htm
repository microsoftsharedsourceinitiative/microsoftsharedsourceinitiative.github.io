<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IDsDriverBuffer::Unlock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IDsDriverBuffer::Unlock">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_dxddk_idsdriverbuffer_unlock_dsound"></A>IDsDriverBuffer::Unlock</H1>

<P>The <B>IDsDriverBuffer::Unlock</B> method releases a block of sound data to the driver. The driver should perform whatever actions are necessary to output the audio data to the sound device. </P>

<PRE class=syntax><B>HRESULT Unlock(</B> 
  <B>LPVOID</B> <I>pvAudio1</I><B>,</B> 
  <B>DWORD</B> <I>dwLen1</I><B>,</B> 
  <B>LPVOID</B> <I>pvAudio2</I><B>,</B> 
  <B>DWORD</B> <I>dwLen2</I> 
 <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pvAudio1</I> </DT>

<DD>Pointer to the beginning of the first audio block. </DD>

<DT><I>dwLen1</I> </DT>

<DD>The number of bytes written to <I>pvAudio1</I>. </DD>

<DT><I>pvAudio2</I> </DT>

<DD>Pointer to the beginning of the second audio block. </DD>

<DT><I>dwLen2</I> </DT>

<DD>The number of bytes written to <I>pvAudio2</I>. 
</DD>
</DL>

<H4>Return Values</H4>

<P>Returns DS_OK if successful, or one of the following error values otherwise: </P>

<P><A HREF="ds-ddk_7gf8.htm#_dxddk_dserr_invalidcall_dsound">DSERR_INVALIDCALL</A></P>

<P><A HREF="ds-ddk_7gf8.htm#_dxddk_dserr_invalidparam_dsound">DSERR_INVALIDPARAM</A></P>

<H4>Remarks</H4>

<P>The data block is actually described by two pointers; both are required because sound buffers are circular. If the locked bytes do not wrap around the end of the buffer, the second pointer (<I>pvAudio2</I>) is NULL. However, if the bytes do wrap around, then the second pointer points to the beginning of the buffer. </P>

<P>Each call to <B>IDsDriverBuffer::Unlock</B> is preceded by a corresponding call to <A HREF="ds-ddk_10x0.htm"><B>IDsDriverBuffer::Lock</B></A>. The pointer parameters are always the same pointers as those returned by <B>IDsDriverBuffer::Lock</B>. However, the number of bytes unlocked may be less than the number of bytes locked if the application does not fill the locked region. See <B>IDsDriverBuffer::Lock</B> for more details. </P>

<P>For some devices (such as DMA-based cards that do not support hardware secondary buffers), repeated calls to <B>IDsDriverBuffer::Lock</B> and <B>IDsDriverBuffer::Unlock</B> are unnecessary. In this case, the driver should specify the DSDCAPS_DONTNEEDLOCK flag in the <A HREF="ds-ddk_9mck.htm"><B>DSDRIVERDESC</B></A> structure returned by <A HREF="ds-ddk_3g84.htm"><B>IDsDriver::GetDriverDesc</B></A> method. If this flag is specified, then the <B>IDsDriverBuffer::Unlock</B> method is never called by DirectSound. In that case, the <B>IDsDriverBuffer::Unlock</B> method should simply return <A HREF="ds-ddk_7gf8.htm#_dxddk_dserr_unsupported_dsound">DSERR_UNSUPPORTED</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IDsDriverBuffer::Unlock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
