<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Map_Flat</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1410"></A>Map_Flat</H1>

<PRE>include vmm.inc

mov     ah, SegOffset    ; client register containing the segment
mov     al, OffOffset    ; client register containing the offset
VMMCall Map_Flat

cmp     eax, -1         ; -1 if error
je      error
mov     [LinAddr], eax  ; ring-0 linear address
 </PRE>

<P>Converts the address contained in the specified client registers to a linear address. The given address is either a selector:offset or segment:offset address, depending on the execution mode of the current virtual machine. Uses EAX, Flags. 

<UL>
	<LI>Returns a ring-0 linear address in the EAX register if successful, – 1 if the specified selector is invalid. </LI>
</UL>

<DL>
<DT><I>SegOffset</I></DT>

<DD>Offset of the client register containing the segment address or selector. </DD>

<DT><I>OffOffset</I></DT>

<DD>Offset of the client register containing the offset address. Can be – 1, in which case the offset address is zero. 
</DD>
</DL>

<P>The <I>SegOffset</I> and <I>OffOffset</I> parameters specify offsets, in bytes, relative to the beginning of the <B>Client_Reg_Struc</B> structure for the current virtual machine. </P>

<P>Before converting an address, <B>Map_Flat</B> checks the current execution mode and, for protected-mode applications, the bitness of the DPMI client. If the virtual machine is running a 32-bit protected mode application, it uses 32-bit address offsets. For V86 and 16-bit protected-mode applications, it uses 16-bit address offsets and ignores the high word if the <I>OffOffset</I> parameter specifies a 32-bit register. </P>

<P>The following example converts the address <B>Client_DS:Client_DX</B> and returns the linear address in EAX: </P>

<PRE>mov     ax, (Client_DS SHL 8) + Client_DX
VMMCall Map_Flat
 </PRE>

<P>It is typically more convenient to use the <B>Client_Ptr_Flat</B> macro instead. </P>

<H4>See Also</H4>

<P><B>Client_Ptr_Flat</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Map_Flat"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
