<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Returning Information in an MCI Structure</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_2534"></A>Returning Information in an MCI Structure</H2>

<P>When you use an MCI structure to return integer information that also has a string equivalent, MCI needs the string ID to find it in the resource table. The high-order word of the return member is set to the string ID. The low-order word of the return member is set to the return value. You can use the <B>MAKEMCIRESOURCE</B> macro to combine these values. For example, the following statement assigns information for the song-pointer format to the return member: </P>

<PRE>lpStatus-&gt;dwReturn = MAKEMCIRESOURCE(MCI_SEQ_FORMAT_SONGPTR,
    MCI_SEQ_FORMAT_SONGPTR_S);
 </PRE>

<P>Many of the return values defined in MMSYSTEM.H also have a string resource ID defined in MMDDK.H. Identifiers which are only used for return values and are not input parameters will normally have only one version (they do not have a resource identifier with the _S suffix). The following string resource IDs are defined by MMDDK.H: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=40%>String Resource ID </TH>
<TH align=left width=60%>MCI Constant </TH>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_BYTES_S </TD>
<TD width=60%>MCI_FORMAT_BYTES </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_FRAMES_S </TD>
<TD width=60%>MCI_FORMAT_FRAMES </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_HMS_S </TD>
<TD width=60%>MCI_FORMAT_HMS </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_MILLISECONDS_S </TD>
<TD width=60%>MCI_FORMAT_MILLISECONDS </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_MSF_S </TD>
<TD width=60%>MCI_FORMAT_MSF </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_SAMPLES_S </TD>
<TD width=60%>MCI_FORMAT_SAMPLES </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_SMPTE_24_S </TD>
<TD width=60%>MCI_FORMAT_SMPTE_24 </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_SMPTE_25_S </TD>
<TD width=60%>MCI_FORMAT_SMPTE_25 </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_SMPTE_30_S </TD>
<TD width=60%>MCI_FORMAT_SMPTE_30 </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_SMPTE_30DROP_S </TD>
<TD width=60%>MCI_FORMAT_SMPTE_30DROP </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_FORMAT_TMSF_S </TD>
<TD width=60%>MCI_FORMAT_TMSF </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_SEQ_FILE_S </TD>
<TD width=60%>MCI_SEQ_FILE </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_SEQ_FORMAT_SONGPTR_S </TD>
<TD width=60%>MCI_SEQ_FORMAT_SONGPTR </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_SEQ_MAPPER_S </TD>
<TD width=60%>MCI_SEQ_MAPPER </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_SEQ_MIDI_S </TD>
<TD width=60%>MCI_SEQ_MIDI </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_SEQ_NONE_S </TD>
<TD width=60%>MCI_SEQ_NONE </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_SEQ_SMPTE_S </TD>
<TD width=60%>MCI_SEQ_SMPTE </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MCI_VD_FORMAT_TRACK_S </TD>
<TD width=60%>MCI_VD_FORMAT_TRACK </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>MIDIMAPPER_S </TD>
<TD width=60%>MIDIMAPPER </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>WAVE_FORMAT_PCM_S </TD>
<TD width=60%>WAVE_FORMAT_PCM </TD>
</TR>

<TR VALIGN="top">
<TD width=40%>WAVE_MAPPER_S </TD>
<TD width=60%>WAVE_MAPPER </TD>
</TR>
</TABLE><BR>

<P>MCI uses the high-order word of the <B>DriverProc</B> return value to tell <B>mciSendString</B> how to convert the information returned in the MCI structure into string form. (The <B>mciSendString</B> function translates the string interface used by an application to the command interface used by your device driver.) The following flags are defined for the high-order word of the <B>DriverProc</B> return value: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>Flag </TH>
<TH align=left width=65%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=35%>MCI_RESOURCE_RETURNED </TD>
<TD width=65%>Indicates the high-order word of the value in the return member is a string resource ID. This ID is translated by <B>mciSendString</B> by loading the specified resource. </TD>
</TR>

<TR VALIGN="top">
<TD width=35%>MCI_RESOURCE_DRIVER </TD>
<TD width=65%>Indicates the high-order word of the value in the return member is a string resource ID defined by the device driver. This flag requires MCI_RESOURCE_RETURNED. </TD>
</TR>

<TR VALIGN="top">
<TD width=35%>MCI_COLONIZED3_RETURN | MCI_COLONIZED4_RETURN </TD>
<TD width=65%>Indicates that when the <B>DWORD</B> value in the return member is converted into a string, its individual bytes should be separated by colons. </TD>
</TR>

<TR VALIGN="top">
<TD width=35%>MCI_INTEGER_RETURNED </TD>
<TD width=65%>Indicates that the value in a structure that allows either integer or string returns is an integer value. </TD>
</TR>
</TABLE><BR>

<P>Integer return values which have resource string equivalents are indicated by setting the MCI_RESOURCE_RETURNED bit in the error return. This indicates that the high-order word of the value in the return member is a string ID to load. An application that uses <B>mciSendCommand</B> to call your driver will not see the high-order word of the return value when you return MCI_RESOURCE_RETURNED. When this flag is set, MCI will clear the high-order word of the return member before it returns to the application. Using the high-order word for resource data restricts the integer return value to the 16-bits of the low-order word. The following code fragment sets the MCI_RESOURCE_RETURNED bit for the <B>DriverProc</B> return value: </P>

<PRE>lpStatus-dwReturn = MAKEMCIRESOURCE(MCI_SEQ_FORMAT_SONGPTR,
    MCI_SEQ_FORMAT_SONGPTR_S);
return MCI_RESOURCE_RETURNED;
 </PRE>

<P>If your device driver defines the resource string, use the MCI_RESOURCE_DRIVER flag with the MCI_RESOURCE_RETURNED flag. </P>

<P>If your device driver returns information in the return member that should be separated by colons when it is displayed, use the MCI_COLONIZED3_RETURN or MCI_COLONIZED4_RETURN flag. For example, 0x01020304 is "colonized" as "4:3:2" for MCI_COLONIZED3_RETURN or "4:3:2:1" for MCI_COLONIZED4_RETURN. </P>

<P>If the return member of the structure can return either integer or string values, and your device driver is returning an integer value, use the MCI_INTEGER_RETURNED flag in the <B>DriverProc</B> return value. For example, the <B>sysinfo</B> command can return both string and integer data. When this flag is set, the returned integer is converted into a string equivalent by <B>mciSendString</B>. </P>

<P>Structures that return string data or RECT data do not require that you set any flags in the return value for <B>DriverProc</B>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Returning%20Information%20in%20an%20MCI%20Structure"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
