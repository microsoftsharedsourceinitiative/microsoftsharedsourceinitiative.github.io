<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetPrinter</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_3951"></A>SetPrinter</H1>

<PRE>BOOL SetPrinter(
  HANDLE hPrinter,   /* handle of printer object                  */
  DWORD  dwLevel,    /* structure level                           */
  LPBYTE lpbPrinter, /* address of array containing printer data  */
  DWORD  dwCommand   /* printer-state command                     */
);
 </PRE>

<P>Sets the specified printer by pausing printing, resuming printing, or clearing all print jobs. It can also be used to set printer data. 

<UL>
	<LI>If the function succeeds, the return value is TRUE; otherwise, it is FALSE. To get extended error information, use the <B>GetLastError</B> function. </LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TD width=24%><I>hPrinter</I> </TD>
<TD width=76%>Identifies the printer. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%><I>dwLevel</I> </TD>
<TD width=76%>Specifies the version of the structure to which <I>lpbPrinter</I> points. This value must be 0, 1, 2, or 3. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%><I>lpbPrinter</I> </TD>
<TD width=76%>Points to an array of bytes that may contain printer data. If <I>dwLevel</I> is 0, this pointer must be NULL; if <I>dwLevel</I> is 1, the array contains a <B>PRINTER_INFO_1</B> structure. If <I>dwLevel</I> is 2, the array contains a <B>PRINTER_INFO_2</B> structure. If <I>dwLevel</I> is 3, the array contains a <B>PRINTER_INFO_3</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%><I>dwCommand</I> </TD>
<TD width=76%>Specifies the new printer state. This parameter can be zero or one of the values listed in the following table. If it is zero, the printer retains its original state and the printer data is reconfigured by using the structure to which <I>lpbPrinter</I> points. Valid values for the <I>dwCommand</I> parameter are: </TD>
</TR>
</TABLE><BR>

<TABLE>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=38%>PRINTER_CONTROL_PAUSE </TD>
<TD width=38%>Pauses the printer. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=38%>PRINTER_CONTROL_PURGE </TD>
<TD width=38%>Deletes all print jobs in the printer. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=38%>PRINTER_CONTROL_RESUME </TD>
<TD width=38%>Resumes a paused printer. </TD>
</TR>
</TABLE><BR>

<P>The handle <I>hPrinter</I> is obtained by calling the <B>OpenPrinter</B> function. </P>

<P>To modify the current printer settings, an application should call <B>GetPrinter</B> to retrieve the current settings into a <B>PRINTER_INFO_1</B>, <B>PRINTER_INFO_2</B>, <B>or PRINTER_INFO_3</B> structure, modify the members of that structure as necessary, and then call the <B>SetPrinter</B> function. </P>

<P>The following fields of a <B>PRINTER_INFO_2</B> or <B>PRINTER_INFO_3</B> structure will be ignored on a call to the <B>SetPrinter</B> function: <B>pServerName</B>, <B>pPrinterName</B>, and <B>cJobs</B>. </P>

<P>Pausing a printer suspends scheduling of all print jobs for that printer, except for the one print job that may be currently printing. Print jobs can be submitted to a paused printer, but no jobs will be scheduled to print on that printer until printing is resumed. If a printer is cleared, all print jobs for that printer are deleted, except for the current print job. </P>

<P>Note that there are limits to using the <B>SetPrinter</B> function on a Windows 95 client to perform remote administrative tasks on a remote print server. ( <B>SetPrinter</B> operates on data structures that reside on a remote print server when the network path name, for example a UNC name, to that server is used in the <B>OpenPrinter</B> call that must be made before the <B>SetPrinter</B> call.) For example, the <B>SetPrinter</B> function cannot be used on a standard Windows 95 client to change the printer port on a remote server, regardless of what the server platform is (Windows 95, Windows NT/Windows 2000, or some other server platform). The fundamental reason, for the specific example of changing the remote printer port, is that the standard Windows 95 client does not support the RPC protocol. </P>

<P>In other cases, limits to the remote administration capability of the <B>SetPrinter</B> function on the Windows 95 client are determined by the type of server platform. A remote administration task may be carried out on one type of remote platform, for example a Windows 95 server, but not on another type, say a Windows NT/Windows 2000 server. (This is similar to the way the remote capability of the <B>SetJob</B> function is limited by the type of server platform.) The optimum match of client platform type to server platform is to use Windows NT/Windows 2000 for both, because Windows NT/Windows 2000 clients and servers can communicate using the RPC protocol. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SetPrinter"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
