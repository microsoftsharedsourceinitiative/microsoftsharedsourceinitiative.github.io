<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Hardware Tree, Device Nodes, and Device Identifiers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_3567"></A>Hardware Tree, Device Nodes, and Device Identifiers</H2>

<P>The <I>hardware tree</I> is a structure, in memory that is built and maintained by the Configuration Manager. The hardware tree contains configuration information for all devices in the computer and Configuration Manager uses it to keep track of the resources associated with each device, such as IRQs, IO ports and even non-sharable resources like SCSI identifiers. The hardware tree describes existing devices and resources, resource requirements, resource interdependencies, and current resource allocations. </P>

<P>A <I>device node</I> is a specific entry in the hardware tree. Each device node contains a unique device identifier and a list of resource requirements. The <I>device identifier</I> is a string which uniquely describes the device. The string typically identifies the component that found the device, but because it is also used as a key in the registry, it must be unique within the system so that information about the device can be retrieved reliably. </P>

<P>The <I>requirements list</I> identifies the type resources the device needs to successfully operate and any constraints associated with those resources. IRQs, IO ports, DMA channels and memory ranges are examples of types of resources. Constraints are often resource interdependencies; such a device requiring that it must use IRQ3 and IO port 02F8 in combination in order to operate successfully. </P>

<P>Although a device driver or other component cannot access the hardware tree or the device nodes directly, it can retrieve a handle to any device node and carry out tasks that retrieve and set information in the device node. The Configuration Manager provides these services to carry out tasks on a device node.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=67%>Service </TH>
<TH align=left width=33%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Create_DevNode</B> </TD>
<TD width=33%>Adds a device node to the hardware tree. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Disable_DevNode</B> </TD>
<TD width=33%>Disables a device node in the hardware tree. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Enable_DevNode</B> </TD>
<TD width=33%>Enables a device node in the hardware tree. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_Child</B> </TD>
<TD width=33%>Retrieves the first child of a given device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_Depth</B> </TD>
<TD width=33%>Retrieves the depth of a device node in the hardware tree. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_Device_ID</B> </TD>
<TD width=33%>Retrieves the device identifier for a device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_Device_ID_Size</B> </TD>
<TD width=33%>Retrieves the size of a device identifier from a device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_DevNode_Status</B> </TD>
<TD width=33%>Retrieves the status of a device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_Parent</B> </TD>
<TD width=33%>Retrieves the handle of a parent of a device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Get_Sibling</B> </TD>
<TD width=33%>Retrieves the sibling of a device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Locate_DevNode</B> </TD>
<TD width=33%>Retrieves a pointer to the device node corresponding to a specified device driver. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Move_DevNode</B> </TD>
<TD width=33%>Replaces a root enumerated devnode by the valid non-root enumerated devnode. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Query_Remove_SubTree</B> </TD>
<TD width=33%>Checks whether a device node and its progeny can be removed. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Reenumerate_DevNode</B> </TD>
<TD width=33%>Causes the enumerator of the specified device node to receive the CONFIG_ENUMERATE enumerator function. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Remove_SubTree</B> </TD>
<TD width=33%>Removes a device node and its children. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Remove_Unmarked_Children</B> </TD>
<TD width=33%>Removes any children of a device node that have the DN_HAS_MARK flag cleared. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Reset_Children_Marks</B> </TD>
<TD width=33%>Resets the DN_HAS_MARK flag in the children of a specified device node. </TD>
</TR>

<TR VALIGN="top">
<TD width=67%><B>CONFIGMG_Setup_DevNode</B> </TD>
<TD width=33%>Reenables and configures a specified device node, or requests the enumerator to download information. </TD>
</TR>
</TABLE><BR>

<P>The device nodes in the hardware tree are arranged hierarchically. This means a device node is either at the root of the hardware tree or is the child of a parent device node. A device node can have child device nodes. The other children of a device node's parent are call siblings. </P>

<P>The hardware tree is built each time the computer is started. Furthermore, it is completely dynamic, changing even while the computer is running if a device is removed or added to the system. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Hardware%20Tree,%20Device%20Nodes,%20and%20Device%20Identifiers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
