<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>UI Class from IME</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_887"></A>UI Class from IME</H2>

<P>Every IME must register its own user interface class (UI) with the system. The UI class provides IME-unique functionality. An IME registers its own class when the IME is attached to the process. That is, when the <B>DllEntry</B> function is called with DLL_PROCESS_ATTACH. The IME must specify the UI class name in a call to the <B>ImeInquire</B> function. The UI class should be registered with CS_IME style so every application can use the UI class. The UI class name (including the null terminator) can be up to 16 TCHAR characters. This limitation may be extended in future version of Windows. </P>

<P>When registering the user interface class, you should specify eight bytes of extra window data. That is, set the <B>cbWndExtra</B> member of the <B>WNDCLASSEX</B> structure to 2 * sizeof(LONG). The extra window data is used by the system. </P>

<P>An IME can register any class and create any window while performing tasks for an application. </P>

<P>The following example shows how to register the IME window class: </P>

<PRE>BOOL WINAPI DLLEntry (
    HINSTANCE    hInstDLL,
    DWORD        dwFunction,
    LPVOID       lpNot)
{
    switch (dwFunction) {
        case DLL_PROCESS_ATTACH:
            hInst= hInstDLL;
 
            wc.style          = CS_MYCLASSFLAG | CS_IME;
            wc.lpfnWndProc    = MyUIServerWndProc;
            wc.cbClsExtra     = 0;
            wc.cbWndExtra     = 2 * sizeof(LONG);
            wc.hInstance      = hInst;
            wc.hCursor        = LoadCursor( NULL, IDC_ARROW);
            wc.hIcon          = NULL;
            wc.lpszMenuName   = (LPSTR) NULL;
            wc.lpszClassName  = (LPSTR) szUIClassName;
            wc.hbrBackground  = NULL;
 
            if(!RegisterClass((LPWNDCLASS)&amp;wc))
                return FALSE;
 
            wc.style          = CS_MYCLASSFLAG | CS_IME;
            wc.lpfnWndProc    = MyCompStringWndProc;
            wc.cbClsExtra     = 0;
            wc.cbWndExtra     = cbMyWndExtra;
            wc.hInstance      = hInst;
            wc.hCursor        = LoadCursor(NULL, IDC_ARROW);
            wc.hIcon          = NULL;
            wc.lpszMenuName   = (LPSTR) NULL;
            wc.lpszClassName  = (LPSTR) szUICompStringClassName;
            wc.hbrBackground  = NULL;
 
            if(!RegisterClass((LPWNDCLASS)&amp;wc))
                return FALSE;
 
            break;
 
        case DLL_PROCESS_DETACH:
            UnregisterClass(szUIClassName,hInst);
            UnregisterClass(szUICompStringClassName,hInst);
            break;
    }
    return TRUE;
}
 </PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: UI%20Class%20from%20IME"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
