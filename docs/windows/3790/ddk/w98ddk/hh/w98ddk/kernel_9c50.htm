<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>LocalVar</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1724"></A>LocalVar</H1>

<PRE>include vmm.inc

LocalVar varname, size
LocalVar varname, size, PACK
 </PRE>

<P>Declares a stack local variable for a procedure. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>varname</I></DT>

<DD>Specifies the name of the variable. </DD>

<DT><I>size</I></DT>

<DD>A numeric expression specifying the size of the variable in bytes. The words BYTE, WORD, and DWORD, are acceptable as synonyms for 1, 2, and 4, respectively. If the value is not a multiple of four, the variable is padded to the next multiple of four. </DD>

<DT><I>PACK</I></DT>

<DD>An optional parameter, normally omitted. If present and identical to the word PACK, indicates that the traditional padding to the next multiple of four is suppressed. Packing local variables should be done with care, lest you end up with a total size of local variables not a multiple of four. 
</DD>
</DL>

<P>This macro is used in writing assembly-language procedures which use the C, Pascal, or StdCall calling convention. See the description of the <B>ArgVar</B> macro for additional information. </P>

<P>If the variable is a WORD, then two additional symbols are defined: varnameL refers to the low byte and varnameH refers to the high byte. If the variable is a DWORD, then six additional symbols are defined: <I>varnameL </I>refers to the low word, <I>varnameLL</I> to the low byte of the low word, <I>varnameLH</I> to the high byte of the low word, <I>varnameH</I> to the high word, <I>varnameHL</I> to the low byte of the high word, and <I>varnameHH</I> to the high byte of the high word. </P>

<P>When the <B>EndProc</B> is reached, the names of all LocalVar variables are set to an intentionally undefined symbol so that they cannot be used by accident later. (This behavior can be overridden by using the KEEPFRAMEVARS attribute on EndProc.) Here is an example of the PACK attribute: </P>

<PRE>LocalVar MyLocal, DWORD
LocalVar First, BYTE, PACK
LocalVar Second, BYTE, PACK
LocalVar Third, BYTE, PACK
LocalVar Fourth, BYTE, PACK
 </PRE>

<P>This example declares eight bytes of local variables. The first four bytes are a DWORD, named MyLocal. The fifth byte is a BYTE variable named First, the sixth a BYTE variable named Second, the seventh a BYTE variable named Third, and the eighth a BYTE variable named Fourth. If the PACK attributes were omitted, this sequence of declarations would have created twenty bytes of local variables, with three bytes of padding inserted after each BYTE variable. Note carefully that the BYTE variables come in groups of four so as to maintain stack dword alignment. </P>

<H4>See Also</H4>

<P><B>Debug_Test_Valid_Handle</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: LocalVar"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
