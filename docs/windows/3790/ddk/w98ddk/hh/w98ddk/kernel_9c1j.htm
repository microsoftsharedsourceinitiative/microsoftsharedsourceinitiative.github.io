<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Control_Dispatch</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1707"></A>Control_Dispatch</H1>

<PRE>include vmm.inc

Control_Dispatch Message, Procedure
Control_Dispatch Message, Procedure, CallType, &lt;Param1, Param2, ...&gt;
 </PRE>

<P>Dispatches the given control message to the specified procedure. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>Message</I></DT>

<DD>Identifies the control message. Can be one of the following values: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=25%>Value </TH>
<TH align=left width=75%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=25%>Begin_PM_App </TD>
<TD width=75%>A protected-mode application is starting. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Close_VM_Notify </TD>
<TD width=75%>A virtual machine is closing. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Create_Thread </TD>
<TD width=75%>New thread being created. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Create_VM </TD>
<TD width=75%>A virtual machine is being created. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Critical_Reboot_Notify </TD>
<TD width=75%>System is restarting (interrupt disabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Debug_Query </TD>
<TD width=75%>Requests for virtual device's debugging interface. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Destroy_Thread </TD>
<TD width=75%>Thread being destroyed. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Destroy_VM </TD>
<TD width=75%>A virtual machine is being destroyed. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Device_Init </TD>
<TD width=75%>Virtual devices initializing (interrupts enabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Device_Reboot_Notify </TD>
<TD width=75%>System is restarting (interrupts enabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>End_PM_App </TD>
<TD width=75%>A protected-mode application is ending. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Init_Complete </TD>
<TD width=75%>All virtual devices have initialized. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>PNP_New_Devnode </TD>
<TD width=75%>New devnode (directed). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Power_Event </TD>
<TD width=75%>Power is being suspended or resumed. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Reboot_Processor </TD>
<TD width=75%>Virtual device must restart system if it can. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Set_Device_Focus </TD>
<TD width=75%>A virtual device is taking the focus. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Sys_Critical_Exit </TD>
<TD width=75%>System is terminating (interrupt disabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Sys_Critical_Init </TD>
<TD width=75%>Virtual devices initializing (interrupts disabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Sys_VM_Init </TD>
<TD width=75%>System VM is being created. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Sys_Dynamic_Device_Exit </TD>
<TD width=75%>Dynamic VxD being unloaded (directed). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Sys_Dynamic_Device_Init </TD>
<TD width=75%>Dynamic VxD being loaded (directed). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Sys_VM_Terminate </TD>
<TD width=75%>System VM is being destroyed. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>System_Exit </TD>
<TD width=75%>System is terminating (interrupts enabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Terminate_Thread </TD>
<TD width=75%>Thread being terminated. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Thread_Init </TD>
<TD width=75%>Thread being initialized. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Thread_Not_Executeable </TD>
<TD width=75%>Thread has stopped executing. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VM_Critical_Init </TD>
<TD width=75%>Virtual machine being created (interrupts disabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VM_Init </TD>
<TD width=75%>Virtual machine being created (interrupts enabled). </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VM_Not_Executable </TD>
<TD width=75%>Virtual machine has stopped executing. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VM_Resume </TD>
<TD width=75%>Virtual machine execution resumed. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VM_Suspend </TD>
<TD width=75%>Virtual machine execution suspended. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VM_Terminate </TD>
<TD width=75%>Virtual machine begin destroyed. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>W32_DeviceIoControl </TD>
<TD width=75%>Win32 DeviceIoControl entry (directed). </TD>
</TR>
</TABLE><BR>



<P>Another value defined in vmm.h is also acceptable. 
</DD>

<DT><I>Procedure</I></DT>

<DD>Name of the procedure to which to dispatch the message. </DD>

<DT><I>CallType</I></DT>

<DD>Optional parameter that describes the calling convention employed by the procedure. The default value indicates that the procedure is called directly without any special pre- or post-processing. Otherwise, the value may be <B>cCall</B>, <B>pCall</B>, or <B>sCall</B>, indicating that the procedure should be called with the C, Pascal, or StdCall calling convention, respectively. See below for additional remarks. </DD>

<DT><I>Param1, Param2, ...</I></DT>

<DD>Optional parameters to be passed to the procedure. Typically, registers are pushed as parameters. See below for additional remarks. 
</DD>
</DL>

<P>This macro is typically used in conjunction with the <B>Begin_Control_Dispatch</B> and <B>End_Control_Dispatch</B> macros to build a dispatch table. The <B>Control_Dispatch</B> macro can be used without the <B>Begin_Control_Dispatch</B> macro, but becomes the programmer's responsibility to declare a procedure in locked code (VxD_LOCKED_CODE_SEG), and clear the carry flag for any messages not processed. </P>

<P>If you use the <I>CallType</I> variant of this macro, then this macro may not be combined with the <B>Begin_Control_Dispatch</B> and <B>End_Control_Dispatch</B> macros. </P>

<H4>See Also</H4>

<P><B>Begin_Control_Dispatch</B>, <B>End_Control_Dispatch</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Control_Dispatch"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
