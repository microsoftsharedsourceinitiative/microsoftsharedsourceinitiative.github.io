<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Binary and Unary Operators</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Binary and Unary Operators">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_binary_and_unary_operators_me"></A>Binary and Unary Operators </H3>

<P>Following, in descending order of precedence, are the binary operators that can be used in commands: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=50%>Operator </TH>
<TH align=left width=50%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=50%>( ) </TD>
<TD width=50%>Parentheses </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>: </TD>
<TD width=50%>Address binder </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>* </TD>
<TD width=50%>Multiplication </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>/ </TD>
<TD width=50%>Integer division </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>MOD </TD>
<TD width=50%>Modulus (remainder) </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>+ </TD>
<TD width=50%>Addition </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>– </TD>
<TD width=50%>Subtraction </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&gt; </TD>
<TD width=50%>Greater-than relational operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&lt; </TD>
<TD width=50%>Less-than relational operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&gt;= </TD>
<TD width=50%>Greater-than/equal-to relational operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&lt;= </TD>
<TD width=50%>Less-than/equal-to relational operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>== </TD>
<TD width=50%>Equal-to relational operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>!= </TD>
<TD width=50%>Not-equal-to relational operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>AND </TD>
<TD width=50%>Bitwise Boolean AND </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>XOR </TD>
<TD width=50%>Bitwise Boolean exclusive OR </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>OR </TD>
<TD width=50%>Bitwise Boolean OR </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&amp;&amp; </TD>
<TD width=50%>Logical AND </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>|| </TD>
<TD width=50%>Logical OR </TD>
</TR>
</TABLE><BR>

<P>Following, in descending order of precedence, are the unary operators that can be used in commands: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=50%>Operator </TH>
<TH align=left width=50%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=50%>&amp;(seg) </TD>
<TD width=50%>Address of segment value </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>#(sel) </TD>
<TD width=50%>Address of selector value </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>%%(phy) </TD>
<TD width=50%>Address as a physical value </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>%(lin) </TD>
<TD width=50%>Address as a linear value </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>– </TD>
<TD width=50%>Two's complement </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>! </TD>
<TD width=50%>Logical NOT operator </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NOT </TD>
<TD width=50%>One's complement </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>SEG </TD>
<TD width=50%>Segment address of operand </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>OFF </TD>
<TD width=50%>Address offset of operand </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>BY </TD>
<TD width=50%>Low-order byte from given address </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>WO </TD>
<TD width=50%>Low-order word from given address </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>DW </TD>
<TD width=50%>Doubleword from given address </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>POI </TD>
<TD width=50%>Pointer (4 bytes) from given address — this operator works only with 16:16 addresses </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PORT </TD>
<TD width=50%>1 byte from given port </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>WPORT </TD>
<TD width=50%>Word from given port </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Binary%20and%20Unary%20Operators"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
