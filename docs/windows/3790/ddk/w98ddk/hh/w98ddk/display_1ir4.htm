<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GET_TOTAL_VRAM_SIZE (Function 36)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_660"></A>GET_TOTAL_VRAM_SIZE (Function 36)</H3>

<H4>Call With</H4>

<P>EBX: Contains the VM handle (always the currently executing VM). </P>

<P>EBP: Contains the Windows VM's Client Registers. </P>

<H4>Return Values</H4>

<P>Save everything that you use. CY returned means that mini-VDD handled the call. ECX contains the total size of VRAM on the card. </P>

<H4>Remarks</H4>

<P>Whenever the VDD saves a hi-res mode, it saves all of the card's video memory to the swap file. This is because VESA applications have full access to the total memory on the card, even if their visible screen size is less than the total VRAM size on the card. Therefore, the Main VDD must know the total VRAM size. If the mini-VDD does not handle this call, the Main VDD will do a time-consuming call to VESA BIOS function 4F00h to obtain this information. For performance reasons, you should implement this function. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: GET_TOTAL_VRAM_SIZE%20(Function%2036)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
