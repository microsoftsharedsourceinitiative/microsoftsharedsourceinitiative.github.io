<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MODM_LONGDATA</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_2440"></A>MODM_LONGDATA</H1>

<P>Sent to a MIDI output device driver to output a MIDI data block containing one or more MIDI events, including system-exclusive events. If the data block contains more than one MIDI event, the events are packed into the data block with no padding. 

<UL>
	<LI>The return value is an error code, or zero (MMSYSERR_NOERROR) if the operation is successful. Possible error codes are: </LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TD width=34%>MMSYSERR_NOTENABLED </TD>
<TD width=66%>The driver failed to load or initialize. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MIDIERR_UNPREPARED </TD>
<TD width=66%>The data block has not been prepared. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MIDIERR_NOTREADY </TD>
<TD width=66%>The hardware is busy with other data. </TD>
</TR>
</TABLE><BR>

<DL>
<DT>DWORD <I>dwParam1</I> </DT>

<DD>Specifies a far pointer to <B>MIDIHDR</B> data structure identifying the data block. </DD>

<DT>DWORD <I>dwParam2</I> </DT>

<DD>Specifies the size of the <B>MIDIHDR</B> structure. 
</DD>
</DL>

<P>The driver should first check the MHDR_PREPARED bit in the <B>dwFlags</B> field of the <B>MIDIHDR</B> structure. If the bit is not set, the driver should return MIDIERR_UNPREPARED. The driver should clear the MHDR_DONE bit and set the MHDR_INQUEUE bit and place the data block in its output queue. Then the driver should return control to the client by returning MMSYSERR_NOERROR. </P>

<P>Once the data block has been output, the driver should set the MHDR_DONE bit and clear the MHDR_INQUEUE bit before notifying the client by using <B>DriverCallback</B> to send a <B>MOM_DONE</B> message. </P>

<P>The driver can choose not to return until the message has been sent to the output device, or the driver can return immediately and output the MIDI data in the background. The driver should maintain MIDI status across multiple MODM_DATA and MODM_LONGDATA calls. </P>

<H4>See Also</H4>

<P>MODM_DATA </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MODM_LONGDATA"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
