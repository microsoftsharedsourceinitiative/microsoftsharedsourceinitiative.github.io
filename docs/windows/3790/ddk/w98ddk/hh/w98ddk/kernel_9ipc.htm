<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Xlat_API_Calc_Len</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1970"></A>Xlat_API_Calc_Len</H1>

<PRE>Xlat_API_Calc_Len  Segment, Offset, Calc_Proc_Addr
 </PRE>

<P>Copies a calculated number of bytes from the protected-mode address to the translation copy buffer, and converts the address into a V86-mode address. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>Segment</I> </DT>

<DD>Register containing the selector for the protected-mode address. </DD>

<DT><I>Offset</I> </DT>

<DD>Register containing the offset for the protected-mode address. </DD>

<DT><I>Calc_Proc_Addr</I> </DT>

<DD>Name of the callback procedure that calculates the length, in bytes, of the data to copy. The <B>V86MMGR_Xlat_API</B> service calls the callback procedure with the FS:ESI register pair pointing to the buffer. The callback procedure must return the number of bytes to copy in the ECX register, and must preserve all other registers. 

<P>The <B>V86MMGR_Xlat_API</B> service fails if there is not enough room in the translation buffer to copy the specified number of bytes. 

</DD>
</DL>

<P>For example, Buffered Keyboard Input (Interrupt 21h Function 0Ah) can have a buffer size from 3 to 257 bytes; the size depends on the value of the first byte in the buffer. The following script and callback procedure translates this function: </P>

<PRE>VxD_DATA_SEG
Buff_Keyboard_Input_API:
    Xlat_API_Calc_Len ds, dx, Calc_Input_Buff_Size
    Xlat_API_Exec_Int 21h
VxD_DATA_ENDS

VxD_CODE_SEG
BeginProc Calc_Input_Buff_Size
    movzx  ecx, BYTE PTR fs:[esi]
    add    ecx, 2
    ret
EndProc Calc_Input_Buff_Size
VxD_CODE_ENDS
 </PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Xlat_API_Calc_Len"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
