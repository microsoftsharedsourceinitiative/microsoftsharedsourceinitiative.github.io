<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>cb_s</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1812"></A>cb_s</H1>

<PRE>include vmm.inc

cb_s    struc
CB_VM_Status        dd   ?  ; VM status; see below
CB_High_Linear      dd   ?  ; base linear address; see below
CB_Client_Pointer   dd   ?  ; see below
CB_VMID             dd   ?  ; virtual machine ID
CB_Signature        dd   ?  ; see below
cb_s    ends
 </PRE>

<P>Virtual machine control block. Contains information about and the status of a virtual machine. The handle of a virtual machine is also the address of its corresponding <B>cb_s</B> structure. All fields in this structure are read-only. 

<DL>
<DT><B>CB_VM_Status</B></DT>

<DD>Value specifying the status of the virtual machine. Can be zero or more of these values: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=27%>Value </TH>
<TH align=left width=73%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Awakening </TD>
<TD width=73%>Virtual machine is waking up after being blocked on a semaphore. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Background </TD>
<TD width=73%>Virtual machine runs in the background. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Blocked </TD>
<TD width=73%>Virtual machine is blocked on a semaphore. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Closing </TD>
<TD width=73%>Virtual machine has received a <B>Close_VM</B> message. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Creating </TD>
<TD width=73%>Virtual machine is being created. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Exclusive </TD>
<TD width=73%>Virtual machine is in exclusive mode. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_High_Pri_Back </TD>
<TD width=73%>Virtual machine has high priority background execution. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Idle </TD>
<TD width=73%>Virtual machine has released its time slice. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Not_Executable </TD>
<TD width=73%>Virtual machine is partially destroyed. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_PageableV86 </TD>
<TD width=73%>Virtual machine has pageable V86 memory (protected-mode application). The default behavior for one or more pages in V86 memory has been modified and the <B>_GetV86PageableArray</B> service returns at least one nonzero bit in the array. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_PM_App </TD>
<TD width=73%>Virtual machine contains a protected-mode application. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_PM_Exec </TD>
<TD width=73%>Virtual machine execution currently in a protected-mode application. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_PM_Use32 </TD>
<TD width=73%>Virtual machine contains a 32-bit protected-mode application. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_Suspended </TD>
<TD width=73%>Virtual machine is not scheduled. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_TS_Sched </TD>
<TD width=73%>Virtual machine is scheduled by the time slicer. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_V86IntsLocked </TD>
<TD width=73%>Virtual machine locks any V86 memory that cannot be paged. Locking regardless of the pager type has been enabled for the virtual machine. </TD>
</TR>

<TR VALIGN="top">
<TD width=27%>VMStat_VxD_Exec </TD>
<TD width=73%>Virtual machine has received a call from a virtual device. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>CB_High_Linear</B></DT>

<DD>Base address of the virtual machine's memory in the ring-0 linear address space. Virtual devices can access memory in a virtual machine by adding the appropriate V86-mode linear address to this value. </DD>

<DT><B>CB_Client_Pointer</B></DT>

<DD>Address of a <B>Client_Reg_Struc</B> structure containing the register values for the virtual machine. </DD>

<DT><B>CB_VMID</B></DT>

<DD>Virtual machine identifier. </DD>

<DT><B>CB_Signature</B></DT>

<DD>Value VMCB_ID. 
</DD>
</DL>

<H4>See Also</H4>

<P><B>Close_VM</B>, <B>Client_Reg_Struc</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: cb_s"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
