<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EventRcvBuffer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_vxdtdi_eventrcvbuffer"></A>EventRcvBuffer</H1>

<P>An <B>EventRcvBuffer</B> is a structure used to pass information about buffers and completion routines for data delivered through a receive indication. A pointer to an <B>EventRcvBuffer</B> (ERB) structure is passed to the client as a parameter to the indication routine. The client may elect to fill in the ERB with the appropriate information and return TDI_MORE_PROCESSING. In this case, the transport will examine the ERB and take the appropriate actions. The <B>EventRcvBuffer</B> structure is defined in TDIVXD.H.</P>

<PRE class=syntax>typedef struct EventRcvBuffer {
  PNDIS_BUFFER  erb_buffer;
  uint  erb_size;
  CTEReqCmpltRtn  erb_rtn;
  PVOID  erb_context;
  ushort  *erb_flags;
} EventRcvBuffer;</PRE>

<H4>Members</H4>

<DL>
<DT><B>erb_buffer</B></DT>

<DD>Pointer to an <B>NDIS_BUFFER</B> chain describing the buffers that the received data will be placed in.</DD>

<DT><B>erb_size</B></DT>

<DD>Maximum amount of data that may be copied into the buffer chain. The total of the sizes of all the <B>NDIS_BUFFER</B> structures in the chain must be greater than or equal to <B>erb_size</B>. If the total is greater than <B>erb_size</B>, only <B>erb_size</B> bytes will be copied. The <B>NDIS_BUFFER</B> chain must remain intact until the request completes.</DD>

<DT><B>erb_rtn</B></DT>

<DD>Pointer to a callback routine that will be called when the request is complete. The prototype for the routine is the same as for the <B>Callback</B> routine previously described. </DD>

<DT><B>erb_context</B></DT>

<DD>The context passed to the callback routine.</DD>

<DT><B>erb_flags</B></DT>

<DD>Pointer to a short of flags. This will be altered by the transport when the request completes to provide the client with the output flags. The flags pointer must not be NULL.

<P>For this release, <B>erb_flags</B> must point at a 16-bit value of zero. When the request completes, the flags will be set to (TDI_RECEIVE_NORMAL | TDI_RECEIVE_ENTIRE_MESSAGE) for normal data, and (TDI_RECEIVE_EXPEDITED | TDI_RECEIVE_ENTIRE_MESSAGE) for urgent data.

</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EventRcvBuffer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
