<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Parameters</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Parameters">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_parameters_me"></A>Parameters </H3>

<P>You can separate command parameters with delimiters (spaces or commas), but a delimiter is required only between two consecutive hexadecimal values. The following commands are equivalent: </P>

<P class=indent1>dCS:100 110</P>

<P class=indent1>d CS:100 110</P>

<P class=indent1>d,CS:100,110</P>

<P>Following are the parameters you can use with commands: 

<DL>
<DT><I>addr </I></DT>

<DD>Represents an address parameter in one of four forms. For more information about the operators shown in the following address forms, <I>see Binary and Unary Operators</I>.

<TABLE>

<TR VALIGN="top">
<TH align=left width=50%>Address form</TH>
<TH align=left width=50%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>#1f:02C0 </TD>
<TD width=50%>Protected-mode address (selector:offset) </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>%31020 </TD>
<TD width=50%>Linear address </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>%%31020 </TD>
<TD width=50%>Physical address </TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&amp;0100:02FF </TD>
<TD width=50%>Real-mode address (segment:offset) </TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<P>Any of these specified address forms overrides the current address type. 

<DL>
<DT><I>byte </I></DT>

<DD>Specifies a two-digit hexadecimal value. </DD>

<DT><I>cmds </I></DT>

<DD>Specifies an optional set of debugger commands to be executed with the bp (Breakpoint) or j (Conditional) command. </DD>

<DT><I>count </I></DT>

<DD>Specifies a count. Valid values depend on the command with which this parameter is being used. </DD>

<DT><I>dword </I></DT>

<DD>Represents an eight-digit (4-byte) hexadecimal value. The DWORD data type is most commonly used as a physical address. </DD>

<DT><I>expr </I></DT>

<DD>Represents a combination of parameters and operators that evaluates to an 8-bit, 16-bit, or 32-bit value. An expr parameter can be used as a value in any command. An expr parameter can combine any symbol, number, or address with any of the binary and unary operators. </DD>

<DT><I>flags </I></DT>

<DD>Specifies one or more conditions. Valid conditions depend on the command with which this parameter is being used. </DD>

<DT><I>group-name </I></DT>

<DD>Specifies the name of a group that contains the map symbols you want to display. </DD>

<DT><I>list </I></DT>

<DD>Specifies a series of byte values or a string. The list parameter must be the last parameter on the command line. Following is an example of the f (Fill) command with a list parameter: 

<P>fCS:100 42 45 52 54 41
</DD>

<DT><I>map-name </I></DT>

<DD>Specifies the name of a symbol map file. </DD>

<DT><I>name-chars </I></DT>

<DD>Specifies one or more characters. </DD>

<DT><I>number </I></DT>

<DD>Specifies a numeric value. Valid values depend on the command with which this parameter is being used. </DD>

<DT><I>object </I></DT>

<DD>Specifies a handle, a selector, or a heap address. </DD>

<DT><I>option </I></DT>

<DD>Specifies an option. Valid options depend on the command with which this parameter is being used. </DD>

<DT><I>range </I></DT>

<DD>Specifies the block of memory on which the command should operate. The range parameter can be two addresses (addr addr); or it can be one address and a length (addr L word, where word is the number of items on which the command should operate; 80h is the default value). Following are three valid examples: 

<P>CS:100 110


<P>CS:100 L 10


<P>CS:100


<P>The limit for range is 10000h. To specify a word of 10000h using only four digits, use 0000h or 0h. 
</DD>

<DT><I>reg </I></DT>

<DD>Specifies the name of a microprocessor register. </DD>

<DT><I>string </I></DT>

<DD>Represents any number of characters enclosed in single quotation marks (') or double quotation marks ("). For quotation marks that must appear within string, you must use two sets of quotation marks. For example, the following strings are valid: 

<P>'This ''string'' is OK.'


<P>\"This \"\"string\"\" is OK.\"


<P>However, the following strings are not valid: 


<P>\"This \"string\" is not OK.\"


<P>\"This 'string' is not OK.\"


<P>The ASCII values of the characters in the string are used as a list of byte values. 
</DD>

<DT><I>word </I></DT>

<DD>Specifies a four-digit (2-byte) hexadecimal value. 
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Parameters"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
