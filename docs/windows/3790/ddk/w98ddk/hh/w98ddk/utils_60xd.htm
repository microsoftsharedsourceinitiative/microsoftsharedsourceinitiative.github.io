<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Debug Binaries</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_4581"></A>Debug Binaries</H2>

<P>Debug binaries are Windows 95 kernel VxDs that are typically compiled with the DEBUG=1 statement contained in the corresponding makefile.  Note the historic difference in nomenclature between Windows and Windows NT®/Windows® 2000 documentation.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=36%>Windows 3.x, Windows 9x</TH>
<TH align=left width=32%>Windows NT/Windows 2000</TH>
<TH align=left width=32%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=36%>“Retail”</TD>
<TD width=32%>“Free build”</TD>
<TD width=32%>Normal retail code build</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>“Debug binary”</TD>
<TD width=32%>“Checked build”</TD>
<TD width=32%>Debug code build</TD>
</TR>
</TABLE><BR>

<P>You do not need to use the debug binaries in order to run and use the debugger. However, debug binaries are extremely helpful when troubleshooting your VxD:

<UL>
	<LI>Debug binaries contain additional code that issues message(s) to the debugger terminal. These messages contain valuable information, warning information, and/or error information.</LI>

	<LI>Debug binaries frequently contain special debugger “dot command” handling code, not present in the retail drivers (See <I>System Dot Commands</I>). Dot commands are intended to reveal the contents of internal data structures unique to the driver that support the Dot command.</LI>

	<LI>Debug binaries perform additional verification of data and pointers (using ASSERT functions for example). For example, if a pointer is found to be null and it shouldn’t be, debug binaries may contain an INT1 or INT 3 breakpoint, causing the debugger to automatically halt at that point (see <I>Breaking Into the Debugger</I>).</LI>

	<LI>If symbol files are provided with the debug binary VxD, use them, to make it easier to navigate through the code.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Debug%20Binaries"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
