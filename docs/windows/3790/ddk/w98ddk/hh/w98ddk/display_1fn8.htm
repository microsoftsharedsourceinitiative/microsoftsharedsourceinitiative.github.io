<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DIB_BitBlt</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_574"></A>DIB_BitBlt</H3>

<PRE>BOOL DIB_BitBlt(LPPDEVICE lpDestDev, WORD wDestX, WORD wDestY,
    LPPDEVICE lpSrcDev, WORD wSrcX, WORD wSrcY, WORD wXext,  WORD wYext,
    long Rop3, LPBRUSH lpPBrush, LPDRAWMODE lpDrawMode)
 </PRE>

<P>Transfers bits from a rectangle on a source device to a rectangle having the same dimensions on a destination device. The transfer is controlled by a ternary raster operation value that specifies how corresponding bits from the source, destination, and pattern in a brush are combined to form the final bits in the destination. </P>

<P>Returns TRUE if successful, or FALSE otherwise. </P>

<DL>
<DT><I>lpDestDev</I> </DT>

<DD>Address of <B>PDEVICE</B> or <B>PBITMAP</B> structure specifying the destination device or bitmap. </DD>

<DT><I>wDestX </I>and <I>wDestY</I> </DT>

<DD>The x- and y-coordinates (in device units) of the origin of the rectangle on the destination device to receive the transferred bits. </DD>

<DT><I>lpSrcDev</I> </DT>

<DD>Address of <B>PDEVICE</B> or <B>PBITMAP</B> structure specifying the source device or bitmap. </DD>

<DT><I>wSrcX </I>and <I>wSrcY</I> </DT>

<DD>The x- and y-coordinates in device units of the origin (the upper-left corner) of the rectangle on the source device containing the bits to transfer. </DD>

<DT><I>wXext </I>and <I>wYext</I> </DT>

<DD>The width and height in device units of the rectangles on both the source and destination devices. </DD>

<DT><I>Rop3</I> </DT>

<DD>Specifies a ternary raster-operation value. This value determines how <B>BitBlt</B> combines corresponding pixels from the source, destination, and brush to produce the final pixels in the destination rectangle. The <I>Rop3</I> parameter can be any one of 256 ternary raster-operation values. The following table lists the most common values. 

<TABLE>

<TR VALIGN="top">
<TH align=left width=30%>Value </TH>
<TH align=left width=70%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=30%>BLACKNESS (0x00000042) </TD>
<TD width=70%>Set all destination bits to black. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>DSTINVERT (0x00550009) </TD>
<TD width=70%>Copy the inverse of the destination bits: Destination = ~ Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>MERGECOPY (0x00C000CA) </TD>
<TD width=70%>Combine the source and brush bits using the bitwise AND operator: Destination = Source &amp; Pattern. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>MERGEPAINT (0x00BB0226) </TD>
<TD width=70%>Combine the destination and inverse of the source bits using the bitwise OR operator: Destination = (~ Source) | Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>NOTSRCCOPY (0x00330008) </TD>
<TD width=70%>Copy the inverse of the destination bits to the destination rectangle: Destination = ~ Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>NOTSRCERASE (0x001100A6) </TD>
<TD width=70%>Combine the inverse of the source and destination bits using the bitwise AND operator: Destination = (~ Source) &amp; (~ Destination). </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>PATCOPY (0x00F00021) </TD>
<TD width=70%>Copy the brush bits to the destination rectangle: Destination = Pattern. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>PATINVERT (0x005A0049) </TD>
<TD width=70%>Combine the pattern and destination bits using the bitwise exclusive OR operator: Destination = Pattern ^ Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>PATPAINT (0x00FB0A09) </TD>
<TD width=70%>Combine the destination, pattern, and the inverse of source bits using the bitwise OR operator: Destination = (~ Source) | Pattern | Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>SRCAND (0x008800C6) </TD>
<TD width=70%>Combine the source and destination bits using the bitwise AND operator: Destination = Source &amp; Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>SRCCOPY (0x00CC0020) </TD>
<TD width=70%>Copy source bits to the destination rectangle: Destination = Source. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>SRCERASE (0x00440328) </TD>
<TD width=70%>Combine the source and inverse of destination bits using the bitwise AND operator: Destination = Source &amp; (~ Destination). </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>SRCINVERT (0x00660046) </TD>
<TD width=70%>Combine the source and destination bits using the bitwise exclusive OR operator: Destination = Source ^ Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>SRCPAINT (0x00EE0086) </TD>
<TD width=70%>Combine the source and destination bits using the bitwise OR operator: Destination = Source | Destination. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%>WHITENESS (0x00FF0062) </TD>
<TD width=70%>Set all bits to white. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>lpPBrush</I> </DT>

<DD>Address of a <B>PBRUSH</B> structure specifying a physical brush. <B>BitBlt</B> uses this brush only if the <I>Rop3</I> parameter specifies a ternary raster operation that requires the brush to be combined with the source, destination, or both. </DD>

<DT><I>lpDrawMode</I> </DT>

<DD>Address of a <B>DRAWMODE</B> structure specifying the color information <B>BitBlt</B> needs to determine patterned brush colors and to carry color conversions and transparent copy operations. 
</DD>
</DL>

<P>The export ordinal for this function is 1. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DIB_BitBlt"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
