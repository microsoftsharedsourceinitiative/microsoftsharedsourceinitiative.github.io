<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Begin_Critical_Section</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1629"></A>Begin_Critical_Section</H1>

<PRE>include vmm.inc

mov     ecx, Flags
VMMCall Begin_Critical_Section
 </PRE>

<P>Claims a critical section for the current thread. Only one thread at a time can enter a critical section. If a virtual device calls this service after another thread has entered a critical section, the system blocks the calling thread until the critical section is released. Uses Flags. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>Flags</I></DT>

<DD>Action to take when interrupts occur while the thread is blocked waiting for the critical section. This parameter can be a combination of the following values: 

<TABLE>

<TR VALIGN="top">
<TD width=28%>Block_Enable_Ints </TD>
<TD width=72%>Service interrupts in the virtual machine even if the virtual machine does not currently have interrupts enabled. This forces interrupts to be enabled. This value is only relevant if either Block_Svc_Ints or Block_Svc_If_Ints_Locked is set. </TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Block_Svc_If_Ints_Locked </TD>
<TD width=72%>Service events and simulated interrupts in the virtual machine if the thread blocks for the critical section and the VMStat_V86IntsLocked flag is set. </TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Block_Svc_Ints </TD>
<TD width=72%>Service events and simulated interrupts in the virtual machine if the thread blocks for the critical section. </TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Block_Thread_Idle </TD>
<TD width=72%>Consider the thread to be idle if it blocks for the critical section. </TD>
</TR>
</TABLE><BR>



<P>The Block_Poll value is reserved and must not be used with this service. 

</DD>
</DL>

<P>The system maintains a count of claims for critical sections and releases the critical section only when an equal number of <B>Begin_Critical_Section</B> and <B>End_Critical_Section</B> services have been called. Calling <B>Begin_Critical_Section</B> before the critical section is released does not increment the claim count. </P>

<P>When the critical section is first claimed, the system boosts the execution priority of the current virtual machine by the Critical_Section_Boost value (as described for the <B>Adjust_Exec_Priority</B> service). While a virtual machine is in a critical section, the system will switch to another task only if the virtual machine blocks on a semaphore or the other task has a time-critical operation, such as simulating hardware interrupts. </P>

<P>If the current VM is the System VM, Begin_Critical_Section also claims the V86 mutex.</P>

<H4>See Also</H4>

<P><B>Adjust_Exec_Priority</B>, <B>End_Critical_Section</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Begin_Critical_Section"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
