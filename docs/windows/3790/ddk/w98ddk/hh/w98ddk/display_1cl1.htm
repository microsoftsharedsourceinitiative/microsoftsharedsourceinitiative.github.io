<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Color Support</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_495"></A>Color Support</H2>

<P>The DIB engine supports drawing on 256-color palettized devices. The color data for these devices is specified in a <B>BITMAPINFO</B> structure. The header section of this structure defines the dimensions and color format of the device's DIB. The array of <B>RGBQUAD</B> structures which follows the header corresponds to the device's palette. The members of the <B>BITMAPINFO </B>structure are initialized by a minidriver or display driver when the <B>Enable</B> function is called. </P>

<P>Drivers do not need to initialize their color table. At boot time, GDI calls <B>SetPalette</B> to initialize the device's color table. The display driver should first forward the call to the DIB engine which will store the colors into the color table. After the DIB engine call returns, the driver should set the contents of the color table into the hardware DAC. </P>

<P>To ensure that colors used in background drawing operations match the current system palette, GDI maintains a palette-translation table. When GDI calls a minidriver's <B>SetPaletteTranslate</B> function for a palettized device, you should call the DIB engine's <B>DIB_SetPaletteTranslateExt</B> function to create an inverse translation table that GDI can use for mapping logical color indices to physical color indices. When GDI calls a minidriver's <B>GetPaletteTranslate</B> function for a palettized device, you should call the <B>DIB_GetPaletteTranslateExt</B> function to retrieve a copy of the current translation table. When GDI calls the <B>UpdateColors</B> function, you should call the DIB_UpdateColorsExt function to update the colors in a given window using the colors in the translation table. </P>

<P>When a non-identity palette translation is set, the DIB engine function <B>DIB_SetPaletteTranslateExt</B> sets the PALETTE_XLAT bit in the <B>deFlags</B> field of the <B>DIBENGINE</B> structure. This function clears the PALETTE_XLAT bit when an identity translate is set. Minidrivers and the DIB engine may use this bit to decide whether palette translation is needed or not. When applicable, this bit is set or cleared for palette translation for bitmaps, brushes, pens, foreground color, background color and text color. </P>

<P>If all palette calls from GDI are routed to the DIB engine, all that is needed to check for palette translation in a function call such as <B>BitBlt</B> is to test the PALETTE_XLAT bit in the <B>deFlags</B> of the <B>PDEVICE</B> parameter. For functions that take one <B>PDEVICE</B> and the PALETTE_XLAT bit is set, the call should be routed to the DIB Engine. For functions that take two <B>PDEVICE</B> structures, the minidriver should check the PALETTE_XLAT bit in both <B>PDEVICE</B> structures. If the bit is set in one, but not both, the call must be routed to the DIB engine. If the bit is set in both <B>PDEVICE</B> structures and the ROP code is SRCCOPY, the operation is a screen-to-screen draw and the minidriver should handle it; no palette translation needs to be done. Otherwise, the call should be routed to the DIB engine because it may need to translate the colors in a brush. </P>

<H4>See Also</H4>

<P><B>DIB_SetPaletteExt</B>, <B>DIB_GetPaletteExt</B>, <B>DIB_SetPaletteTranslateExt</B>, <B>DIB_GetPaletteTranslateExt</B>, <B>DIB_UpdateColorsExt</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Color%20Support"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
