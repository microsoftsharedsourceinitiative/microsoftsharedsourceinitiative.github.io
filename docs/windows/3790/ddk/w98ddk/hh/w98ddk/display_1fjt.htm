<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ResetHiResMode</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_559"></A>ResetHiResMode</H3>

<PRE>FAR PROC ResetHiResMode()
 </PRE>

<P>Used by the Windows 95 VDD to cause the video hardware to be reinitialized after returning to Windows from a full-screen MS-DOS session. </P>

<P>This function has no return value. </P>

<P>This function must be placed in a FIXED code segment, preferably the TEXT segment as defined in your display driver's .DEF file. </P>

<P>Drivers must register the address of <B>ResetHiResMode</B> with the Windows 95 VDD module by calling the VDD function <B>VDD_DRIVER_REGISTER</B>. Subsequently, every time that the user switches to a full-screen MS-DOS session, <B>ResetHiResMode </B>is called to do the work. </P>

<P>When <B>ResetHiResMode</B> is called, the DS register will not be pointing to the driver's data segment. The driver should be very careful to establish the segment registers when <B>ResetHiResMode</B> is called. </P>

<P><B>ResetHiResMode</B> has several tasks: </P>

<P>It must set the display hardware back into the Windows running mode that it was in before running the full-screen MS-DOS session. </P>

<P>It must reinitialize and reenable the hardware cursor. Because the <B>SetCursor</B> function will not be called in response to returning from a full-screen VM, the display driver should save the complete lpCursorShape data structure in its data segment every time <B>SetCursor</B> is called. Then, if the user switches to full-screen and then returns, the cursor can be restored from this saved lpCursorShape data structure. </P>

<P>It must reinitialize the Windows palette. Again, the display driver should save a copy of the Windows palette (if running at 8 BPP) and track all of its updates in its data segment so that it can be restored during <B>ResetHiResMode</B>. </P>

<P>It must clear the BUSY bit in the driver's <B>PDEVICE</B> structure so that the drawing routines can access the hardware again. </P>

<P>It should call the VDD <B>VDD_DRIVER_REGISTER</B> function just as was done at the initial <B>PhysicalEnable</B> routine when Windows was first started. This will allow the VDD and mini-VDD to reinitialize themselves for running Windows again. </P>

<P>It should call the VDD <B>VDD_SAVE_DRIVER_STATE</B> function after the hardware has been completely re-setup for Windows. This allows the VDD to snapshot the hardware state and make sure it is accurate for running the Windows VM again. </P>

<H4>See Also</H4>

<P><B>VDD_DRIVER_REGISTER</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ResetHiResMode"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
