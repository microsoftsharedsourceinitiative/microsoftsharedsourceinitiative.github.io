<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Language Monitor and Port Monitor Relationships</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_3997"></A>Language Monitor and Port Monitor Relationships</H2>

<P>In general, port monitor components deal with the relatively low-level communications protocol between the printer and computer. Language monitors deal with a higher-level communications exchange between printer and computer, as described in the section above. </P>

<P>Fundamental ideas about monitor components in the Windows 95 spooler architecture are: 

<UL>
	<LI>At least one port monitor component is required for the spooler to output print jobs, while language monitors are completely optional. </LI>

	<LI>Only port monitors send and receive signals through the hardware port a printer is connected to. </LI>

	<LI>Only language monitors are able to parse the strings of data read from a port with a bidirectional printer attached. The language monitor calls the port monitor <B>ReadPort</B> or <B>GetPrinterDataFromPort</B> functions to get data from a bidirectional printer. The port monitor <B>ReadPort</B> and <B>GetPrinterDataFromPort</B> functions read any data available from the printer and pass that data back to the language monitor without changing it in any way and it is up to the language monitor to interpret the meaning of the data from the printer. The language monitor should use a <B>GetPrinterDataFromPort</B> function call if the bidirectional printer supports the IEEE 1284 standard; otherwise, it should use a <B>ReadPort</B> call. The language monitor can call either of these port monitor functions from a background thread on a periodic basis (say every few seconds), using a timer, to read unsolicited status information from a bidirectional printer. The source code for the sample language monitor supplied with the DDK, PJLMON, contains code that implements reading unsolicited printer status information in this way. </LI>
</UL>

<P>The spooler architecture diagram in <I>Typical Printing Process Scenario Using a Raw Spool File</I> illustrates these principles. It shows a spooler with one port monitor and one language monitor, and only the port monitor sends and receives through the hardware port. A diagram that showed the relationship between spooler components when the only local target printer is nonbidirectional would probably not show a language monitor component. </P>

<P>Note that it is possible to integrate the language monitor functionality and port monitor functionality into one component. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Language%20Monitor%20and%20Port%20Monitor%20Relationships"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
