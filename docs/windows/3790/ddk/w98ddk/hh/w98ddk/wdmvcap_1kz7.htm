<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Stream Formats</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Stream Formats">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_wdmvcap_stream_formats"></A>Stream Formats</H2>

<P>The range of potential formats for a stream is exposed from the minidriver through an array of <B>KSDATARANGE</B> structures. This structure describes image characteristics such as color format, bit depth, and cropping and scaling possibilities.</P>

<P>A specific format is described by a <B>KSDATAFORMAT</B> structure. A single <B>KSDATARANGE</B> can indicate thousands of potential <B>KSDATAFORMAT </B>structures. For example, a <B>KSDATARANGE</B> could specify RGB24 with a minimum size of 160x120 and a maximum size of 720x480, with size granularity step size in x and y of 1. From this, an application could request any of the over 200,000 possible output image dimensions through a unique <B>KSDATAFORMAT </B>structure.</P>

<P>Generally, DirectShow™ and WDM streaming share media format definitions and streaming conventions. This uniformity is somewhat obscured by the differences in naming conventions used by kernel and user-mode components. For example, many format and GUID definitions used in the kernel have the prefix “KS_” but are otherwise identical to their user-mode counterparts. BITMAPINFOHEADER is a user-mode definition, and KS_BITMAPINFOHEADER is the kernel version of the same structure.</P>

<P>Stream formats in the kernel are defined using the <B>KSDATAFORMAT</B> structure. This structure can be extended to include additional type-specific format information such as ranges or format structures.</P>

<PRE class=syntax>typedef union {
  struct {
  ULONG  FormatSize;
  ULONG  Flags;
  ULONG  SampleSize;
  ULONG  Reserved;
  GUID   MajorFormat;
  GUID   SubFormat;
  GUID   Specifier;
  };
    ULONGLONG  Alignment;
} KSDATAFORMAT, *PKSDATAFORMAT, KSDATARANGE, *PKSDATARANGE;</PRE>

<H4>Members</H4>

<DL>
<DT><B>FormatSize</B></DT>

<DD>Specifies the size of the entire <B>KSDATARANGE</B> or <B>KSDATAFORMAT</B> structure, including any extended portion.</DD>

<DT><B>Flags</B></DT>

<DD>Specifies flags that are primarily used when querying the current data format from a pin or returning a data intersection. In most cases this is set to zero. These flags are ignored on making a connection.</DD>

<DT><B>SampleSize</B></DT>

<DD>Specifies either the sample size of the data if it is a fixed sample size, or it contains zero to indicate a variable sample size. This is also ignored on making a connection, and is used when negotiating allocators.</DD>

<DT><B>Reserved</B></DT>

<DD>Reserved. Must be set to zero.</DD>

<DT><B>MajorFormat</B></DT>

<DD>Specifies the major data format for this pin. See the table in Output Stream Groupings for more information. These data format identifiers are used both for this property and to identify specific data formats queried elsewhere. This maps to a DirectShow <I>majortype</I>.</DD>

<DT><B>SubFormat</B></DT>

<DD>Specifies the subformat for this pin. For instance, a codec may process a video stream, and this subformat information could indicate accepted general compression categories within the video major format. This maps to a DirectShow <I>subtype</I>.</DD>

<DT><B>Specifier</B></DT>

<DD>Specifies the type of structure which follows the base format information. This maps to a DirectShow <I>formattype</I>.
</DD>
</DL>

<H4>Comments</H4>

<P>DirectShow uses a similar structure to define stream formats.</P>

<PRE>typedef struct  _AMMediaType    {
    GUID majortype;            // Same as KSDATAFORMAT.MajorFormat
    GUID subtype;              // Same as KSDATAFORMAT.SubFormat
    BOOL bFixedSizeSamples;
    BOOL bTemporalCompression;
    ULONG lSampleSize;         // Same as KSDATAFORMAT.SampleSize
    GUID formattype;           // Same as KSDATAFORMAT.Specifier
    IUnknown __RPC_FAR *pUnk;
    ULONG cbFormat;
    BYTE *pbFormat;
 } AM_MEDIA_TYPE;</PRE>

<P>Despite the differences in naming conventions, the GUID values used are identical in both of the structures above. Throughout the rest of this document, the WDM streaming naming conventions are used, followed when applicable by the corresponding DirectShow names.</P>

<P>For most video capture streams, the <I>MajorFormat</I> type is KSDATAFORMAT_TYPE_VIDEO (MEDIATYPE_Video), and the Specifier is FORMAT_VideoInfo. The subformat, along with the Format block, is used to convey details of the particular video data type, such as indicating the color space used. </P>

<P>Note that the low-order four bytes of the subformat should match the FOURCC values used in the BitmapInfoHeader.biCompression field. For example, the following GUID identifies the FOURCC (YVU9) video format. </P>

<P>39555659-0000-0010-8000-00AA00389B71<BR>
       59 = 'Y’<BR>
     56 = ‘V’<BR>
   55 = ‘U’<BR>
 39 = ‘9’</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Stream%20Formats"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
