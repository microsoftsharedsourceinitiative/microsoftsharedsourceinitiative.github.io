<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Keyboard-Interrupt Handler</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_2180"></A>Keyboard-Interrupt Handler</H2>

<P>The keyboard-interrupt handler services hardware interrupts generated by the keyboard. The handler retrieves scan codes from the keyboard, translates the scan codes into virtual-key codes, and passes the scan and virtual-key codes to Windows through the keyboard-event callback function. It also updates the keyboard flags (usually at 40h:17h in the RAM area of the ROM BIOS) and checks for special keys or key combinations. </P>

<P>When the interrupt handler receives control, such as when the user presses or releases a key, the handler retrieves the current input from the keyboard data port and determines whether the input is a scan code or a command byte. If it is a command byte, it passes control to the original keyboard-interrupt handler. Otherwise, it continues to process the scan code. </P>

<P>When processing the scan code, the handler checks for key combinations, such as CTRL+ALT+DELETE, and passes control to the original keyboard-interrupt handler to carry out the corresponding actions. It also checks for the ALT+PRINTSCREEN and SHIFT+PRINTSCREEN key combinations and translates these into the VK_SNAPSHOT virtual-key code. When Windows receives this virtual-key code, it takes a snapshot of the active window or the entire screen. The handler indicates which snapshot to take by setting the BX register to zero for the active window (ALT+PRINTSCREEN) and to 1 for the entire screen (SHIFT+PRINTSCREEN). </P>

<P>To support debugging, the interrupt handler checks for the CTRL+ALT+SYSREQ key and eithers simulates a nonmaskable interrupt (NMI) (to pass control to a debugger) or jumps to the <B>CVWBreak</B> function (KERNEL.205) to carry out a controlled break. </P>

<P>To complete processing the scan code, the handler sets the interrupt flag using the SetInterruptFlag (<B>sti</B>) instruction. Before doing so, it makes sure a subsequent keyboard interrupt does not invoke the handler again as only one interrupt can be handled at a time. If Windows is running in enhanced mode, this may require masking out the keyboard interrupt (usually IRQ1) at the interrupt controller. </P>

<H4>See Also</H4>

<P><B>ScreenSwitchEnable</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Keyboard-Interrupt%20Handler"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
