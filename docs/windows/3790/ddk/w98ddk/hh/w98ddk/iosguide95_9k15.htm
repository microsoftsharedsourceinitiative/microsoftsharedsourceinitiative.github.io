<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IOS Registration Flowchart</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IOS Registration Flowchart">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ios_registration_flowchart_si"></A>IOS Registration Flowchart</H1>

<P><IMG SRC="images/regflow1.gif" ALT="" BORDER=0></P>

<P><IMG SRC="images/regflow2.gif" ALT="" BORDER=0></P>

<P><IMG SRC="images/regflow3.gif" ALT="" BORDER=0></P>

<P><IMG SRC="images/regflow4.gif" ALT="" BORDER=0></P>

<P><IMG SRC="images/regflow5.gif" ALT="" BORDER=0></P>

<P><IMG SRC="images/regflow6.gif" ALT="" BORDER=0></P>

<P><IMG SRC="images/regflow7.gif" ALT="" BORDER=0></P>

<H2>IOS Layer Drivers</H2>

<P>The following chart supplies general information about the assorted IOS layer drivers, including the criteria used to determine whether or not a layer driver adds itself to the call down chain associated with a DCB it receives during AEP_CONFIG_DCB:</P>

<TABLE border=1 frame=box rules=all>

<TR VALIGN="top">
<TD width=18%><B>Device</B></TD>
<TD width=9%><B>Layer no.</B></TD>
<TD width=14%><B>Layer type</B></TD>
<TD width=59%><B>AEP_CONFIG_DCB Call down insertion qualifications (tested in the order shown)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=18%>VOLTRACK.VXD</TD>
<TD width=9%>5</TD>
<TD width=14%>DRP_
<P>VOLTRK_</P>

<P>BIT</P>
</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignores if !(DCB_device_flags &amp; DCB_DEV_REMOVABLE) 
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Hooks if DCB_device_type is DCB_type_floppy </P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignores if !(DCB_device_flags &amp; DCB_DEV_LOGICAL)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;Hooks if DCB_device_type is DCB_type_disk or DCB_type_cdrom.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>CDTSD.VXD</TD>
<TD width=9%>6</TD>
<TD width=14%>DRP_
<P>CLASS_ DRV_BIT</P>
</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not (DCB_device_type == DCB_type_cdrom).
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if any of the following DCB_dmd_flags bits are set: (DCB_dmd_srb_cdb+DCB_dmd_rsrv_1+DCB_dmd_rsrv_2).</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>DISKTSD.VXD</TD>
<TD width=9%>7</TD>
<TD width=14%>DRP_TSD_
<P>BIT</P>
</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a disk (DCB_device_type != DCB_type_disk)</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a floppy (DCB_device_type != DCB_type_floppy)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if any of the following DCB_dmd_flags bits are set: (DCB_dmd_srb_cdb+DCB_dmd_rsrv_1+DCB_dmd_rsrv_2).</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>APIX.VXD</TD>
<TD width=9%>11</TD>
<TD width=14%>DRP_SCSI_ LAYER_BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a physical DCB <BR>
(!(DCB_device_flags &amp; DCB_dev_physical))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if device does not use the SCSI bus <BR>
(DCB_Bus_Type != DCB_Bus_SCSI)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>CDVSD.VXD</TD>
<TD width=9%>13</TD>
<TD width=14%>DRP_VSD_5_ BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if device does not use the SCSI bus <BR>
(DCB_Bus_Type != DCB_Bus_SCSI)</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a CD-ROM (DCB_device_type != DCB_Type_CDROM)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;Accept if device has been forced to use protected-mode code or it is safe to use protected-mode code. Ignore if MSCDEX is installed.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>NECATAPI.VXD</TD>
<TD width=9%>14</TD>
<TD width=14%>DRP_VSD_6_ BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if device does not use the SCSI bus <BR>
(DCB_Bus_Type != DCB_Bus_SCSI)</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a CD-ROM (DCB_device_type != DCB_Type_CDROM)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;This VxD tweaks the CDB if the target device is an NEC ATAPI device.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>DISKVSD.VXD</TD>
<TD width=9%>16</TD>
<TD width=14%>DRP_VSD_8_ BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if device does not use the SCSI bus <BR>
(DCB_Bus_Type != DCB_Bus_SCSI)</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a disk (DCB_device_type != DCB_Type_disk)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;Accept if !(DCB_inquiry_flags.INQ_dev_type_mod &amp; INQ_mod_removable).</P>

<P>5.&nbsp;&nbsp;&nbsp;&nbsp;Otherwise, conditionally accept depending on manufacturer ID (Insite or IOMEGA floptical).</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>ATAPCHNG.VXD</TD>
<TD width=9%>16</TD>
<TD width=14%>DRP_VSD_8_ BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if neither DCB_port_name == IDEATAPI, or DCB_device_flags2 == DCB_DEV2_ATAPI_DEVICE</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not SCSI (DCB_Bus_Type != DCB_Bus_SCSI)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not CD-ROM (DCB_Device_Type!=DCB_Type_CDROM)</P>

<P>5.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if LUN=0 (if non zero, the ATAPI change created the drive)</P>

<P>6.&nbsp;&nbsp;&nbsp;&nbsp;Issue a sense command to the CD-ROM to identify whether it is a changer; ignore if it is not.</P>

<P>7.&nbsp;&nbsp;&nbsp;&nbsp;Otherwise take over the CD-ROM device.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>SCSI1HLP.VXD</TD>
<TD width=9%>15</TD>
<TD width=14%>DRP_VSD_7_ BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if device doesn’t use the SCSI bus <BR>
(DCB_Bus_Type != DCB_Bus_SCSI)</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if not a CD-ROM (DCB_device_type != DCB_Type_CDROM)</P>

<P>4.&nbsp;&nbsp;&nbsp;&nbsp;Check the dead_drive_table list. If in the list, and within the revision range specified, set DCB_cd_device_flags |= DCB_CD_FAKE_SCSI1. This will force a “bad” drive to use scsi1 behavior.</P>

<P>5.&nbsp;&nbsp;&nbsp;&nbsp;Check the mfg_id_table. If in the table, or if the ANSI version field indicates it is a generic SCSI1 device ((DCB_inquiry_flags[2] &amp; 0000111) &lt; 2), accept it (take over the device).</P>

<P>6.&nbsp;&nbsp;&nbsp;&nbsp;Note that when this driver intercepts requests, it will ignore IOR_SCSI_PASS_THROUGH IOPs.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>SMARTVSD.VXD</TD>
<TD width=9%>17</TD>
<TD width=14%>DRP_VSD_9_ BIT</TD>
<TD width=59%>1.&nbsp;&nbsp;&nbsp;&nbsp;Ignore if a logical DCB or if handled by rmm (if DCB_device_flags &amp; (DCB_dev_logical | DCB_dev_rmm))
<P>2.&nbsp;&nbsp;&nbsp;&nbsp;Accept if (DCB_bus_type == DCB_BUS_ESDI) &amp;&amp; (DCB_device_type == DCB_type_disk)), or if (DCB_device_flags2 &amp; DCB_DEV2_ATAPI_DEVICE)</P>

<P>3.&nbsp;&nbsp;&nbsp;&nbsp;Note that this VxD does not “hook” into the calldown chain. It serves as a ring 3 interface (DeviceIoControl)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>SCSIPORT.PDR</TD>
<TD width=9%>21</TD>
<TD width=14%>DRP_NT_PD_ BIT</TD>
<TD width=59%>(No qualifications needed – this is a port driver.)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>ESDI_506.PDR</TD>
<TD width=9%>22</TD>
<TD width=14%>DRP_ESDI_PD_BIT</TD>
<TD width=59%>(No qualifications needed – this is a port driver.)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>HSFLOP.PDR</TD>
<TD width=9%>27</TD>
<TD width=14%>DRP_NEC_ FLOPPY_BIT</TD>
<TD width=59%>(No qualifications needed – this is a port driver.)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>RMM.PDR</TD>
<TD width=9%>30</TD>
<TD width=14%>DRP_SOC_ DRV_BIT</TD>
<TD width=59%>(No qualifications needed – this is a port driver.)</TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IOS%20Registration%20Flowchart"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
