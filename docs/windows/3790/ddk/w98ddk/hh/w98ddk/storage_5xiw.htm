<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IFSMgr_SetupConnection</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4438"></A>IFSMgr_SetupConnection</H3>

<PRE>IFSMgr_SetupConnection(
 pioreq pir,
 unsigned int Options,
 unsigned int ResType
 )
 </PRE>

<P>This service can be called by an FSD to obtain a connection to a resource dynamically. This cannot be used to connect to a network drive directly since a driveletter cannot be specified. It is provided for special network FSD requirements. The IFS manager allocates an IFS internal request structure, which contains the Ioreq as its first element. When the IFS manager passes the address of the Ioreq to an FSD, it is also passing the address of the IFS request structure. On certain functions, such as Server Enumeration functions, the network FSD calls the IFSMgr_SetupConnection service to perform a connection with the Ioreq address it was originally passed. The IFS manager establishes the connection by calling the FSD on the FS_ConnectResource API and fills in the fields in the IFS request structure that the Ioreq is a part of. The network FSD never needs to look at any of the fields in the IFS request structure. It can now use this initialized Ioreq to perform other operations. When it is done, it can free the connection by calling the IFSMgr_DerefConnection service described in the following. 

<DL>
<DT><I>ir_ppath</I> </DT>

<DD>Supplies the parsed canonicalized Unicode path name the connection is to be performed to. </DD>

<DT><I>ir_password</I> </DT>

<DD>Supplies password string (if any). This string is not in Unicode; it is in the same context it was originally passed in by the user. 

<TABLE>

<TR VALIGN="top">
<TD width=34%><B>Connection Option Values:</B> 
<P>One of the following options will be specified. </P>
</TD>
<TD width=66%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TH align=left width=34%>Value </TH>
<TH align=left width=66%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=34%>RESOPT_UNCREQUEST </TD>
<TD width=66%>UNC style path based anonymous connection request. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESOPT_DEVATTACH </TD>
<TD width=66%>Explicit device redirection. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESOPT_UNCCONNECT </TD>
<TD width=66%>Explicit UNC style connection. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESOPT_DISCONNECTED </TD>
<TD width=66%>Connection is to be setup disconnected, without touching the net. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESOPT_NO_CREATE </TD>
<TD width=66%>Do not create a resource for this connection, just verify the connection exists. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESOPT_STATIC </TD>
<TD width=66%>This connection is established at startup and disconnected only at shutdown, no user APIs can disconnect it. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%><I>ResType</I> </TD>
<TD width=66%>Supplies resource type for connection. </TD>
</TR>
</TABLE><BR>



<TABLE>

<TR VALIGN="top">
<TD width=34%><B>Connection Resource Type Values:</B> 
<P>One of the following resource types will be specified. </P>
</TD>
<TD width=66%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TH align=left width=34%>Value </TH>
<TH align=left width=66%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=34%>RESTYPE_WILD </TD>
<TD width=66%>Wild card resource type. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESTYPE_DISK </TD>
<TD width=66%>Disk resource. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESTYPE_SPOOL </TD>
<TD width=66%>Spooled printer resource. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESTYPE_CHARDEV </TD>
<TD width=66%>Character device resource. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>RESTYPE_IPC </TD>
<TD width=66%>Interprocess communication resource. </TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<UL>
	<LI>This function has no return value other than in <I>ir_error</I>. Appropriate fields in the Ioreq are filled in. </LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TD width=43%><B>IOREQ Structure:</B> </TD>
<TD width=57%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TH align=left width=43%>Value </TH>
<TH align=left width=57%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=43%><I>ir_error</I> </TD>
<TD width=57%>Returns zero if successful, the error code if failure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><I>ir_rh</I> </TD>
<TD width=57%>Returns the resource handle for the connection if success. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><I>ir_ppath</I> </TD>
<TD width=57%>Returns a pointer to the tail of the original path name after the server and share name. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><I>ir_options</I> </TD>
<TD width=57%>Returns special server security information. </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IFSMgr_SetupConnection"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
