<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Update INI File Sections</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Update INI File Sections">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_282"></A>Update INI File Sections </H1>

<PRE>[&lt;update-ini-section-name&gt;]
&lt;ini-file&gt;, &lt;ini-section&gt;, [&lt;old-ini-entry&gt;], [&lt;new-ini-entry&gt;], [&lt;flags&gt;]
    .
    .
    .
</PRE>

<P>Replaces, deletes, or adds complete entries in the given INI file. The section name, <I>update-ini-section-name</I>, must appear in the <B>UpdateInis</B> item in an <B>Install</B> section of the INF file. 

<DL>
<DT><I>ini-file</I> </DT>

<DD>Name of the INI file containing the entry to change. For more information about specifying the INI filename, see the following comments. </DD>

<DT><I>ini-section</I> </DT>

<DD>Name of the section containing the entry to change. </DD>

<DT><I>old-ini-entry</I> </DT>

<DD>Optional. Usually in the form <I>Key</I>=<I>Value</I>. </DD>

<DT><I>new-ini-entry</I> </DT>

<DD>Optional. Usually in the form <I>Key</I>=<I>Value</I>. Either the key or value may specify replaceable strings. For example, either the key or value specified in the <I>new-ini-entry</I> parameter may be %String1%, where the string that replaces %String1% is defined in the <B>Strings</B> section of the INF file. </DD>

<DT><I>flags</I> </DT>

<DD>Optional action flags. Can be one of these values: 

<TABLE>

<TR VALIGN="top">
<TD width=43%>0 </TD>
<TD width=57%>Default. If <I>old-ini-entry</I> key is present in an INI file entry, that entry is replaced with <I>new-ini-entry</I>. Note that only the keys of the <I>old-ini-entry</I> parameter and the INF file entry must match, the value of each entry is ignored. 
<P>To add <I>new-ini-entry</I> to the INI file unconditionally, set <I>old-ini-entry</I> to NULL. To delete old-ini-entry from the INI file unconditionally, set <I>new-ini-entry</I> to NULL. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>1 </TD>
<TD width=57%>If both key and value of <I>old-ini-entry</I> exist in an INI file entry, that entry is replaced with <I>new-ini-entry</I>. Note that the <I>old-ini-entry</I> parameter and the INF file entry must match on both key and value for the replacement to be made (this is in contrast to using an action flag value of zero, where only the keys must match for the replacement to be made). </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>2 </TD>
<TD width=57%>If the key in the <I>old-ini-entry</I> parameter does not exist in the INI file, then no operation is performed on the INI file. 
<P>If the key in the <I>old-ini-entry</I> parameter exists in an INI file entry and the key in the <I>new-ini-entry</I> parameter exists in an INI file entry, then the INI file entry that matches the key in the <I>new-ini-entry</I> parameter is deleted and the INI file entry that matches the <I>old-ini-entry</I> parameter is operated on in the following way: the key of the INI file entry is replaced with the key in the <I>new-ini-entry</I> parameter. </P>

<P>If the key in the <I>old-ini-entry</I> parameter exists in an INI file entry and the key in the <I>new-ini-entry</I> parameter does <B>not</B> exist in an INI file entry, then an entry is added to the INI file made up of the key in the <I>new-ini-entry</I> parameter and the old value. </P>

<P>Note that the match of the <I>old-ini-entry</I> parameter and an INI file entry is based on key alone, not key and value. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>3 </TD>
<TD width=57%>Same as flag parameter value of 2 described previously, except match of the <I>old-ini-entry</I> parameter and an entry in the INF file is based on matching both key and value, not just the key. </TD>
</TR>
</TABLE><BR>



<P>The wild card character (*) can be used in specifying the key and value and they will be interpreted correctly. 

</DD>
</DL>

<P>The <I>ini-file</I> name can be a string or a strings key. A strings key has the form %<I>strkey</I>% where <I>strkey</I> is defined in the <B>Strings</B> section in the INF file. In either case, the name must be a valid filename. </P>

<P>The name should include the name of the directory containing the file, but the directory name should be given as a logical directory identifier (LDID) rather than an actual name. The installer replaces an LDID with an actual name during installation. </P>

<P>An LDID has the form %<I>ldid</I>% where <I>ldid</I> is one of the predefined identifiers or an identifier defined in the <B>DestinationDirs</B> section. Note that when the constants LDID_BOOT and LDID_BOOTHOST are replaced, the backslash is included in the path. For example LDID_BOOT may be replaced with C:\. However, in your INF file you can either use the backslash character or not. For example, either %30%boot.ini and %30%\boot.ini can be used to reference BOOT.INI in the root of the boot drive. </P>

<P>The following examples illustrate individual items in an Update INI File section of an INF file: </P>

<PRE>%11%\sample.ini, Section1,, Value1=2           ; adds new entry
%11%\sample.ini, Section2, Value3=*,           ; deletes old entry
%11%\sample.ini, Section4, Value5=1, Value5=4  ; replaces old entry
</PRE>

<P>The following set of items in an Update INI File-type section of an INF file work together to operate on the Boot section of SYSTEM.INI. The conditionality built into the <I>flags</I> parameter of the INF file items is used to add the entry "comm.drv=comm.drv" to the Boot section unless the entries "comm.drv=*vcoscomm.drv" or "comm.drv=*r0dmdcom.drv" exist in the Boot section, in which case the existing entry is preserved and the entry "comm.drv=comm.drv" is not added to the INI file. In other words, after the four INF file entries shown in the following are executed, there will be one "comm.drv=" entry in the Boot section of the INI file: "comm.drv=*vcoscomm.drv" or "comm.drv=*r0dmdcom.drv" or "comm.drv=comm.drv." </P>

<PRE>system.ini, boot, "comm.drv=*vcoscomm.drv","~CommDrvTemp~=*", 3
system.ini, boot, "comm.drv=*r0dmdcom.drv","~CommDrvTemp~=*", 3
system.ini, boot,,"comm.drv=comm.drv"
system.ini, boot, "~CommDrvTemp~=*","comm.drv=*", 3
</PRE>

<P>See also , , ,  </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Update%20INI%20File%20Sections"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
