<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_AddInstanceItem</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1306"></A>_AddInstanceItem </H1>

<PRE>include vmm.inc

VMMCall _AddInstanceItem, &lt;&lt;OFFSET32 InstStruc&gt;, flags&gt;

or      eax, eax        ; nonzero if added, zero if error
jz      not_added
 </PRE>

<P>Identifies a region of instance data in the V86 address space. Uses EAX, ECX, EDX, and Flags. </P>

<P>Returns a nonzero value in the EAX register if successful, zero otherwise. 

<DL>
<DT><I>InstStruc</I></DT>

<DD>Address of an <B>InstDataStruc</B> structure containing information about the block of memory to instance. </DD>

<DT><I>flags</I></DT>

<DD>Operation flags. Must be zero. 
</DD>
</DL>

<P>To prevent errors, a virtual device must <I>not</I> change the location and content of any <B>InstDataStruc</B> structures until after the system has completed its initialization. To achieve this, a virtual can either statically allocate the structures in its INIT data segment or dynamically allocate the structures on the system heap using the <B>_HeapAllocate</B> service. If the structures are in the INIT data segment, the system automatically frees the structure when it reclaims the INIT segment space. If the structures are in the system heap, the virtual device must free the structures using the <B>_HeapFree</B> service while processing the <B>Sys_VM_Init</B> message. </P>

<P>If a virtual device the structures on the system heap, it must <I>not</I> attempt to reallocate the structure before system initialization has completed because this invalidates the structure address. </P>

<P>Only one, contiguous region of instance data can be identified with each structure. The virtual device can cut down the call overhead and data space requirements by coalescing adjacent blocks of instance data and identifying the coalesced blocks as a single instance item. </P>

<H4>See Also</H4>

<P><B>InstDataStruc</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _AddInstanceItem"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
