<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Declare_Virtual_Device</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1710"></A>Declare_Virtual_Device</H1>

<PRE>include vmm.inc

Declare_Virtual_Device Name, MajorVer, MinorVer, CtrlProc, DeviceNum,
                       InitOrder, V86Proc, PMProc
 </PRE>

<P>Defines the name, device number, control procedure, and other attributes of a virtual device. Every virtual device must use the <B>Declare_Virtual_Device</B> macro. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>Name</I></DT>

<DD>Name of the virtual device. </DD>

<DT><I>MajorVer</I></DT>

<DD>Value specifying the major version number for the virtual device. </DD>

<DT><I>MinorVer</I></DT>

<DD>Value specifying the minor version number for the virtual device. </DD>

<DT><I>CtrlProc</I></DT>

<DD>Name of the control procedure for the virtual device. The control procedure handles all system control messages sent to the virtual device. For most virtual devices, this parameter is the name of the procedure created by the <B>Begin_Control_Dispatch</B> macro. </DD>

<DT><I>DeviceNum</I></DT>

<DD>Device identifier for the virtual device. If the virtual device replaces an existing virtual device, the device identifier must be identical to the device identifier of the virtual device being replaced. Otherwise, the value must be Undefined_Device_ID or a value previously obtained from Microsoft. 

<P>Since Windows 95 supports name-based VxD services, it is no longer necessary to obtain a virtual device identifier from Microsoft. Instead, set the DeviceNum to Undefined_Device_ID and use name-based services to access your VxD. (Do not make up device numbers.) 
</DD>

<DT><I>InitOrder</I></DT>

<DD>Value specifying the initialization order of the virtual device relative to other virtual devices. If you are replacing an existing virtual device, this value must be the same as that of the device you are replacing. If your device is not sensitive to initialization order, use Undefined_Init_Order. If your device needs to initialize at a particular time relative to another device, make the initialization order relative to the init order of that other device. When doing so, use a generous offset such as XX_Init_Order + 00040000h or XX_Init_Order – 0004000h, so as to allow room for additional devices to be inserted later. Do not use values like XX_Init_Order + 1 or XX_Init_Order – 1. Do not use VMM_Init_Order or Debug_Init_Order. </DD>

<DT><I>V86Proc</I></DT>

<DD>Name of the V86-mode API procedure. This procedure processes any calls to the virtual device made by V86-mode applications running in a virtual machine. This parameter is optional. </DD>

<DT><I>PMProc</I></DT>

<DD>Name of the protected-mode API procedure. This procedure processes any calls to the virtual device made by protected-mode applications running in a virtual machine. This parameter is optional. 
</DD>
</DL>

<H4>See Also</H4>

<P><B>Begin_Control_Dispatch</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Declare_Virtual_Device"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
