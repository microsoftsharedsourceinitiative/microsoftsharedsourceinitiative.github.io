<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Enabling and Disabling Drivers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_2278"></A>Enabling and Disabling Drivers</H3>

<P>The <B>DriverProc</B> function calls two functions, <B>Enable</B> and <B>Disable</B>, to enable and disable the driver. These functions are part of the driver. Their implementation is dependent upon the target hardware and the structure of the driver. </P>

<P>Generally, when a driver is enabled, you initialize the hardware, hook interrupts, allocate any memory you need, and set a flag to indicate that the driver is enabled. The exact sequence your device driver follows is determined by the requirements and structure of your device driver. For example, the Bravado device driver uses interrupts only for streaming data. When enabled, it will hook its interrupts only if it was disabled while streaming data. </P>

<P>If your driver has not been enabled by MMSYSTEM, or if it failed the enable process, the driver should return MMSYSERR_NOTENABLED for any messages it receives from client applications. When a driver is disabled, you free any memory you allocated, unhook interrupts, reset the hardware, and set a flag to indicate the driver is not enabled. </P>

<P>It's possible for a driver to receive a DRV_DISABLE message while it is sending or receiving audio data, resulting in a DRV_DISABLE/DRV_ENABLE message pair. For example, this can happen when the user switches to an MS-DOS application while Windows is running in standard mode. </P>

<P>The following table indicates how audio and video device drivers should respond to a DRV_DISABLE/DRV_ENABLE message pair. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=20%>Driver type </TH>
<TH align=left width=80%>Responds as if </TH>
</TR>

<TR VALIGN="top">
<TD width=20%>Waveform output </TD>
<TD width=80%>The driver is paused with a WODM_PAUSE message, and then restarted with a WODM_RESTART message. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>Waveform input </TD>
<TD width=80%>The driver is stopped with a WIDM_STOP message, and then restarted with a WIDM_START message. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>MIDI output </TD>
<TD width=80%>The driver is disabled, and then re-enabled. If the driver is asynchronous, output stops when the driver is disabled and continues when the driver is re-enabled. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>MIDI input </TD>
<TD width=80%>The driver is stopped with a MIDM_STOP message, and then restarted with a MIDM_START message. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>Video capture </TD>
<TD width=80%>The driver is stopped with a DVM_STREAM_STOP message, and then restarted with a DVM_STREAM_START message. </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Enabling%20and%20Disabling%20Drivers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
