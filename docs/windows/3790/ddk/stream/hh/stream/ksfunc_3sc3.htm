<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsAllocateObjectCreateItem</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsAllocateObjectCreateItem">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_ksallocateobjectcreateitem_ks"></A>KsAllocateObjectCreateItem</H3>

<P>The <B>KsAllocateObjectCreateItem</B> function allocates a slot for the specified create item, optionally allocating space for and copying the create item data as well. This function assumes that the caller is serializing multiple changes to the create entry list.</P>

<PRE class=syntax><B>KSDDKAPI NTSTATUS NTAPI
  KsAllocateObjectCreateItem(
    IN KSDEVICE_HEADER  </B><I>Header</I><B>,
    IN PKSOBJECT_CREATE_ITEM  </B><I>CreateItem</I><B>,
    IN BOOL </B><I>AllocateEntry</I><B>,
    IN PFNKSITEMFREECALLBACK  </B><I>ItemFreeCallback</I><B>  OPTIONAL
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Header</I></DT>

<DD>Points to the device header on which to attach the create item.</DD>

<DT><I>CreateItem</I></DT>

<DD>Contains the create item to attach.</DD>

<DT><I>AllocateEntry</I></DT>

<DD>Indicates whether the create item pointer passed should be attached directly to the header, or if a copy of it should be made instead.</DD>

<DT><I>ItemFreeCallback</I></DT>

<DD>Optionally contains a pointer to a callback function that is called when the create entry is being destroyed upon freeing the device header. This is only valid when <I>AllocateEntry</I> is TRUE.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns STATUS_SUCCESS if a new item was allocated and attached. Otherwise, it returns<B> </B>STATUS_INSUFFICIENT_RESOURCES.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>The <B>PFNKSITEMFREECALLBACK</B> is a method that should be called when freeing an allocated create item. It allows the client to perform any cleanup, including flushing security descriptor changes, which would be indicated by the flags set in the create item structure.</P>

<PRE class=syntax><B>typedef NTSTATUS (*PFNKSITEMFREECALLBACK)(
  IN PKSOBJECT_CREATE_ITEM  </B><I>CreateItem</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>CreateItem</I></DT>

<DD>Contains the create item that was previously allocated during the <B>KsAllocateObjectCreteItem </B>call. The <I>Context</I> parameter of this item must contain sufficient information to perform cleanup for this create item.</DD>
</DL>

<H4>Return Value</H4>

<P>The <B>PFNKSITEMFREECALLBACK </B>function returns STATUS_SUCCESS if the item was successfully freed. Otherwise, an appropriate error code is returned.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsAllocateObjectCreateItem"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
