<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Virtual Device Stack</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Virtual Device Stack">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_virtual_device_stack_ksg"></A>Virtual Device Stack</H1>

<P>The <I>virtual </I>device stack (as opposed to the <A HREF="avcguide_7g6f.htm">Peer Device Stack</A>) consists of the set of WDM drivers loaded to represent capabilities and resources of the computer as targets on the 1394 bus. A virtual AV/C device stack is instantiated if any of the computer’s resources are to be exposed as AV/C units or subunits. Even if the peer device stack is used to implement device-specific unit extensions, any unhandled unit commands, as well as all incoming subunit commands, are delivered to the virtual<I> </I>device stack.</P>

<P>The virtual stack cannot send commands directly to external devices. The peer stack provides this functionality. However, any client of the virtual stack can use IOCTL_AVC_CLASS functions to discover and reference peer instances of <I>avc.sys</I>. For more information, see <A HREF="avcref_35ir.htm">AVC_FUNCTION_FIND_PEER_DO</A> and <A HREF="avcref_2mur.htm">AVC_FUNCTION_PEER_DO_LIST</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Virtual%20Device%20Stack"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
