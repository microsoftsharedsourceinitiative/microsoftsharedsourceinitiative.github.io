<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>USBCAMD_WaitOnDeviceEvent</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="USBCAMD_WaitOnDeviceEvent">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_usbcamd_waitondeviceevent_ks"></A>USBCAMD_WaitOnDeviceEvent</H1>

<P>The <B>USBCAMD_WaitOnDeviceEvent</B> service is used to perform a read from the interrupt pipe if the camera has an interrupt pipe for external event notifications.</P>

<PRE class=syntax><B>NTSTATUS
  USBCAMD_WaitOnDeviceEvent(
    IN PVOID  </B><I>DeviceContext</I><B>,</B>
<B>    IN ULONG  </B><I>PipeIndex</I><B>,</B>
<B>    IN PVOID  </B><I>Buffer</I><B>,</B>
<B>    IN ULONG  </B><I>BufferLength</I><B>,</B>
<B>    IN PCOMMAND_COMPLETE_FUNCTION  </B><I>EventComplete</I><B>,</B>
<B>    IN PVOID  </B><I>EventContext</I><B>,</B>
<B>    IN BOOLEAN  </B><I>LoopBack</I>
   <B> );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceContext</I></DT>

<DD>A pointer to device-specific context.</DD>

<DT><I>PipeIndex</I></DT>

<DD>Specifies the index of the interrupt pipe.</DD>

<DT><I>Buffer</I></DT>

<DD>A pointer to the read buffer.</DD>

<DT><I>BufferLength</I></DT>

<DD>Length of the read buffer, in bytes.</DD>

<DT><I>EventComplete</I></DT>

<DD>Pointer to a camera minidriver defined <A HREF="usbcmdpr_0cdv.htm">CommandCompleteFunction</A>, which is called when the interrupt read is completed This value can be NULL.</DD>

<DT><I>EventContext</I></DT>

<DD>Pointer to a block of memory, that is passed as an argument to the camera minidriver defined <A HREF="usbcmdpr_0cdv.htm">CommandCompleteFunction</A>.</DD>

<DT><I>LoopBack</I></DT>

<DD>Specifies if USBCAMD is to resubmit another read request to the interrupt pipe every time an interrupt read is completed. Set to TRUE 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>USBCAMD_WaitOnDeviceEvent</B> returns STATUS_SUCCESS or an appropriate error code.</P>

<H4>Headers</H4>

<P>Declared in <I>usbcamdi.h</I>. Include <I>usbcamdi.h</I>.</P>

<H4>Comments</H4>

<P>The typical usage scenario for this function is a camera with a snapshot button and an interrupt pipe associated with the button. When a user presses the snapshot button, the read request on the interrupt pipe is satisfied and the camera minidriver is called back. If the camera minidriver sets USBCAMD_CamControlFlag_EnableDeviceEvents in the <I>CamControlFlag</I> argument during the <A HREF="usbcmdpr_90oj.htm">USBCAMD_InitializeNewInterface</A> call, the STI monitor also is notified of the snapshot event.</P>

<P><B>USBCAMD_WaitOnDeviceEvent</B> is not available in USBCAMD version 1.0.</P>

<H4>See Also</H4>

<P><A HREF="usbcmdpr_0cdv.htm">CommandCompleteFunction</A>, <A HREF="usbcmdpr_90oj.htm">USBCAMD_InitializeNewInterface</A>, <A HREF="usbcmdpr_7u0j.htm">USBCAMD_INTERFACE</A></P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: USBCAMD_WaitOnDeviceEvent"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
