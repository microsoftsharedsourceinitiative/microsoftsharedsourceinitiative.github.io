<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>USBCAMD Operation</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="USBCAMD Operation">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_usbcamd_operation_ksg"></A>USBCAMD Operation</H2>

<P>The camera minidriver passes the stream request blocks (SRB) associated with the video stream to USBCAMD. USBCAMD will then start and stop the isochronous stream when necessary. USBCAMD will call the camera minidriver when it is necessary to allocate bandwidth and free bandwidth (usually the camera minidriver will select an appropriate alternate setting). This ensures that the camera will only be using USB bus bandwidth when it is actually running. The camera minidriver “sees” each packet on the isochronous stream and is responsible for indicating the start of a new video frame. Some SRBs are handled by the camera minidriver. For example, SRBs that report video format or handle property requests are handled entirely by the minidriver.</P>

<P>The camera minidriver binds to the USBCAMD library by calling <A HREF="usbcmdpr_3w6r.htm">USBCAMD_DriverEntry</A> in the camera minidriver's <B>DriverEntry</B> routine. USBCAMD will then register the minidriver with the stream class driver. The camera minidriver will receive SRBs sent from the stream class driver. The camera minidriver can call routines in USBCAMD to help process the SRBs. The USBCAMD library will call into the camera minidriver via a set of callback routines that are passed to USBCAMD. The camera minidriver passes its callback routines to USBCAMD in a <A HREF="usbcmdpr_9mwj.htm">USBCAMD_DEVICE_DATA2</A> structure. This structure is passed to USBCAMD through a call to <A HREF="usbcmdpr_90oj.htm">USBCAMD_InitializeNewInterface</A>. A complete description of the control flow between the stream class driver, USBCAMD, and the camera minidriver is described in <A HREF="usbcmdds_544n.htm">Processing SRBs</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: USBCAMD%20Operation"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
