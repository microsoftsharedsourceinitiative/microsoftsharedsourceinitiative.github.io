<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IPortEvents</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IPortEvents">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iportevents_ks"></A>IPortEvents</H1>

<P>The <B>IPortEvents</B> interface is used by miniport drivers to notify clients of <A HREF="aud-design_4m93.htm">hardware events</A>. This interface is implemented by the port driver and exposed to the miniport driver. To determine whether a port driver supports the <B>IPortEvents</B> interface, the miniport driver calls the port object's <B>QueryInterface</B> method with REFIID <B>IID_IPortEvents</B>. <B>IPortEvents</B> inherits from the <B>IUnknown</B> interface.</P>

<P>In Windows&nbsp;98/Me and in Windows&nbsp;2000 and later, the following port types support <B>IPortEvents</B>:</P>

<P class=indent1><A HREF="audmp-routines_3rg3.htm"><B>IPortWaveCyclic</B></A> </P>

<P class=indent1><A HREF="audmp-routines_8gc3.htm"><B>IPortWavePci</B></A> </P>

<P class=indent1><A HREF="audmp-routines_7pgz.htm"><B>IPortDMus</B></A> </P>

<P class=indent1><A HREF="audmp-routines_49pv.htm"><B>IPortMidi</B></A> </P>

<P class=indent1><A HREF="audmp-routines_1c8j.htm"><B>IPortTopology</B></A> </P>

<P>Drivers typically use the <B>IPortEvents</B> interface to notify the system of hardware-generated volume or mute changes, although <B>IPortEvents</B> can be used for any type of event notification. <B>IPortEvents</B> interface is an optional lower-edge port driver interface. It can be used, for example, to notify <B>mixer</B> applications of control and/or line changes. For information about the <B>mixer</B> API, see the Platform SDK documentation.</P>

<P>A miniport driver exposes an event in the same way that it exposes properties: through an automation table (see <A HREF="audpc-struct_3nlf.htm">PCAUTOMATION_TABLE</A>). The following objects, all of which are exposed by the miniport driver, can specify an automation table that contains properties and/or events:

<UL>
	<LI>The filter that the miniport driver implements</LI>

	<LI>Each pin that the filter exposes</LI>

	<LI>Each node that the filter exposes</LI>
</UL>

<P>Each event entry in an automation table is a structure of type <A HREF="audpc-struct_3j1v.htm">PCEVENT_ITEM</A> that specifies the following:

<UL>
	<LI>An event set</LI>

	<LI>An event within the set</LI>

	<LI>Flags indicating support options</LI>

	<LI>A function pointer to the handler for the event</LI>
</UL>

<P>Once the adapter driver is started and its port/miniport pairs have been registered as filters with the system, the <A HREF="aud-design_789z.htm#ddk_wdmaud_system_driver_ksg">WDMAud system driver</A>, which translates <B>mixer</B> API calls into KS commands to WDM audio drivers, will open each port/miniport pair and interrogate its capabilities. During this process, WDMAud will traverse the miniport driver's filter topology in search of a control node that supports a hardware event. The event is represented by the combination of event-set GUID <A HREF="aud-prop_3var.htm">KSEVENTSETID_AudioControlChange</A> and event ID <A HREF="aud-prop_9eer.htm">KSEVENT_CONTROL_CHANGE</A>. When WdmAud finds these, it enables the event, effectively registering itself as a client of the event. Subsequently, each time the miniport driver signals the event, this notifies WDMAud, which generates the appropriate windows messages for its clients.</P>

<P>In addition to exposing the event in the automation table, a miniport driver that needs to expose events should query the port driver for its <B>IPortEvents</B> interface.</P>

<P>In addition to the methods that <B>IPortEvents</B> inherits from the <B>IUnknown</B> interface, <B>IPortEvents</B> supports the following two methods:</P>

<P class=indent1><A HREF="audmp-routines_3w37.htm"><B>IPortEvents::AddEventToEventList</B></A></P>

<P class=indent1><A HREF="audmp-routines_5e7n.htm"><B>IPortEvents::GenerateEventList</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IPortEvents"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
