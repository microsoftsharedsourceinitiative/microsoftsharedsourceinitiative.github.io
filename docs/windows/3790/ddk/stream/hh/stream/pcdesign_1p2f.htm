<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Miniport Function Tables</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Miniport Function Tables">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_miniport_function_tables_ksg"></A>Miniport Function Tables</H3>

<P>Miniport upper-edge interfaces consist of function tables. In a generic miniport driver (as described in <A HREF="aud-design_2m5j.htm">WDM Audio Terminology</A>), the function table is supplied to the port driver during registration, at which time the miniport driver informs the port driver of the size of the context structure that the miniport driver requires. The port driver copies the function table to some private location, allocates the context structure, and calls an initialization function in the function table, passing a pointer to the context structure.</P>

<P>Audio miniport drivers similarly use a function table, but the table is statically allocated and does not need to be copied by the port driver. The port driver retrieves its context ("object") memory from a specified pool and installs a pointer to the function table into the context. Because the function table pointer is always the first field in the context, the port driver needs to store only a context pointer and can access the function table through the context.</P>

<P>This approach was taken because COM supplies a solid, efficient, and widely understood model for creating abstracted objects. The audio miniport model leverages industry experience with COM and the existing body of COM literature. Objects can be implemented and used in C or C++. Assembly language can also be used, but only where portability is not required.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Miniport%20Function%20Tables"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
