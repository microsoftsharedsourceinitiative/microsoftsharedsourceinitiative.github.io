<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IKsReferenceClock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IKsReferenceClock">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iksreferenceclock_ks"></A>IKsReferenceClock</H1>

<P>The <I>IKsReferenceClock</I> interface is a COM-style interface provided by AVStream on all pins. The pin passes the request onto the master clock.</P>

<H4>Methods</H4>

<P>The following IUnknown methods are listed in Vtable order.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=33%>IUnknown method</TH>
<TH align=left width=67%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=33%><B>QueryInterface</B></TD>
<TD width=67%>Returns pointers to supported interfaces.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>AddRef</B></TD>
<TD width=67%>Increments reference count.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>Release</B></TD>
<TD width=67%>Decrements reference count.</TD>
</TR>
</TABLE><BR>

<P>The following IKsControl methods are listed in Vtable order.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=34%>IKsControl method</TH>
<TH align=left width=66%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=34%><A HREF="avintfc_9h6b.htm"><B>IksReferenceClock::GetTime</B></A></TD>
<TD width=66%>Queries the associated reference clock for the current time.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><A HREF="avintfc_5s4z.htm"><B>IksReferenceClock::GetPhysicalTime</B></A></TD>
<TD width=66%>Queries the associated reference clock for the current physical time.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><A HREF="avintfc_63sj.htm"><B>IksReferenceClock::GetCorrelatedTime</B></A></TD>
<TD width=66%>Simultaneously queries the associated reference clock for current stream time and acquires the system time.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><A HREF="avintfc_6lv7.htm"><B>IksReferenceClock::GetCorrelatedPhysicalTime</B></A></TD>
<TD width=66%>Queries the associated reference clock for the current correlated physical time and system time.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><A HREF="avintfc_265v.htm"><B>IksReferenceClock::GetResolution</B></A></TD>
<TD width=66%>Queries the associated reference clock for its resolution.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><A HREF="avintfc_0ecz.htm"><B>IksReferenceClock::GetState</B></A></TD>
<TD width=66%>Queries the associated reference clock for its current state.</TD>
</TR>
</TABLE><BR>

<H4>Comments</H4>

<P>The minidriver can acquire an <I>IKsReferenceClock</I> interface by calling <A HREF="avfunc_6t9v.htm"><B>KsPinGetReferenceClockInterface</B></A>. Because this is a COM-style interface, <B>KsPinGetReferenceClockInterface</B> calls <B>QueryInterface</B>, which in turn invokes <B>AddRef</B> to increment the interface pointer. This means that when the minidriver is done with the <I>IKsReferenceClock</I> interface, the minidriver must release it by calling <B>Release</B>.</P>

<P>Clients written in C will see the <I>IKsReferenceClock</I> interface as a structure containing a pointer to a table of functions instead of a C++ abstract base class. A client written in C++ might do the following:</P>

<PRE>    PIKSREFERENCECLOCK RefClock;

    if (NT_SUCCESS (
      KsPinGetReferenceClockInterface (
        Pin,
        &amp;RefClock)
) {
        … RefClock -&gt; GetCorrelatedTime (…);
        RefClock -&gt; Release ();
    }</PRE>

<P>However, a client written in C would do the following instead :</P>

<PRE>    PIKSREFERENCECLOCK RefClock;

    If (NT_SUCCESS (
      KsPinGetReferenceClockInterface (
        Pin,
        &amp;RefClock)
    ) {
      … RefClock -&gt; lpVtbl -&gt; GetCorrelatedTime (…);
      RefClock -&gt; lpVtbl -&gt; Release ();
    }</PRE>

<P>For more information, see <A HREF="avsover_02w7.htm">AVStream Overview</A>.</P>

<H4>See Also</H4>

<P><A HREF="avfunc_6tyr.htm"><B>KsPinGetConnectedPinInterface</B></A><B>, <A HREF="avfunc_5dpv.htm">KsPinGetConnectedFilterInterface</A></B>, <A HREF="avfunc_6t9v.htm"><B>KsPinGetReferenceClockInterface</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IKsReferenceClock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
