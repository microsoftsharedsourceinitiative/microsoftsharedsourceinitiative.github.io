<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IDmaChannel</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IDmaChannel">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_introduction_to_adapter_objects_kg">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_adapter_object_kg_gly">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pdo_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_idmachannel_ks"></A>IDmaChannel</H1>

<P>The <B>IDmaChannel </B>interface provides an abstraction of a DMA channel and its associated DMA buffer and usage parameters. A WaveCyclic or WavePci port driver implements this interface and exposes it to the WaveCyclic or WavePci miniport driver. The miniport driver obtains a reference to the port driver's implementation of an <B>IDmaChannel</B> object by calling one of the port driver's <B>New<I>Xxx</I>DmaChannel</B> methods (see list below). A miniport driver also has the option of implementing its own <B>IDmaChannel</B> interface if it requires capabilities that are not in the port driver's default implementation (for more information, see <A HREF="aud-design_1d47.htm">Wave Filters</A>). When the port driver calls the miniport driver's <B>NewStream</B> method (for example, <A HREF="audmp-routines_735f.htm"><B>IMiniportWaveCyclic::NewStream</B></A>), the method outputs the miniport driver's <B>IDmaChannel</B> object to the port driver. <B>IDmaChannel</B> inherits from the <B>IUnknown</B> interface.</P>

<P>An <B>IDmaChannel</B> object encapsulates the following:

<UL>
	<LI>A DMA channel for a master or slave device</LI>

	<LI>The data buffer that is associated with the channel</LI>

	<LI>Information that describes how the channel is to be used</LI>
</UL>

<P>Ports and miniport drivers use DMA-channel objects to communicate information regarding DMA-channel usage. Typically, a miniport driver allocates a set of DMA channels during initialization or during the creation of a stream. At the time that a new stream is created, the miniport driver tells the port driver which DMA-channel object will be used for the stream. </P>

<P>DMA-channel objects can be created for master or slave devices:

<UL>
	<LI>A <I>slave</I> device has no built-in DMA-hardware capabilities and must rely on the system DMA controller to perform any data transfers that the device requires.</LI>

	<LI>A <I>master</I> device uses its own bus-mastering DMA hardware to perform data transfers on the system bus.</LI>
</UL>

<P>For more information on master and slave devices, see <A HREF="JavaScript:hhobj_1.Click()">Introduction to Adapter Objects</A>. A master DMA-channel object is little more than a backboard for sharing information about the DMA channel between the port and miniport drivers. The DMA-channel object for a master or slave device exposes the following:

<UL>
	<LI>An adapter object</LI>

	<LI>A single common buffer that the driver and DMA hardware can share</LI>

	<LI>A buffer-size value that can be queried and changed</LI>
</UL>

<P>The <A HREF="JavaScript:hhobj_2.Click()">adapter object</A> is a DMA-adapter structure for a physical device object (<A HREF="JavaScript:hhobj_3.Click()">PDO</A>). The adapter object is automatically created when the DMA-channel object is created by one of the following methods:</P>

<P class=indent1><A HREF="audmp-routines_312r.htm"><B>IPortWavePci::NewMasterDmaChannel</B></A></P>

<P class=indent1><A HREF="audmp-routines_786r.htm"><B>IPortWaveCyclic::NewMasterDmaChannel</B></A></P>

<P class=indent1><A HREF="audmp-routines_30dv.htm"><B>IPortWaveCyclic::NewSlaveDmaChannel</B></A></P>

<P>The method <A HREF="audmp-routines_8zlf.htm"><B>IDmaChannel::GetAdapterObject</B></A> can be used to obtain a pointer to the adapter object.</P>

<P>In the case of a DMA channel for a slave device, the <A HREF="audmp-routines_8dkj.htm"><B>IDmaChannel::TransferCount</B></A> method returns the maximum transfer size (the <I>MapSize</I> parameter) that was specified in the call to <A HREF="audmp-routines_53qr.htm"><B>IDmaChannelSlave::Start</B></A>. Also, the adapter object provides some methods for manipulating and querying the DMA device. None of these methods are meaningful for master DMA channels.</P>

<P><A HREF="audmp-routines_5v3n.htm"><B>IDmaChannel::AllocateBuffer</B></A> and <A HREF="audmp-routines_7rqr.htm"><B>IDmaChannel::FreeBuffer</B></A> are used to manage the single common buffer that is associated with the DMA-channel object. The buffer that is allocated by the object is guaranteed to be accessible by both the driver (with kernel virtual-memory addresses) and DMA device (with physical-memory addresses). In addition, the buffer will be physically contiguous. Typically, the best strategy is to allocate the DMA buffer during miniport-driver initialization when physically contiguous memory is most plentiful. <A HREF="audmp-routines_0w4z.htm"><B>IDmaChannel::AllocatedBufferSize</B></A> returns the size of the buffer as it was specified in the call to <B>IDmaChannel::AllocateBuffer</B>.</P>

<P><A HREF="audmp-routines_76sz.htm"><B>IDmaChannel::MaximumBufferSize</B></A> indicates the actual maximum buffer size that can be used. This might exceed the allocated size if the allocated size is not an even multiple of the page size. It might be less than the allocated size if the DMA device cannot support transfers of the allocated size. <A HREF="audmp-routines_7ub7.htm"><B>IDmaChannel::BufferSize</B></A> and <A HREF="audmp-routines_7dtf.htm"><B>IDmaChannel::SetBufferSize</B></A> are used to query and set the size of the buffer to be used for DMA transfers. When the buffer is allocated, the buffer size is set to the maximum buffer size. After initialization, both the port driver and miniport driver have the opportunity to change the buffer size and discover its current value. The miniport driver uses the result of <B>IDmaChannel::BufferSize</B> to determine the transfer size for DMA operations when the DMA channel is started. <A HREF="audmp-routines_7wz7.htm"><B>IDmaChannel::SystemAddress</B></A> and <A HREF="audmp-routines_1veb.htm"><B>IDmaChannel::PhysicalAddress</B></A> are used to obtain the virtual and physical addresses of the buffer, respectively. </P>

<P><A HREF="audmp-routines_6pbn.htm"><B>IDmaChannel::CopyTo</B></A> and <A HREF="audmp-routines_6437.htm"><B>IDmaChannel::CopyFrom</B></A> copy sample data to and from the DMA buffer.</P>

<P>The DMA buffer is not necessarily used to transfer the streamed data. In the case of the WavePci port driver, the streamed data is delivered to (or from) the miniport driver using scatter/gather mappings. However, the miniport driver might still make use of the buffer as a shared memory space for communicating with the adapter driver.</P>

<P>Port drivers provide miniport drivers with functions that they can use to create DMA channels. Unless otherwise noted in the description of the port driver, it is not absolutely necessary to use DMA objects allocated from the port driver. The port driver simply requires a pointer to an <B>IDmaChannel</B> interface that supports the methods it needs. Check the documentation for each port driver for a list of the DMA-channel methods that the port driver requires.</P>

<P>Typically, the easiest path is to use the DMA-channel allocation functions that are offered by the port driver. In some rare cases, the miniport-driver developer will want to implement the DMA-channel object in some special way that meets the needs of a particular adapter. This sometimes requires the implementation of a new object. At other times, it is sufficient to have the miniport driver's stream object expose an <B>IDmaChannel</B> interface and implement the DMA-channel methods itself.</P>

<P>In addition to the methods that <B>IDmaChannel</B> inherits from the <B>IUnknown</B> interface, <B>IDmaChannel</B> supports the following methods:</P>

<P class=indent1><A HREF="audmp-routines_5v3n.htm"><B>IDmaChannel::AllocateBuffer</B></A> </P>

<P class=indent1><A HREF="audmp-routines_0w4z.htm"><B>IDmaChannel::AllocatedBufferSize</B></A> </P>

<P class=indent1><A HREF="audmp-routines_7ub7.htm"><B>IDmaChannel::BufferSize</B></A> </P>

<P class=indent1><A HREF="audmp-routines_6437.htm"><B>IDmaChannel::CopyFrom</B></A> </P>

<P class=indent1><A HREF="audmp-routines_6pbn.htm"><B>IDmaChannel::CopyTo</B></A> </P>

<P class=indent1><A HREF="audmp-routines_7rqr.htm"><B>IDmaChannel::FreeBuffer</B></A> </P>

<P class=indent1><A HREF="audmp-routines_8zlf.htm"><B>IDmaChannel::GetAdapterObject</B></A> </P>

<P class=indent1><A HREF="audmp-routines_76sz.htm"><B>IDmaChannel::MaximumBufferSize</B></A> </P>

<P class=indent1><A HREF="audmp-routines_1veb.htm"><B>IDmaChannel::PhysicalAddress</B></A> </P>

<P class=indent1><A HREF="audmp-routines_7dtf.htm"><B>IDmaChannel::SetBufferSize</B></A> </P>

<P class=indent1><A HREF="audmp-routines_7wz7.htm"><B>IDmaChannel::SystemAddress</B></A> </P>

<P class=indent1><A HREF="audmp-routines_8dkj.htm"><B>IDmaChannel::TransferCount</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IDmaChannel"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
