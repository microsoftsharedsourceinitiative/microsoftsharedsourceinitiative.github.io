<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Writing a Virtual Subunit Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Writing a Virtual Subunit Driver">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_ioregisterdeviceinterface_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_windows_management_instrumentation_kg">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_start_device_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_writing_a_virtual_subunit_driver_ksg"></A>Writing a Virtual Subunit Driver</H3>

<P>A virtual subunit driver can be "thick" or "thin." The only requirement is that it be written as a WDM driver. A "thick" driver implements most, if not all, functionality of the virtual device. A "thin" driver provides a proxy interface to the virtual device functionality, which may be another driver or a user-mode component. The interface between user mode and the virtual subunit driver is implementation specific and may be accomplished through I/O control codes (IOCTLs), private interfaces (see <A HREF="JavaScript:hhobj_1.Click()">IoRegisterDeviceInterface</A>) or through <A HREF="JavaScript:hhobj_2.Click()">Windows Management Instrumentation</A> (WMI).</P>

<P>The IOCTL_AVC_CLASS function codes <A HREF="avcref_4xir.htm">AVC_FUNCTION_GET_REQUEST</A> and <A HREF="avcref_8q0j.htm">AVC_FUNCTION_SEND_RESPONSE</A> are the key mechanisms by which the virtual subunit driver interacts with the rest of the virtual driver stack. A virtual subunit driver submits an AVC_FUNCTION_GET_REQUEST IRP in its <A HREF="JavaScript:hhobj_3.Click()">IRP_MN_START_DEVICE</A> handler (after completion by lower drivers). The completion routine for the AVC_FUNCTION_GET_REQUEST IRP is called each time a request for your subunit is received. The completion routine must send a response (by AVC_FUNCTION_SEND_RESPONSE with an asynchronous IRP) within 100ms (according to the AV/C protocol rules); it may use the <A HREF="avcref_2tv7.htm">AVC_COMMAND_IRB</A> structure contained in the request to send the response. Then it must resubmit an AVC_FUNCTION_GET_REQUEST IRP before finally returning from the response’s completion routine.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Writing%20a%20Virtual%20Subunit%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
