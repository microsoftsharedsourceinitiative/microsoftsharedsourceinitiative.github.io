<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>USBCAMD_DriverEntry</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="USBCAMD_DriverEntry">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_usbcamd_driverentry_ks"></A>USBCAMD_DriverEntry</H1>

<P>The <B>USBCAMD_DriverEntry</B> function registers the minidriver with USBCAMD, effectively binding USBCAMD and the minidriver together.</P>

<PRE class=syntax><B>ULONG
</B>  <B>USBCAMD_DriverEntry(</B>
<B>    PVOID</B>  <I>Context1</I><B>,</B>
<B>    PVOID </B> <I>Context2</I><B>,</B>
<B>    ULONG  </B><I>DeviceContextSize</I><B>,</B>
<B>    ULONG</B>  <I>FrameContextSize</I><B>,</B>
<B>    PADAPTER_RECEIVE_PACKET_ROUTINE</B>  <I>ReceivePacket</I>
   <B> );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Context1</I></DT>

<DD>Pointer to the first argument that is passed to the camera minidriver's DriverEntry function. This is effectively a pointer to the driver object that is created by the system and passed to DriverEntry.</DD>

<DT><I>Context2</I></DT>

<DD>Pointer to the second argument that is passed to the camera minidriver's DriverEntry function. This is effectively a pointer to the registry path that describes the minidriver's registry key.</DD>

<DT><I>DeviceContextSize</I></DT>

<DD>Specifies the size, in bytes, required for the minidriver's device-specific context.</DD>

<DT><I>FrameContextSize</I></DT>

<DD>Specifies the size, in bytes, required for the minidriver’s frame-specific context structure. Use NULL if not needed.</DD>

<DT><I>ReceivePacket</I></DT>

<DD>Pointer to the minidriver-defined <A HREF="usbcmdpr_4lkk.htm">AdapterReceivePacket</A> function that handles adapter-based SRB requests.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns an NTSTATUS value indicating the result of the registration attempt. If a value other than STATUS_SUCCESS is returned, the minidriver is unloaded.</P>

<H4>Headers</H4>

<P>Declared in <I>usbcamdi.h</I>. Include <I>usbcamdi.h</I>.</P>

<H4>Comments</H4>

<P>A camera minidriver must call <B>USBCAMD_DriverEntry</B> from the minidriver's <B>DriverEntry</B> routine. For more information, see <A HREF="strmini-design_0nmv.htm">DriverEntry for Stream Class Minidrivers</A></P>

<P><I>FrameContextSize</I> is optional. A non-NULL value should be provided only with calls to <A HREF="usbcmdpr_3lir.htm">CamNewVideoFrame</A> or <A HREF="usbcmdpr_0xmb.htm">CamProcessRawVideoFrame</A>.</P>

<H4>See Also</H4>

<P><A HREF="usbcmdpr_3lir.htm">CamNewVideoFrame</A>, <A HREF="usbcmdpr_0xmb.htm">CamProcessRawVideoFrame</A>, <A HREF="usbcmdpr_4lkk.htm">AdapterReceivePacket</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: USBCAMD_DriverEntry"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
