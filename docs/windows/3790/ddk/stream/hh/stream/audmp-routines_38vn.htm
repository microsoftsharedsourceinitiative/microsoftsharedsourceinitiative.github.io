<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IMXF::PutMessage</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IMXF::PutMessage">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_imxf_putmessage_ks"></A>IMXF::PutMessage</H1>

<P>The <B>PutMessage</B> method passes a <A HREF="aud-prop_10kz.htm">DMUS_KERNEL_EVENT</A> structure to its next destination. The miniport driver uses this method to discard used event structures so that they can be recycled by the allocator.</P>

<PRE class=syntax><B>NTSTATUS
  PutMessage(
    IN PDMUS_KERNEL_EVENT  </B><I>pDMKEvt</I>
<B>    );</B></PRE>

<H4>Parameter</H4>

<DL>
<DT><I>pDMKEvt</I></DT>

<DD>Pointer to the <A HREF="aud-prop_10kz.htm">DMUS_KERNEL_EVENT</A> structure being passed to its destination.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>PutMessage</B> returns STATUS_SUCCESS if the call was successful. Otherwise, the method returns an appropriate error code.</P>

<H4>Headers</H4>

<P>Declared in <I>dmusicks.h</I>. Include <I>dmusicks.h</I>.</P>

<H4>Comments</H4>

<P>During rendering, the miniport driver calls the <B>PutMessage</B> method to discard used <A HREF="aud-prop_10kz.htm">DMUS_KERNEL_EVENT</A> structures. The method routes the discarded structures to the allocator for reuse. The miniport driver calls this method once it has extracted the MIDI data from the structures for rendering.</P>

<P>This method is also be used during MIDI capture to package and pass MIDI messages to the capture sink in PortDMus. These messages can be single, multiple, or fragmentary MIDI events and are packaged in DMUS_KERNEL_EVENT structures (which are retrieved by <A HREF="audmp-routines_5n3n.htm"><B>IAllocatorMXF::GetMessage</B></A> calls).</P>

<P>The allocator is always the last destination in any chain, so every DMUS_KERNEL_EVENT structure will eventually be recycled. If <A HREF="audmp-routines_0ng3.htm"><B>IMXF::ConnectOutput</B></A> has not been called, <B>PutMessage</B> will default to passing the structure to the allocator.</P>

<P>For more information, see <A HREF="dmdesign_0u5j.htm">Allocator</A>.</P>

<H4>See Also</H4>

<P><A HREF="aud-prop_10kz.htm">DMUS_KERNEL_EVENT</A>, <A HREF="audmp-routines_5n3n.htm"><B>IAllocatorMXF::GetMessage</B></A>, <A HREF="audmp-routines_0ng3.htm"><B>IMXF::ConnectOutput</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IMXF::PutMessage"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
