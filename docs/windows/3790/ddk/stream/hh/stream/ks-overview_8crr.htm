<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KS Events</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KS Events">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_ks_events_ksg"></A>KS Events</H3>

<P>If you are writing an AVStream minidriver, read <A HREF="avsover_5uhz.htm">Event Handling in AVStream</A>.</P>

<P>Event sets are groups of related events for which a listener can request notification. For example, a listener could register to be notified of device state changes, or that a stream has reached a particular position. When an event occurs, kernel streaming notifies any clients that have registered for this event.</P>

<P>Minidrivers describe how they support an event by providing a <A HREF="ks-struct_0ipf.htm">KSEVENT_ITEM</A> structure that contains pointers to handling routines.</P>

<P>Listeners register for notification by calling the kernel streaming proxy routine <A HREF="ksproxy_0gxf.htm"><B>KsSynchronousDeviceControl</B></A> with the IOCTL_KS_ENABLE_EVENT control code and pointers to <A HREF="ks-struct_5lmb.htm">KSEVENT</A> and <A HREF="ks-struct_0mr7.htm">KSEVENTDATA</A>.structures.  </P>

<P>The IOCTL_KS_DISABLE_EVENT request disables a specified event. The same pointer that was used to enable the event must be used to disable it. This pointer uniquely identifies the event. Optionally, the client may specify a NULL pointer and length of zero to disable all active events for the client.</P>

<P>All event sets must support the KSEVENT_TYPE_BASICSUPPORT flag. Refer to <A HREF="ks-struct_5lmb.htm">KSEVENT</A> for a list of available event flags.</P>

<P>Some event types require additional parameters to register for event notification. For example, the <A HREF="ks-event_1foz.htm">KSEVENT_CLOCK_POSITION_MARK</A> event on a clock is triggered when the clock reaches a certain time stamp. Consequently, clients that register to be notified of this event must specify the time stamp at which to trigger the event.</P>

<P>In such a case, a minidriver passes additional data parameters in the data buffer after the <A HREF="ks-struct_0mr7.htm">KSEVENTDATA</A> structure. Minidrivers that support such an event type use an extended data structure, of which the first member is of type KSEVENTDATA, to hold the notification data. </P>

<H4>Parameter Access Macros</H4>

<P>The following macros are defined to allow access to Irp-&gt;Tail.Overlay.DriverContext parameters in the Irp passed to a handler function. These are initialized by KsEnableEvent and KsEnableEventWithAllocator.

<DL>
<DT>KSEVENT_SET_IRP_STORAGE</DT>

<DD>This macro accesses a pointer to the KSEVENT_SET where the event was located. This is only initialized for a basic support callback, and not for an enable callback.</DD>

<DT>KSEVENT_ITEM_IRP_STORAGE</DT>

<DD>This macro accesses a pointer to the specific KSEVENT_ITEM located. Note that this value is only set when using KsEnableEventWithAllocator.</DD>

<DT>KSEVENT_ENTRY_IRP_STORAGE</DT>

<DD>This macro accesses a pointer to the KSEVENT_ENTRY being allocated. This is not initialized for a basic support callback, only for an enable callback. If the event enable is to be handled asynchronously, this storage location must be maintained intact.</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KS%20Events"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
