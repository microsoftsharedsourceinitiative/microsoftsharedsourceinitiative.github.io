<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>USBCAMD_DEVICE_DATA2</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="USBCAMD_DEVICE_DATA2">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_usbcamd_device_data2_ks"></A>USBCAMD_DEVICE_DATA2</H1>

<P>The USBCAMD_DEVICE_DATA2 structure specifies the entry points for a camera minidriver's functions that USBCAMD calls.</P>

<PRE class=syntax>typedef struct _USBCAMD_DEVICE_DATA2
{
    ULONG  Sig;
    PCAM_INITIALIZE_ROUTINE  CamInitialize;
    PCAM_INITIALIZE_ROUTINE  CamUnInitialize
    PCAM_PROCESS_PACKET_ROUTINE_EX  CamProcessUSBPacketEx;
    PCAM_NEW_FRAME_ROUTINE_EX  CamNewVideoFrameEx;
    PCAM_PROCESS_RAW_FRAME_ROUTINE_EX  CamProcessRawVideoFrameEx;
    PCAM_START_CAPTURE_ROUTINE_EX  CamStartCaptureEx;
    PCAM_STOP_CAPTURE_ROUTINE_EX  CamStopCaptureEx;
    PCAM_CONFIGURE_ROUTINE_EX  CamConfigureEx;
    PCAM_STATE_ROUTINE  CamSaveState;
    PCAM_STATE_ROUTINE  CamRestoreState;
    PCAM_ALLOCATE_BW_ROUTINE_EX  CamAllocateBandwidthEx;
    PCAM_FREE_BW_ROUTINE_EX  CamFreeBandwidthEx;
} USBCAMD_DEVICE_DATA2, *PUSBCAMD_DEVICE_DATA2;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Sig</B></DT>

<DD>Reserved. Do not use.</DD>

<DT><B>CamInitialize</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_1s8j.htm">CamInitialize</A> callback function. This entry point is required.</DD>

<DT><B>CamUnInitialize</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_3t83.htm">CamUnInitialize</A> callback function. This entry point is required.</DD>

<DT><B>CamProcessUSBPacketEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_5mlv.htm">CamProcessUSBPacketEx</A> callback function. This is an optional entry point. If the minidriver does not implement this function, it must point to an empty function.</DD>

<DT><B>CamNewVideoFrameEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_5lbn.htm">CamNewVideoFrameEx</A> callback function. This is an optional entry point. If the minidriver does not implement this function, it must point to an empty function.</DD>

<DT><B>CamProcessRawVideoFrameEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_45v7.htm">CamProcessRawVideoFrameEx</A> callback function. This is an optional entry point. If the minidriver does not implement this function, it must point to an empty function.</DD>

<DT><B>CamStartCaptureEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_5gs3.htm">CamStartCaptureEx</A> callback function. This entry point is required.</DD>

<DT><B>CamStopCaptureEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_2xf7.htm">CamStopCaptureEx</A> callback function. This entry point is required.</DD>

<DT><B>CamConfigureEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_04ab.htm">CamConfigureEx</A> callback function. This entry point is required.</DD>

<DT><B>CamSaveState</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_61mb.htm">CamSaveState</A> callback function. This is an optional entry point. If the minidriver does not implement this function, it must point to an empty function.</DD>

<DT><B>CamRestoreState</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_4lkj.htm">CamRestoreState</A> callback function. This is an optional entry point. If the minidriver does not implement this function, it must point to an empty function.</DD>

<DT><B>CamAllocateBandwidthEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_4yb7.htm">CamAllocateBandwidthEx</A> callback function. This entry point is required.</DD>

<DT><B>CamFreeBandwidthEx</B></DT>

<DD>Pointer to the camera minidriver defined <A HREF="usbcmdpr_16ib.htm">CamFreeBandwidthEx</A> callback function. This entry point is required.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>usbcamdi.h</I>. Include <I>usbcamdi.h</I>.</P>

<H4>Comments</H4>

<P>A camera minidriver passes a USBCAMD_DEVICE_DATA2 structure to USBCAMD as a parameter to USBCAMD service <A HREF="usbcmdpr_90oj.htm">USBCAMD_InitializeNewInterface</A>.</P>

<P>Camera minidrivers that must be backwards compatible with version 1.0 of the USBCAMD library must use the <A HREF="usbcmdpr_2jzn.htm">USBCAMD_DEVICE_DATA</A> structure.</P>

<H4>See Also</H4>

<P><A HREF="usbcmdpr_90oj.htm">USBCAMD_InitializeNewInterface</A>, <A HREF="usbcmdpr_1s8j.htm">CamInitialize</A>, <A HREF="usbcmdpr_3t83.htm">CamUnInitialize</A>, <A HREF="usbcmdpr_5mlv.htm">CamProcessUSBPacketEx</A>, <A HREF="usbcmdpr_5lbn.htm">CamNewVideoFrameEx</A>, <A HREF="usbcmdpr_45v7.htm">CamProcessRawVideoFrameEx</A>, <A HREF="usbcmdpr_5gs3.htm">CamStartCaptureEx</A>, <A HREF="usbcmdpr_2xf7.htm">CamStopCaptureEx</A>, <A HREF="usbcmdpr_04ab.htm">CamConfigureEx</A>, <A HREF="usbcmdpr_61mb.htm">CamSaveState</A>, <A HREF="usbcmdpr_4lkj.htm">CamRestoreState</A>, <A HREF="usbcmdpr_4yb7.htm">CamAllocateBandwidthEx</A>, <A HREF="usbcmdpr_16ib.htm">CamFreeBandwidthEx</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: USBCAMD_DEVICE_DATA2"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
