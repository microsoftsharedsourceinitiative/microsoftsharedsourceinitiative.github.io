<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KSPROPERTY_AEC_STATUS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KSPROPERTY_AEC_STATUS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ksproperty_aec_status_ks"></A>KSPROPERTY_AEC_STATUS</H1>

<P>The KSPROPERTY_AEC_STATUS property is used to monitor the status of an AEC node (<A HREF="aud-prop_01wz.htm">KSNODETYPE_ACOUSTIC_ECHO_CANCEL</A>). This is an optional property of an AEC node.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=12%>Get</TH>
<TH align=left width=12%>Set</TH>
<TH align=left width=16%>Target</TH>
<TH align=left width=34%>Property Descriptor Type</TH>
<TH align=left width=26%>Property Value Type</TH>
</TR>

<TR VALIGN="top">
<TD width=12%>Yes</TD>
<TD width=12%>No</TD>
<TD width=16%>Pin</TD>
<TD width=34%><A HREF="aud-prop_5n3n.htm">KSNODEPROPERTY</A></TD>
<TD width=26%>ULONG</TD>
</TR>
</TABLE><BR>

<P>The property value (operation data) is of type ULONG. This is a status value that can be set to the bitwise OR of one or more of the flag bits in the left column of the following table, which are defined in header file <I>ksmedia.h</I>. The corresponding DSCFX_AEC_STATUS flags from header file <I>dsound.h</I> are shown in the right column of the table. See the Platform SDK documentation for information about these flags.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=43%>AEC Status Flag</TH>
<TH align=left width=13%>Value</TH>
<TH align=left width=44%>DSCFX_AEC_STATUS Flag</TH>
</TR>

<TR VALIGN="top">
<TD width=43%>AEC_STATUS_FD_HISTORY_UNINITIALIZED</TD>
<TD width=13%>0x0</TD>
<TD width=44%>DSCFX_AEC_STATUS_HISTORY_UNINITIALIZED</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>AEC_STATUS_FD_HISTORY_CONTINUOUSLY_CONVERGED</TD>
<TD width=13%>0x1</TD>
<TD width=44%>DSCFX_AEC_STATUS_HISTORY_CONTINUOUSLY_CONVERGED</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>AEC_STATUS_FD_HISTORY_PREVIOUSLY_DIVERGED</TD>
<TD width=13%>0x2</TD>
<TD width=44%>DSCFX_AEC_STATUS_HISTORY_PREVIOUSLY_DIVERGED</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>AEC_STATUS_FD_CURRENTLY_CONVERGED</TD>
<TD width=13%>0x8</TD>
<TD width=44%>DSCFX_AEC_STATUS_CURRENTLY_CONVERGED</TD>
</TR>
</TABLE><BR>

<H4>Return Value</H4>

<P>A KSPROPERTY_AEC_STATUS property request returns STATUS_SUCCESS to indicate that it has completed successfully. Otherwise, the request returns an appropriate error status code.</P>

<H4>Headers</H4>

<P>Declared in <I>ksmedia.h</I>. Include <I>ksmedia.h</I>.</P>

<H4>Comments</H4>

<P>The three least significant bits in the AEC status flags (see preceding table) represent the convergence history (CH) of the AEC algorithm. The CH status bits can be used by a DirectSound® application to determine whether the algorithm has converged and also whether it has remained in the converged state since the time that it started processing data. Depending on the audio hardware, the AEC algorithm might fail to converge, in which case the resulting capture buffer is likely to include the echo from the speakers. </P>

<P>When the filter containing the AEC node is created or the node is reset, the AEC algorithm initially sets the three CH status bits to zero. This setting represents the <I>uninitialized</I> state, AEC_STATUS_FD_HISTORY_UNINITIALIZED.</P>

<P>After the AEC algorithm converges, the CH status switches to the <I>converged</I> state, AEC_STATUS_FD_HISTORY_CONTINUOUSLY_CONVERGED. If the AEC algorithm ever loses convergence, the CH status switches to the <I>diverged</I> state, AEC_STATUS_FD_HISTORY_PREVIOUSLY_DIVERGED. Although the status is most likely to switch to the <I>diverged</I> state from the <I>converged</I> state, it might also switch directly from the <I>uninitialized</I> state to the <I>diverged</I> state. After the CH status has switched to the <I>diverged</I> state, it will remain in that state until the algorithm is reset or starvation is detected.</P>

<P>When the <A HREF="pcdesign_82av.htm">AEC system filter</A> detects starvation at any of its four pins—capture in, capture out, render in, or render out—it resets its internal state, including the convergence history. </P>

<P>Note that bit 2 of the three CH status bits is not currently used.</P>

<P>As an alternative to using the CH status bits, the application can monitor the real-time convergence status by checking the AEC_STATUS_FD_CURRENTLY_CONVERGED flag bit. If this bit is set, the algorithm is currently converged. The algorithm can lose convergence temporarily when changes occur in the acoustic path. The real-time convergence flag is filtered to prevent such momentary losses from inappropriately switching the CH status bits to the DSCFX_AEC_STATUS_FD_HISTORY_PREVIOUSLY_DIVERGED state.</P>

<H4>See Also</H4>

<P><A HREF="aud-prop_5n3n.htm">KSNODEPROPERTY</A>, <A HREF="aud-prop_01wz.htm">KSNODETYPE_ACOUSTIC_ECHO_CANCEL</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KSPROPERTY_AEC_STATUS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
