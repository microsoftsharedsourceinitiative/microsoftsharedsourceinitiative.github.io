<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>USBCAMD Overview</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="USBCAMD Overview">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_usbcamd_overview_ksg"></A>USBCAMD Overview</H1>

<P>USBCAMD offers significant advantages to developers of USB bus camera minidrivers. The primary function of USBCAMD is to manage an isochronous stream from the device and allow the camera minidriver to extract video frames from the stream and perform processing on them before they are returned to the calling application. USBCAMD handles all the synchronization, start, stop, and error recovery issues associated with maintaining the isochronous stream on the USB bus. The camera minidriver determines if the data is valid, part of the current video frame or part of the next frame, and indicates this to USBCAMD. The device-specific functions (such as properties) as well as support for additional nonisochronous streams (for example, still image) are handled by the camera minidriver. USBCAMD also provides support for the use of bulk/interrupt transfer pipes for still image transfer.</P>

<P>USB cameras that support a single isochronous data stream where synchronization information (start of video frames) is embedded in the data stream are ideal for USBCAMD.</P>

<P>Typically, a camera minidriver that connects through the USB bus will be a client of the stream class driver on the upper end and the USB port driver on the lower end as shown in the following diagram.</P>

<P><IMG SRC="images/usbimdev.gif" ALT="" BORDER=0></P>

<P><B>USB Video Capture Development</B></P>

<P>In the "A" grouping configuration, the camera minidriver communicates to the stream class driver, the camera, <I>and</I> the USB bus. A minidriver, written to use USBCAMD (grouping "B"), must contain only the code that is device-specific (for example, video format, property sets, compression or decompression, and color space conversion). The USBCAMD library will control the actual connection to the stream class driver and the USB bus driver, thereby simplifying the code in the camera minidriver.</P>

<P>USBCAMD provides generic services that manage isochronous data streams on the USB bus. This allows the minidriver writer to focus on support for camera properties and image processing instead of the details of maintaining an isochronous stream on the USB bus.</P>

<P>Additional developer information, including the USB specifications, may be obtained through the USB consortium's <a href="http://go.microsoft.com/fwlink/?linkid=8781&clcid=0x409" target="_blank">USB developers</A> Web site.</P>

<P>General or consumer information may be obtained at the <a href="http://go.microsoft.com/fwlink/?linkid=8780&clcid=0x409" target="_blank">USB Implementers Forum</A> Web site.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: USBCAMD%20Overview"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
