<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IPinCount</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IPinCount">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ipincount_ks"></A>IPinCount</H1>

<P>The <B>IPinCount</B> interface provides a means for the miniport driver to monitor and manipulate its pin counts dynamically as pins are instantiated and closed. This interface is implemented in the miniport driver. To determine whether a miniport driver supports this interface, the port driver calls the miniport object's <B>QueryInterface</B> method with REFIID <B>IID_IPinCount</B>. <B>IPinCount</B> inherits from the <B>IUnknown</B> interface.</P>

<P>In Windows&nbsp;XP and later, the following port drivers will use a miniport driver's <B>IPinCount</B> interface, if it is supported: WaveCyclic, WavePci, MIDI, DMus, and Topology.</P>

<P><B>IPinCount</B> is an optional interface that a miniport driver can support if it needs to do either or both of the following:

<UL>
	<LI>Be explicitly notified of changes in kernel streaming pin counts.</LI>

	<LI>Dynamically change its pin counts.</LI>
</UL>

<P>In the case of a wave audio device, for example, streams with different attributes (3D, stereo/mono, and so on) might also have different "weights" in terms of the amount of hardware resources they consume.</P>

<P>When opening a "heavyweight" stream, the miniport driver might need to decrement the available pin count by two instead of by one in order to more accurately indicate the number of pins that can be created with the remaining resources.</P>

<P>The process is reversed when a "heavyweight" stream is closed. The available pin count might increase by more than one in order to reflect the fact that two or more "lightweight" streams can be created from the newly freed resources.</P>

<P>If a miniport driver does not support the <B>IPinCount</B> interface, the port driver uses the statically initialized pin counts in the filter's <A HREF="audpc-struct_5o6r.htm">PCPIN_DESCRIPTOR</A> array.</P>

<P>The <B>IPinCount</B> interface provides a single method. The port driver that is bound to the miniport driver calls this method in response to a pin-count query.</P>

<P>In addition to the methods that <B>IPinCount</B> inherits from the <B>IUnknown</B> interface, <B>IPinCount</B> supports the following method:</P>

<P class=indent1><A HREF="audmp-routines_6u9f.htm"><B>IPinCount::PinCount</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IPinCount"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
