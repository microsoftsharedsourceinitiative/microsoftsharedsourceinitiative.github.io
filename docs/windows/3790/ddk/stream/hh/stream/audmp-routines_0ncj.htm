<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IDirectMusicSynthSink</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IDirectMusicSynthSink">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_idirectmusicsynthsink_ks"></A>IDirectMusicSynthSink</H1>

<P>The <B>IDirectMusicSynthSink</B> interface is now largely obsolete and is supported only by versions of DirectMusic <I>before</I> DirectX&nbsp;8. This interface represents a streaming wave device that pulls audio from the DirectMusic software synthesizer. By separating the functionality of <A HREF="audmp-routines_80fn.htm"><B>IDirectMusicSynth</B></A> from that of <B>IDirectMusicSynthSink</B>, a DirectMusic application can take the output of any synthesizer and feed it to an audio device of its choosing. <B>IDirectMusicSynthSink</B> inherits from the <B>IUnknown</B> interface.</P>

<P>By default, the wave data generated by the software synth is handled by DirectMusic's internal synth sink, which feeds the wave data into DirectSound.</P>

<P>In DirectX&nbsp;6.1 and DirectX&nbsp;7, however, you are free to implement your own <B>IDirectMusicSynthSink</B> and use it to manage the audio-output stream in any way you like. For example, you might feed the wave data into DirectShow or the Windows Multimedia <B>waveOut<I>Xxx</I></B> API. If you create a wave-stream object, it should have an <B>IDirectMusicSynthSink</B> interface to plug into the <A HREF="audmp-routines_80fn.htm"><B>IDirectMusicSynth</B></A>.</P>

<P>In DirectX&nbsp;8 and later, DirectMusic always uses its internal synth sink. These later versions of DirectMusic do not support custom implementations of <B>IDirectMusicSynthSink</B>.</P>

<P>In addition to managing the wave stream, the sink owns the timing for the synthesizer. It receives the master clock by a call to <A HREF="audmp-routines_2o1f.htm"><B>IDirectMusicSynth::SetMasterClock</B></A>, which passes the master time source on with an identical call to <A HREF="audmp-routines_44ab.htm"><B>IDirectMusicSynthSink::SetMasterClock</B></A>. Because the master clock cannot be from the same crystal as the streaming wave, the sink must keep them synchronized.</P>

<P>Additionally, so that the synthesizer can keep track of time appropriately, it provides two calls to convert from master clock time to sample time and back:</P>

<P class=indent1><A HREF="audmp-routines_6ss3.htm"><B>IDirectMusicSynthSink::RefTimeToSample</B></A> </P>

<P class=indent1><A HREF="audmp-routines_0y43.htm"><B>IDirectMusicSynthSink::SampleToRefTime</B></A> </P>

<P>The sink generates the latency clock because it actually manages the times at which samples get written by calls to <A HREF="audmp-routines_3y2b.htm"><B>IDirectMusicSynth::Render</B></A>. When DirectMusic calls <A HREF="audmp-routines_0u5v.htm"><B>IDirectMusicSynth::GetLatencyClock</B></A> on the DirectMusic "port", it simply turns around and calls <A HREF="audmp-routines_3pyr.htm"><B>IDirectMusicSynthSink::GetLatencyClock</B></A>.</P>

<P>When a software synthesizer is first opened, it is given a sample rate and number of channels (stereo or mono) in the DMUS_PORTPARAMS structure. It then converts these into a standard WAVEFORMATEX structure that it passes to the sink when the sink calls the <A HREF="audmp-routines_9777.htm"><B>IDirectMusicSynth::GetFormat</B></A> method.</P>

<P>In addition to the methods that <B>IDirectMusicSynthSink</B> inherits from the <B>IUnknown</B> interface, <B>IDirectMusicSynthSink</B> supports the methods shown in the following table, which organizes them into functional groups.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=21%>Group</TH>
<TH align=left width=79%>Method Names</TH>
</TR>

<TR VALIGN="top">
<TD width=21%>Initialization</TD>
<TD width=79%><A HREF="audmp-routines_75ir.htm"><B>IDirectMusicSynthSink::Activate</B></A><B> </B>
<P><A HREF="audmp-routines_6ddf.htm"><B>IDirectMusicSynthSink::GetDesiredBufferSize</B></A><B> </B></P>

<P><A HREF="audmp-routines_4vcj.htm"><B>IDirectMusicSynthSink::Init</B></A><B> </B></P>

<P><A HREF="audmp-routines_0wfo.htm"><B>IDirectMusicSynthSink::SetDirectSound</B></A><B> </B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>Timing</TD>
<TD width=79%><A HREF="audmp-routines_3pyr.htm"><B>IDirectMusicSynthSink::GetLatencyClock</B></A><B> </B>
<P><A HREF="audmp-routines_6ss3.htm"><B>IDirectMusicSynthSink::RefTimeToSample</B></A><B> </B></P>

<P><A HREF="audmp-routines_0y43.htm"><B>IDirectMusicSynthSink::SampleToRefTime</B></A><B> </B></P>

<P><A HREF="audmp-routines_44ab.htm"><B>IDirectMusicSynthSink::SetMasterClock</B></A><B> </B></P>
</TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IDirectMusicSynthSink"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
