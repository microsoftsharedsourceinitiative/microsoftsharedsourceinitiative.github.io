<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IPowerNotify::PowerChangeNotify</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IPowerNotify::PowerChangeNotify">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ipowernotify_powerchangenotify_ks"></A>IPowerNotify::PowerChangeNotify</H1>

<P>The <B>PowerChangeNotify</B> method notifies the miniport driver of changes in the power state.</P>

<PRE class=syntax><B>void
  PowerChangeNotify(
    IN POWER_STATE  </B><I>PowerState</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>PowerState</I></DT>

<DD>Specifies the current power state. This parameter is a union of type POWER_STATE. The new power state (<I>PowerState.DeviceState</I>) can be one of the DEVICE_POWER_STATE enumeration values listed in <A HREF="audmp-routines_65rn.htm"><B>IAdapterPowerManagement::PowerChangeState</B></A>.</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>portcls.h</I>. Include <I>portcls.h</I>.</P>

<H4>Comments</H4>

<P>The PortCls system driver calls the miniport driver's <B>PowerChangeNotify</B> method to notify it of changes in the power state. The purpose of this call is to give the miniport driver an opportunity to save any hardware-specific context just before powering down or to restore a previously saved context just after powering up.</P>

<P>The miniport driver can write to the hardware registers or on-board memory during the <B>PowerChangeNotify</B> call. If the system is powering down (making a state transition away from PowerDeviceD0), the PortCls system driver calls <B>PowerChangeNotify</B> before it calls <A HREF="audmp-routines_65rn.htm"><B>IAdapterPowerManagement::PowerChangeState</B></A> and after it has paused any active audio data streams. This gives the miniport driver an opportunity to save any hardware-specific device context before the device powers down. For example, a WavePci miniport driver might need to save its DMA registers if the power down occurs during a sequence of scatter/gather data transfers. If the system is powering up (making a state transition toward PowerDeviceD0), PortCls calls <B>PowerChangeNotify</B> after it calls <B>PowerChangeState</B> and before it restarts any paused audio data streams. This gives the miniport driver an opportunity to restore a previously saved context after the device has powered up.</P>

<P>The code for this method must reside in paged memory.</P>

<H4>See Also</H4>

<P><A HREF="audmp-routines_65rn.htm"><B>IAdapterPowerManagement::PowerChangeState</B></A> </P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IPowerNotify::PowerChangeNotify"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
