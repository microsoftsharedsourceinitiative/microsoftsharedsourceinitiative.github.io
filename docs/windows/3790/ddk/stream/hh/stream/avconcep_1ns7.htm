<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>AVStream Allocators</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="AVStream Allocators">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_using_common_buffer_system_dma_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_avstream_allocators_ksg"></A>AVStream Allocators</H3>

<P>The AVStream class driver uses an <I>allocator</I> to allocate data buffers in quanta called <I>frames</I>. A frame is a chunk of physically contiguous memory, the size of which is vendor-specified through the <B>AllocatorFraming</B> member of <A HREF="avstruct_1fw3.htm">KSPIN_DESCRIPTOR_EX</A>.</P>

<P>Minidrivers access these buffers through the <A HREF="avsover_0dgn.htm">stream pointer</A> API; call <A HREF="avfunc_7cj7.htm"><B>KsPinGetLeadingEdgeStreamPointer</B></A> to acquire a pointer into the stream.</P>

<P>When data is no longer in use, AVStream uses the allocator to free the buffer.</P>

<P>AVStream provides a default allocator. The default allocator allocates pool memory based on the allocator requirements that the minidriver provides in the <B>AllocatorFraming</B> member of the <A HREF="avstruct_1fw3.htm">KSPIN_DESCRIPTOR_EX</A> structure.</P>

<P>A vendor with device-specific allocation requirements can write a minidriver that includes its own allocation routines. For example, you might provide an allocator if your driver allocates memory from a <A HREF="JavaScript:hhobj_1.Click()">common DMA buffer</A>.</P>

<P>To provide an allocator, supply a <A HREF="avstruct_0g8j.htm">KSALLOCATOR_DISPATCH</A> structure that contains pointers to the following vendor-supplied callback routines:

<UL>
	<LI><A HREF="avstclbk_4n8z.htm">AVStrMiniInitializeAllocator</A></LI>

	<LI><A HREF="avstclbk_6sab.htm">AVStrMiniDeleteAllocator</A></LI>

	<LI><A HREF="avstclbk_28j7.htm">AVStrMiniAllocate</A></LI>

	<LI><A HREF="avstclbk_4o8j.htm">AVStrMiniAllocatorFreeFrame</A></LI>
</UL>

<P>Provide a pointer to this allocator dispatch structure in the <B>Allocator</B> member of the <A HREF="avstruct_4u9f.htm">KSPIN_DISPATCH</A> structure describing the pin for which this allocator will instantiate frames.</P>

<P>Supply a pointer to this pin dispatch structure in the <B>Dispatch</B> member of the corresponding <A HREF="avstruct_1fw3.htm">KSPIN_DESCRIPTOR_EX</A> structure. To learn more about dispatch structures in AVStream, read <A HREF="avsover_7hgn.htm">AVStream Dispatch Tables</A>.</P>

<P>At run time, the graph manager (for example, the <A HREF="ksproxy_5sqb.htm">Kernel Streaming Proxy</A> module) handles allocator selection. A vendor-supplied allocator is<I> not </I>guaranteed to be selected by the graph manager.</P>

<P>A kernel mode allocator is only chosen if the connection is in kernel mode. In addition, your allocator could be rejected if there is a mismatch in allocator requirements and your allocator's capabilities. If your allocator is not selected, your <A HREF="avstclbk_4n8z.htm"><I>AVStrMiniInitializeAllocator</I></A> callback routine is never called.</P>

<P>Also see <A HREF="avsover_3u7b.htm">AVStream DMA Services</A> and <A HREF="avsover_0dgn.htm">Stream Pointers</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: AVStream%20Allocators"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
