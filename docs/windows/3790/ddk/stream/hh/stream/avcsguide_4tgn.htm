<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a stream</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Creating a stream">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_creating_a_stream_ksg"></A>Creating a stream</H2>

<P>A data stream context must be created before the AV/C Streaming filter driver can provide services. The context points to an opaque structure that contains the requested data format, data stream state, and properties. It is like a stream extension. A data format structure and the direction of the data flow are its input parameters. If the stream can be created successfully, it will return a stream context. This context is cached by the subunit driver and is used for subsequent AV/C Streaming requests.</P>

<P>This is a synchronous operation. The operation first creates a stream request structure to open a stream and then calls the user-defined IRP synchronous routine to call to lower driver to create a data stream based on the given data flow direction and data format defined in <A HREF="avcsref_1nar.htm">AVCSTRM_FORMAT_INFO</A>. The following sample code shows how to open a data stream context.</P>

<PRE>#include &lt;avcstrm.h&gt;

INIT_AVCSTRM_HEADER(pAVCStrmReq, AVCSTRM_OPEN);
pAVCStrmReq-&gt;CommandData.OpenStruct.AVCFormatInfo =            &amp;AVCStrmFormatInfoTable[pDevExt-&gt;VideoFormatIndex]; 
pAVCStrmReq-&gt;CommandData.OpenStruct.AVCStreamContext = NULL;
pAVCStrmReq-&gt;CommandData.OpenStruct.DataFlow         = DataFlow;

Status = 
    AVCStrmReqSubmitIrpSynch( 
        pDevExt-&gt;pBusDeviceObject,
        pStrmExt-&gt;pIrpReq,
        pAVCStrmReq
        );

if(STATUS_SUCCESS == Status) {
    // Save the context, which is used for 
    // Subsequent call to AVCStrm filter driver    
    pStrmExt-&gt;AVCStreamContext = 
        pAVCStrmReq-&gt;CommandData.OpenStruct.AVCStreamContext;
}</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Creating%20a%20stream"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
