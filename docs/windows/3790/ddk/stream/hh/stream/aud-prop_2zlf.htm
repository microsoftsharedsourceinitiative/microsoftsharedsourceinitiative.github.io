<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KSAUDIO_MIXCAP_TABLE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KSAUDIO_MIXCAP_TABLE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ksaudio_mixcap_table_ks"></A>KSAUDIO_MIXCAP_TABLE</H1>

<P>The KSAUDIO_MIXCAP_TABLE structure specifies the mixing capabilities of a supermixer node (<A HREF="aud-prop_1eib.htm">KSNODETYPE_SUPERMIX</A>). This structure is used to <I>get</I> or <I>set</I> the data value for the <A HREF="aud-prop_8d9v.htm">KSPROPERTY_AUDIO_MIX_LEVEL_CAPS</A> property.</P>

<PRE class=syntax>typedef struct
{
  ULONG  InputChannels;
  ULONG  OutputChannels;
  KSAUDIO_MIX_CAPS  Capabilities[1];
} KSAUDIO_MIXCAP_TABLE, *PKSAUDIO_MIXCAP_TABLE;</PRE>

<H4>Members</H4>

<DL>
<DT><B>InputChannels</B></DT>

<DD>Specifies the number of input channels.</DD>

<DT><B>OutputChannels</B></DT>

<DD>Specifies the number of output channels.</DD>

<DT><B>Capabilities</B></DT>

<DD>Contains the first entry in a two-dimensional array of <A HREF="aud-prop_7epf.htm">KSAUDIO_MIX_CAPS</A> structures. Given a supermixer node with <I>m</I> input channels and <I>n</I> output channels, the array contains <I>m*n</I> elements. Each element describes the mix-level capabilities of the path from a particular input channel to a particular output channel.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ksmedia.h</I>. Include <I>ksmedia.h</I>.</P>

<H4>Comments</H4>

<P>The <B>Capabilities</B> table is an <I>m</I>&nbsp;x&nbsp;<I>n</I> matrix that maps <I>m</I> input channels into <I>n</I> output channels. If no path exists from input <I>i </I>to output <I>j</I>, set the <B>Mute</B> member of matrix element (<I>i</I>,<I>j</I>) to TRUE.</P>

<P>The <B>Capabilities</B> table is stored as a two-dimensional array:</P>

<PRE>  KSAUDIO_MIX_CAPS Capabilities[M*N];</PRE>

<P>The following table shows the mapping of <B>Capabilities</B> array elements to the supermixer node's <I>m*n</I> input-output paths.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>Array Element</TH>
<TH align=left width=65%>Input-Output Path</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[0]</TD>
<TD width=65%>Input channel 0 to output channel 0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[1]</TD>
<TD width=65%>Input channel 0 to output channel 1</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[<I>n</I>–1]</TD>
<TD width=65%>Input channel 0 to output channel <I>n</I>–1</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[<I>n</I>]</TD>
<TD width=65%>Input channel 1 to output channel 0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[<I>n</I>+1]</TD>
<TD width=65%>Input channel 1 to output channel 1</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[2<I>n</I>–1]</TD>
<TD width=65%>Input channel 1 to output channel <I>n</I>–1</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Capabilities</B>[<I>m*n</I>–1]</TD>
<TD width=65%>Input channel <I>m</I>–1 to output channel <I>n</I>–1</TD>
</TR>
</TABLE><BR>

<P>In other words, the mixer caps for the path from input channel <I>i </I>to output channel <I>j </I>are contained in <B>Capabilities</B>[<I>i</I>*<I>n</I>+<I>j</I>].</P>

<P>The size of the table is calculated from the KSAUDIO_MIXCAP_TABLE structure that is retrieved by a <A HREF="aud-prop_8d9v.htm">KSPROPERTY_AUDIO_MIX_LEVEL_CAPS</A> get property request. If the structure's <B>InputChannels</B> and <B>OutputChannels</B> members have the values <I>m</I> and <I>n</I>, the total storage required for the KSAUDIO_MIXCAP_TABLE structure plus the KSAUDIO_MIX_CAPS array is calculated as</P>

<P class=indent1><B>sizeof</B>(KSAUDIO_MIXCAP_TABLE) + (<I>m</I>*<I>n</I> – 1)<B>*sizeof</B>(KSAUDIO_MIX_CAPS)</P>

<P>If the client sends an initial KSPROPERTY_AUDIO_MIX_LEVEL_CAPS request in which the property size is specified as 2*<B>sizeof</B>(ULONG), the miniport driver should fill in only the first two members of the KSAUDIO_MIXCAP_TABLE structure, <B>InputChannels</B> and <B>OutputChannels</B>. The client can then send a second property request with enough storage allocated to contain the capabilities of all the channels.</P>

<H4>See Also</H4>

<P><A HREF="aud-prop_8d9v.htm">KSPROPERTY_AUDIO_MIX_LEVEL_CAPS</A>, <A HREF="aud-prop_82ib.htm">KSPROPERTY_AUDIO_MIX_LEVEL_TABLE</A>, <A HREF="aud-prop_7epf.htm">KSAUDIO_MIX_CAPS</A>, <A HREF="aud-prop_1eib.htm">KSNODETYPE_SUPERMIX</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KSAUDIO_MIXCAP_TABLE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
