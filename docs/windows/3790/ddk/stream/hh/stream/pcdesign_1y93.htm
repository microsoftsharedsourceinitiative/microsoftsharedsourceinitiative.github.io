<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reference-Counting Conventions for COM Objects</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Reference-Counting Conventions for COM Objects">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_reference_counting_conventions_for_com_objects_ksg"></A>Reference-Counting Conventions for COM Objects</H3>

<P>The methods in the audio interfaces follow a general set of rules for counting references on the COM objects that they take as input parameters or return as output parameters. These rules, and their exceptions, are summarized below. For more information on COM interfaces, see the COM section of the Platform SDK documentation.</P>

<H4>Reference Counting on Input Parameters</H4>

<P>When calling a method that takes a reference to an object&nbsp;X as an <I>input</I> parameter, the caller must hold its own reference on the object for the duration of the call. This behavior is necessary to ensure that the method's pointer to object&nbsp;X remains valid until it returns. If the object&nbsp;Y that implements this method needs to hold a reference to object&nbsp;X beyond the return from this method, the method should call <B>AddRef</B> on object&nbsp;X before returning. When object&nbsp;Y later finishes using object&nbsp;X, it should call <B>Release</B> on object&nbsp;X.</P>

<P>For example, the <A HREF="audmp-routines_84kz.htm"><B>IServiceGroup::AddMember</B></A> method calls <B>AddRef</B> on the <A HREF="audmp-routines_7wz8.htm"><B>IServiceSink</B></A> object that it adds to its service group. To complement this behavior, the <A HREF="audmp-routines_3rjn.htm"><B>IServiceGroup::RemoveMember</B></A> method calls <B>Release</B> on the <B>IServiceSink</B> object that it removes from the service group.</P>

<H4>Reference Counting on Output Parameters</H4>

<P>A method that passes an object reference to the caller through an <I>output</I> parameter should call <B>AddRef</B> on the object before it returns (or before it releases its own reference to the object). This behavior is necessary to ensure that the caller holds a valid reference upon return from the call. The caller is responsible for calling <B>Release</B> on the object when it has finished using it.</P>

<P>For example, the <A HREF="audmp-routines_735f.htm"><B>IMiniportWaveCyclic::NewStream</B></A> method calls <B>AddRef</B> on the stream, service-group, and DMA-channel objects that it outputs to the caller (the WaveCyclic port driver). The caller is responsible for releasing these references when it no longer needs them. For an implementation of the <B>IMiniportWaveCyclic::NewStream</B> method that shows this behavior, see the <I>sb16</I> sample adapter in the Windows DDK.</P>

<H4>Exceptions to the Rules</H4>

<P>For a description of the unconventional reference counting that this method performs on its <I>DmaChannel</I> output parameter, see <A HREF="audmp-routines_0g1f.htm"><B>IMiniportWavePci::NewStream</B></A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Reference-Counting%20Conventions%20for%20COM%20Objects"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
