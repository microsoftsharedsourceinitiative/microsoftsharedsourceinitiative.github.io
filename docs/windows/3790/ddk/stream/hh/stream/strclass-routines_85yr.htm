<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>StreamClassDeviceNotification</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="StreamClassDeviceNotification">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_streamclassdevicenotification_ks"></A>StreamClassDeviceNotification</H1>

<P>Minidrivers use the <B>StreamClassDeviceNotification</B> routine to notify the class driver that it has completed a stream request, or that an event has occurred.</P>

<PRE class=syntax><B>VOID 
  StreamClassDeviceNotification(
    IN STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE  </B><I>NotificationType</I>,
<B>    IN PVOID  </B><I>HwDeviceExtension</I>,<B> </B>
    <B>PHW_STREAM_REQUEST_BLOCK  </B><I>pSrb</I>,
    <B>PKSEVENT_ENTRY  </B><I>EventEntry</I>,
    <B>GUID  *</B><I>EventSet</I>,
    <B>ULONG  </B><I>EventId</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>NotificationType</I></DT>

<DD>This is an enumeration value that contains the type of notification that the minidriver is sending.

<DL>
<DT><B>DeviceRequestComplete</B></DT>

<DD>Indicates that the minidriver has completed its handling of the device stream request block pointed to by the optional third argument of this routine, <I>pSrb</I>. Once the minidriver calls <B>StreamClassDeviceNotification</B> with this value, the relevant SRB is owned by the class driver, which is free to deallocate it.</DD>

<DT><B>ReadyForNextDeviceRequest</B></DT>

<DD>Indicates that the minidriver is ready to receive another device request. </DD>

<DT><B>SignalDeviceEvent</B></DT>

<DD>Signals that the event specified by the <I>EventEntry</I> parameter has occurred.</DD>

<DT><B>SignalMultipleDeviceEvents</B></DT>

<DD>Signals all events that match the criteria specified in the <I>EventSet</I> and <I>EventId</I> parameters.</DD>

<DT><B>DeleteDeviceEvent</B></DT>

<DD>Deletes the event specified by the <I>EventEntry</I> parameter. </DD>
</DL>
</DD>

<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the minidriver's device extension. The minidriver specifies the size of this buffer in the <A HREF="strclass-struct_4ks3.htm">HW_INITIALIZATION_DATA</A> structure it passes when it registers itself via <A HREF="strclass-routines_8bw3.htm"><B>StreamClassRegisterMinidriver</B></A>. The class driver then passes pointers to the buffer in the <B>HwDeviceExtension</B> member of the <A HREF="strclass-struct_2jeb.htm">HW_STREAM_REQUEST_BLOCK</A>, <A HREF="strclass-struct_4wc3.htm">HW_STREAM_OBJECT</A>, <A HREF="strclass-struct_2kvn.htm">HW_TIME_CONTEXT</A>, and <A HREF="strclass-struct_2h4j.htm">PORT_CONFIGURATION_INFORMATION</A> structures it passes to the minidriver.</DD>

<DT><I>pSrb</I></DT>

<DD>Pointer to an <A HREF="strclass-struct_2jeb.htm">HW_STREAM_REQUEST_BLOCK</A> structure. If <I>NotificationType</I> equals <B>DeviceRequestComplete</B>, this parameter points to the stream request block that the minidriver has completed processing. After <B>StreamClassDeviceNotification</B> completes, this address is no longer valid.</DD>

<DT><I>EventEntry</I></DT>

<DD>If <I>NotificationType</I> equals either SignalDeviceEvent or DeleteDeviceEvent, points to a structure of type <A HREF="ks-struct_4fub.htm">KSEVENT_ENTRY</A> that specifies the event to be signaled or deleted. </DD>

<DT><I>EventSet</I></DT>

<DD>Specifies the event set to match against in the device event queue if <I>NotificationType</I> equals <B>SignalMultipleDeviceEvents</B>. </DD>

<DT><I>EventId</I></DT>

<DD>Specifies the event ID to match against in the device event queue if <I>NotificationType</I> equals <B>SignalMultipleDeviceEvents</B>.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>strmini.h</I>. Include <I>strmini.h</I>.</P>

<H4>Comments</H4>

<P>The minidriver uses this routine for requests or events that apply to the minidriver as a whole. Stream-specific requests or events use <A HREF="strclass-routines_5ygj.htm"><B>StreamClassStreamNotification</B></A>.</P>

<H4>See Also</H4>

<P><A HREF="strclass-routines_5ygj.htm"><B>StreamClassStreamNotification</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: StreamClassDeviceNotification"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
