<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsAllocateDefaultClockEx</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsAllocateDefaultClockEx">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_ksallocatedefaultclockex_ks"></A>KsAllocateDefaultClockEx</H3>

<P>The <B>KsAllocateDefaultClockEx</B> function allocates and initializes the default clock structure. </P>

<PRE class=syntax><B>KSDDKAPI NTSTATUS NTAPI
  KsAllocateDefaultClockEx(
    OUT PKSDEFAULTCLOCK* </B><I>DefaultClock</I><B>,</B>
<B>    IN PVOID </B><I>Context</I><B> OPTIONAL,</B>
<B>    IN PFNKSSETTIMER </B><I>SetTimer</I><B> OPTIONAL,</B>
<B>    IN PFNKSCANCELTIMER </B><I>CancelTimer</I><B> OPTIONAL,</B>
<B>    IN PFNKSCORRELATEDTIME </B><I>CorrelatedTime</I><B> OPTIONAL,</B>
<B>    IN const KSRESOLUTION* </B><I>Resolution</I><B> OPTIONAL,</B>
<B>    IN ULONG </B><I>Flags</I><B>    ); </B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DefaultClock</I></DT>

<DD>Specifies the caller-allocated shared default clock structure. The current time is set to zero and the state is set to KSSTATE_STOP. Upon successful completion of this routine, the structure indicated by this pointer will contain a reference to the default clock. The data returned should be treated as opaque and reserved for system use.</DD>

<DT><I>Context</I></DT>

<DD>Optionally contains the context of the alternate time facilities. This must be set if a timer or correlated time function is used.</DD>

<DT><I>SetTimer</I></DT>

<DD>Optionally contains an alternate function to use in generating DPC timer callbacks based on a Presentation Time. If this is set, this function will be used to set timers based on deltas to the current Presentation Time in order to generate event notifications. If an alternate function is passed in to set timers, a corresponding CancelTimer function must also be passed. This is set to NULL if the default KeSetTimerEx function is to be used to approximate the next notification time. This would normally be set only if a CorrelatedTime function was being used. The function must have the same characteristics as the default function.</DD>

<DT><I>CancelTimer</I></DT>

<DD>Optionally contains an alternate function to use in canceling outstanding timer callbacks. If an alternate function is passed in to cancel timers, a corresponding SetTimer function must also be passed. This is set to NULL if the default KeCancelTimer function is to be used. The function must have the same characteristics as the default function.</DD>

<DT><I>CorrelatedTime</I></DT>

<DD>Optionally contains an alternate function to retrieve both the Presentation and Physical Time in a correlated manner. This allows the clock owner to completely determine the current time. This is set to NULL if the default KeQueryPerformanceCounter function is to be used to regulate time progression.</DD>

<DT><I>Resolution</I></DT>

<DD>Optionally contains an alternate Granularity and/or Error factor for the clock. This can only be used only if an alternate timer or correlated time function are being provided. An alternate Granularity may be specified if an alternate correlated time is being used, else the structure element must be zero. An alternate Error may be specified if an alternate timer is being used, else the structure element must be zero.</DD>

<DT><I>Flags</I></DT>

<DD>Reserved, set to zero.
</DD>
</DL>

<H4>Return Value</H4>

<P>The <B>KsAllocateDefaultClockEx</B> function returns<B> </B>STATUS_SUCCESS if successful, or a memory error if unsuccessful.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>The internal DefaultClock.ReferenceCount element is initialized to one by the <A HREF="ksfunc_7bcj.htm"><B>KsAllocateDefaultClock</B></A> function. The element is incremented and decremented as each notification DPC is queued and completed. When the structure is to be freed, the element is used to determine if the owner of the clock should free the structure or if a pending DPC should free it asynchronously.</P>

<P>The function can only be called at PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="ksfunc_2svn.htm"><B>KsFreeDefaultClock</B></A> , <A HREF="ksfunc_7bcj.htm">KsAllocateDefaultClock</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsAllocateDefaultClockEx"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
