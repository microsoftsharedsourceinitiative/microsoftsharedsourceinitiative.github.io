<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Use of Mapping Buffers in the Storport I/O Model</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Use of Mapping Buffers in the Storport I/O Model">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_use_of_mapping_buffers_in_the_storport_i_o_model_kg"></A>Use of Mapping Buffers in the Storport I/O Model</H3>

<P>In the ScsiPort I/O model, miniport drivers can require the port driver to allocate and map system virtual memory for SRB I/O buffers. Miniport drivers configure the port driver to map I/O buffers by setting the <B>MapBuffers</B> member of the <A HREF="k306_2h4i.htm">PORT_CONFIGURATION_INFORMATION</A> structure to TRUE. </P>

<P>If the port driver is configured with <B>MapBuffers</B> set to TRUE, the <B>DataBuffer</B> member of each SRB that the miniport driver receives will contain a system virtual address of an I/O buffer. This address is valid in the address space of all processes in the system. Also, the miniport driver will be free to directly access the I/O buffer. </P>

<P>On the other hand, if the miniport sets <B>MapBuffers</B> to FALSE, <B>DataBuffer</B> will contain a virtual address that belongs to a particular process that is not necessarily valid in the context in which the miniport runs. Therefore, the miniport will not be able to access the memory area to which <B>DataBuffer</B> points.</P>

<P>In the Storport I/O model, miniport drivers are required to support DMA-based I/O. When DMA is used, there should be no need for miniport drivers to access an SRB's I/O buffers indirectly through a system-wide virtual address. With this in view, the Storport I/O model defines a different set of values for the <B>MapBuffers</B> member of <A HREF="k306_4cab.htm">PORT_CONFIGURATION_INFORMATION (Storport)</A>.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=55%>Value</TH>
<TH align=left width=45%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=55%>STOR_MAP_NO_BUFFERS</TD>
<TD width=45%>The Storport driver does not map data buffers for any type of SRB. Thus its miniport drivers must <I>not</I> directly access the data pointed to by the <B>DataBuffer</B> member in any of the SRBs it receives.</TD>
</TR>

<TR VALIGN="top">
<TD width=55%>STOR_MAP_ALL_BUFFERS</TD>
<TD width=45%>This feature is not currently implemented. If the <B>MapBuffers </B>member is assigned this value, the Storport driver interprets it as though it were STOR_MAP_NON_READ_WRITE_BUFFERS. </TD>
</TR>

<TR VALIGN="top">
<TD width=55%>STOR_MAP_NON_READ_WRITE_BUFFERS </TD>
<TD width=45%>The Storport driver maps the data buffers for the request, provided it is not a data transfer (read and write) request. Likewise, miniport drivers can access data in the SRB provided that the SRB does not belong to a read or a write request. </TD>
</TR>
</TABLE><BR>

<P class=note></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Use%20of%20Mapping%20Buffers%20in%20the%20Storport%20I%2FO%20Model"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
