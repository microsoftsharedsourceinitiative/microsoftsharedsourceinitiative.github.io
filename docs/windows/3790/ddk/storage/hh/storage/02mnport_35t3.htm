<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SCSI Miniport Driver's HwScsiEnableInterruptsCallback Routine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SCSI Miniport Driver's HwScsiEnableInterruptsCallback Routine">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irql_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_scsi_miniport_drivers_hwscsienableinterruptscallback_routine_kg"></A>SCSI Miniport Driver’s HwScsiEnableInterruptsCallback Routine</H2>

<P>An <I>HwScsiEnableInterruptsCallback</I> routine finishes processing an interrupt-driven I/O operation without inhibiting I/O operations for other devices in the machine. </P>

<P>When the <I>HwScsiEnableInterruptsCallback</I> routine gets control, all system device interrupts are enabled except from the HBA because the <I>HwScsiInterrupt</I> routine disabled interrupts on the HBA before it called <B>ScsiPortNotification</B>. Thus, the miniport’s <I>HwScsiInterrupt</I> routine cannot be called and cannot disturb the context data it set up about the current operation while the <I>HwScsiEnableInterruptsCallback</I> routine is running. </P>

<P>A <I>HwScsiEnableInterruptsCallback</I> routine should do the following: 

<OL>
	<LI>Use the context that was set up for the operation in the input device extension to complete processing of the request that caused the interrupt. </LI>

	<LI>Call <B>ScsiPortNotification</B> with the <I>NotificationType</I> <B>RequestComplete</B> and the just satisfied SRB.</LI>

	<LI>Call <B>ScsiPortNotification</B> with the <I>NotificationType</I> <B>NextRequest</B>, or with <B>NextLuRequest</B> if the HBA supports tagged queuing or multiple requests per logical unit. </LI>

	<LI>Call <B>ScsiPortNotification</B> with a pointer to the device extension, the <I>NotificationType</I> <B>CallDisableInterrupts</B>, and the miniport’s <I>HwScsiDisableInterruptsCallback</I> routine, described in <A HREF="02mnport_0z6v.htm">SCSI Miniport Driver's HwScsiDisableInterruptsCallback Routine</A>. </LI>

	<LI>Return control. </LI>
</OL>

<P>The NT-based operating system <B>ScsiPortNotification</B> routine calls the <I>HwScsiDisableInterruptsCallback</I> routine with a subset of the system device interrupts disabled. No device interrupt with a system-assigned hardware priority (IRQL) less than or equal to the HBA’s can occur. </P>

<P>See <A HREF="JavaScript:hhobj_1.Click()">IRQL</A> for more information. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SCSI%20Miniport%20Driver's%20HwScsiEnableInterruptsCallback%20Routine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
