<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HwStorWmiFunctionControl</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="HwStorWmiFunctionControl">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_hwstorwmifunctioncontrol_kr"></A><I>HwStorWmiFunctionControl</I></H1>

<P>A miniport driver's <I>HwStorWmiFunctionControl</I> routine is called to enable or disable notification of events, or to enable or disable data collection for data blocks that the miniport driver designated as expensive to collect.</P>

<PRE class=syntax><B>BOOLEAN</B>
  <B>HwStorWmiFunctionControl(</B>
    <B>IN PVOID  </B><I>DeviceContext</I><B>,</B>
    <B>IN PSCSIWMI_REQUEST_CONTEXT  </B><I>RequestContext</I><B>,</B>
    <B>IN ULONG  </B><I>GuidIndex</I><B>,</B>
    <B>IN SCSIWMI_ENABLE_DISABLE_CONTROL  </B><I>Function</I><B>,</B>
<B>    IN BOOLEAN  </B><I>Enable</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceContext</I></DT>

<DD>Points to the miniport-defined context value passed to <B>ScsiPortWmiDispatchFunction</B>. </DD>

<DT><I>RequestContext</I></DT>

<DD>Points to the SCSIWMI_REQUEST_CONTEXT structure that the miniport passed to <B>ScsiPortWmiDispatchFunction</B>. </DD>

<DT><I>GuidIndex</I></DT>

<DD>Specifies the block by its index into the list of GUIDs in the SCSI_WMILIB_CONTEXT structure that the miniport passed to <B>ScsiPortWmiDispatchFunction</B>. </DD>

<DT><I>Function</I></DT>

<DD>Specifies <I>ScsiWmiEventControl</I> to enable or disable an event, or <I>ScsiWmiDataBlockControl</I> to enable or disable data collection for a block that was registered as expensive to collect (that is, a block for which the miniport set WMIREG_FLAG_EXPENSIVE in <B>Flags</B> of the SCSIWMIGUIDREGINFO structure used to register the block). </DD>

<DT><I>Enable</I></DT>

<DD>Specifies TRUE to enable the event or data collection, or FALSE to disable it. </DD>
</DL>

<H4>Return Value</H4>

<P><I>HwStorWmiFunctionControl</I> returns TRUE if the request is pending, or FALSE if the request was completed.</P>

<H4>Headers</H4>

<P>Declared in <I>storport.h</I>. Include <I>storport.h</I>. </P>

<H4>Comments</H4>

<P>This routine is identical in both definition and function to its SCSI port equivalent, <A HREF="k302_0tyq.htm"><I>HwScsiWmiFunctionControl</I></A>.</P>

<P>When a miniport driver receives an SRB in which the <B>Function</B> member is set to SRB_FUNCTION_WMI, it calls <B>ScsiPortWmiDispatchFunction</B> with a pointer to an initialized SCSI_WMILIB_CONTEXT structure and <I>MinorFunction</I> set to <B>Srb-&gt;WmiSubFunction</B>. The SCSI port driver calls a miniport's <I>HwStorWmiFunctionControl</I> routine if <I>MinorFunction</I> indicates a request to enable or disable an event, or to enable or disable collection for a data block that the miniport registered as expensive to collect.</P>

<P>If a miniport does not implement a <I>HwStorWmiFunctionControl</I> routine, it must set <B>WmiFunctionControl</B> to NULL in the SCSI_WMILIB_CONTEXT the miniport passes to <B>ScsiPortWmiDispatchFunction</B>. The port driver returns SRB_STATUS_SUCCESS to the caller.</P>

<P>It is unnecessary for the miniport to check whether events or data collection are already enabled for a block because the port driver sends a single enable request when the first data consumer enables the block, and sends a single disable request when the last data consumer disables the block. The port driver will not call <I>HwStorWmiFunctionControl</I> more than once to enable a block without an intervening call to disable it. </P>

<P>If the SRB is completed in the <I>HwStorWmiFunctionControl</I> callback, then the miniport calls <B>ScsiPortWmiPostProcess</B> with an appropriate <B>SrbStatus</B>. If the miniport driver pends this SRB, then it should call <B>ScsiPortWmiPostProcess</B> when the SRB is done and before completing the SRB.</P>

<H4>See Also</H4>

<P><A HREF="k302_0tyq.htm"><I>HwScsiWmiFunctionControl</I></A>, <A HREF="k306_0hma.htm">SCSIWMIGUIDREGINFO</A>, <A HREF="k306_1s1e.htm">SCSI_WMILIB_CONTEXT</A>, <A HREF="k301_2y42.htm"><B>ScsiPortWmiDispatchFunction</B></A>, <A HREF="k301_0nci.htm"><B>ScsiPortWmiPostProcess</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: HwStorWmiFunctionControl"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
