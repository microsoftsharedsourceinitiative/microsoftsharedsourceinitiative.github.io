<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MCD_INIT_DATA</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MCD_INIT_DATA">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_mcd_init_data_kr"></A>MCD_INIT_DATA</H1>

<P>The changer miniclass driver fills the MCD_INIT_DATA structure with pointers to its internal command processing routines and passes them to the changer class driver. </P>

<PRE class=syntax>typedef struct _MCD_INIT_DATA {
  ULONG  InitDataSize;
  CHANGER_EXTENSION_SIZE  ChangerAdditionalExtensionSize;
  CHANGER_INITIALIZE  ChangerInitialize;
  CHANGER_ERROR_ROUTINE  ChangerError;
  CHANGER_PERFORM_DIAGNOSTICS  ChangerPerformDiagnostics;
  CHANGER_COMMAND_ROUTINE  ChangerGetParameters;
  CHANGER_COMMAND_ROUTINE  ChangerGetStatus;
  CHANGER_COMMAND_ROUTINE  ChangerGetProductData;
  CHANGER_COMMAND_ROUTINE  ChangerSetAccess;
  CHANGER_COMMAND_ROUTINE  ChangerGetElementStatus;
  CHANGER_COMMAND_ROUTINE  ChangerInitializeElementStatus;
  CHANGER_COMMAND_ROUTINE  ChangerSetPosition;
  CHANGER_COMMAND_ROUTINE  ChangerExchangeMedium;
  CHANGER_COMMAND_ROUTINE  ChangerMoveMedium;
  CHANGER_COMMAND_ROUTINE  ChangerReinitializeUnit;
  CHANGER_COMMAND_ROUTINE  ChangerQueryVolumeTags;
} MCD_INIT_DATA, *PMCD_INIT_DATA;</PRE>

<H4>Members</H4>

<DL>
<DT><B>InitDataSize</B></DT>

<DD>Size of this structure in bytes. </DD>

<DT><A HREF="k305_2kdu.htm"><B>ChangerAdditionalExtensionSize</B></A></DT>

<DD>Pointer to changer miniclass driver routine that returns the number of bytes the changer miniclass driver requires to store device-specific information in the device extension. This routine has the following prototype:

<PRE>typedef
ULONG
(*CHANGER_EXTENSION_SIZE)(
  IN VOID
  );</PRE>
</DD>

<DT><A HREF="k305_5goi.htm"><B>ChangerInitialize</B></A></DT>

<DD>Pointer to changer miniclass driver routine that does miniclass driver-specific initialization and readies the changer to receive other requests. This routine has the following prototype:

<PRE>typedef 
NTSTATUS
(*CHANGER_INITIALIZE)(
  IN PDEVICE_OBJECT  DeviceObject
  );</PRE>
</DD>

<DT><A HREF="k305_0242.htm"><B>ChangerError</B></A></DT>

<DD>Pointer to changer miniclass driver routine that does device-specific error processing. This routine has the following prototype:

<PRE>typedef
VOID
(*CHANGER_ERROR_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PSCSI_REQUEST_BLOCK  Srb,
  IN NTSTATUS  *Status,
  IN BOOLEAN  *Retry
  );</PRE>
</DD>

<DT><A HREF="k305_9jua.htm"><B>ChangerPerformDiagnostics</B></A></DT>

<DD>Pointer to changer miniclass driver routine that performs diagnostic tests on the device. This routine has the following prototype:

<PRE>typedef 
NTSTATUS
(*CHANGER_PERFORM_DIAGNOSTICS)(
  IN PDEVICE_OBJECT  DeviceObject,
  OUT PWMI_CHANGER_PROBLEM_DEVICE_ERROR  changerDeviceError
  );</PRE>
</DD>

<DT><A HREF="k305_3c4y.htm"><B>ChangerGetParameters</B></A></DT>

<DD>Pointer to changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_9a5u.htm">IOCTL_CHANGER_GET_PARAMETERS</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_7ktu.htm"><B>ChangerGetStatus</B></A></DT>

<DD>Pointer to changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_9kmq.htm">IOCTL_CHANGER_GET_STATUS</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_5xo2.htm"><B>ChangerGetProductData</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_70du.htm">IOCTL_CHANGER_GET_PRODUCT_DATA</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_48qa.htm"><B>ChangerSetAccess</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_0lv6.htm">IOCTL_CHANGER_SET_ACCESS</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_50s2.htm"><B>ChangerGetElementStatus</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_1i5u.htm">IOCTL_CHANGER_GET_ELEMENT_STATUS</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_71ki.htm"><B>ChangerInitializeElementStatus</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_8yia.htm">IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_5yuq.htm"><B>ChangerSetPosition</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_6j3m.htm">IOCTL_CHANGER_SET_POSITION</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_5ar6.htm"><B>ChangerExchangeMedium</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_9os2.htm">IOCTL_CHANGER_EXCHANGE_MEDIUM</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_3g36.htm"><B>ChangerMoveMedium</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_2a42.htm">IOCTL_CHANGER_MOVE_MEDIUM</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_67n6.htm"><B>ChangerReinitializeUnit</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code <A HREF="k307_2d6a.htm">IOCTL_CHANGER_REINITIALIZE_TRANSPORT</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>
</DD>

<DT><A HREF="k305_5gs2.htm"><B>ChangerQueryVolumeTags</B></A></DT>

<DD>Pointer to a changer miniclass driver routine that handles the device-specific aspects of a device-control IRP with the IOCTL code of <A HREF="k307_7jxu.htm">IOCTL_CHANGER_QUERY_VOLUME_TAGS</A>. This routine has the following prototype:

<PRE>typedef
NTSTATUS
(*CHANGER_COMMAND_ROUTINE)(
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp
  );</PRE>

</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>mcd.h</I>. Include <I>mcd.h</I>.</P>

<H4>Comments</H4>

<P>This structure is used by the changer driver in Windows&nbsp;XP and later operating systems only. </P>

<H4>See Also</H4>

<DL>
<DT><A HREF="k305_2kdu.htm"><B>ChangerAdditionalExtensionSize</B></A>, <A HREF="k305_5goi.htm"><B>ChangerInitialize</B></A>, <A HREF="k305_0242.htm"><B>ChangerError</B></A>, <A HREF="k305_9jua.htm"><B>ChangerPerformDiagnostics</B></A>, <A HREF="k305_3c4y.htm"><B>ChangerGetParameters</B></A>, <A HREF="k305_7ktu.htm"><B>ChangerGetStatus</B></A>, <A HREF="k305_5xo2.htm"><B>ChangerGetProductData</B></A>, <A HREF="k305_48qa.htm"><B>ChangerSetAccess</B></A>, <A HREF="k305_50s2.htm"><B>ChangerGetElementStatus</B></A>, <A HREF="k305_71ki.htm"><B>ChangerInitializeElementStatus</B></A>, <A HREF="k305_5yuq.htm"><B>ChangerSetPosition</B></A>, <A HREF="k305_5ar6.htm"><B>ChangerExchangeMedium</B></A>, <A HREF="k305_3g36.htm"><B>ChangerMoveMedium</B></A>, <A HREF="k305_67n6.htm"><B>ChangerReinitializeUnit</B></A>, <A HREF="k305_5gs2.htm"><B>ChangerQueryVolumeTags</B></A>, <A HREF="k307_9a5u.htm">IOCTL_CHANGER_GET_PARAMETERS</A>, <A HREF="k307_9kmq.htm">IOCTL_CHANGER_GET_STATUS</A>, <A HREF="k307_70du.htm">IOCTL_CHANGER_GET_PRODUCT_DATA</A>, <A HREF="k307_0lv6.htm">IOCTL_CHANGER_SET_ACCESS</A>, <A HREF="k307_1i5u.htm">IOCTL_CHANGER_GET_ELEMENT_STATUS</A>, <A HREF="k307_8yia.htm">IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS</A>, <A HREF="k307_6j3m.htm">IOCTL_CHANGER_SET_POSITION</A>, <A HREF="k307_9os2.htm">IOCTL_CHANGER_EXCHANGE_MEDIUM</A>, <A HREF="k307_2a42.htm">IOCTL_CHANGER_MOVE_MEDIUM</A></DT>

<DD></DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MCD_INIT_DATA"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
