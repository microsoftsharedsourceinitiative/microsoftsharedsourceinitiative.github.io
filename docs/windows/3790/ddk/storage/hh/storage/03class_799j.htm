<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling PnP Initialization in a Storage Class Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Handling PnP Initialization in a Storage Class Driver">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driverentry_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_adddevice_kr">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iogetattacheddevicereference_kr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_ioattachdevicetodevicestack_kr">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_start_device_dr">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_plug_and_play_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_handling_pnp_initialization_in_a_storage_class_driver_kg"></A>Handling PnP Initialization in a Storage Class Driver</H1>

<P>Initialization of a storage class driver is much the same as initialization of any PnP driver. </P>

<P>Storage class driver initialization begins when the PnP Manager calls the driver's <A HREF="JavaScript:hhobj_1.Click()"><B>DriverEntry</B></A> routine to load and initialize the driver. Then the PnP Manager calls the storage class driver's <A HREF="JavaScript:hhobj_2.Click()"><I>AddDevice</I></A> routine, passing a pointer to a physical device object (PDO) that represents the target device. </P>

<P>In its <I>AddDevice</I> routine, the class driver calls <A HREF="JavaScript:hhobj_3.Click()"><B>IoGetAttachedDeviceReference</B></A> and issues an SRB_FUNCTION_CLAIM_DEVICE command (see <A HREF="k306_0hte.htm">SCSI_REQUEST_BLOCK</A>) to the device object returned, to prevent legacy class drivers from claiming the device. The class driver must send no other commands to the device during this phase of initialization. </P>

<P>If the class driver successfully claims the device, it creates a functional device object (FDO) and attaches it to the device stack by calling <A HREF="JavaScript:hhobj_4.Click()"><B>IoAttachDeviceToDeviceStack</B></A> with the input PDO. When <I>AddDevice</I> returns, the driver must be ready to handle a PnP start request (IRP_MJ_PNP with an <A HREF="JavaScript:hhobj_5.Click()">IRP_MN_START_DEVICE</A>). After the PnP Manager has finished constructing the driver stack (which might include one or more filter drivers layered above and below the class driver) it issues a start request to the topmost driver in the driver stack for the target device. </P>

<P>If the class driver cannot successfully claim the device, it must not attempt to attach an FDO to the device stack, and should simply return a success status from its <I>AddDevice</I> routine. Such a driver will not receive a PnP start request for the device, although the PnP Manager might call its <I>AddDevice</I> routine again for the same or a different device. </P>

<P>For more information about initializing storage class drivers, see the following:</P>

<P class=indent1><A HREF="03class_81t3.htm">Storage Class Driver's <B>DriverEntry</B> Routine</A> </P>

<P class=indent1><A HREF="03class_4so7.htm">Storage Class Driver's <I>AddDevice</I> Routine</A> </P>

<P>Also see <A HREF="JavaScript:hhobj_6.Click()">Plug and Play</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20PnP%20Initialization%20in%20a%20Storage%20Class%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
