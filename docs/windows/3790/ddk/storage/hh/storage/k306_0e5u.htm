<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HW_INITIALIZATION_DATA (STORPORT)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="HW_INITIALIZATION_DATA (STORPORT)">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_start_device_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_hw_initialization_data_storport__kr"></A>HW_INITIALIZATION_DATA (STORPORT)</H1>

<P>The HW_INITIALIZATION_DATA structure contains information particular to each miniport and the hardware that the miniport passes to the port driver. </P>

<PRE class=syntax>typedef struct HW_INITIALIZATION_DATA { 
  ULONG  HwInitializationDataSize; 
  INTERFACE_TYPE  AdapterInterfaceType; 
  PHW_INITIALIZE  HwInitialize; 
  PHW_STARTIO  HwStartIo; 
  PHW_INTERRUPT  HwInterrupt; 
  PHW_FIND_ADAPTER  HwFindAdapter; 
  PHW_RESET_BUS_BUS  HwResetBus; 
  PHW_DMA_STARTED  HwDmaStarted; 
  PHW_ADAPTER_STATE  HwAdapterState; 
  ULONG  DeviceExtensionSize; 
  ULONG  SpecificLuExtensionSize; 
  ULONG  SrbExtensionSize; 
  ULONG  NumberOfAccessRanges; 
  PVOID  Reserved; 
  BOOLEAN  MapBuffers; 
  BOOLEAN  NeedPhysicalAddresses; 
  BOOLEAN  TaggedQueueing; 
  BOOLEAN  AutoRequestSense; 
  BOOLEAN  MultipleRequestPerLu; 
  BOOLEAN  ReceiveEvent; 
  USHORT  VendorIdLength; 
  PVOID  VendorId; 
  USHORT  ReservedUshort; 
  USHORT  DeviceIdLength; 
  PVOID  DeviceId; 
  PHW_STOP_ADAPTER  HwAdapterControl;
  PHW_BUILDIO  HwBuildIo;
} HW_INITIALIZATION_DATA, *PHW_INITIALIZATION_DATA; </PRE>

<H4>Members</H4>

<DL>
<DT><B>HwInitializationDataSize</B></DT>

<DD>This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <B>HwInitializationDataSize</B> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>AdapterInterfaceType</B></DT>

<DD>The STORPORT driver does not support legacy buses. Therefore, most of the adapter interface types used with the SCSI Port driver are invalid for Storport. In particular, <B>Isa</B>, <B>Eisa</B>, <B>MicroChannel</B>, and <B>TurboChannel</B> are not supported. Furthermore, unlike the SCSI Port case, a miniport that works with the STORPORT driver is not required to supply values for the <B>VendorIdLength</B>, <B>VendorId</B>, <B>DeviceIdLength</B>, and <B>DeviceId</B> members.</DD>

<DT><B>HwInitialize</B></DT>

<DD>Pointer to the miniport's <A HREF="k301_7upe.htm"><I>HwStorInitialize</I></A> routine, which is a required entry point for all miniport drivers. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <I>HwInitialize</I> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>HwStartIo</B></DT>

<DD>Pointer to the miniport's <A HREF="k301_4ng2.htm"><I>HwStorStartIo</I></A> routine, which is a required entry point for all miniport drivers. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <I>HwStartIo</I> member of HW_INITIALIZATION_DATA (SCSI). </DD>

<DT><B>HwInterrupt</B></DT>

<DD>Pointer to the miniport's <A HREF="k301_5g6q.htm"><I>HwStorInterrupt</I></A> routine, which is a required entry point for all miniport drivers.  This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <I>HwInterrupt</I> member of HW_INITIALIZATION_DATA (SCSI). </DD>

<DT><B>HwFindAdapter</B></DT>

<DD>Pointer to the miniport's <A HREF="k301_2rzm.htm"><I>HwStorFindAdapter</I></A> routine, which is a required entry point for all miniport drivers. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <I>HwFindAdapter</I> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>HwResetBus</B></DT>

<DD>Pointer to the miniport's <A HREF="k301_4436.htm"><I>HwStorResetBus</I></A> routine, which is a required entry point for all miniport drivers. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <I>HwResetBus</I> member of HW_INITIALIZATION_DATA (SCSI). </DD>

<DT><B>HwDmaStarted</B></DT>

<DD>The STORPORT driver does not support slave-mode DMA. Therefore, this member must be NULL.</DD>

<DT><B>HwAdapterState</B></DT>

<DD>The STORPORT driver does not support legacy drivers. Therefore, this member must be NULL.</DD>

<DT><B>DeviceExtensionSize</B></DT>

<DD>Specifies the size, in bytes, required by the miniport driver for its per-adapter device extension. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <B>DeviceExtensionSize</B> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>SpecificLuExtensionSize</B></DT>

<DD>Specifies the size, in bytes, required by the miniport driver for its per-logical-unit storage, if any. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <B>SpecificLuExtensionSize</B> member of HW_INITIALIZATION_DATA (SCSI). </DD>

<DT><B>SrbExtensionSize</B></DT>

<DD>Specifies the size, in bytes, required by the miniport driver for its per-request storage, if any. Since miniports that work with the STORPORT driver must support scatter/gather lists, and the per-SRB scatter/gather lists are usually allocated in the SRB extension, this member is rarely zero. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <B>SrbExtensionSize</B> member of HW_INITIALIZATION_DATA (SCSI). </DD>

<DT><B>NumberOfAccessRanges</B></DT>

<DD>Specifies how many access ranges the adapter uses. Each is a range either of memory addresses or I/O port addresses. This member has the same meaning for the STORPORT version of the HW_INITIALIZATION_DATA structure as it does for the SCSI Port version of the structure. For more information, see the <B>NumberOfAccessRanges</B> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>Reserved</B></DT>

<DD>Reserved for system use and not available for use by miniport drivers.</DD>

<DT><B>MapBuffers</B></DT>

<DD>Indicates whether the STORPORT driver maps SRB data buffer addresses to system virtual addresses. In the SCSI Port version of HW_INITIALIZATION_DATA, this member is a BOOLEAN. In the STORPORT version, it can have any of the following three values.


<TABLE>

<TR VALIGN="top">
<TH align=left width=42%>Value</TH>
<TH align=left width=58%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=42%>STOR_MAP_NO_BUFFERS</TD>
<TD width=58%>The STORPORT driver does not map data buffers for any type of SRB. Thus, its miniports must <I>not</I> directly access the data pointed to by the <B>DataBuffer</B> member in any of the SRBs it receives.</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>STOR_MAP_ALL_BUFFERS</TD>
<TD width=58%>This feature is not currently implemented. If the <B>MapBuffers </B>member is assigned this value, the STORPORT driver interprets it as though it were STOR_MAP_NON_READ_WRITE_BUFFERS. </TD>
</TR>

<TR VALIGN="top">
<TD width=42%>STOR_MAP_NON_READ_WRITE_BUFFERS </TD>
<TD width=58%>The STORPORT driver maps the data buffers for all non-SCSI read and write requests. Miniports can access data in an SRB provided the SRB does not belong to a read or a write request. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>NeedPhysicalAddresses</B></DT>

<DD>Must be set to TRUE. A value of TRUE indicates that the miniport driver must translate certain types of addresses to physical addresses. Miniport drivers that work with the STORPORT driver must support bus-master DMA, so they will always be required to do address translation. For information on how this member is used with the SCSI Port driver, see the <B>NeedPhysicalAddress</B> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>TaggedQueueing</B></DT>

<DD>Must be set to TRUE. A value of TRUE indicates that the miniport driver supports SCSI tagged queueing. All miniports that work with the STORPORT driver must support tagged queuing. For information on how this member is used with the SCSI Port driver, see the <B>TaggedQueueing</B> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>AutoRequestSense</B></DT>

<DD>Must be TRUE. A value of TRUE indicates that the HBA can perform a request-sense operation without requiring an explicit request to do so. All miniports that work with the STORPORT driver must support SCSI Auto-Request Sense. For information on how this member is used with the SCSI Port driver, see the <B>AutoRequestSense</B> member of HW_INITIALIZATION_DATA (SCSI). </DD>

<DT><B>MultipleRequestPerLu</B></DT>

<DD>Must be set to TRUE. A value of TRUE indicates that the miniport driver can queue multiple requests per logical unit. Miniport drivers that work with the STORPORT driver must support SCSI tagged queuing.  For information on how this member is used with the SCSI Port driver, see the <B>MultipleRequestPerLu</B> member of <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>. </DD>

<DT><B>ReceiveEvent</B></DT>

<DD>The STORPORT driver ignores this member.</DD>

<DT><B>VendorIdLength</B></DT>

<DD>The STORPORT driver ignores this member, because miniports that work with the STORPORT driver must support PnP.</DD>

<DT><B>VendorId</B></DT>

<DD>The STORPORT driver ignores this member, because miniports that work with the STORPORT driver must support PnP.</DD>

<DT><B>ReservedUshort</B></DT>

<DD>Reserved.</DD>

<DT><B>DeviceIdLength</B></DT>

<DD>The STORPORT driver ignores this member, because miniports that work with the STORPORT driver must support PnP.</DD>

<DT><B>DeviceId</B></DT>

<DD>The STORPORT driver ignores this member, because miniports that work with the STORPORT driver must support PnP.</DD>

<DT><B>HwAdapterControl</B></DT>

<DD>Pointer to the miniport's <A HREF="k301_275e.htm"><I>HwStorAdapterControl</I></A> routine. This is a required routine because miniports that work with the STORPORT driver require PnP support. </DD>

<DT><B>HwBuildIo</B></DT>

<DD>Pointer to an optional <A HREF="k301_29iq.htm"><I>HwStorBuildIo</I></A> routine that the port driver calls to do unsynchronized processing prior to calling the miniport's <A HREF="k301_4ng2.htm"><I>HwStorStartIo</I></A> routine. </DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>storport.h</I>. Include <I>storport.h</I>.</P>

<H4>Comments</H4>

<P>The STORPORT driver follows the SCSI port driver's PnP initialization model. During the driver's <A HREF="k302_9yk2.htm"><B>DriverEntry</B></A> routine, the miniport calls the <A HREF="k301_2wqa.htm"><B>StorPortInitialize</B></A> routine with a <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA</A> structure describing the hardware it supports. Later, when the PnP Manager sends an <A HREF="JavaScript:hhobj_1.Click()">IRP_MN_START_DEVICE</A> request to the port driver, the port driver passes a <A HREF="k306_2h4i.htm">PORT_CONFIGURATION_INFORMATION</A> structure to the miniport's <A HREF="k301_2rzm.htm"><I>HwStorFindAdapter</I></A> routine. Afterwards, the port driver calls <A HREF="k301_7upe.htm"><I>HwStorInitialize</I></A> to initialize the adapter.</P>

<H4>See Also</H4>

<P><A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA (SCSI)</A>, <A HREF="k306_2h4i.htm">PORT_CONFIGURATION_INFORMATION</A>, <A HREF="k302_9yk2.htm"><B>DriverEntry</B></A>, <A HREF="k301_2wqa.htm"><B>StorPortInitialize</B></A>, <A HREF="k301_2rzm.htm"><I>HwStorFindAdapter</I></A>, <A HREF="k301_7upe.htm"><I>HwStorInitialize</I></A>, <A HREF="k301_29iq.htm"><I>HwStorBuildIo</I></A>, <A HREF="k301_4ng2.htm"><I>HwStorStartIo</I></A>, <A HREF="k301_275e.htm"><I>HwStorAdapterControl</I></A>, <A HREF="k301_4436.htm"><I>HwStorResetBus</I></A>, <A HREF="k301_5g6q.htm"><I>HwStorInterrupt</I></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: HW_INITIALIZATION_DATA%20(STORPORT)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
