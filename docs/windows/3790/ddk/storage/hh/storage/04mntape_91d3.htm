<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Storing Tape Miniclass Context in Optional Extensions</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Storing Tape Miniclass Context in Optional Extensions">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_storing_tape_miniclass_context_in_optional_extensions_kg"></A>Storing Tape Miniclass Context in Optional Extensions</H1>

<P>A tape miniclass driver can store context in two optional extensions:

<OL>
	<LI>A driver-specific minitape extension
<P>When used, this extension typically stores information about device capabilities (SCSI inquiry data or equivalent). A driver that supports several devices can store details about each device, rather than repeatedly querying the devices.

<P>A miniclass driver specifies the size of the minitape extension in the <B>MinitapeExtensionSize </B>member of the TAPE_INIT_DATA_EX structure it passes to <B>TapeClassInitialize</B> from its <B>DriverEntry</B> routine. The tape class driver allocates the requested storage on behalf of the miniclass driver. The miniclass driver initializes the optional extension with a TapeMiniExtensionInit routine. The minitape extension remains valid until the driver is unloaded. 
</LI>

	<LI>A command-specific command extension
<P>When used, this extension stores command-specific context between calls to a tape miniclass routine that might be called more than once to process a single request. For example, a tape miniclass driver's TapeMiniGetStatus routine might store the status from a TEST_UNIT_READY command in the command extension while it determines whether the tape drive also requires cleaning.

<P>A miniclass driver specifies the size of the command extension in the <B>CommandExtensionSize </B>member of the TAPE_INIT_DATA_EX structure it passes to <B>TapeClassInitialize</B> from its <B>DriverEntry</B> routine. 

<P>All tape miniclass routines that handle device-specific aspects of device-control requests are given a pointer to the command extension when they are called. The tape class driver allocates storage for the command extension before calling such a miniclass routine. The miniclass routine initializes the command extension on the first call to process a given request; that is, when the <I>CallNumber</I> parameter to the routine equals zero. The command extension remains valid until the tape miniclass routine returns either TAPE_STATUS_SUCCESS or an error status.
</LI>
</OL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Storing%20Tape%20Miniclass%20Context%20in%20Optional%20Extensions"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
