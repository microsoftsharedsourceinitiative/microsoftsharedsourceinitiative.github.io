<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Storage Class Driver's ClaimDevice Routine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Storage Class Driver's ClaimDevice Routine">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iogetattacheddevicereference_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iobuilddeviceiocontrolrequest_kr">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iocalldriver_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_storage_class_drivers_claimdevice_routine_kg"></A>Storage Class Driver's <I>ClaimDevice</I> Routine</H2>

<P>The <I>ClaimDevice</I> routine, which claims a storage device, is typically called from a <A HREF="03class_4so7.htm">storage class driver's <I>AddDevice</I> routine</A>.</P>

<P>To claim a storage device, a class driver gets a reference to a device object by calling <A HREF="JavaScript:hhobj_1.Click()"><B>IoGetAttachedDeviceReference</B></A> with the PDO passed to the class driver in the <I>AddDevice</I> call, then either calls an internal <I>ClaimDevice</I> routine from its <I>AddDevice</I> routine or implements the same functionality inline. A <I>ClaimDevice</I> routine sets up an SRB with the <B>Function</B> value SRB_FUNCTION_CLAIM_DEVICE and sends it to the device object returned by the class driver's call to <B>IoGetAttachedDeviceReference</B>. </P>

<P>The <I>ClaimDevice</I> routine allocates an IRP with <A HREF="JavaScript:hhobj_2.Click()"><B>IoBuildDeviceIoControlRequest</B></A>, setting up the port driver's I/O stack location with the I/O control code IOCTL_SCSI_EXECUTE_NONE and a pointer to the SRB at <B>Parameters.Scsi.Srb</B>. <I>ClaimDevice</I> also must set up an event object with <B>KeInitializeEvent</B> so it can wait on the completion of the IRP. Then, it sends the IRP on to the next-lower driver with <A HREF="JavaScript:hhobj_3.Click()"><B>IoCallDriver</B></A>. </P>

<P>When the IRP completes, <I>ClaimDevice</I> should release the reference to the device object returned by <B>IoGetAttachedDeviceReference</B>.</P>

<P>A <I>ClaimDevice</I> routine can serve double duty as a routine to be called from a class driver's <I>RemoveDevice</I> routine, or from <I>AddDevice</I> if the driver succeeds in claiming the device but cannot create a device object. In such cases, <I>ClaimDevice</I> sends an SRB with the <B>Function</B> value SRB_FUNCTION_RELEASE_DEVICE. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Storage%20Class%20Driver's%20ClaimDevice%20Routine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
