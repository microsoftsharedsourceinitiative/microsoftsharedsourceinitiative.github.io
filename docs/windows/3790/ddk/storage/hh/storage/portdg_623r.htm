<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>The Unsynchronized HwStorBuildIo Routine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="The Unsynchronized HwStorBuildIo Routine">
<META NAME="MS-HKWD" CONTENT="Unsynchronized HwStorBuildIo Routine">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_startio_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_the_unsynchronized_hwstorbuildio_routine_kg"></A>The Unsynchronized <I>HwStorBuildIo</I> Routine</H3>

<P>In the ScsiPort-miniport I/O model, the miniport's <A HREF="JavaScript:hhobj_1.Click()"><I>StartIo</I></A><I> </I>routine, <A HREF="k302_3d0y.htm"><I>HwScsiStartIo</I></A>, should transmit SCSI request blocks (SRBs) to the hardware as quickly as possible. This is essential, because work done in the miniport's <I>StartIo</I> routine is accomplished while interrupts are disabled and at a raised I/O request level (IRQL). Unfortunately, this model is not well suited to drivers of some high-performance host bus adapters (HBAs), because the miniport drivers for these HBAs must do a significant amount of processing when I/O is initiated. If the miniport does this processing in its <I>StartIo</I> routine, it degrades system performance.</P>

<P>The Storport I/O model supports the <A HREF="k301_29iq.htm"><I>HwStorBuildIo</I></A> routine in an effort to remove some of the processing burden from the miniport's <I>StartIo</I> routine, <A HREF="k301_4ng2.htm"><I>HwStorStartIo</I></A>. In the Storport I/O model, the system calls <I>HwStorBuildIo</I> just prior to calling the miniport's <I>HwStorStartIo</I> routine and does as much processing as possible there. This strategy avoids contention for CPU cycles and for access to critical system structures, such as the device extension, because <I>HwStorBuildIo</I> executes at a lower IRQL and holds no synchronization locks. </P>

<P>The <I>HwStorBuildIo</I> routine should translate the SRB to a more convenient data structure, build scatter/gather lists, and do other per-SRB processing. Because no locks are held during the execution of the <I>HwStorBuildIo</I> routine, the miniport driver should access no data other than that in the SRB and the SRB extension. If access to other structures is required for part of the processing, that part should still be performed in the <I>HwStartIo</I> routine.</P>

<P>To achieve maximum performance, the <I>HwStorBuildIo</I> routine should be used in conjunction with the full-duplex mode. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: The%20Unsynchronized%20HwStorBuildIo%20Routine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
