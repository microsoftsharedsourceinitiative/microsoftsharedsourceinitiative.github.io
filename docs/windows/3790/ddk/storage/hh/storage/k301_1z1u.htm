<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>StorPortGetDeviceBase</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="StorPortGetDeviceBase">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_storportgetdevicebase_kr"></A>StorPortGetDeviceBase</H1>

<P>The <B>StorPortGetDeviceBase</B> routine maps an I/O address to system address space. </P>

<PRE class=syntax><B>PVOID</B>
<B>  StorPortGetDeviceBase(</B>
<B>    IN PVOID</B>  <I>HwDeviceExtension</I>,
<B>    IN INTERFACE_TYPE</B>  <I>BusType</I>,
<B>    IN ULONG</B>  <I>SystemIoBusNumber</I>,
    <B>IN SCSI_PHYSICAL_ADDRESS</B>  <I>IoAddress</I>,
<B>    IN ULONG</B>  <I>NumberOfBytes</I>,
<B>    IN BOOLEAN</B>  <I>InIoSpace</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the hardware device extension. This is a per-HBA storage area that the port driver allocates and initializes on behalf of the miniport driver. Miniport drivers usually store HBA-specific information in this extension, such as the state of the HBA and the HBA's mapped access ranges. This area is available to the miniport driver in the <B>DeviceExtension-&gt;HwDeviceExtension</B> member of the HBA's device object immediately after the miniport driver calls <A HREF="k301_2wqa.htm"><B>StorPortInitialize</B></A>. The port driver frees this memory when it removes the device. </DD>

<DT><I>BusType</I></DT>

<DD>Specifies the interface type of the I/O bus on which the HBA is connected. The miniport driver's <A HREF="k302_9vsi.htm"><I>HwScsiFindAdapter</I></A> routine obtains the value for this parameter from the <B>AdapterInterfaceType</B> member of the input PORT_CONFIGURATION_INFORMATION.</DD>

<DT><I>SystemIoBusNumber</I></DT>

<DD>Specifies the system-assigned number of the I/O bus on which the HBA is connected. The <A HREF="k302_9vsi.htm"><I>HwScsiFindAdapter</I></A> routine obtains the value for this parameter from the <B>SystemIoBusNumber</B> member of the input PORT_CONFIGURATION_INFORMATION.</DD>

<DT><I>IoAddress</I></DT>

<DD>Specifies the bus-relative base address of a range used by the HBA. The <I>HwScsiFindAdapter</I> routine obtains the value for this parameter from one of the <B>AccessRanges</B> elements in the PORT_CONFIGURATION_INFORMATION if the port driver supplies range-configuration information. Otherwise, this address can be a value returned by <B>ScsiPortGetBusData</B> or a miniport driver-supplied default value. Avoid using a base address of zero because its successful return status can conflict with the error status (NULL).</DD>

<DT><I>NumberOfBytes</I></DT>

<DD>Specifies the size in bytes of the range that the mapping should cover. The <I>HwScsiFindAdapter</I> routine obtains the value of this parameter from the same <B>AccessRanges</B> element as <I>IoAddress</I> if the port driver supplies range configuration information. Otherwise, this value can be returned by <B>ScsiPortGetBusData</B> or a miniport driver-supplied default. In any case, the driver must not access the hardware outside of the returned, mapped range.</DD>

<DT><I>InIoSpace</I></DT>

<DD>TRUE indicates the range to be mapped is in I/O space, and the miniport driver will pass mapped addresses in this range to the <B>ScsiPort...Port</B><I>Xxx</I> to communicate with the HBA. The <I>HwScsiFindAdapter</I> routine obtains the value of this parameter from the same <B>AccessRanges</B> element as <I>IoAddress</I>. Note that a miniport driver <I>must invert</I> the value of the <B>InMemorySpace</B> member in an ACCESS_RANGE-type element before it is passed to <B>ScsiPortGetDeviceBase</B> as the <I>InIoSpace</I> argument. FALSE indicates that the range to be mapped is in memory space. 
</DD>
</DL>

<H4>Return Value</H4>

<P>A mapped, logical base address corresponding to the bus-relative address supplied in the <B>IoAddress</B> parameter. </P>

<H4>Headers</H4>

<P>Declared in <I>storport.h</I>. Include <I>storport.h</I>. </P>

<H4>Comments</H4>

<P>Every miniport driver must pass mapped, logical access range addresses to the <B>StorPort..Port</B><I>Xxx</I> and <B>StorPort..Register</B><I>Xxx</I> routines when communicating with its HBA(s).</P>

<P>This routine supports only those addresses that were assigned to the driver by the system Plug and Play (PnP) Manager.</P>

<H4>See Also</H4>

<P><A HREF="k301_8c6q.htm"><B>ScsiPortGetDeviceBase</B></A>, <A HREF="k301_9ho2.htm"><B>StorPortFreeDeviceBase</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: StorPortGetDeviceBase"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
