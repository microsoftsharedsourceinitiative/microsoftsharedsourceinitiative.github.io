<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>O</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="object">
<META NAME="MS-HKWD" CONTENT="object directory object">
<META NAME="MS-HKWD" CONTENT="object type">
<META NAME="MS-HKWD" CONTENT="OBMC">
<META NAME="MS-HKWD" CONTENT="off-host IDCT">
<META NAME="MS-HKWD" CONTENT="off-screen memory">
<META NAME="MS-HKWD" CONTENT="OLE">
<META NAME="MS-HKWD" CONTENT="OnNow">
<META NAME="MS-HKWD" CONTENT="opaque">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_keinitializedevicequeue_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Glossary:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_o_gg_gly"></A>O</H1>



<DL>
<DT><A NAME="ddk_object_kg_gly"></A><B>object</B></DT>

<DD>A single, run-time instance of a system-defined object type. Objects visible in user mode include process, thread, section, file, event, semaphore, key, timer, port, object directory, symbolic link, I/O completion port, and token objects. 

<P>Many user-mode objects are implemented through the use of a corresponding kernel-mode object, including processes, threads, events, semaphores, and timers.


<P>Kernel-mode-only objects include APC, DPC, device queue, interrupt, mutex, driver, device, adapter, controller, and stream file objects.


<P><I>See also</I> <A HREF="#ddk_object_type_kg_gly">object type</A> and <A HREF="#ddk_opaque_kg_gly">opaque</A>.
</DD>

<DT><A NAME="ddk_object_directory_object_kg_gly"></A><B>object directory object</B></DT>

<DD>A type defined by the Object Manager and used to implement hierarchical object names.

<P>Note that file system directories are implemented as <A HREF="glossary_8eih.htm#ddk_file_object_kg_gly"><I>file objects</I></A>, not as object directory objects.
</DD>

<DT><A NAME="ddk_object_type_kg_gly"></A><B>object type</B></DT>

<DD>An opaque data structure that defines a protected entity implemented and manipulated by the operating system. For example, the system service that reads a file operates on an open file object. 

<P>Every user-visible object has:


<UL>
	<LI>A type (whose name must be unique).</LI>

	<LI>Two parts:</LI>
</UL>


<P>A <I>header</I> that is operated on by the Object Manager


<P>A <I>body</I> that is operated on by type-specific system services


<UL>
	<LI>A set of standardized rules for object creation, deletion, protection, access, management, and naming</LI>
</UL>


<P>User-visible objects can be implemented using kernel-mode objects.


<P>Kernel-mode objects are visible to (and, except for certain fields in driver and device objects, directly accessible only by) the executive component that defined a given object type. They are indirectly accessible to other kernel-mode code through the type-specific support routines exported by the defining component. For example, <A HREF="JavaScript:hhobj_1.Click()"><B>KeInitializeDeviceQueue</B></A> operates on device queue objects.


<P>See also <A HREF="#ddk_opaque_kg_gly"><I>opaque</I></A>.
</DD>

<DT><A NAME="ddk_obmc_kg_gly"></A><B>OBMC</B></DT>

<DD>Overlapped Block Motion Compensation. An algorithm in H.263 that obtains motion vectors from blocks next to the current macroblock and uses them with the current macroblock to achieve a more accurate predication and a smaller bitstream.</DD>

<DT><A NAME="ddk_off_host_idct_kg_gly"></A><B>off-host IDCT</B></DT>

<DD>In DirectX® VA IDCT is performed on the accelerator with the host decoder passing macroblocks of inverse transform coefficients to the accelerator. 

<P><I>See also</I> <A HREF="glossary_50mx.htm#ddk_idct_kg_gly">IDCT</A>
</DD>

<DT><A NAME="ddk_off_screen_memory_gg_gly"></A><B>off-screen memory</B></DT>

<DD>Video memory whose contents do not appear on the video display. Off-screen memory can be used for double buffering, a technique in which a complex graphics image that requires numerous graphics operations can be completely rendered before it is displayed. After each image has been displayed, another image can be constructed in the same way, providing an effective way to achieve animation.</DD>

<DT><A NAME="_ole_glossary"></A><B>OLE</B></DT>

<DD>Object linking and embedding. A way to transfer and share information among applications. OLE is based on the COM programming model and binary standard. </DD>

<DT><A NAME="ddk_onnow_dg_gly"></A><B>OnNow</B></DT>

<DD>A computer industry initiative to make computers more power efficient, reducing startup time and adding the ability to shut off idle devices.</DD>

<DT><A NAME="ddk_opaque_kg_gly"></A><B>opaque</B></DT>

<DD>Pertains to any data structure, including a system-defined object, that is defined with a deliberately hidden internal structure known only to the executive component that defined the type. However, the defining component supplies system services and, usually, kernel-mode support routines to manipulate opaque objects. User-mode data types also can be opaque.</DD>
</DL>


<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: O"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
