<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WOW32DriverCallback</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WOW32DriverCallback">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Other&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wow32drivercallback"></A>WOW32DriverCallback</H1>

<P><B>WOW32DriverCallback</B> allows a 32-bit thunk extension DLL to simulate a Multimedia hardware interrupt callback into 16-bit code. The built-in thunks for wave, midi, and time callbacks make use of this function to callback into 16-bit application code.</P>

<PRE class=syntax><B>BOOL
  WOW32DriverCallback(</B>
<B>    DWORD </B> <I>dwCallback</I>,
<B>    DWORD </B> <I>dwFlags</I>,
<B>    WORD </B> <I>wDeviceHandle</I>,
<B>    WORD </B> <I>wMsg</I>,
<B>    DWORD </B> <I>dwUser</I>,
<B>    DWORD</B>  <I>dwParam1</I>,
<B>    DWORD</B>  <I>dwParam2</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>dwCallback</I></DT>

<DD>Specifies either the address of a callback function, a window handle, or a task handle, depending on the flags specified in <I>dwFlags</I>.</DD>

<DT><I>dwFlags</I></DT>

<DD>Specifies how the 16-bit client application is notified, according to one of the following flags:

<TABLE>

<TR VALIGN="top">
<TH align=left width=30%>Flag</TH>
<TH align=left width=70%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=30%>DCB_FUNCTION</TD>
<TD width=70%>Indicates that a message should be sent to a callback function. <I>dwCallback</I> must be a 16-bit address of the 16-bit application callback routine.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%>DCB_WINDOW</TD>
<TD width=70%>Indicates that a message should be sent to the 16-bit window handle specified in <I>dwCallback</I>.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%>DCB_TASK</TD>
<TD width=70%>Indicates that a message should be sent ot the 16-bit task handle specified in <I>dwCallback</I>.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>wDeviceHandle</I></DT>

<DD>Specifies a 16-bit handle of the device associated with the notification.</DD>

<DT><I>wMsg</I></DT>

<DD>Specifies a message to be sent to the application.</DD>

<DT><I>dwUser</I></DT>

<DD>Specifies the DWORD of user-instance data supplied by the application when the device was opened.</DD>

<DT><I>dwParam1</I></DT>

<DD>Specifies a message-dependent parameter. If this is a pointer, it must be mapped to a valid 16-bit address. All fields in the structure pointed to must be mapped correctly.</DD>

<DT><I>dwParam2</I></DT>

<DD>Specifies a message-dependent parameter. If this is a pointer, it must be mapped to a valid 16-bit address. All fields in the structure pointed to must be mapped correctly.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>WOW32DriverCallback</B> returns TRUE if the operation was successful.</P>

<H4>Comments</H4>

<P>The 16-bit client specifies how it is notified when the device is opened. If notification is accomplished with a callback function, <I>wDeviceHandle</I>, <I>wMsg</I>, <I>dwUser</I>, <I>dwParam1</I>, and <I>dwParam2</I> are passed to the callback. If notification is accomplished by means of a window, only <I>wMsg</I>, <I>wDeviceHandle</I>, and <I>dwParam1</I> are passed.</P>

<P>Users will have to dynamically link to this function.</P>

<H4>See Also</H4>

<P><A HREF="vddfn_3alh.htm"><B>WOW32ResolveHandle</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WOW32DriverCallback"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
