<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>mciLoadCommandResource</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="mciLoadCommandResource">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Other&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_mciloadcommandresource_vdds"></A>mciLoadCommandResource</H1>

<P>Do not write an MCI driver to support a multimedia device; write a WDM AVStream driver instead.</P>

<P>The <B>mciLoadCommandResource</B> function registers, with MCI, the given resource as a command table.</P>

<PRE class=syntax><B>UINT
  mciLoadCommandResource(
    HANDLE </B><I>hInstance</I><B>,</B>
<B>    LPCWSTR </B><I>lpResName</I><B>,</B>
<B>    UINT </B><I>wType</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hInstance</I></DT>

<DD>Handle to the instance of the module whose executable file contains the resource or NULL if an external file is used. This parameter is ignored if an external file with the resource name and the extension ".mci" is found in the path. </DD>

<DT><I>lpResName</I></DT>

<DD>Pointer to a null-terminated string that specifies the name of the resource.</DD>

<DT><I>wType</I></DT>

<DD>Specifies the device type. Custom device-specific tables must give a type of zero. 
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns an index number that was assigned for the command table; otherwise, MCI_NO_COMMAND_TABLE on error. </P>

<H4>Headers</H4>

<P>Declared in <I>Mmddk.h</I>. Include <I>Mmddk.h.</I></P>

<H4>Comments</H4>

<P>When an application passes an MCI command string in a call to the <B>mciSendString</B> function, the MCI parser translates this command string. The MCI parser uses command tables to inform it how to translate this command string into parameters used by the device driver's <B>DriverProc</B> function. </P>

<P>To let applications use <B>mciSendString</B> with any commands that the driver supports, the driver must create a command table to indicate how to map the string commands to the message commands. The driver calls <B>mciLoadCommandResource</B> to register the command table with the MCI parser.</P>

<P>A command table consists of three columns: 

<UL>
	<LI>The first column contains the commands and flags used in the string form of the command. Each entry in the first column must be terminated with \0 to form a zero-terminated string. </LI>

	<LI>The second column is a <B>DWORD</B> and contains the commands and flags used in the message form of the command. </LI>

	<LI>The third column is a <B>WORD</B> and contains the identifiers that tell the MCI parser how to interpret each entry. </LI>
</UL>

<P>The following shows some lines in a command table: </P>

<PRE>"play\0",            MCI_PLAY, 0,                    MCI_COMMAND_HEAD,
"wait\0",            MCI_WAIT,                       MCI_FLAG ,
"test\0",            MCI_TEST,                       MCI_FLAG,
"from\0",            MCI_FROM,                       MCI_INTEGER,
"to\0",              MCI_TO,                         MCI_INTEGER,
"\0",                0L,                             MCI_END_COMMAND, 
</PRE>

<P>To release memory for the command table, the driver passes the index number of the command table in a call to the <A HREF="mcidrvfn_9q0j.htm"><B>mciFreeCommandResource</B></A> function. </P>

<P>For more information about MCI, see the Platform SDK documentation.</P>

<H4>See Also</H4>

<P><A HREF="mcidrvfn_9q0j.htm"><B>mciFreeCommandResource</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: mciLoadCommandResource"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
