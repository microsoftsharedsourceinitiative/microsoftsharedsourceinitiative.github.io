<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DeinterlaceBlt</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DeinterlaceBlt">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_deinterlaceblt_gg"></A><I>DeinterlaceBlt</I></H1>

<P>The sample <I>DeinterlaceBlt</I> function performs deinterlace or frame-rate conversion by writing the output to a destination surface.</P>

<PRE class=syntax><B>HRESULT
</B>  <I>DeinterlaceBlt</I><B>(</B>
    <B>IN DXVA_DeinterlaceStream</B>  <I>hDiStrm</I>,
    <B>IN REFERENCE_TIME</B>  <I>rtTargetFrame</I>,
    <B>IN LPRECT</B>  <I>lprcDstRect</I>,
    <B>IN LPDDSURFACE</B>  <I>lpDDSDstSurface</I>,
    <B>IN LPRECT</B>  <I>lprcSrcRect</I>,
    <B>IN LPDXVA_VideoSample</B>  <I>lpDDSrcSurfaces</I>,
    <B>IN DWORD</B>  <I>dwNumSurfaces</I>,
    <B>IN FLOAT</B>  <I>fAlpha</I> 
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hDiStrm</I></DT>

<DD>Handle to the driver-supplied DeinterlaceStream object. This handle should be used to identify this stream in all future calls.</DD>

<DT><I>rtTargetFrame</I></DT>

<DD>Identifies the location of the output frame within the sequence of input frames. If pure deinterlacing is being performed, the target time should coincide with one of the <B>rtStart</B> times of a reference sample. If a frame-rate conversion is being requested, the <B>rtTargetFrame</B> time may be different from any of the <B>rtStart</B> times of the reference samples.</DD>

<DT><I>lprcDstRect</I></DT>

<DD>Pointer to a <A HREF="grstrcts_6exz.htm">RECT</A> structure that describes the destination rectangle. The destination rectangle is required for either subrectangle deinterlacing or stretching. Support for stretching is optional and is indicated by the <B>VideoProcessingCaps</B> member of <A HREF="dxvaref_9ijr.htm">DXVA_DeinterlaceCaps</A>. Support for subrectangles is optional.</DD>

<DT><I>lpDDSDstSurface</I></DT>

<DD>Pointer to the destination surface. The destination surface can be a D3D render target, a D3D texture, or a D3D texture that is also a render target. The destination surface is always allocated in local video memory.

<P>The pixel format of the destination surface is the one indicated in the <A HREF="dxvaref_9ijr.htm">DXVA_DeinterlaceCaps</A> structure unless a YUV-to-RGB color space conversion is being performed as part of the deinterlace procedure. In this case, the destination surface format is an RGB format with at least 8 bits of precision for each color component.
</DD>

<DT><I>lprcSrcRect</I></DT>

<DD>Pointer to a RECT structure that describes the source rectangle. The source rectangle is required for either subrectangle deinterlacing or stretching. Support for stretching is optional and is indicated by the <B>VideoProcessingCaps</B> member of the <A HREF="dxvaref_9ijr.htm">DXVA_DeinterlaceCaps</A> structure. Support for subrectangles is optional.</DD>

<DT><I>lpDDSrcSurfaces</I></DT>

<DD>Pointer to an array of video source samples.</DD>

<DT><I>dwNumSurfaces</I></DT>

<DD>Indicates the number of surfaces in the <B>lpDDSrcSurfaces </B>array.</DD>

<DT><I>fAlpha</I></DT>

<DD>Indicates the alpha value for the surface. A value of 0.0F indicates a transparent surface. A value of 1.0F indicates an opaque surface.</DD>
</DL>

<H4>Comments</H4>

<P>The <I>DeinterlaceBlt</I> function maps directly to a call from the <B>RenderMoComp</B> member of the <A HREF="ddstrcts_0qav.htm">DD_MOTIONCOMPCALLBACKS</A> structure of the deinterlace container device. <B>RenderMoComp</B> points to a driver-supplied function that references the <A HREF="ddstrcts_5jtz.htm">DD_RENDERMOCOMPDATA</A> structure. The DD_RENDERMOCOMPDATA structure is completed as follows.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>Member</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><B>dwNumBuffers</B></TD>
<TD width=65%>Indicates the number of entries in the array pointed to by <B>lpBufferInfo</B>.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>lpBufferInfo</B> </TD>
<TD width=65%>Points to an array of DDMOCOMPBUFFERINFO structures, one for each input reference sample and one for the destination sample.  The destination sample is the first element of the array.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>dwFunction</B> </TD>
<TD width=65%>DXVA_DeinterlaceBltFnCode constant defined in <I>dxva.h</I>.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>lpInputData </B></TD>
<TD width=65%>Pointer to a completed <A HREF="dxvaref_8nc7.htm">DXVA_DeinterlaceBlt</A> structure.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>lpOutputData</B></TD>
<TD width=65%>Is NULL and is not currently used.</TD>
</TR>
</TABLE><BR>

<P>For the DirectX VA device used for deinterlacing, the driver-supplied callback pointed to by <B>RenderMoComp</B> is called without calling <B>BeginMoCompFrame</B> or <B>EndMoCompFrame</B>.</P>

<P>The following sample code shows how the driver should map the function pointed to by <B>RenderMoComp</B> into calls to <I>DeinterlaceBlt</I>. </P>

<P>This sample code only shows how the <B>RenderMoComp</B> callback function is used for deinterlacing. If the driver supports other DirectX VA functions such as decoding MPEG-2 video streams, extend the sample code to include processing of additional DirectX VA GUIDs.</P>

<H4>Mapping RenderMoComp to DeinterlaceBlt</H4>

<P>The following sample code shows how to map <B>RenderMoComp</B> to <I>DeinterlaceBlt</I>.</P>

<PRE>DWORD APIENTRY
RenderMoComp(
 PDD_RENDERMOCOMPDATA lpData
 )
{
 LPDXVA_DeinterlaceStream pDXVAState =
  (LPDXVA_DeinterlaceStream)lpData-&gt;lpMoComp-&gt;lpDriverReserved1;

 DXVA_DeinterlaceBlt* lpBlt = 
       (DXVA_DeinterlaceBlt*)lpData-&gt;lpInputData;
 LPDDMOCOMPBUFFERINFO lpBuffInfo = lpData-&gt;BufferInfo;

 for (DWORD i = 0; i &lt; lpBlt-&gt;NumSourceSurfaces; i++) {
  lpBlt-&gt;Source[i].lpDDSSrcSurface = 
        lpBuffInfo[1 + i].lpCompSurface;
 }
 lpData-&gt;ddRVal = DeinterlaceBlt(pDXVAState,
        lpBlt-&gt;rtTarget,
        &amp;lpBlt-&gt;DstRect,
        lpBuffInfo[0].lpCompSurface,
        &amp;lpBlt-&gt;SrcRect,
        &amp;lpBlt-&gt;Source,
        lpBlt-&gt;NumSourceSurfaces,
        lpBlt-&gt;Alpha);

 return DDHAL_DRIVER_HANDLED;
}</PRE>

<H4>See Also</H4>

<P><A HREF="dxvaref_9ijr.htm">DXVA_DeinterlaceCaps</A>, <A HREF="ddstrcts_0qav.htm">DD_MOTIONCOMPCALLBACKS</A>, <A HREF="ddstrcts_5jtz.htm">DD_RENDERMOCOMPDATA</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DeinterlaceBlt"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
