<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HwVidInterrupt</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="HwVidInterrupt">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_extensions_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_hwvidinterrupt_gg"></A><I>HwVidInterrupt</I></H1>

<P><I>HwVidInterrupt</I> detects and dismisses interrupts generated by the associated video adapter.</P>

<PRE class=syntax><B>BOOLEAN
  (*PVIDEO_HW_INTERRUPT)(
    PVOID</B>  <I>HwDeviceExtension</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the miniport driver's per-adapter storage area. For more information, see <A HREF="JavaScript:hhobj_1.Click()">Device Extensions</A>.
</DD>
</DL>

<H4>Return Value</H4>

<P>If <I>HwVidInterrupt</I> determines that its associated hardware did not generate the interrupt, it returns FALSE. Otherwise, it must dismiss the interrupt on its adapter before it returns TRUE.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P>A miniport driver must implement <I>HwVidInterrupt</I> if its video adapter generates interrupts.</P>

<P>First, <I>HwVidInterrupt</I> should determine whether its adapter actually caused the interrupt. If not, this function should return FALSE immediately so the ISR of the device that caused the interrupt will be called promptly.</P>

<P>Otherwise, <I>HwVidInterrupt</I> is generally responsible for completing the I/O operation that caused the interrupt, and should do the following:

<UL>
	<LI>Dismiss the interrupt on the adapter (required).</LI>

	<LI>Complete the requested operation that caused the interrupt.</LI>

	<LI>Return control as quickly as possible (required).</LI>
</UL>

<P>If a miniport driver has an <I>HwVidInterrupt</I> function, no register or memory location that can be accessed by <I>HwVidInterrupt</I> can be visible to the corresponding display driver. An interrupt can occur while the display driver is modifying one of the registers or memory locations involved, and there is no way to ensure synchronization. Therefore, all functions requiring access to the critical registers or memory locations for interrupt-driven operations must be in the miniport driver.</P>

<P>If any other miniport driver function shares memory, such as part of the <I>HwDeviceExtension</I>, with <I>HwVidInterrupt</I>, it must call <B>VideoPortSynchronizeExecution</B> to synchronize its access to the shared area.</P>

<P><I>HwVidInterrupt</I> can call only the following system-supplied <B>VideoPort</B><I>Xxx</I> routines:

<UL>
	<LI><A HREF="vpfncs_5axz.htm"><B>VideoPortEnableInterrupt</B></A> and <A HREF="vpfncs_8y3r.htm"><B>VideoPortDisableInterrupt</B></A> </LI>

	<LI><A HREF="vpfncs_0exz.htm"><B>VideoPortZeroDeviceMemory</B></A> and <A HREF="vpfncs_810n.htm"><B>VideoPortZeroMemory</B></A> </LI>

	<LI><A HREF="vpfncs_9fzb.htm"><B>VideoPortLogError</B></A> </LI>

	<LI><A HREF="vpfncs_3nzb.htm"><B>VideoPortStallExecution</B></A> for no more than a very few microseconds. If possible, <I>HwVidInterrupt</I> should avoid calling this function.</LI>

	<LI>All <B>VideoPortRead</B><I>Xxx</I> and <B>VideoPortWrite</B><I>Xxx</I> routines.</LI>
</UL>

<P><I>HwVidInterrupt</I> must <I>not</I> call any <B>VideoPort</B><I>Xxx</I> function that is not in the preceding list. Violation of this requirement will cause system failure (a "blue screen").</P>

<P>A <I>HwVidInterrupt</I> function cannot be pageable, nor can any function that it calls.</P>

<H4>See Also</H4>

<P><A HREF="vmpfncs_386f.htm"><I>HwVidSynchronizeExecutionCallback</I></A>, <A HREF="vpfncs_8y3r.htm"><B>VideoPortDisableInterrupt</B></A>, <A HREF="vpfncs_5axz.htm"><B>VideoPortEnableInterrupt</B></A>, <A HREF="vpfncs_9fzb.htm"><B>VideoPortLogError</B></A>, <B>VideoPortRead</B><I>Xxx</I>, <A HREF="vpfncs_3nzb.htm"><B>VideoPortStallExecution</B></A>, <A HREF="vpfncs_3huv.htm"><B>VideoPortSynchronizeExecution</B></A>, <B>VideoPortWrite</B><I>Xxx</I>, <A HREF="vpfncs_0exz.htm"><B>VideoPortZeroDeviceMemory</B></A>, <A HREF="vpfncs_810n.htm"><B>VideoPortZeroMemory</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: HwVidInterrupt"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
