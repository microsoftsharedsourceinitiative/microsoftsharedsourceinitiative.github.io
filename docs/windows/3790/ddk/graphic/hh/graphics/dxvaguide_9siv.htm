<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Calling the ProcAmp Control DDI from a User-Mode Component</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Calling the ProcAmp Control DDI from a User-Mode Component">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_calling_the_procamp_control_ddi_from_a_user_mode_component_gg"></A>Calling the ProcAmp Control DDI from a User-Mode Component</H3>

<P>The following steps explain how to call the ProcAmp Control DDI from a user-mode component, such as the VMR, when using the ProcAmp control sample functions. The sample functions use the pointers to the motion compensation callbacks defined in the <A HREF="ddstrcts_0qav.htm">DD_MOTIONCOMPCALLBACKS</A> structure:

<OL>
	<LI>Call the driver-supplied <I>DdMoCompGetGuids</I> callback function pointed to by <B>GetMoCompGuids</B> to get the list of devices supported by the driver.</LI>

	<LI>If the deinterlace container device GUID is present, call the <I>DdMoCompCreate</I> callback function pointed to by <B>CreateMoComp</B> to create an instance of this device. The container device GUID is defined as follows:
<PRE>DEFINE_GUID(DXVA_DeinterlaceContainerDevice, 0x0e85cb93,0x3046,0x4ff0,0xae,0xcc,0xd5,0x8c,0xb5,0xf0,0x35,0xfc);
</PRE>
</LI>

	<LI>Call the driver-supplied <I>DdMoCompRender</I> callback function pointed to by <B>RenderMoComp</B> with the <B>dwFunction </B>member of the <A HREF="ddstrcts_5jtz.htm">DD_RENDERMOCOMPDATA</A> structure<B> </B>that identifies a <I>ProcAmpControlQueryCaps </I>(defined in <I>dxva.h</I>) operation. The <B>lpInputData </B>member of DD_RENDERMOCOMPDATA passes the input parameters to the driver. The driver returns its output through the <B>lpOutputData</B> member of DD_RENDERMOCOMPDATA.</LI>

	<LI>For each ProcAmp adjustment property supported by the hardware, the VMR will call the driver-supplied <I>DdMoCompRender </I>callback function pointed to by <B>RenderMoComp</B> with the <B>dwFunction </B>member of the DD_RENDERMOCOMPDATA structure that identifies a <I>ProcAmpControlQueryRange </I>(defined in <I>dxva.h</I>) operation. The <B>lpInputData </B>member of DD_RENDERMOCOMPDATA passes the input parameters to the driver. The driver returns its output through the <B>lpOutputData </B>member of DD_RENDERMOCOMPDATA.</LI>

	<LI>After the VMR has determined the ProcAmp adjustment capabilities of the hardware, it calls <B>CreateMoComp</B> to create an instance of this ProcAmp control device. The ProcAmp control device GUID is defined as follows:
<PRE>DEFINE_GUID(DXVA_ProcAmpControlDevice, 0x9f200913,0x2ffd,0x4056,0x9f,0x1e,0xe1,0xb5,0x08,0xf2,0x2d,0xcf); 
</PRE>
</LI>

	<LI>The VMR then calls the ProcAmp control device’s <B>RenderMoComp</B> with the <B>dwFunction</B> member of DD_RENDERMOCOMPDATA containing the <I>DXVA_ProcAmpControlBltFnCode</I> constant (defined in <I>dxva.h</I>) for each ProcAmp adjusting operation.</LI>

	<LI>When the VMR no longer needs to perform any more ProcAmp control operations, it calls the <B>DestroyMoComp </B>member of DD_MOTIONCOMPCALLBACKS.</LI>

	<LI>The driver releases any resources used by the ProcAmp control device.</LI>
</OL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Calling%20the%20ProcAmp%20Control%20DDI%20from%20a%20User-Mode%20Component"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
