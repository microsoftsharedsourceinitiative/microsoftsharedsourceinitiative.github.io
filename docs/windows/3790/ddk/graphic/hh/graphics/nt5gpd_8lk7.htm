<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Pseudo-Vector Graphics Support</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Pseudo-Vector Graphics Support">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_pseudo_vector_graphics_support_gg"></A>Pseudo-Vector Graphics Support</H2>

<P>Devices that do not support true vector graphics can take advantage of the support that Unidrv provides for pseudo-vector graphics. When you use this feature, Unidrv downloads solid black rectangles and horizontal and vertical lines directly to a nonvector graphics device, reducing the overhead of rendering these figures on a raster surface. This also reduces the size of the output data, which can improve printer throughput for devices that do not handle raster data efficiently. </P>

<P>To benefit from this feature, a minidriver for a nonvector graphics device needs only to support the <A HREF="nt5gpd_2u5j.htm#ddk_cmdrectblackfill_gg"><B>CmdRectBlackFill</B></A> command. This functionality is disabled when the <B>Print Optimization</B> feature in the <B>Advanced</B> tab of the printer property pages is turned off.</P>

<P>The pseudo-vector graphics feature intercepts calls to <A HREF="ddifncs_8z3b.htm"><I>DrvBitBlt</I></A>, <A HREF="ddifncs_81ev.htm"><I>DrvStrokePath</I></A>, and <A HREF="ddifncs_7sx3.htm"><I>DrvLineTo</I></A>, to determine whether a solid black rectangle or a vertical or horizontal line is to be drawn. When Unidrv recognizes the figure to be drawn as a valid rectangle (one that is solid black, has no complex clipping, and does not use a ROP using the current destination bits), it is stored in a rectangle array instead of being drawn on the surface.</P>

<P>The most difficult aspect of the pseudo-vector graphics feature is avoiding z-order problems caused by objects that must be drawn on top of previously-drawn objects. The objects on top might need to erase or overwrite part of a black rectangle. If the black rectangle has already been downloaded to the device, an object drawn later on the system surface may not be drawn correctly. </P>

<P>The solution to this problem is to temporarily store a valid rectangle, rather than drawing it immediately on the surface. When a new object is to be drawn on the surface, Unidrv checks it to see whether the object overlaps with any black rectangle. If so, the overlapped portion of the black rectangle is drawn on the surface first, before the new object is drawn, thereby maintaining the correct z-ordering. Drawing the rectangle first also takes into account the possibility that the new object to be drawn might have a ROP associated with it, including one that interacts with the destination. </P>

<P>In addition, it is possible that the new object to be drawn contains complex clipping so that the resulting figure is no longer a rectangle. When the band or page rendering is complete, any remaining black rectangles can be directly downloaded to the device without causing any z-order problems. Unidrv maintains a list of up to 256 rectangles per band, concatenating BitBlt rectangles where possible.</P>

<H4>Pseudo-Vector Graphics Issues</H4>

<P>The pseudo-vector graphics feature may alter the z-ordering in certain situations, particularly when text is downloaded directly to the device and subsequent objects with complex clipping must interact with that text. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Pseudo-Vector%20Graphics%20Support"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
