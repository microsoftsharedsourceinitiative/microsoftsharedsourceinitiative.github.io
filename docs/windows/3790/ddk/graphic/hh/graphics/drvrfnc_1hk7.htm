<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IPrintOemPS::Command</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IPrintOemPS::Command">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iprintoemps_command_gg"></A>IPrintOemPS::Command</H1>

<P>The <B>IPrintOemPS::Command</B> method is used by rendering plug-ins for the Microsoft PostScript printer driver, in order to insert PostScript commands into the print job’s data stream.</P>

<PRE class=syntax><B>STDMETHOD
  (Command) (
    THIS_
    PDEVOBJ  </B><I>pdevobj</I><B>,
    DWORD  </B><I>dwIndex</I><B>,
    PVOID  </B><I>pData</I><B>,
    DWORD  </B><I>cbSize</I><B>,
    OUT DWORD  *</B><I>pdwResult</I><B>
    ) PURE;</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pdevobj</I></DT>

<DD>Caller-supplied pointer to a <A HREF="drvrfnc_4skn.htm">DEVOBJ</A> structure.</DD>

<DT><I>dwIndex</I></DT>

<DD>Caller-supplied value representing the current injection point within the print job’s data stream. For more information, see the following <B>Comments</B> section.</DD>

<DT><I>pData</I></DT>

<DD>Not used.</DD>

<DT><I>cbSize</I></DT>

<DD>Not used.</DD>

<DT><I>pdwResult</I></DT>

<DD>Receives a method-supplied value indicating the result of the insertion operation. If the insertion succeeds, this value should be ERROR_SUCCESS. If the insertion fails, the value should be one of the error codes defined in <I>winerror.h</I>. If the method does not attempt to insert data for a specified <I>dwIndex</I> value, the value should be ERROR_NOT_SUPPORTED.
</DD>
</DL>

<H4>Return Value</H4>

<P>The method must return one of the following values:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=27%>Return Value</TH>
<TH align=left width=73%>Definition</TH>
</TR>

<TR VALIGN="top">
<TD width=27%>S_OK</TD>
<TD width=73%>The operation succeeded.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>E_FAIL</TD>
<TD width=73%>The operation failed.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>E_NOTIMPL</TD>
<TD width=73%>The method is not implemented.</TD>
</TR>
</TABLE><BR>

<H4>Headers</H4>

<P>Declared in <I>prcomoem.h</I>. Include <I>prcomoem.h</I>.</P>

<H4>Comments</H4>

<P>The <B>IPrintOemPS::Command</B> method is used to insert PostScript commands into the data stream that is generated by the <A HREF="pscript_3jfr.htm">Microsoft PostScript Printer Driver</A>. If you want to provide this method, you must define it in a rendering plug-in.</P>

<P>When the <B>IPrintOemPS::Command</B> method is called, it’s <I>dwIndex</I> parameter specifies the current injection point within the print job’s data stream. The method should use this value to determine what operation, if any, to perform. Index values, which are defined in <I>wingdi.h</I>, are listed in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=50%>Index Value</TH>
<TH align=left width=50%>When Received</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_BEGINDEFAULTS</TD>
<TD width=50%>After the printer driver sends  %%<B>BeginDefaults</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_BEGINPAGESETUP</TD>
<TD width=50%>After the printer driver sends <B>%%BeginPageSetup</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_BEGINPROLOG</TD>
<TD width=50%>After the printer driver sends <B>%%BeginProlog</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_BEGINSETUP</TD>
<TD width=50%>After the printer driver sends <B>%%BeginSetup</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_BEGINSTREAM</TD>
<TD width=50%>Before the printer driver sends the first byte of the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_BOUNDINGBOX</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%BoundingBox:</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%BoundingBox:</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_COMMENTS</TD>
<TD width=50%>Before the printer driver sends <B>%%EndComments</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_DOCNEEDEDRES</TD>
<TD width=50%>After the printer driver sends <B>%%DocumentNeededResources:</B> to the data stream, along with resource information. If the <B>IPrintOemPS::Command</B> method sends resource information, it is appended to the stream after the driver’s resource information. Entry format is as follows:
<P><B>%%+ </B><I>ResourceType</I> <I>ResourceNames</I></P>

<P>The printer driver sends <B>%%DocumentNeededResources:</B> after sending <B>%%Trailer</B> section.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_DOCSUPPLIEDRES</TD>
<TD width=50%>After the printer driver sends <B>%%DocumentSuppliedResources:</B> to the data stream, along with resource information. If the <B>IPrintOemPS::Command</B> method sends resource information, it is appended to the stream after the driver’s resource information. Entry format is as follows:
<P><B>%%+ </B><I>ResourceType</I> <I>ResourceNames</I></P>

<P>The printer driver sends <B>%%DocumentSuppliedResources:</B> after sending <B>%%Trailer</B> section.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>PSINJECT_DOCUMENTPROCESSCOLORS</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&nbsp;</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%DocumentProcessColors:</B> <I>color</I> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%DocumentProcessColors:</B> <I>color</I> comment.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>PSINJECT_DOCUMENTPROCESSCOLORSATEND</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&nbsp;</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%DocumentProcessColors:</B> <B>(atend)</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%DocumentProcessColors:</B> <B>(atend)</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ENDDEFAULTS</TD>
<TD width=50%>Before the printer driver sends %%<B>EndDefaults</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ENDPAGECOMMENTS</TD>
<TD width=50%>Before the printer driver sends %%<B>EndPageComments</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ENDPAGESETUP</TD>
<TD width=50%>Before the printer driver sends <B>%%EndPageSetup</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ENDPROLOG</TD>
<TD width=50%>Before the printer driver sends <B>%%EndProlog</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ENDSETUP</TD>
<TD width=50%>Before the printer driver sends <B>%%EndSetup</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ENDSTREAM</TD>
<TD width=50%>After the printer driver sends the last byte of the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_EOF</TD>
<TD width=50%>After the printer driver sends <B>%%EOF</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_ORIENTATION</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%Orientation:</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%Orientation:</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PAGEBBOX</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%PageBoundingBox:</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%PageBoundingBox:</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PAGENUMBER</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%Page:</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%Page:</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PAGEORDER</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%PageOrder:</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%PageOrder:</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PAGES</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%Pages:</B> <I>nnn</I> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%Pages:</B> <I>nnn</I> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PAGESATEND</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%Pages:</B> <B>(atend)</B> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%Pages:</B> <B>(atend)</B> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PAGETRAILER</TD>
<TD width=50%>After the printer driver sends <B>%%PageTrailer</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PLATECOLOR</TD>
<TD width=50%>When the printer driver is ready to insert <B>%%PlateColor:</B> <I>color</I> into the data stream. Data supplied by <B>IPrintOemPS::Command</B> replaces the driver’s <B>%%PlateColor:</B> <I>color</I> comment.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_PSADOBE</TD>
<TD width=50%>Before the printer driver sends <B>%!PS-Adobe</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_SHOWPAGE</TD>
<TD width=50%>Before the printer driver sends a <B>showpage</B> command.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_TRAILER</TD>
<TD width=50%>After the printer driver sends <B>%%Trailer</B> to the data stream.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_VMRESTORE</TD>
<TD width=50%>After the printer driver sends a <B>restore</B> command. (The <B>IPrintOemPS::Command</B> method must resend all resources it sent after the last PSINJECT_VMSAVE, if the resources are going to be reused.)</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>PSINJECT_VMSAVE</TD>
<TD width=50%>Before the printer driver sends a <B>save</B> command. (See PSINJECT_VMRESTORE.)</TD>
</TR>
</TABLE><BR>

<P>The <B>IPrintOemPS::Command</B> method must call <A HREF="drvrfnc_41bb.htm"><B>IPrintOemDriverPS::DrvWriteSpoolBuf</B></A> to insert the PostScript commands.</P>

<P>If <B>IPrintOemPS::Command</B> methods are exported by multiple rendering plug-ins, the methods are called in the order that the plug-ins are specified for installation, each time the printer driver reaches an injection point. The following rules apply:

<UL>
	<LI>If the injection point is one for which supplied data <I>is appended to</I> the data provided by the printer driver, each plug-in is called and each plug-in is allowed to append PostScript commands.</LI>

	<LI>If the injection point is one for which supplied data <I>replaces</I> the data provided by the printer driver, the plug-ins are called until one <B>IPrintOemPS::Command</B> method supplies ERROR_SUCCESS for <I>dwResult</I>. No other plug-ins are called. If all plug-ins supply ERROR_NOT_SUPPORTED, the driver-supplied data is not replaced.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IPrintOemPS::Command"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
