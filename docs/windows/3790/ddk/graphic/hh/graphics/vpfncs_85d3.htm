<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VideoPortUnmapMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VideoPortUnmapMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_videoportunmapmemory_gg"></A>VideoPortUnmapMemory</H1>

<P>The <B>VideoPortUnmapMemory</B> function releases a mapping between a logical address range for the adapter and a virtual address range in the user-mode address space of a particular thread. This function is the complement of <A HREF="vpfncs_4otj.htm"><B>VideoPortMapMemory</B></A>.</P>

<PRE class=syntax><B>VP_STATUS
  VideoPortUnmapMemory(
    IN</B> <B>PVOID</B>  <I>HwDeviceExtension</I><B>,
    IN</B> <B>PVOID</B>  <I>VirtualAddress</I><B>,
    IN</B> <B>HANDLE</B>  <I>ProcessHandle</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the miniport driver's device extension.</DD>

<DT><I>VirtualAddress</I></DT>

<DD>Pointer to a virtual address within the mapped range to be released.</DD>

<DT><I>ProcessHandle</I></DT>

<DD>Should be set to zero, or to the process handle specified when the miniport driver called <B>VideoPortMapMemory</B>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>VideoPortUnmapMemory</B> returns NO_ERROR if the mapping was released. Otherwise, it returns ERROR_INVALID_PARAMETER.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P>A miniport driver cannot release a subrange of the mapping between a logical device range and the user-space virtual address range of its corresponding display driver. Whether the <I>VirtualAddress</I> parameter is the base virtual address for the mapped range that was returned by <B>VideoPortMapMemory</B>, or is an offset into that mapped virtual range, <B>VideoPortUnmapMemory</B> releases the mapping for the full range.</P>

<P>Callers of <B>VideoPortUnmapMemory</B> must be running at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="vpfncs_4otj.htm"><B>VideoPortMapMemory</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VideoPortUnmapMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
