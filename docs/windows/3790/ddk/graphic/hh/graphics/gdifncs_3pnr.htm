<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EngMapEvent</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EngMapEvent">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_engmapevent_gg"></A>EngMapEvent</H1>

<P>The <B>EngMapEvent</B> function maps a user-mode event object to kernel mode.</P>

<PRE class=syntax><B>PEVENT
  EngMapEvent(
    IN HDEV</B>  <I>hDev</I><B>,</B>
<B>    IN HANDLE</B>  <I>hUserObject</I><B>,</B>
<B>    IN PVOID</B>  <I>Reserved1</I><B>,</B>
<B>    IN PVOID</B>  <I>Reserved2</I>,
<B>    IN PVOID</B>  <I>Reserved3</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hDev</I></DT>

<DD>Handle to the physical device associated with the event. This is the GDI handle passed as the <I>hdev</I> parameter to the driver's <A HREF="ddifncs_13xj.htm"><I>DrvCompletePDEV</I></A> function.</DD>

<DT><I>hUserObject</I></DT>

<DD>Handle to the user-mode event to be mapped.</DD>

<DT><I>Reserved1</I></DT>

<DD>Is reserved for system use, and must be set to NULL.</DD>

<DT><I>Reserved2</I></DT>

<DD>Is reserved for system use, and must be set to NULL.</DD>

<DT><I>Reserved3</I></DT>

<DD>Is reserved for system use, and must be set to NULL.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>EngMapEvent</B> returns a pointer to an event object on success. Otherwise, it returns NULL.</P>

<H4>Headers</H4>

<P>Declared in <I>winddi.h</I>. Include <I>winddi.h</I>.</P>

<H4>Comments</H4>

<P>This function is available in Windows&nbsp;XP and later.</P>

<P>After successfully mapping the user event, <B>EngMapEvent</B> automatically sets the event object to the signaled state, attempts to satisfy as many waits as possible, and then resets the event object to the nonsignaled state.</P>

<P>A mapped event provides a mechanism by which an application can wait for a kernel-mode graphics operation to complete. The display driver or video miniport driver signals the application when it is done using the resource for which the event was mapped, thus freeing the application to use the resource.</P>

<P>Display and miniport drivers cannot wait on mapped events, but can set or clear them.</P>

<P>The driver can also perform its own cleanup by calling <A HREF="gdifncs_5m7b.htm"><B>EngUnmapEvent</B></A> on the event object returned by <B>EngMapEvent</B>.</P>

<H4>See Also</H4>

<P><A HREF="ddifncs_13xj.htm"><I>DrvCompletePDEV</I></A>, <A HREF="gdifncs_5m7b.htm"><B>EngUnmapEvent</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EngMapEvent"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
