<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VMR Video Processing</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VMR Video Processing">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_vmr_video_processing_gg"></A>VMR Video Processing</H2>

<P>The VMR can perform the following sequence of processing operations on the video before it is displayed. The VMR’s mixer component always performs these operations in the order listed. Color space conversion and aspect ratio correction are applied to all video streams; other operations are optional. The VMR performs only those operations that are requested by the video playback application. 

<UL>
	<LI>ProcAmp control adjustments</LI>

	<LI>Deinterlacing</LI>

	<LI>Aspect ratio correction</LI>

	<LI>Color space conversion</LI>

	<LI>Vertical or horizontal mirroring and alpha blending</LI>
</UL>

<P>Whenever possible, the VMR’s mixer combines as many of these processes as possible to reduce the overall memory bandwidth needed to process the video. The degree to which these processes can be combined is determined by the capabilities of the hardware.</P>

<P>The illustrations in this section show the video processing pipelines used by the VMR's mixer to process video during a ProcAmp control operation. The operations performed by the mixer depend on the capabilities of the hardware. In the illustrations, rectangles represent Direct3D® surfaces and circles represent Direct3D or DirectX VA operations. The illustrations show the video processing pipelines for the following capabilities:

<UL>
	<LI>Hardware that can perform color space conversion and horizontally resize the video image.</LI>

	<LI>Hardware that cannot perform color space conversion and cannot horizontally resize the video image, but can support YUV textures.</LI>

	<LI>Hardware that cannot perform color space conversion, cannot horizontally resize the video image, and cannot support YUV textures.</LI>
</UL>

<P>The output surface of the VMR’s processing pipeline is always a Direct3D render target. Applications are able to configure the VMR such that the output render target may also be a Direct3D texture or part of a Direct3D swap chain.</P>

<P>The following illustration shows the video processing pipelines used by the VMR to process <I>progressive</I> video when the ProcAmp control hardware is able to perform color space conversion and horizontally resize the video image. Usually, a video playback application does not request that the VMR perform alpha blending or vertical/horizontal mirroring of the video as it is displayed. The VMR is then able to incorporate all the video processing into a single stage. In this case, the first pipeline is used. If the application requests that the VMR perform alpha blending or vertical/horizontal mirroring of the video image prior to display, the VMR inserts an extra stage to the pipeline. In this case, the second pipeline is used.</P>

<P><IMG SRC="images/procamp1.gif" ALT="" BORDER=0></P>

<P><B>Hardware That Can Perform Color Space Conversion and Horizontally Resize the Video Image</B></P>

<P>The following illustration shows the video pipeline used by the VMR to process <I>progressive</I> video when the ProcAmp control hardware cannot perform color space conversion and cannot horizontally resize the video image during a ProcAmp adjustment operation (as indicated by the <B>DXVA_VideoProcess_YUV2RGB</B> and<B> DXVA_VideoProcess_StretchX</B> enumerators in <A HREF="dxvaref_8qef.htm">DXVA_VideoProcessCaps</A>), but does support YUV textures:</P>

<P><IMG SRC="images/procamp2.gif" ALT="" BORDER=0></P>

<P><B>Hardware That Cannot Perform Color Space Conversion and Cannot Horizontally Resize, But Can Support YUV Textures</B></P>

<P>The following illustration shows the video pipelines used by the VMR to process <I>progressive</I> video when the ProcAmp control hardware cannot perform color space conversion, cannot horizontally resize the video image during a ProcAmp adjustment operation (as indicated by the <B>DXVA_VideoProcess_YUV2RGB</B> and<B> DXVA_VideoProcess_StretchX</B> enumerators in <A HREF="dxvaref_8qef.htm">DXVA_VideoProcessCaps</A>), and does not support YUV textures. The VMR uses the first pipeline if the application does not request any alpha blending or mirroring of the video image. The VMR uses the second pipeline if the application requests either alpha blending or mirroring of the video image.</P>

<P><IMG SRC="images/procamp3.gif" ALT="" BORDER=0></P>

<P><B>Hardware That Cannot Perform Color Space Conversion, Cannot Horizontally Resize, and Cannot Support YUV Textures</B></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VMR%20Video%20Processing"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
