<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VideoPortMapMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VideoPortMapMemory">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_vrp_gg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_frame_buffer_gg_gly">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_bank_gg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_videoportmapmemory_gg"></A>VideoPortMapMemory</H1>

<P>The <B>VideoPortMapMemory</B> function remaps a bus-relative physical range of video memory into the corresponding display driver's virtual address space. This occurs in response to a <A HREF="JavaScript:hhobj_1.Click()">VRP</A> with the <B>IoControlCode</B> member set to <A HREF="virqs_4gx3.htm">IOCTL_VIDEO_MAP_VIDEO_MEMORY</A>.</P>

<PRE class=syntax><B>VP_STATUS
  VideoPortMapMemory(
    IN PVOID</B>  <I>HwDeviceExtension</I><B>,
    IN PHYSICAL_ADDRESS</B>  <I>PhysicalAddress</I><B>,
    IN OUT PULONG</B>  <I>Length</I><B>,
    IN PULONG</B>  <I>InIoSpace</I><B>,
    IN OUT PVOID</B>  <I>*VirtualAddress</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the miniport driver's device extension.</DD>

<DT><I>PhysicalAddress</I></DT>

<DD>Specifies the bus-relative base address of the range to be mapped.</DD>

<DT><I>Length</I></DT>

<DD>Pointer to a variable specifying the number of bytes of device memory to be mapped. <B>VideoPortMapMemory</B> returns the actual size of the memory mapped, which can be rounded to a system-determined alignment boundary, in this parameter. However, the miniport and display drivers cannot access memory outside the range delimited by the input value at <I>Length</I>.</DD>

<DT><I>InIoSpace</I></DT>

<DD>Indicates the location of the range. This parameter can be one of the following values, or certain bitwise combinations of these values:

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Value</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_DENSE</TD>
<TD width=52%>Obsolete.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_IO</TD>
<TD width=52%>The indicated address ranges are in system I/O space rather than in memory space. </TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_MEMORY</TD>
<TD width=52%>The indicated address ranges are in memory space rather than in system I/O space. </TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_P6CACHE</TD>
<TD width=52%>The processor aggregates a sequence of write operations and sends them to a given cache line. The processor then flushes the cache. This flag is meaningful only when VIDEO_MEMORY_SPACE_IO is <I>not</I> set.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_USER_MODE</TD>
<TD width=52%>Indicates that the address range specified should be mapped into user mode rather than kernel mode. This flag is meaningful only when VIDEO_MEMORY_SPACE_IO is <I>not</I> set.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>VirtualAddress</I></DT>

<DD>Is a handle to the process into which the memory must be mapped, or NULL. NULL specifies that the port driver should map the logical memory range at any location in the address space of the current process. Otherwise, this handle can be a value passed in a VRP by the miniport driver's corresponding display driver. On return from a successful call, <B>VideoPortMapMemory</B> resets the variable to the base virtual address to which it has mapped the given <I>PhysicalAddress</I>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>VideoPortMapMemory</B> returns NO_ERROR if the given logical range was successfully mapped into the display driver's virtual address space; otherwise, it returns ERROR_INVALID_PARAMETER.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P><B>VideoPortMapMemory</B> runs in kernel mode within the same context as the user-mode thread that initiated the call.</P>

<P><B>VideoPortMapMemory</B> should be used by miniport drivers to manage video adapters that allow the video <A HREF="JavaScript:hhobj_2.Click()">frame buffer</A> to be completely mapped at all times. That is, miniport drivers for adapters that are <I>not</I> restricted to using <A HREF="JavaScript:hhobj_3.Click()">banks</A> to map a slice at a time can use the more efficient <B>VideoPortMapMemory</B>. </P>

<P>Callers of <B>VideoPortMapMemory</B> must be running at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="virqs_4gx3.htm">IOCTL_VIDEO_MAP_VIDEO_MEMORY</A>, <A HREF="vstrcts_5gvb.htm">VIDEO_REQUEST_PACKET</A>, <A HREF="vpfncs_85d3.htm"><B>VideoPortUnmapMemory</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VideoPortMapMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
