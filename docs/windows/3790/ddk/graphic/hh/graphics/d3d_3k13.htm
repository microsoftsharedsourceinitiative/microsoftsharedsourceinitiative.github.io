<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Driver Functions to Support Direct3D</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Driver Functions to Support Direct3D">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_driver_functions_to_support_direct3d_gg"></A>Driver Functions to Support Direct3D</H2>

<P>A driver that supports Direct3D provides both Direct3D callback functions and DirectDraw DDI functions. The Direct3D DDI callbacks are prototyped as follows:</P>

<PRE class=syntax>typedef DWORD (APIENTRY *LPD3DHAL_MYFUNCTIONCB) (LPD3DHAL_MYFUNCTIONDATA);</PRE>

<P>In the preceding syntax:

<UL>
	<LI>LPD3DHAL_MYFUNCTIONCB points to a driver-implemented callback that can be called <B>MyFunction</B>. All callback names are pseudo-names decided upon by the display driver writer.</LI>

	<LI>LPD3DHAL_MYFUNCTIONDATA is a pointer to a D3DHAL_MYFUNCTIONDATA structure being passed to the callback. Callback parameter structures are characterized as follows:
<UL>
	<LI>The first member of every structure, <B>dwhContext</B>, is the context handle that describes the 3D context in which the callback should operate. The only exception to this rule is the D3DHAL_CONTEXTCREATEDATA structure.</LI>

	<LI>The last member of every structure is <B>ddrval</B>. This member is used to pass the callback's return value back to Direct3D so it can be returned to the calling application.</LI>
</UL>
</LI>
</UL>

<P>To determine how to initialize Direct3D callback functions, see <A HREF="d3d_4ffr.htm">Direct3D Driver Initialization</A>.</P>

<P>The following table lists the Direct3D callback functions that are implemented in a Direct3D driver. All callback functions are required except for <I>D3dValidateTextureStageState</I>, which is optional depending on the hardware capabilities.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=37%>Function</TH>
<TH align=left width=63%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_39yf.htm"><I>D3dContextCreate</I></A></TD>
<TD width=63%>Creates a context. </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_57l3.htm"><I>D3dContextDestroy</I></A></TD>
<TD width=63%>Destroys a context. </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_0gtj.htm"><I>D3dCreateSurfaceEx</I></A></TD>
<TD width=63%>Creates an association between a texture handle and a surface. </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_3mw7.htm"><I>D3dDestroyDDLocal</I></A></TD>
<TD width=63%>Destroys all the Direct3D surfaces previously created by <I>D3dCreateSurfaceEx</I> that belong to the same given local DirectDraw object. </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A></TD>
<TD width=63%>Renders primitives and returns updated state to Direct3D. </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_3r8n.htm"><I>D3dGetDriverState</I></A></TD>
<TD width=63%>Returns state information about the driver to DirectDraw and Direct3D runtimes. </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><A HREF="d3dfncs_33mv.htm"><I>D3dValidateTextureStageState</I></A></TD>
<TD width=63%>Performs texture stage state validation, which is required for all drivers that support texturing. </TD>
</TR>
</TABLE><BR>

<P>In order to support Direct3D, a driver must minimally support Microsoft DirectDraw® and must also implement certain DirectDraw DDI functions. The functions pertinent to Direct3D support are listed in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=38%>Function</TH>
<TH align=left width=62%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=38%><A HREF="ddfncs_4yav.htm"><I>DrvGetDirectDrawInfo</I></A></TD>
<TD width=62%>This function retrieves the capabilities of the graphics hardware. In this initialization function the driver indicates that it supports Direct3D.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><A HREF="ddfncs_0yhz.htm"><I>DdGetDriverInfo</I></A></TD>
<TD width=62%>The runtime queries this callback function with GUIDs for additional information about the driver. Several GUIDs pertain specifically to the driver's Direct3D support.</TD>
</TR>
</TABLE><BR>

<P>DirectDraw function and callback implementation details are discussed in <A HREF="ddraw_2yav.htm">DirectDraw</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Driver%20Functions%20to%20Support%20Direct3D"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
