<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GDI Data Types</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="GDI Data Types">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_gdi_data_types_gg"></A>GDI Data Types</H1>

<P>The data types defined in the following table appear in the device driver interface. Several of the listed data types have already been described in <A HREF="gdioview_0dnr.htm">GDI User Objects</A>. Data types that are pointers are marked with an asterisk (*).</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=23%>Graphics DDI Data Type</TH>
<TH align=left width=22%>Variable Name Prefix</TH>
<TH align=left width=55%>Definition</TH>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>BOOL </TD>
<TD width=22%>b</TD>
<TD width=55%>A 32-bit value that can be either TRUE or FALSE.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>BYTE</TD>
<TD width=22%>j</TD>
<TD width=55%>An 8-bit unsigned integer.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>BRUSHOBJ*</TD>
<TD width=22%>pbo</TD>
<TD width=55%>A pointer to a brush object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>CLIPLINE </TD>
<TD width=22%>cl</TD>
<TD width=55%>A clipline object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>CLIPOBJ*</TD>
<TD width=22%>pco</TD>
<TD width=55%>A pointer to a clipping object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>DHPDEV</TD>
<TD width=22%>dhpdev</TD>
<TD width=55%>A 32-bit handle, defined by the device driver, that identifies a physical device.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>DHSURF</TD>
<TD width=22%>dhsurf</TD>
<TD width=55%>A 32-bit handle, defined by the device driver, that identifies a device-managed surface.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FIX</TD>
<TD width=22%>fix</TD>
<TD width=55%>A fixed point number.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FLOATL</TD>
<TD width=22%>e</TD>
<TD width=55%>A floating point number.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FLOAT_LONG</TD>
<TD width=22%>el</TD>
<TD width=55%>A 32-bit overloaded value that is interpreted as either a LONG or FLOATL, depending on context.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FLONG</TD>
<TD width=22%>fl</TD>
<TD width=55%>A set of 32-bit flags.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FONTOBJ*</TD>
<TD width=22%>pfo</TD>
<TD width=55%>A pointer to a font object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FSHORT</TD>
<TD width=22%>fs</TD>
<TD width=55%>A set of 16-bit flags.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>FWORD</TD>
<TD width=22%>fw</TD>
<TD width=55%>A 16-bit signed integer.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>HBM </TD>
<TD width=22%>hbm</TD>
<TD width=55%>A 32-bit handle, defined by GDI, that identifies a bitmap.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>HPAL</TD>
<TD width=22%>hpal</TD>
<TD width=55%>A 32-bit handle, defined by GDI, that identifies a palette.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>HSURF</TD>
<TD width=22%>hsurf</TD>
<TD width=55%>A 32-bit handle, defined by GDI, that identifies a surface.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>LONG </TD>
<TD width=22%>l</TD>
<TD width=55%>A 32-bit signed integer.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>MIX</TD>
<TD width=22%>mix</TD>
<TD width=55%>A 32-bit quantity, whose lower 16 bits define foreground and background mix modes.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>PALOBJ*</TD>
<TD width=22%>ppalo </TD>
<TD width=55%>A pointer to a palette object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>PATHOBJ* </TD>
<TD width=22%>ppo</TD>
<TD width=55%>A pointer to a path object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>POINTE</TD>
<TD width=22%>pte</TD>
<TD width=55%>A point structure that consists of {FLOATL <B>x</B>, <B>y</B>;}.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>POINTFIX</TD>
<TD width=22%>ptfx</TD>
<TD width=55%>A point structure that consists of {FIX <B>x</B>, <B>y</B>;}.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>POINTQF</TD>
<TD width=22%>ptq</TD>
<TD width=55%>A point structure that consists of {LARGE_INTEGER <B>x</B>, <B>y</B>;}. Each member of this structure is a 64-bit coordinate in 28.36 format.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>PWSZ</TD>
<TD width=22%>pwsz</TD>
<TD width=55%>A pointer to a zero-terminated Unicode string.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>PVOID</TD>
<TD width=22%>pv</TD>
<TD width=55%>A pointer to a VOID, an undefined data type.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>RECTFX</TD>
<TD width=22%>rcfx</TD>
<TD width=55%>A rectangle structure that consists of {FIX <B>xLeft</B>, <B>yTop</B>, <B>xRight</B>, <B>yBottom</B>;}.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>ROP4</TD>
<TD width=22%>rop4</TD>
<TD width=55%>A 32-bit value that specifies how source, destination, pattern, and mask pixels are to be mixed.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>SHORT</TD>
<TD width=22%>s</TD>
<TD width=55%>A 16-bit signed integer.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>SIZEL</TD>
<TD width=22%>sizl</TD>
<TD width=55%>A structure that consists of {LONG <B>cx</B>, <B>cy</B>;}.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>STROBJ*</TD>
<TD width=22%>pstro</TD>
<TD width=55%>A pointer to a text string object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>SURFOBJ*</TD>
<TD width=22%>pso</TD>
<TD width=55%>A pointer to a surface object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>ULONG </TD>
<TD width=22%>ul</TD>
<TD width=55%>A 32-bit unsigned integer.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>USHORT</TD>
<TD width=22%>us</TD>
<TD width=55%>A 16-bit unsigned integer.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>XFORMOBJ*</TD>
<TD width=22%>pxo</TD>
<TD width=55%>A pointer to a coordinate transform object.</TD>
</TR>

<TR VALIGN="top">
<TD class=indent1 width=23%>XLATEOBJ*</TD>
<TD width=22%>pxlo</TD>
<TD width=55%>A pointer to a color translation object.</TD>
</TR>
</TABLE><BR>

<P>The parameter prefixes listed in the next table are used to modify variable name prefixes in accordance with their usage.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=20%>Prefix</TH>
<TH align=left width=80%>Parameter Usage</TH>
</TR>

<TR VALIGN="top">
<TD width=20%>i</TD>
<TD width=80%>An enumerated index</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>c</TD>
<TD width=80%>A count</TD>
</TR>

<TR VALIGN="top">
<TD width=20%>p</TD>
<TD width=80%>A pointer</TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: GDI%20Data%20Types"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
