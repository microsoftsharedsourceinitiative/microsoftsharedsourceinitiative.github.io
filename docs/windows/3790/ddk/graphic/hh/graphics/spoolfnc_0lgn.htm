<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>InitializePrintMonitor</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="InitializePrintMonitor">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_initializeprintmonitor_gg"></A>InitializePrintMonitor</H1>

<P>A print monitor's <B>InitializePrintMonitor</B> function initializes a print monitor.</P>

<PRE class=syntax><B>LPMONITOREX
  InitializePrintMonitor(
    LPWSTR  </B><I>pRegistryRoot<B>
    </B></I><B>);</B></PRE>

<P class=note><B>Note</B>&nbsp;&nbsp;This function is obsolete and supported for compatibility purposes only. New print monitors should implement <A HREF="spoolfnc_4m5j.htm"><B>InitializePrintMonitor2</B></A> so that they can be used with print server clusters.</P>

<H4>Parameters</H4>

<DL>
<DT><I>pRegistryRoot</I></DT>

<DD>Caller-supplied pointer to a string identifying a registry path that the print monitor can use to store monitor-specific values.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the operation succeeds, the function should return a pointer to a <A HREF="spoolfnc_53tz.htm">MONITOREX</A> structure. Otherwise the function should call <B>SetLastError</B> (described in the Platform SDK documentation) to set an error code, and return NULL.</P>

<H4>Headers</H4>

<P>Declared in <I>winsplp.h</I>. Include <I>winsplp.h</I>.</P>

<H4>Comments</H4>

<P>The <B>InitializePrintMonitor</B> function must be exported by <A HREF="provider_7msn.htm">language monitors</A> and by <A HREF="provider_897r.htm#ddk_port_monitor_server_dll_gg">port monitor server DLLs</A>. The function is called immediately after the monitor DLL is loaded, and is not called again until the DLL is reloaded. Its purposes are to allow the monitor to initialize itself, and to provide the spooler with pointers to internal monitor functions. Function pointers are contained in a <A HREF="spoolfnc_6xt3.htm">MONITOR</A> structure, which is referenced through the <A HREF="spoolfnc_53tz.htm">MONITOREX</A> function.</P>

<P>The <I>pRegistryRoot</I> parameter supplies a pointer a string representing the path to a <I>MonitorName</I> registry key, where <I>MonitorName</I> is the monitor name that was specified when the spooler's <B>AddMonitor</B> function was called to add the monitor. The monitor can use this key to store monitor-specific value names and values. When the spooler's <B>DeleteMonitor</B> function is called, the spooler deletes the <I>MonitorName</I> key and all values stored underneath it. (The <B>AddMonitor</B> and <B>DeleteMonitor</B> functions are described in the Platform SDK documentation.)</P>

<H4>See Also</H4>

<P><A HREF="spoolfnc_3nzb.htm"><B>InitializePrintMonitorUI</B></A>, <A HREF="spoolfnc_53tz.htm">MONITOREX</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: InitializePrintMonitor"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
