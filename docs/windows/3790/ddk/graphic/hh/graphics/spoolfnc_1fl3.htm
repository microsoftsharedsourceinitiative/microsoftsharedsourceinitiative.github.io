<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SendRecvBidiData</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SendRecvBidiData">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_sendrecvbididata_gg"></A>SendRecvBidiData</H1>

<P>A print provider DLL's <B>SendRecvBidiData</B> function supports bidirectional communication between an application and a printer or print server.</P>

<PRE class=syntax><B>DWORD</B> 
  <B>SendRecvBidiData(</B>
    <B>HANDLE</B>  <I>hPrinter</I>,
    <B>LPCWSTR</B>  <I>pAction</I>,
    <B>PBIDI_REQUEST_CONTAINER</B>  <I>pReqData</I>,
    <B>PBIDI_RESPONSE_CONTAINER  </B>*<I>ppResData</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hPrinter</I></DT>

<DD>Specifies a caller-supplied printer handle.</DD>

<DT><I>pAction</I></DT>

<DD>Pointer to a caller-supplied Unicode string that contains the requested action. The value of this parameter should be one of the BIDI_ACTION_<I>XXX</I> constants described in the Platform SDK documentation.</DD>

<DT><I>pReqData</I></DT>

<DD>Pointer to a caller-supplied <A HREF="spoolfnc_5q1z.htm">BIDI_REQUEST_CONTAINER</A> structure that contains the bidi request data.</DD>

<DT><I>ppResData</I></DT>

<DD>Is a caller-supplied pointer to a memory location that will receive the address of a caller-allocated <A HREF="spoolfnc_6rzb.htm">BIDI_RESPONSE_CONTAINER</A> structure. This structure contains the bidi response. 
</DD>
</DL>

<H4>Return Value</H4>

<P>If the operation succeeds, the <B>SendRecvBidiData</B> function returns ERROR_SUCCESS. Otherwise, it returns a Win32 error code.</P>

<H4>Headers</H4>

<P>Declared in <I>winsplp.h</I>. Include <I>winsplp.h</I>.</P>

<H4>Comments</H4>

<P>This function is available in Windows XP and later.</P>

<P>Print providers optionally can define a <B>SendRecvBidiData</B> function and include the function’s address in the <B>fpSendRecvBidiData</B> member of a Windows&nbsp;XP <A HREF="spoolfnc_8zl3.htm">PRINTPROVIDOR</A> structure.</P>

<P>The function’s <I>hPrinter</I> parameter uses the printer handle supplied by the <B>OpenPrinter</B> function. Applications access bidi APIs by way of the <B>IBidiSpooler</B> and <B>IBidiRequest</B> COM interfaces. When an application calls <B>IBidiSpooler</B>—&gt;<B>BidiDevice</B>, the COM implementation calls the <B>OpenPrinter</B> function to obtain a printer handle. Then, when the application calls <B>IBidiSpooler</B>—&gt;<B>SendRecvData</B>, the COM implementation calls the print provider's <B>SendRecvBidiData</B> function. For more information about these COM interfaces and <B>OpenPrinter</B>, see the Platform SDK documentation.</P>

<P>Typically, in a network print provider DLL, <B>SendRecvBidiData</B> calls the network APIs to obtain bidirectional data from the printer and then sends the response back to the caller.</P>

<P>A language monitor can call a print provider's <B>SendRecvBidiData</B> function outside a <B>StartDocPrinter</B>/<B>EndDocPrinter</B> function pair (both are described in the Platform SDK documentation). A print provider DLL’s <B>SendRecvBidiData</B> function must be able to handle such calls. </P>

<H4>See Also</H4>

<P><A HREF="spoolfnc_5q1z.htm">BIDI_REQUEST_CONTAINER</A>, <A HREF="spoolfnc_5q1z.htm">BIDI_REQUEST_CONTAINER</A>, <A HREF="spoolfnc_9h9j.htm"><B>SendRecvBidiDataFromPort</B></A>, <A HREF="spoolfnc_8zl3.htm">PRINTPROVIDOR</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SendRecvBidiData"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
