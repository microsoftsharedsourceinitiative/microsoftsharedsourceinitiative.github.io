<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DrvDeviceCapabilities</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DrvDeviceCapabilities">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_drvdevicecapabilities_gg"></A>DrvDeviceCapabilities</H1>

<P>A printer interface DLL's <B>DrvDeviceCapabilities</B> function returns requested information about a printer's capabilities.</P>

<PRE class=syntax><B>DWORD
  DrvDeviceCapabilities(</B>
    <B>HANDLE  </B><I>hPrinter</I><B>,</B>
    <B>PWSTR  </B><I>pDeviceName</I><B>,</B>
    <B>WORD  </B><I>iDevCap</I><B>,</B>
    <B>VOID  </B>*<I>pvOutput</I><B>,</B>
    <B>PDEVMODE  </B><I>pDevMode</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hPrinter</I></DT>

<DD>Caller-supplied printer handle.</DD>

<DT><I>pDeviceName</I></DT>

<DD>Caller-supplied pointer to a printer name string.</DD>

<DT><I>iDevCap</I></DT>

<DD>Caller-supplied bit flag indicating the information being requested. This can be one of the flags listed in the following table. (Flags are defined in <I>wingdi.h</I>.)

<TABLE>

<TR VALIGN="top">
<TH align=left width=40%>Flag</TH>
<TH align=left width=60%>Definition</TH>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_BINADJUST</TD>
<TD width=60%><I>Not used for NT-based operating systems.</I></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_BINNAMES</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with an array of string buffers, each 24 characters in length. Each array element should contain a NULL-terminated string representing a name for a paper source bin.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_BINS</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with a WORD array. Each array element should contain a DMBIN-prefixed constant (or customized value) representing a supported paper source bin.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_COLLATE</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be 1 if the printer supports collating; otherwise, the return value should be zero.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_COLORDEVICE</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be 1 if the printer supports color printing; otherwise, the return value should be zero.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_COPIES</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the maximum number of copies the printer can support.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_DATATYPE_PRODUCED</TD>
<TD width=60%><I>Not used for NT-based operating systems.</I></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_DRIVER</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the <B>dmDriverVersion</B> member of the driver’s internal <A HREF="grstrcts_6v8n.htm">DEVMODE</A> structure.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_DUPLEX</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be 1 if the printer supports duplex printing; otherwise, the return value should be zero.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_EMF_COMPLIANT</TD>
<TD width=60%><I>Not used for NT-based operating systems.</I></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_ENUMRESOLUTIONS</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with a LONG array. For each resolution supported by the printer, the function should return two long words (one for the <I>x</I> dimension and one for the <I>y</I> dimension) of the resolution, in dots per inch.
<P>The function's return value should be the number of resolutions supported.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of resolutions supported.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_EXTRA</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the <B>dmDriverExtra</B> member of the driver’s internal <A HREF="grstrcts_6v8n.htm">DEVMODE</A> structure.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_FIELDS</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the <B>dmFields</B> member of the driver’s internal <A HREF="grstrcts_6v8n.htm">DEVMODE</A> structure.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_FILEDEPENDENCIES</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with an array of string buffers, each 64 characters in length. Each array element should contain a NULL-terminated string representing a name for a file that must be installed with the driver.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MANUFACTURER</TD>
<TD width=60%><I>Not used for NT-based operating systems.</I></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MAXEXTENT</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function should return a POINTS structure (described in the Platform SDK documentation). The structure should contain the maximum allowable values for the <B>dmPaperWidth</B> (<I>x</I> dimension) and <B>dmPaperLength</B> (<I>y</I> dimension) members of the printer's DEVMODE structure.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MEDIAREADY</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with an array of string buffers, each 64 characters in length. Each array element should contain a NULL-terminated string representing a name for a paper form that is available for use.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MEDIATYPENAMES</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with an array of string buffers, each 64 characters in length. Each array element should contain a NULL-terminated string representing a name for a supported media type. 
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should simply return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MEDIATYPES</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with a DWORD array. Each array element should contain a DMMEDIA-prefixed constant (see the <A HREF="grstrcts_6v8n.htm">DEVMODE</A> structure) or customized value representing a supported media type. 
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should simply return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MINEXTENT</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function should return a POINTS structure (described in the Platform SDK documentation). The structure should contain the minimum allowable values for the <B>dmPaperWidth</B> (<I>x</I> dimension) and <B>dmPaperLength</B> (<I>y</I> dimension) members of the printer's DEVMODE structure.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_MODEL</TD>
<TD width=60%><I>Not used for NT-based operating systems.</I></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_NUP</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with a DWORD array. Each array element should contain an integer representing an N-up option (that is, each integer should represent a supported number of document pages per physical page).
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_ORIENTATION</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the number of degrees of rotation required to produce landscape orientation from portrait orientation. A value of zero indicates landscape orientation is not supported.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PAPERNAMES</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with an array of string buffers, each 64 characters in length. Each array element should contain a NULL-terminated string representing a name for a paper form.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PAPERS</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with a WORD array. Each array element should contain a DMPAPER-prefixed constant (or customized value) representing a supported paper form.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PAPERSIZE</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with a POINT array. Each array element should contain the <I>x</I> and <I>y</I> dimensions of a form's paper size, in 0.1 mm units, in portrait orientation.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PERSONALITY</TD>
<TD width=60%>The <I>pvOutput</I> parameter points to a buffer that the function should fill with an array of string buffers, each 32 characters in length. Each array element should contain a NULL-terminated string representing a printer description language supported by the printer.
<P>The function's return value should be the number of elements in the returned array.</P>

<P>If <I>pvOutput</I> is NULL, the function should just return the number of array elements required.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PRINTERMEM</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be an integer representing the amount of available printer memory, in kilobytes.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PRINTRATE</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be an integer representing the print rate, in the units specified for DC_PRINTRATEUNIT.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PRINTRATEPPM</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be an integer representing the print rate, in pages per minute.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_PRINTRATEUNIT</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should identify the units used for specifying the value returned for DC_PRINTRATE. One of the following constants must be specified: </P>

<P>PRINTRATEUNIT_PPM – pages/min.<BR>
PRINTRATEUNIT_CPS – chars./sec.<BR>
PRINTRATEUNIT_LPM – lines/min.<BR>
PRINTRATEUNIT_IPM – inches/min.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_SIZE</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the <B>dmSize</B> member of the driver’s internal <A HREF="grstrcts_6v8n.htm">DEVMODE</A> structure.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_STAPLE</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be TRUE if the printer supports stapling, and FALSE if the printer does not support stapling.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_TRUETYPE</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value can be zero, one, or more of the following flags:</P>

<P>DCTT_BITMAP: The device can print TrueType fonts as graphics.<BR>
DCTT_DOWNLOAD: The device can accept downloaded TrueType fonts.<BR>
DCTT_DOWNLOAD_OUTLINE: (Windows&nbsp;95/98/Me only) The device can download outline TrueType fonts.<BR>
DCTT_SUBDEV: The device can substitute device fonts for TrueType fonts.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>DC_VERSION</TD>
<TD width=60%>The <I>pvOutput</I> parameter is not used.
<P>The function's return value should be the <B>dmSpecVersion</B> member of the driver’s internal <A HREF="grstrcts_6v8n.htm">DEVMODE</A> structure.</P>
</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>pvOutput</I></DT>

<DD>Caller-supplied pointer to a buffer to receive function-supplied information. The buffer's use is dependent on the value received for the <I>iDevCap</I> parameter.</DD>

<DT><I>pDevMode</I></DT>

<DD>Caller-supplied pointer to a DEVMODE structure describing the current print job characteristics. If NULL, the function should use the driver's internal default DEVMODE structure.
</DD>
</DL>

<H4>Return Value</H4>

<P>The function's return value is dependent on the value received for the <I>iDevCap</I> parameter. If the received <I>iDevCap</I> value represents a capability that the driver does not support, or if an error is encountered, the function should return GDI_ERROR.</P>

<H4>Headers</H4>

<P>Declared in <I>winddiui.h</I>. Include <I>winddiui.h</I>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DrvDeviceCapabilities"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
