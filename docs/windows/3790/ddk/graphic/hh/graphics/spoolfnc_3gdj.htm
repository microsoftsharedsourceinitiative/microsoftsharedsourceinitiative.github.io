<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EnumPrintProcessorDatatypes</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EnumPrintProcessorDatatypes">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_enumprintprocessordatatypes_gg"></A>EnumPrintProcessorDatatypes</H1>

<P>A print processor's <B>EnumPrintProcessorDatatypes</B> function enumerates the data types that the print processor supports.</P>

<PRE class=syntax><B>BOOL
  EnumPrintProcessorDatatypes(
    LPWSTR  </B><I>pName</I><B>,
    LPWSTR  </B><I>pPrintProcessorName</I><B>,
    DWORD  </B><I>Level</I><B>,
    LPBYTE  </B><I>pDatatypes</I><B>,
    DWORD  </B><I>cbBuf</I><B>,
    LPDWORD  </B><I>pcbNeeded</I><B>,
    LPDWORD  </B><I>pcReturned<B>
    </B></I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pName</I></DT>

<DD>Caller-supplied pointer to a string representing name of the server on which the print processor is installed. If NULL, the server is the local system.</DD>

<DT><I>pPrintProcessorName</I></DT>

<DD>Caller-supplied pointer to a string representing the print processor name.</DD>

<DT><I>Level</I></DT>

<DD>Caller-supplied value indicating the type of the structures to be returned in the buffer pointed to by <I>pDatatypes</I>. This value must be 1, indicating that the structure is DATATYPES_INFO_1.</DD>

<DT><I>pDatatypes</I></DT>

<DD>Caller-supplied pointer to a buffer to receive an array of DATATYPES_INFO_1 structures, followed by a set of character strings representing data type names. The DATATYPES_INFO_1 structure is described in the Platform SDK documentation.</DD>

<DT><I>cbBuf</I></DT>

<DD>Caller-supplied value representing the size, in bytes, of the buffer pointed to by <I>pDatatypes</I>.</DD>

<DT><I>pcbNeeded</I></DT>

<DD>Caller-supplied pointer to a location to receive the minimum required size for the buffer pointed to by <I>pDatatypes</I>.</DD>

<DT><I>pcReturned</I></DT>

<DD>Caller-supplied pointer to a location to receive the number of DATATYPES_INFO_1 structures returned in the buffer pointed to by <I>pDatatypes</I>.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the operation succeeds, the function should return TRUE. If the operation fails, the function should call <B>SetLastError</B> to set an error code, and then return FALSE.</P>

<H4>Headers</H4>

<P>Declared in <I>winsplp.h</I>. Include <I>winsplp.h</I>.</P>

<H4>Comments</H4>

<P>Print processors are required to export an <B>EnumPrintProcessorDatatypes</B> function. The local print provider calls the function during initialization. The function is also called when an application calls the spooler's version of the same function.</P>

<P>The function must return an array of DATATYPES_INFO_1 structures, with each structure pointing to a string that represents a data type. The actual strings must also be included in the buffer, after the structure array. See <A HREF="provider_92uf.htm">Sample Print Processor</A> for an example.</P>

<P>The function should return the number of DATATYPES_INFO_1 structures returned (that is, the number of data types supported) in the location pointed to by <I>pcReturned</I>.</P>

<P>The function should return the minimum required buffer size in the location pointed to by <I>pcbNeeded</I>. If the supplied buffer is too small, the function should specify a value for <I>pcbNeeded</I>, set the error code to ERROR_INSUFFICIENT_BUFFER, and return FALSE.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EnumPrintProcessorDatatypes"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
