<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EMULATOR_ACCESS_ENTRY</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EMULATOR_ACCESS_ENTRY">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_emulator_access_entry_gg"></A>EMULATOR_ACCESS_ENTRY</H1>

<P>The EMULATOR_ACCESS_ENTRY structure specifies an element in the <B>EmulatorAccessEntries</B> array set up in the VIDEO_PORT_CONFIG_INFO structure by drivers of VGA-compatible (SVGA) adapters on x86-based NT-based operating system platforms.</P>

<PRE class=syntax>typedef struct _EMULATOR_ACCESS_ENTRY {
  ULONG  BasePort;
  ULONG  NumConsecutivePorts;
  EMULATOR_PORT_ACCESS_TYPE  AccessType;
  UCHAR  AccessMode;
  UCHAR  StringSupport;
  PVOID  Routine;
} EMULATOR_ACCESS_ENTRY, *PEMULATOR_ACCESS_ENTRY;</PRE>

<H4>Members</H4>

<DL>
<DT><B>BasePort</B></DT>

<DD>Specifies the bus-relative physical address of the I/O port or ports to be hooked out by the V86 emulator. This value and the range of ports must fall within an access range of I/O ports already claimed in the registry by <B>VideoPortGetAccessRanges</B> or <B>VideoPortVerifyAccessRanges</B>.</DD>

<DT><B>NumConsecutivePorts</B></DT>

<DD>Specifies the number of consecutive ports to be hooked by the V86 emulator, starting at <B>BasePort</B>. This value is determined by the width of each hooked I/O port. For example, if port addresses 0x3C0 and 0x3C1 are hooked as a single USHORT-addressable port, this value should be 1.</DD>

<DT><B>AccessType</B></DT>

<DD>Specifies the size of the data transferred through the given I/O port as one of <B>Uchar</B>, <B>Ulong</B>, or <B>Ushort</B>.</DD>

<DT><B>AccessMode</B></DT>

<DD>Specifies how the given I/O port can be accessed as one or a combination (ORed) of the following values:

<P>EMULATOR_READ_ACCESS<BR>
EMULATOR_WRITE_ACCESS


<P>The I/O port range must be accessible in at least one of the preceding modes.
</DD>

<DT><B>StringSupport</B></DT>

<DD>Indicates whether the driver-supplied <I>SvgaHwIoPortXxx</I> function supports string accesses in cases where many values of the given <B>AccessType</B> are "pumped" through an I/O port consecutively. If this member is set to TRUE, the <B>Routine</B> member must specify the entry point of a miniport driver-supplied<I> SvgaHwIoPortXxxString</I> function.</DD>

<DT><B>Routine</B></DT>

<DD>Pointer to the miniport driver's <I>SvgaHwIoPortXxx</I> that handles accesses to the port or ports described in this structure.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>miniport.h</I>. Include <I>miniport.h</I>.</P>

<H4>Comments</H4>

<P>VGA-compatible miniport drivers of SVGA video hardware in x86-based machines must define emulator access ranges, which a VGA-compatible miniport driver can set up with <B>VideoPortSetTrappedEmulatorPorts</B> to be accessed directly from full-screen MS-DOS™ applications for faster I/O. Such a driver must supply a set of <I>SvgaHwIoPortXxx</I> functions to validate any sequence of application-issued <B>IN</B>s, <B>INSB/INSW/INSD</B>s, <B>OUT</B>s, and/or <B>OUTSB/OUTSW/OUTSD</B>s to each such I/O port range.</P>

<P>Data in each EMULATOR_ACCESS_ENTRY-type element is used to determine which I/O ports (memory locations at which adapter registers are accessible) in the miniport driver's access ranges have been taken over (hooked out) by the V86 emulator on x86-based platforms. Values written to these locations by full-screen MS-DOS applications are trapped and forwarded to the miniport driver's corresponding <I>SvgaHwIoPortXxx</I> function for validation before they are written to or read from the video adapter. However, the miniport driver can enable the application to directly access particular I/O port ranges by calling <B>VideoPortSetTrappedEmulatorPorts</B> to improve performance.</P>

<H4>See Also</H4>

<P><I>SvgaHwIoPortXxx</I>, <A HREF="vstrcts_6h0n.htm">VIDEO_ACCESS_RANGE</A>, <A HREF="vstrcts_459j.htm">VIDEO_PORT_CONFIG_INFO</A>, <A HREF="vpfncs_22lj.htm"><B>VideoPortGetAccessRanges</B></A>, <A HREF="vpfncs_15ev.htm"><B>VideoPortSetTrappedEmulatorPorts</B></A>, <A HREF="vpfncs_0x7r.htm"><B>VideoPortVerifyAccessRanges</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EMULATOR_ACCESS_ENTRY"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
