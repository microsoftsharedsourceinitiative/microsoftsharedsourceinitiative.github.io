<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Port Monitors</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Port Monitors">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_port_monitors_gg"></A>Port Monitors</H2>

<P>Port monitors consist of user-mode DLLs. They are responsible for providing a communications path between the user-mode print spooler and the kernel-mode port drivers that access I/O port hardware. A port monitor typically uses the <B>CreateFile</B>, <B>WriteFile</B>, <B>ReadFile</B>, and <B>DeviceIOControl</B> functions, described in the Platform SDK documentation, to communicate with kernel-mode port drivers. Port monitors are also responsible for management and configuration of a server’s printer ports, as described in <A HREF="provider_6zvr.htm">Managing a Port</A>.</P>

<P>An NT-based-operating system user’s view of a “printer” is really a print queue, to which one or more physical printer devices can be connected. A port is the physical connection between the print queue and a single printer device. Each port monitor supports one or more instances of one or more types of ports. For example <I>localmon.dll</I>, the <A HREF="provider_3h9j.htm">sample port monitor</A>, can support all of a server’s local COM and LPT ports. (The print folder assigns ports to port monitors by calling the Platform SDK documentation’s <B>AddPrinter</B> function.)</P>

<P>For print queues representing multiple printer devices (through multiple ports), the spooler sends each print job to the first available port. If the port monitor indicates that a specified port is busy or has encountered an error, the spooler resubmits the job to the queue, specifying another port supported by the port monitor.</P>

<P>Besides <I>localmon.dll</I>, Windows&nbsp;2000 and later operating system versions provide several additional port monitors. The <I>Windows 2000 Server Resource Kit</I> describes each of these port monitors.</P>

<P>Customized port monitors can be written to support additional types of I/O port hardware.</P>

<P>For Windows&nbsp;2000 and later, each port monitor is divided into two DLLs:</P>



<DL>
<DT><A NAME="ddk_port_monitor_ui_dll_gg"></A><B>Port Monitor UI DLL</B></DT>

<DD>A port monitor’s user interface DLL contains user interface functionality and executes on print client systems. 

<P>This DLL must reside in the client system’s <I>System32</I> subdirectory.
</DD>

<DT><A NAME="ddk_port_monitor_server_dll_gg"></A><B>Port Monitor Server DLL</B></DT>

<DD>A port monitor’s server DLL contains port communications functionality and executes on print servers. It must not display a user interface.
</DD>
</DL>



<P>The UI DLL communicates with the server DLL by calling the spooler’s <A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> function.</P>

<P>A <A HREF="provider_3h9j.htm">sample port monitor</A> is included in this DDK.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Port%20Monitors"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
