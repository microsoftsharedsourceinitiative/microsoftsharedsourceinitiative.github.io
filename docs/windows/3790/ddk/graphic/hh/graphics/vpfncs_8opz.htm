<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VideoPortInterlockedExchange</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VideoPortInterlockedExchange">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_videoportinterlockedexchange_gg"></A>VideoPortInterlockedExchange</H1>

<P>The <B>VideoPortInterlockedExchange</B> function locks or unlocks a block of memory by setting a user-defined lock variable to TRUE or FALSE, respectively. It returns the previously-held value of the lock variable.</P>

<PRE class=syntax><B>LONG FASTCALL
  VideoPortInterlockedExchange(
    IN OUT PLONG</B>  <I>Target</I><B>,
    IN LONG</B>  <I>Value</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Target</I></DT>

<DD>Pointer to a user-defined lock variable that is used to control access to a memory buffer. </DD>

<DT><I>Value</I></DT>

<DD>Specifies the value to be stored in <I>Target</I>, which indicates whether the memory buffer is to be locked or unlocked. Use TRUE to lock the memory buffer, and FALSE to unlock the memory buffer. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>VideoPortInterlockedExchange</B> returns the value that <I>Target</I> had<I> </I>prior to the function call.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P><B>VideoPortInterlockedExchange</B> can be used to prevent DMA common-buffer contention in multiple-processor systems.</P>

<P>When the buffer is not being read from or written to, the lock variable should have a value of FALSE. A subsequent call to <B>VideoPortInterlockedExchange</B> with its <I>Target</I> parameter set to TRUE resets the lock variable to TRUE, after which this function returns FALSE. The buffer is now locked, preventing access by other threads. When the current operations on the buffer are complete, unlock the buffer with a call to <B>VideoPortInterlockedExchange</B> with its <I>Target</I> parameter set to FALSE.</P>

<P>Callers of <B>VideoPortInterlockedExchange</B> can be running at any IRQL.  </P>

<H4>See Also</H4>

<P><A HREF="vpfncs_0ht3.htm"><B>VideoPortInterlockedIncrement</B></A>, <A HREF="vpfncs_85k7.htm"><B>VideoPortInterlockedDecrement</B></A>, <A HREF="vpfncs_38rr.htm"><B>VideoPortGetCommonBuffer</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VideoPortInterlockedExchange"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
