<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Shader Code Format</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Shader Code Format">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_shader_code_format_gg"></A>Shader Code Format</H1>

<P>A command to create a pixel or vertex shader is composed of a group of shader codes. These codes instruct the driver on how to create the shader. The format of tokens within each shader code determines its uniqueness. A <A HREF="d3denum_0n53.htm">shader code token</A> is a DWORD with a specific format.</P>

<P>The DirectX3D runtime validates shader code before passing the code to a driver. When shader code arrives at the driver, the driver can interpret the code because the code's format is valid. The driver reads the shader code's tokens to interpret the code. </P>

<P>Each individual shader code is formatted with a general token layout. The first token must be a <A HREF="d3denum_4njb.htm">version token</A>. The version token provides the version number of the code and also determines whether the code is for a pixel or vertex shader. Shader content follows the version token and is composed of various <A HREF="d3denum_62sn.htm">instruction tokens</A>, perhaps intermingled with <A HREF="d3denum_9gdj.htm">comment tokens</A> and white space. Depending on the precise operation that an instruction token specifies, <A HREF="d3denum_4t9j.htm">label</A>, <A HREF="d3denum_5mp3.htm">destination parameter</A>, and <A HREF="d3denum_6jon.htm">source parameter tokens</A> can also be part of the shader content and follow an instruction token. For example, if the instruction token specifies an <A HREF="d3denum_8ejr.htm">ADD instruction</A>, the driver determines that one destination and two source parameter tokens follow the instruction token. An <A HREF="d3denum_8co7.htm">end token</A> completes the shader code. </P>

<P>Setup instructions (for example, D3DSIO_DCL and D3DSIO_DEF) contain uniquely formatted tokens.</P>

<P>Each shader instruction contains a specific token format. The <A HREF="d3denum_0dd3.htm">Shader Operation Codes</A> section describes the token format of each shader instruction. </P>

<P>Shader instructions start with the primary instruction and end with a D3DSIO_RET or D3DSIO_END instruction. Subroutines follow the D3DSIO_RET instruction.</P>

<P>See the Pixel Shader Reference and Vertex Shader Reference in the latest DirectX SDK documentation for more information about operations that can be specified in instruction tokens. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Shader%20Code%20Format"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
