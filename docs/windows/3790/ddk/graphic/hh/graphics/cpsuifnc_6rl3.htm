<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EXTPUSH</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EXTPUSH">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_extpush_gg"></A>EXTPUSH</H1>

<P>The EXTPUSH structure is used by CPSUI applications (including printer interface DLLs) for specifying an extended push button, which can be added to a property sheet page option. When the button is pushed, a new dialog can be displayed.</P>

<PRE class=syntax>typedef struct _EXTPUSH {
  WORD  cbSize;
  WORD  lags;
  LPTSTR  pTitle;
  union {
    DLGPROC  DlgProc;
    FARPROC  pfnCallBack;
  }
  ULONG_PTR  IconID;
  union {
    WORD  DlgTemplateID;
    HANDLE  hDlgTemplate;
  }
  ULONG_PTR  dwReserved[3];
} EXTPUSH, *PEXTPUSH;</PRE>

<H4>Members</H4>

<DL>
<DT><B>cbSize</B></DT>

<DD>Size, in bytes, of the EXTPUSH structure.</DD>

<DT><B>Flags</B></DT>

<DD>Bit flags, as described in the following table.

<TABLE>

<TR VALIGN="top">
<TH align=left width=21%>Flag</TH>
<TH align=left width=79%>Description</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_ICONID_AS_HICON</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, the <B>IconID</B> member contains an icon handle.<BR>
If not set, the <B>IconID</B> member contains an icon resource identifier.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_INCLUDE_SETUP_TITLE</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, CPSUI appends "Setup" to the string pointed to by <B>pTitle</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_NO_DOT_DOT_DOT</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, CPSUI does not append "<B>...</B>" to the string pointed to by <B>pTitle</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_OVERLAY_NO_ICON</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, CPSUI overlays its IDI_CPSUI_NO icon onto the icon identified by the <B>IconID</B> member.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_OVERLAY_STOP_ICON</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, CPSUI overlays the IDI_CPSUI_STOP icon onto the icon identified by the <B>IconID</B> member.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_OVERLAY_WARNING_ICON</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, CPSUI overlays its IDI_CPSUI_WARNING icon onto the icon identified by the <B>IconID</B> member.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_PUSH_TYPE_DLGPROC</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, the <B>DlgProc</B> and <B>DlgTemplateID/hDlgTemplate</B> members are valid.<BR>
If not set, the <B>pfnCallBack</B> member is valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>EPF_USE_HDLGTEMPLATE</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>&nbsp;</TD>
<TD width=79%>If set, <B>hDlgTemplate</B> contains a template handle.<BR>
If not set, <B>DlgTemplateID</B> contains a template resource identifier.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>pTitle</B></DT>

<DD>String identifier, representing the push button title. This can be a 32-bit pointer to a NULL-terminated string, or it can be a 16-bit string resource identifier with HIWORD set to zero.</DD>

<DT><B>DlgProc</B></DT>

<DD>DLGPROC-typed pointer to a dialog box procedure to process messages for the push button's dialog box. (The DLGPROC pointer type is described in the Platform SDK documentation.) For more information, see the following <B>Comments</B> section.

<P>If this pointer is supplied, EPF_PUSH_TYPE_DLGPROC must be set in <B>Flags</B>.
</DD>

<DT><B>pfnCallBack</B></DT>

<DD>Pointer to a <A HREF="cpsuifnc_86xz.htm">_CPSUICALLBACK</A>-typed callback function to handle the CPSUICB_REASON_PUSHBUTTON reason. For more information, see the following <B>Comments</B> section.

<P>If this pointer is supplied, EPF_PUSH_TYPE_DLGPROC must be cleared in <B>Flags</B>.
</DD>

<DT><B>IconID</B></DT>

<DD>One of the following icon identifiers:

<UL>
	<LI>An icon resource identifier. This can be application-defined, or it can be one of the CPSUI-supplied, IDI_CPSUI-prefixed icon resource identifiers.</LI>

	<LI>An icon handle. If a handle is specified, EPF_ICONID_AS_HICON must be set in the <B>Flags</B> member.</LI>
</UL>


<P>CPSUI displays the icon next to the push button. If this value is zero, an icon is not displayed.
</DD>

<DT><B>DlgTemplateID</B></DT>

<DD>DIALOG resource identifier, describing a dialog box template.

<P>Not used if EPF_USE_HDLGTEMPLATE is set in <B>Flags</B>.
</DD>

<DT><B>hDlgTemplate</B></DT>

<DD>Handle to a DLGTEMPLATE structure (described in the Platform SDK documentation).

<P>Used only if EPF_USE_HDLGTEMPLATE is set in <B>Flags</B>.
</DD>

<DT><B>dwReserved</B></DT>

<DD>Reserved, must be initialized to zero.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>compstui.h</I>. Include <I>compstui.h</I>.</P>

<H4>Comments</H4>

<P>An extended push button is a CPSUI-defined type of push button that can be associated with an <A HREF="cpsuifnc_48mf.htm">OPTITEM</A> structure. An OPTITEM structure can have one extended push button or one extended check box associated with it.</P>

<P>When you use the EXTPUSH structure to create a push button, you can optionally create an additional dialog box that pops up when the user clicks on the button. To create this dialog box, you should specify a pointer to a dialog box procedure in the <B>DlgProc</B> member, and include a dialog template specification in either the <B>DlgTemplateID</B> or the <B>hDlgTemplate</B> member.</P>

<P>If EPF_USE_HDLGTEMPLATE is set in <B>Flags</B>, CPSUI creates the dialog box by calling <B>DialogBoxIndirectParam</B> (described in the Platform SDK documentation), passing the contents of the <B>DlgProc</B> and <B>hDlgTemplate</B> members.</P>

<P>If EPF_USE_HDLGTEMPLATE is not set in <B>Flags</B>, CPSUI creates the dialog box by calling <B>DialogBoxParam</B> (described in the Platform SDK documentation), passing the contents of the <B>DlgProc</B> and <B>DlgTemplateID</B> members.</P>

<P>When the dialog box procedure is called with a <I>uMsg</I> value of WM_INITDIALOG, the <I>lParam</I> value is the address of a <A HREF="cpsuifnc_46uf.htm">CPSUICBPARAM</A> structure, with the <B>Reason</B> member set to CPSUICB_REASON_EXTPUSH. (For more information about the <I>uMsg</I> and <I>lParam</I> parameters, see <B>DialogProc</B> in the Platform SDK documentation.)</P>

<P>If you do not need CPSUI to display a dialog box when the user clicks on the button, you can specify the address of a <A HREF="cpsuifnc_86xz.htm">_CPSUICALLBACK</A>-typed callback function in the <B>pfnCallBack</B> member. When a user clicks on the button, CPSUI calls the callback function. The accompanying CPSUICBPARAM structure's <B>Reason</B> member will be set to CPSUICB_REASON_EXTPUSH.</P>

<H4>See Also</H4>

<P><A HREF="cpsuifnc_6ckn.htm">EXTCHKBOX</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EXTPUSH"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
