<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing Texture Stages</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Processing Texture Stages">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_processing_texture_stages_gg"></A>Processing Texture Stages</H3>

<P>The driver uses the <A HREF="d3denum_0jon.htm#ddk_d3ddp2op_texturestagestate_gg">D3DDP2OP_TEXTURESTAGESTATE</A> operation code and <A HREF="d3dstrct_2ihz.htm">D3DHAL_DP2TEXTURESTAGESTATE</A> structures that follow in the command stream to process changes to texture-stage states. For information on how the driver processes operation codes, see <A HREF="d3d_7fs7.htm">Command Stream</A>.</P>

<P>For example, when the operation code is D3DDP2OP_TEXTURESTAGESTATE, and the value of the <B>wStateCount</B> member of the <A HREF="d3dstrct_9w6f.htm">D3DHAL_DP2COMMAND</A> structure is seven, then seven D3DHAL_DP2TEXTURESTAGESTATE structures follow before the next D3DHAL_DP2COMMAND instruction is reached. Each D3DHAL_DP2TEXTURESTAGESTATE structure contains a <B>dwStage</B> member that specifies which stage of the texture blending pipeline needs to have a texture state change. The <B>TSState</B> member of the same structure specifies which state of the D3DTEXTURESTAGESTATETYPE enumerated type to set, and the <B>dwValue</B> member of the D3DHAL_DP2TEXTURESTAGESTATE structure contains the value to which the specified state should be set. </P>

<P>The process is the same for all render states, or any other type of instruction. If the <B>bCommand</B> member of the <A HREF="d3dstrct_9w6f.htm">D3DHAL_DP2COMMAND</A> structure is <A HREF="d3denum_0jon.htm#ddk_d3ddp2op_renderstate_gg">D3DDP2OP_RENDERSTATE</A>, then the structure to follow is a <A HREF="d3dstrct_8pif.htm">D3DHAL_DP2RENDERSTATE</A> structure and the information in that structure is used to set the render state accordingly. </P>

<P>Rather than using distinct Boolean-valued render states to control the coordinates, each render state value is a set of flags composed with the D3DWRAP_U and D3DWRAP_V flags (defined in <I>d3dtypes.h</I>). This change was made for compatibility with higher-dimensional textures.</P>

<P>Other useful information pertaining to multiple texture implementation can be found in the DirectX SDK documentation, in the sections covering blend equations, semantics of per-texture states, color operations, and alpha operations. For more information about the texture stage state types enabled for DirectX 6.0 and later versions, see the D3DTEXTUREOP and D3DTEXTUREFILTERTYPE enumerated types.</P>

<P class=note><B>Note</B>&nbsp;&nbsp;DirectX 9.0 and later applications can use values in the D3DSAMPLERSTATETYPE enumeration to control the characteristics of sampler texture-related render states. In DirectX 8.0 and earlier, these sampler states were included in the D3DTEXTURESTAGESTATETYPE enumeration. The runtime maps user-mode sampler states (D3DSAMP_<I>Xxx</I>) to kernel-mode D3DTSS_<I>Xxx</I> values so that drivers are not required to process user-mode sampler states. For more information on D3DSAMPLERSTATETYPE, see the latest DirectX SDK documentation.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Processing%20Texture%20Stages"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
