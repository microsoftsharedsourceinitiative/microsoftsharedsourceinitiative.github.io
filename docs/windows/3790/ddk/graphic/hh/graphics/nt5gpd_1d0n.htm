<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Preprocessor Directives</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Preprocessor Directives">
<META NAME="MS-HKWD" CONTENT="*Define Directive">
<META NAME="MS-HKWD" CONTENT="*Undefine Directive">
<META NAME="MS-HKWD" CONTENT="*Ifdef Directive">
<META NAME="MS-HKWD" CONTENT="*Elseifdef Directive">
<META NAME="MS-HKWD" CONTENT="*Else Directive">
<META NAME="MS-HKWD" CONTENT="*Endif Directive">
<META NAME="MS-HKWD" CONTENT="*Include Directive">
<META NAME="MS-HKWD" CONTENT="*SetPPPrefix Directive">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_preprocessor_directives_gg"></A>Preprocessor Directives</H3>

<P>GPD files can contain preprocessor directives, which can be used to control conditional parsing of sections within the GPD file. The following table describes the preprocessor directives that can be used in GPD files.</P>



<TABLE>

<TR VALIGN="top">
<TH align=left width=24%>Preprocessor<BR>
Directive</TH>
<TH align=left width=76%><BR>
Definition</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__define_gg"></A><B>*Define:</B> <I>SymbolName</I></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Defines a symbol.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__undefine_gg"></A><B>*Undefine:</B> <I>SymbolName</I></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Removes a previously defined symbol.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__ifdef_gg"></A><B>*Ifdef:</B> <I>SymbolName</I></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Indicates the beginning of a block of GPD file entries.
<P>If the specified symbol is defined, the GPD file entries between this directive and the next *<B>Ifdef</B>, *<B>Elseifdef</B>, *<B>Else</B>, or *<B>Endif</B> directive are processed by the GPD parser.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__elseifdef_gg"></A><B>*Elseifdef:</B> <I>SymbolName</I></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>If the specified symbol is defined, and the symbol specified by the previous *<B>Ifdef</B> or *<B>Elseifdef</B> directive is undefined, the GPD file entries between this directive and the next *<B>Ifdef</B>, *<B>Elseifdef</B>, *<B>Else</B>, or *<B>Endif</B> directive are processed by the GPD parser.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__else_gg"></A><B>*Else:</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>If the symbol specified by the previous *<B>Ifdef</B> or *<B>Elseifdef</B> directive is undefined, the GPD file entries between this directive and the next *<B>Ifdef</B> or *<B>Endif</B> directive are processed by the GPD parser.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__endif_gg"></A><B>*Endif:</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Indicates the end of a block of GPD file entries.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__include_gg"></A><B>*Include:</B><I> </I><B>"</B><I>FileName</I><B>"</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Specifies the name of an additional GPD file. See <A HREF="nt5gpd_66uf.htm">Using Multiple GPD Files in a Minidriver</A>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A NAME="ddk__setppprefix_gg"></A><B>*SetPPPrefix:</B><I> PrefixString</I></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Changes the prefix string prepended to preprocessor directives. See <A HREF="#ddk_changing_the_preprocessor_directive_prefix_gg">Changing the Preprocessor Directive Prefix</A>.</TD>
</TR>
</TABLE><BR>

<P>Conditional preprocessor directives can be nested. At each nesting level, the sequence for using conditional preprocessor directives is as follows:</P>

<P class=indent1><B>*Ifdef: </B><I>Symbol1</I><B><BR>
</B><I>    GPD file section<B><BR>
</B></I><B>*Elseifdef: </B><I>Symbol2</I><B><BR>
</B><I>    GPD file section<B><BR>
</B></I><B>*Elseifdef: </B><I>Symbo3</I><B><BR>
</B><I>    GPD file section<B><BR>
</B></I><B>*Elseifdef: </B><I>Symbol4</I><B><BR>
</B><I>    GPD file section<B><BR>
</B></I>...<B><BR>
*Else:<BR>
</B><I>    GPD file section<B><BR>
</B></I><B>*Endif:</B></P>

<P>For each *<B>Ifdef</B> directive used, *<B>Endif</B> is required. The *<B>Elseifdef</B> and *<B>Else</B> directives are optional. Each <I>GPD file section</I> can contain GPD file entries and, optionally, a nested sequence of conditional preprocessor directives.</P>

<P>All symbols defined using *<B>Define</B> remain defined until explicitly undefined using *<B>Undefine</B>.</P>

<P>The *<B>Include</B> directive allows you to specify the name of an additional GPD file. For more information, see <A HREF="nt5gpd_66uf.htm">Using Multiple GPD Files in a Minidriver</A>.</P>

<P>Note that the <A HREF="nt5gpd_5gdj.htm#ddk__ignoreblock_gg">*<B>IgnoreBlock</B></A> GPD entry does not affect preprocessor directives, because the preprocessor executes before the GPD parser.</P>



<H4><A NAME="ddk_changing_the_preprocessor_directive_prefix_gg"></A>Changing the Preprocessor Directive Prefix</H4>

<P>The *<B>SetPPPrefix</B> directive allows you to change the prefix used with preprocessor directives. That is, you can use this directive to replace the asterisk (<B>*</B>) character that prepends the preprocessor directives with another character or string.</P>

<P>For example, if your GPD file contains the following directive:</P>

<PRE>*SetPPPrefix: #SpecialPrefix#</PRE>

<P>then the preprocessor stops searching for preprocessor directives that begin with <B>*</B> and instead looks for directives beginning with <B>#SpecialPrefix#</B>. The following sequence temporarily changes the preprocessor prefix to <B>#SpecialPrefix#</B>, then restores it to <B>*</B>.</P>

<PRE>*SetPPPrefix: #SpecialPrefix#
#SpecialPrefix#Ifdef: WINNT_50
#SpecialPrefix#Include: "ExtraGPD.gpd"
#SpecialPrefix#Endif:
#SpecialPrefix#SetPPPrefix: *</PRE>

<P>The primary purpose of this feature is to allow GPD files written for future operating system versions to be compatible with Windows®&nbsp;2000. For example, suppose GPD files for a future version of the operating system can include GPD file entries that conflict with the asterisk-prefixed preprocessor directives supported by Windows&nbsp;2000. By changing the prefix, a GPD file written for the future operating system version can also be used with Windows&nbsp;2000. An example might be constructed as follows:</P>

<PRE>*Ifdef: WINNT_70
    *SetPPPrefix: #SpecialPrefix#
    *% Do special, OS-specific processing of
    *% GPD file entries that might conflict with
    *% asterisk-prefixed preprocessor directives.
    #SpecialPrefix#SetPPPrefix: *
*Endif:</PRE>

<P>Note that this technique only changes the prefix that the preprocessor looks for. Keywords recognized by the parser must always be preceded by an asterisk.</P>



<H4><A NAME="ddk_predefined_preprocessor_symbols_gg"></A>Predefined Preprocessor Symbols</H4>

<P>Microsoft defines the following preprocessor symbols.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=30%>Symbol</TH>
<TH align=left width=34%>Where Defined</TH>
<TH align=left width=36%>Definition</TH>
</TR>

<TR VALIGN="top">
<TD width=30%>WINNT_51</TD>
<TD width=34%>GPD preprocessor for Windows&nbsp;XP</TD>
<TD width=36%>Environment is Windows&nbsp;XP.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%>WINNT_50</TD>
<TD width=34%>GPD preprocessor for Windows&nbsp;XP and Windows 2000</TD>
<TD width=36%>Environment is Windows&nbsp;2000.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%>WINNT_40</TD>
<TD width=34%>GPD preprocessors for Windows&nbsp;XP, Windows&nbsp;2000, and Windows&nbsp;NT 4.0</TD>
<TD width=36%>Environment is Windows&nbsp;NT 4.0.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%>PARSER_VER_1.0</TD>
<TD width=34%>GPD preprocessors for Windows NT 4.0, Windows 2000, and Windows XP</TD>
<TD width=36%>GPD parser version 1.0</TD>
</TR>
</TABLE><BR>

<P>The WINNT_40, WINNT_50, and WINNT_51 symbols are useful for creating GPD files that are compatible with Windows NT® 4.0, Windows&nbsp;2000, and Windows XP. If, for example, Windows XP supports a printer capability that is not supported by Windows 2000, then that capability can be specified within a GPD file section that is bounded by <B>*Ifdef: WINNT_51</B> and <B>*Endif</B> directives.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Preprocessor%20Directives"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
