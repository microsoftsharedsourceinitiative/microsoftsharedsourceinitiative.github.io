<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Specifying the Location of Created Files</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Specifying the Location of Created Files">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Driver&nbsp;Development&nbsp;Tools:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_specifying_the_location_of_created_files_tools"></A>Specifying the Location of Created Files</H4>

<P>The location of the files produced by the Build utility depends on the value of certain environment variables and <I>sources</I> macros. In most cases, you will want to accept the default locations determined by the DDK build environments.</P>

<P>Libraries are placed in a subdirectory of the root directory of the DDK installation (<A HREF="build_ref_8ohf.htm">BASEDIR</A>). The subdirectory for libraries is three levels beneath the DDK installation directory, in the following path:</P>

<PRE class=syntax><B>lib\</B><I>Version</I><B>\</B><I>Cpu</I>
</PRE>

<P>Object files are placed in a subdirectory of the root directory where the binaries are being built.  The subdirectory's name always begins with <B>obj</B>, unless you have changed the value of <A HREF="build_ref_6mwj.htm">TARGETPATH</A> in your <I>sources</I> file to some other string (which is not recommended). This subdirectory is given the following name:</P>

<PRE class=syntax><B>obj</B><I>Type</I><B>_</B><I>Version</I><B>_</B><I>Cpu</I>
</PRE>

<P>The build logs are placed in the current directory, unless you specify a different directory with the <B>-j</B> command-line switch. There are three build log files: the command log, the warning log, and the error log. These files are given the following names:</P>

<PRE class=syntax><B>build</B><I>Type</I><B>_</B><I>Version</I><B>_</B><I>Cpu</I><B>.log</B>
<B>build</B><I>Type</I><B>_</B><I>Version</I><B>_</B><I>Cpu</I><B>.wrn</B>
<B>build</B><I>Type</I><B>_</B><I>Version</I><B>_</B><I>Cpu</I><B>.err</B>
</PRE>

<P>The elements of these directory and file names are as follows:

<DL>
<DT><I>Version</I></DT>

<DD>Indicates the version of Windows supported by the build environment: <B>w2k</B> for Windows&nbsp;2000, <B>wxp</B> for Windows&nbsp;XP, or <B>wnet</B> for Windows Server&nbsp;2003.</DD>

<DT><I>Cpu</I></DT>

<DD>Indicates the processor. For an x86 processor, this is <B>i386</B> when used in the path for library files, or <B>x86</B> when used in the directory for object files or in the build log file name. For an Itanium-based processor, this is <B>ia64</B>. For an AMD x86-64 processor, this is <B>amd64</B>.</DD>

<DT><I>Type</I></DT>

<DD>Indicates the build type: <B>fre</B> in the free build environment or <B>chk</B> in the checked build environment.
</DD>
</DL>

<P>For example, if you are building x86 binaries for Windows&nbsp;XP in the free build environment, the library files will be placed under BASEDIR in the subdirectory <I>lib\wxp\i386</I>, the object files will be placed under the build directory in the subdirectory <I>objfre_wxp_x86</I>, and the build logs will be placed in the current directory and given the file names <I>buildfre_wxp_x86.log</I>, <I>buildfre_wxp_x86.wrn</I>, and <I>buildfre_wxp_x86.err</I>.</P>

<P>Object file directories and log file names both contain the string <I>Type_Version_Cpu</I>. This string is stored in the build environments as the environment variable <A HREF="build_ref_80dv.htm">BUILD_ALT_DIR</A>. You can change this variable if you want to change the value of this string.</P>

<P>Because output files are placed in subdirectories that are specific to the build environment, you can keep your source files in a single directory tree and maintain free and checked build products for a variety of platforms under this one tree.</P>

<P>When building a DLL, you create not only the DLL itself, but also an import library that other images can use to reference functions that the DLL exports. In this situation, you might want to place the .<I>obj</I> files created for the DLL into a different directory from the .<I>lib</I> and .<I>exp</I> files. The macro <A HREF="build_ref_69df.htm">TARGETPATHLIB</A> specifies a location for <I>.lib</I> and <I>.exp</I> files created for DLLs. If you set TARGETPATHLIB to a different directory than TARGETPATH, you can put the DLL binary in one directory and place the .<I>lib</I> and <I>.exp</I> files in a different directory, where they will be available to other components. TARGETPATHLIB has no effect on binaries that are not DLLs. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Specifying%20the%20Location%20of%20Created%20Files"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
