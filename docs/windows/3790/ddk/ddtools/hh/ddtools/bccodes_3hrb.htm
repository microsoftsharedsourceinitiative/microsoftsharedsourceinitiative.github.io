<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Bug Check 0xDA:  SYSTEM_PTE_MISUSE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="bug check 0xDA">
<META NAME="MS-HKWD" CONTENT="SYSTEM_PTE_MISUSE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Driver&nbsp;Development&nbsp;Tools:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_bug_check_0xda_bug"></A>Bug Check 0xDA: SYSTEM_PTE_MISUSE</H1>

<P>The SYSTEM_PTE_MISUSE bug check has a value of 0x000000DA. This indicates that a PTE routine has been used in an improper way.</P>

<H4>Parameters</H4>

<P>The following parameters are displayed on the blue screen. Parameter&nbsp;1 indicates the type of violation. The meaning of the other parameters depends on the value of Parameter&nbsp;1.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=11%>Parameter 1</TH>
<TH align=left width=20%>Parameter 2</TH>
<TH align=left width=21%>Parameter 3</TH>
<TH align=left width=20%>Parameter 4</TH>
<TH align=left width=28%>Cause of Error</TH>
</TR>

<TR VALIGN="top">
<TD width=11%>0x01</TD>
<TD width=20%>The address of the internal lock tracking structure </TD>
<TD width=21%>The address of the memory descriptor list </TD>
<TD width=20%>The address of the duplicate internal lock tracking structure </TD>
<TD width=28%>The PTE mapping being freed is a duplicate. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x02</TD>
<TD width=20%>The address of the internal lock tracking structure </TD>
<TD width=21%>The number of PTEs the system thinks should be freed </TD>
<TD width=20%>The number of PTEs the driver is requesting to free </TD>
<TD width=28%>The number of PTE mappings being freed is incorrect. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x03</TD>
<TD width=20%>The address of the first internal tracking structure found </TD>
<TD width=21%>The PTE address the system thinks should be freed </TD>
<TD width=20%>The PTE address the driver is requesting to free </TD>
<TD width=28%>The PTE mapping address being freed is incorrect. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x04</TD>
<TD width=20%>The address of the internal lock tracking structure </TD>
<TD width=21%>The page frame number the system thinks should be first in the MDL </TD>
<TD width=20%>The page frame number that is currently first in the MDL </TD>
<TD width=28%>The first page of the mapped MDL has changed since the MDL was mapped. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x05</TD>
<TD width=20%>The address of the first internal tracking structure found </TD>
<TD width=21%>The virtual address the system thinks should be freed </TD>
<TD width=20%>The virtual address the driver is requesting to free </TD>
<TD width=28%>The start virtual address in the MDL being freed has changed since the MDL was mapped. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x06</TD>
<TD width=20%>The MDL specified by the driver </TD>
<TD width=21%>The virtual address specified by the driver </TD>
<TD width=20%>The number of PTEs to free (specified by the driver)</TD>
<TD width=28%>The MDL being freed was never (or is currently not) mapped. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x07</TD>
<TD width=20%>The starting PTE </TD>
<TD width=21%>The number of PTEs </TD>
<TD width=20%>Reserved    </TD>
<TD width=28%>The PTE range is being double-allocated. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x08</TD>
<TD width=20%>The starting PTE </TD>
<TD width=21%>The number of PTEs the caller is freeing </TD>
<TD width=20%>The number of PTEs the system thinks should be freed</TD>
<TD width=28%>The caller is asking to free an incorrect number of PTEs. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x09</TD>
<TD width=20%>The starting PTE </TD>
<TD width=21%>The number of PTEs the caller is freeing</TD>
<TD width=20%>The PTE index that the system thinks is already free</TD>
<TD width=28%>The caller is asking to free several PTEs, but at least one of them is not allocated. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x0A</TD>
<TD width=20%><B>1:</B> The driver requested "bugcheck on failure" in the MDL.
<P><B>0:</B> The driver did not request this.</P>
</TD>
<TD width=21%>The number of PTEs the caller is allocating</TD>
<TD width=20%>The type of PTE pool requested</TD>
<TD width=28%>The caller is asking to allocate zero PTEs. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x0B</TD>
<TD width=20%>The corrupt PTE</TD>
<TD width=21%>The number of PTEs the caller is allocating</TD>
<TD width=20%>The type of PTE pool requested</TD>
<TD width=28%>The PTE list is already corrupted at the time of this allocation. The corrupt PTE is below the lowest possible PTE address. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x0C</TD>
<TD width=20%>The corrupt PTE</TD>
<TD width=21%>The number of PTEs the caller is allocating</TD>
<TD width=20%>The type of PTE pool requested</TD>
<TD width=28%>The PTE list is already corrupted at the time of this allocation. The corrupt PTE is above the lowest possible PTE address. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x0D</TD>
<TD width=20%>The starting PTE </TD>
<TD width=21%>The number of PTEs the caller is freeing</TD>
<TD width=20%>The type of PTE pool</TD>
<TD width=28%>The caller is trying to free zero PTEs. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x0E</TD>
<TD width=20%>The starting PTE </TD>
<TD width=21%>The number of PTEs the caller is freeing</TD>
<TD width=20%>The type of PTE pool</TD>
<TD width=28%>The caller is trying to free PTEs, but the guard PTE has been overwritten. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x0F</TD>
<TD width=20%>The non-existent PTE</TD>
<TD width=21%>The number of PTEs the caller is trying to free</TD>
<TD width=20%>The type of PTE pool being freed</TD>
<TD width=28%>The caller is trying to free a non-existent PTE. The non-existent PTE is below the lowest possible PTE address. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x10</TD>
<TD width=20%>The non-existent PTE</TD>
<TD width=21%>The number of PTEs the caller is trying to free</TD>
<TD width=20%>The type of PTE pool being freed</TD>
<TD width=28%>The caller is trying to free a non-existent PTE. The non-existent PTE is above the highest possible PTE address. </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>0x11</TD>
<TD width=20%>The non-existent PTE </TD>
<TD width=21%>The number of PTEs the caller is trying to free</TD>
<TD width=20%>The type of PTE pool being freed</TD>
<TD width=28%>The caller is trying to free a non-existent PTE. The non-existent PTE is at the base of the PTE address space. </TD>
</TR>
</TABLE><BR>

<H4>Cause</H4>

<P>The error is indicated by the value of Parameter&nbsp;1.</P>

<P>A stack trace will identify the driver that caused the error. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Bug%20Check%200xDA:%20%20SYSTEM_PTE_MISUSE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
