<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>LINKLIBS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="LINKLIBS build macro">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Driver&nbsp;Development&nbsp;Tools:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_linklibs_tools"></A>LINKLIBS</H1>

<P>Use the LINKLIBS macro to specify the libraries that you need to link against.  </P>

<P class=note><B>Note</B>&nbsp;&nbsp;If you are building a DLL (TARGETTYPE=DYNLINK), and one directory is building a function, and a second directory is building a binary that will export that function, you need to use the LINKLIBS macro to specify the library built from the first directory within the <A HREF="build_ref_02k3.htm"><I>sources</I></A> file of the second directory. In all other cases, you should use <A HREF="build_ref_7wj7.htm">TARGETLIBS</A>.</P>

<P>When you are building a DLL, you could be using objects that you have built in combination with libraries from which you would like to export certain features. Any directory that requires the libraries built in another directory should use the LINKLIBS macro to specify them.</P>

<P>For example, suppose that in directory one you are compiling <I>first.lib</I>. In directory two, you are compiling <I>second.lib</I>. And in directory three, you are building a DLL that must export functions that are defined in the first two libraries. Then, in the <A HREF="build_ref_02k3.htm"><I>sources</I></A> of directory three, you should include something like the following:</P>

<PRE>LINKLIBS=$(TARGETPATH)\first.lib \
         $(TARGETPATH)\second.lib </PRE>

<P>This operation must be carefully done. The LINKLIBS macro requires that the library must be located in pass one of the build, because the Build utility builds the import libraries during pass one. You must structure your build in such a manner that the libraries are guaranteed to exist during pass one. You should <I>never</I> specify an import library in your LINKLIBS macro, primarily because you could end up exporting something that you imported from somebody else instead of what you actually had (perhaps with syntax errors or other problems). Problems resulting from such a mishap can be undetectable for some time.</P>

<P>As a result, it is almost always better to use TARGETLIBS. Use LINKLIBS only for cases that meet the following conditions: 

<UL>
	<LI>You are building a dynamic link.</LI>

	<LI>You are exporting something that is defined in some other component library that you also build.</LI>

	<LI>In your <I>dirs</I> file in the previous subdirectory, you have ordered it so that the component libraries are around before you build the dynamic link.</LI>
</UL>

<H4>See Also</H4>

<P><A HREF="build_use_4j5f.htm">Building on a Multiprocessor Computer</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: LINKLIBS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
