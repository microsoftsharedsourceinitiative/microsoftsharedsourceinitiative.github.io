<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CM_Request_Device_Eject_Ex</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="CM_Request_Device_Eject_Ex">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_cm_request_device_eject_ex_dr"></A>CM_Request_Device_Eject_Ex</H1>

<P>The <B>CM_Request_Device_Eject_Ex</B> function prepares a local or a remote device instance for safe removal, if the device is removable. If the device can be physically ejected, it will be.</P>

<PRE class=syntax><B>CMAPI</B> <B>CONFIGRET</B> <B>WINAPI</B>
  <B>CM_Request_Device_Eject_Ex(</B>
    <B>IN</B> <B>DEVINST</B>  <I>dnDevInst</I><B>,</B>
    <B>OUT</B> <B>PPNP_VETO_TYPE</B>  <I>pVetoType</I><B>,</B>
    <B>OUT</B> <B>LPTSTR</B>  <I>pszVetoName</I><B>,</B>
    <B>IN</B> <B>ULONG</B>  <I>ulNameLength</I><B>,</B>
    <B>IN</B> <B>ULONG</B>  <I>ulFlags</I>
    <B>IN</B> <B>HMACHINE</B>  <I>hMachine</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>dnDevInst</I></DT>

<DD>Caller-supplied device instance handle that is bound to the machine handle supplied by <I>hMachine</I>.</DD>

<DT><I>pVetoType</I></DT>

<DD>(<I>Optional</I>.) If not NULL, this points to a location that, if the removal request fails, receives a <A HREF="cfgmgrst_044y.htm">PNP_VETO_TYPE</A>-typed value indicating the reason for the failure.</DD>

<DT><I>pszVetoName</I></DT>

<DD>(<I>Optional</I>.) If not NULL, this is a caller-supplied pointer to a string buffer that receives a text string. The type of information this string provides is dependent on the value received by <I>pVetoType</I>. For information about these strings, see <A HREF="cfgmgrst_044y.htm">PNP_VETO_TYPE</A>.</DD>

<DT><I>ulNameLength</I></DT>

<DD>(<I>Optional</I>.) Caller-supplied value representing the length of the string buffer supplied by <I>pszVetoName</I>. This should be set to MAX_PATH.</DD>

<DT><I>ulFlags</I></DT>

<DD>Not used.</DD>

<DT><I>hMachine</I></DT>

<DD>Caller-supplied machine handle to which the caller-supplied device instance handle is bound.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the operation succeeds, the function returns CR_SUCCESS. Otherwise, it returns one of the CR_-prefixed error codes defined in <I>cfgmgr32.h</I>.</P>

<H4>Headers</H4>

<P>Declared in <I>cfgmgr32.h</I>. Include <I>cfgmgr32.h</I>.</P>

<H4>Comments</H4>

<P>If <I>pszVetoName</I> is NULL, the PnP Manager displays a message to the user indicating the device was removed or, if the request failed, identifying the reason for the failure. If <I>pszVetoName</I> is not NULL, the PnP Manager does not display a message. (Note, however, that for Windows&nbsp;2000 only, the PnP Manager displays a message even if <I>pszVetoName</I> is not NULL, if the device's CM_DEVCAP_DOCKDEVICE capability is set.)</P>

<P>For remote machines, this function only works for "dock" device instances. That is, the function can only be used remotely to undock a machine. In that case, the caller must have <I>SeUndockPrivilege</I>.</P>

<P>Callers of <B>CM_Request_Eject_Ex</B> sometimes require <B>SeUndockPrivilege</B> or <B>SeLoadDriverPrivilege</B>, as follows:

<UL>
	<LI>If the device's CM_DEVCAP_DOCKDEVICE capability is set (the device is a "dock" device), callers must have <B>SeUndockPrivilege</B>. (<B>SeLoadDriverPrivilege</B> is not required.)</LI>

	<LI>If the device's CM_DEVCAP_DOCKDEVICE capability is not set (the device is not a "dock" device), <I>and</I> if the calling process is either not interactive or is running in a multi-user environment in a session not attached to the physical console (such as a remote Terminal Services session) callers of this function must have <B>SeLoadDriverPrivilege</B>.</LI>
</UL>

<P>(Privileges are described in the Platform SDK documentation.)</P>

<P>For information about using device instance handles that are bound to a local or a remote machine, see <A HREF="cfgmgrfn_9zw2.htm"><B>CM_Get_Child_Ex</B></A>.</P>

<H4>See Also</H4>

<P><A HREF="cfgmgrfn_9zw2.htm"><B>CM_Get_Child_Ex</B></A>, <A HREF="cfgmgrfn_029e.htm"><B>CM_Request_Device_Eject</B></A>, <A HREF="cfgmgrfn_55v6.htm"><B>CM_Query_And_Remove_SubTree</B></A>, <A HREF="cfgmgrfn_4t0y.htm"><B>CM_Query_And_Remove_SubTree_Ex</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: CM_Request_Device_Eject_Ex"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
