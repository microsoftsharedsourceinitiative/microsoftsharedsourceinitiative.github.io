<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Registering a Class Co-installer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Registering a Class Co-installer">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_registering_a_class_co_installer_dg"></A>Registering a Class Co-installer</H2>

<P>To register a co-installer for every device of a particular setup class, create a registry entry like the following under the <B>HKLM\System\CurrentControlSet\Control\CoDeviceInstallers</B> subkey: </P>

<PRE>{<I>setup-class-GUID</I>}: REG_MULTI_SZ : "<I>Xyz</I>CoInstall.dll,<I>XyzCoInstallEntryPoint</I>\0\0"</PRE>

<P>The system creates the <B>CoDeviceInstallers</B> key. <I>Setup-class-GUID</I> specifies the GUID for the device setup class. If the co-installer applies to more than one class of devices, create a separate value entry for each setup class.</P>

<P>You must not overwrite other co-installers that have been previously written to the <I>setup-class-GUID</I> key. Read the key, append your co-installer string to the REG_MULTI_SZ list, and write the key back to the registry.</P>

<P>If you omit the <I>CoInstallEntryPoint</I>, the default is CoDeviceInstall. </P>

<P>The co-installer DLL must also be copied to the system directory.</P>

<P>The class co-installer is available to be called for relevant devices and services once the file has been copied and the registry entry is made.</P>

<P>Rather than manually creating the registry entry to register a class co-installer, you can register it using an INF file like the following:</P>

<PRE>[version]
signature = "$Windows NT$"
 
[DestinationDirs]
DefaultDestDir = 11    // DIRID_SYSTEM
 
[DefaultInstall]
CopyFiles = @classXcoinst.dll
AddReg = CoInstaller_AddReg
 
[CoInstaller_AddReg]
HKLM,System\CurrentControlSet\Control\CoDeviceInstallers, \
 {<I>setup-class-GUID</I>},0x00010008, "classXcoinst.dll,classXCoInstaller"
; above line uses the line continuation character (\)</PRE>

<P>This sample INF copies the file <I>classXcoinst.dll</I> to the system directory and makes an entry for the <I>setup-class-GUID</I> class under the <B>CoDeviceInstallers</B> key. The entry in the <I>Xxx</I>_AddReg section specifies two flags: the "00010000" flag specifies that the entry is a REG_MULTI_SZ, and the "00000008" flag specifies that the new value is to be appended to any existing value (if the new value is not already present in the string).</P>

<P>Such an INF that registers a class co-installer can be activated by a right-click install or through an application that calls <B>SetupInstallFromInfSection</B>.</P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Registering%20a%20Class%20Co-installer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
