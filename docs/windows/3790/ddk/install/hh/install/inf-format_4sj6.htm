<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>INF BitReg Directive</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="INF BitReg Directive">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_software_key_kg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_hardware_key_kg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_inf_bitreg_directive_dr"></A>INF BitReg Directive</H1>

<P><B>[</B><I>DDInstall</I><B>]</B> | <BR>
<B>[</B><I>DDInstall</I><B>.HW]</B> | <BR>
<B>[</B><I>DDInstall</I><B>.CoInstallers]</B> | <BR>
<B>[ClassInstall32]</B> | <BR>
<B>[ClassInstall32.ntx86]</B> | <BR>
<B>[ClassInstall32.ntia64]</B> <BR>
&nbsp;<BR>
<B>BitReg=</B><I>bit-registry-section</I>[<B>,</B><I>bit-registry-section</I>]...<BR>
<B>&nbsp;</B> <BR>
<B>&nbsp;</B> <BR>
</P>

<P>A <B>BitReg</B> directive references one or more INF-writer-defined sections used to set or clear bits within an existing REG_BINARY-type value entry in the registry. However, this directive is very rarely used in device/driver INF files.</P>

<P>A <B>BitReg</B> directive can be specified under any of the sections shown in the formal syntax statement above. This directive also can be specified under any of the following INF-writer-defined sections: 

<UL>
	<LI>A <I>service</I><I>—</I><I>install-section</I> or <I>event</I><I>—</I><I>log-install</I> section referenced by the <B>AddService</B> directive in a <I>DDInstall</I><B>.Services</B> section</LI>

	<LI>An <I>add</I><I>—</I><I>interface-section</I> referenced by the <B>AddInterface</B> directive in a <I>DDInstall</I><B>.Interfaces</B> section </LI>

	<LI>An <I>install-interface-section</I> referenced in an <B>InterfaceInstall32</B> section</LI>
</UL>

<H4>Comments</H4>

<P>Each<I>bit-registry-section</I> name must be unique to the INF file, but it can be referenced by <B>BitReg</B> directives in other sections of the same INF. Each INF-writer-created section name must be unique within the INF and must follow the general rules for defining section names. These rules are described in <A HREF="inf-format_7soi.htm">General Syntax Rules for INF Files</A>. For information about how to use the system-defined <B>.nt</B>, <B>.ntx86</B>, and <B>.ntia64</B> extensions, see <A HREF="create-inf_9xpj.htm">Creating INF Files for Multiple Platforms and Operating Systems</A>. </P>

<P>Each named section referenced by an <B>BitReg</B> directive has the following form:</P>

<P><B>[</B><I>bit-registry-section</I><B>]<BR>
</B><I>reg-root</I><B>,</B> [<I>subkey</I>]<B>,</B> <I>value-entry-name</I><B>,</B> [<I>flags</I>]<B>,</B> <I>byte-mask</I><B>,</B> <I>byte-to-modify</I><BR>
<I>reg-root</I><B>,</B> [<I>subkey</I>]<B>,</B> <I>value-entry-name</I><B>,</B> [<I>flags</I>]<B>,</B> <I>byte-mask</I><B>,</B> <I>byte-to-modify</I><BR>
 ...</P>

<P>A <I>bit-registry-section</I> can have any number of entries, each on a separate line. </P>

<H4>BitReg-Referenced Section Entries</H4>

<DL>
<DT><I>reg-root</I></DT>

<DD>Identifies the root of the registry tree for other values supplied in this entry. The value can be one of the following:

<DL>
<DT><B>HKCR</B></DT>

<DD>Abbreviation for <B>HKEY_CLASSES_ROOT</B>.</DD>

<DT><B>HKCU</B></DT>

<DD>Abbreviation for <B>HKEY_CURRENT_USER</B>.</DD>

<DT><B>HKLM</B></DT>

<DD>Abbreviation for <B>HKEY_LOCAL_MACHINE</B>.</DD>

<DT><B>HKU</B></DT>

<DD>Abbreviation for <B>HKEY_USERS</B>.</DD>

<DT><B>HKR</B></DT>

<DD>Relative root – that is, keys specified using this abbreviation are relative to the registry key associated with the INF section in which this <B>BitReg</B> directive appears, as indicated in the following table.

<TABLE>

<TR VALIGN="top">
<TH align=left width=47%>INF Section Containing BitReg Directive</TH>
<TH align=left width=53%>Registry Key Referenced by HKR</TH>
</TR>

<TR VALIGN="top">
<TD width=47%><A HREF="inf-format_2k8i.htm">INF<I> DDInstall </I>section</A> </TD>
<TD width=53%>The device's <A HREF="JavaScript:hhobj_1.Click()">software key</A> </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><A HREF="inf-format_5k6q.htm">INF<I> DDInstall</I><B>.HW</B> section</A> </TD>
<TD width=53%>The device's <A HREF="JavaScript:hhobj_2.Click()">hardware key</A> </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><A HREF="inf-format_6nle.htm">INF<I> DDInstall</I><B>.Services</B> section</A> </TD>
<TD width=53%>The <B>Services</B> key</TD>
</TR>
</TABLE><BR>



<P>Note that <B>HKR</B> cannot be used in an <I>bit-registry-section</I> referenced from an <A HREF="inf-format_33ea.htm">INF <B>DefaultInstall</B> section</A>.

</DD>
</DL>


<P>For more information about driver information stored under the <B>HKEY_LOCAL_MACHINE</B> root, see <A HREF="install-over_6e3r.htm">Driver Information in the Registry</A>.
</DD>

<DT><I>subkey</I></DT>

<DD>This optional value, expressed either as a <B>%</B><I>strkey</I><B>%</B> token defined in a <B>Strings</B> section of the INF or as a registry path under the given <I>reg-root</I> (<I>key1</I><B>\</B><I>key2</I><B>\</B><I>key3</I>...), specifies the key containing the value entry to be modified. </DD>

<DT><I>value-entry-name</I></DT>

<DD>Specifies the name of an existing REG_BINARY-type value entry in the (existing) subkey to be modified. It can be expressed either as <B>"</B><I>quoted string</I><B>"</B> or as a <B>%</B><I>strkey</I><B>%</B> token that is defined in the INF's <B>Strings</B> section. </DD>

<DT><I>flags</I></DT>

<DD>This optional hexadecimal value, expressed as an ORed bitmask of system-defined low word and high word flag values, specifies whether to clear or set the bits specified in the given <I>byte-mask</I>. Its default value is zero, meaning clear the bits in the 64-bit section of the registry. Specify one to set the bits. Bitmask values for each of these flags are as follows:

<DL>
<DT><B>0x00000000</B> (FLG_BITREG_CLEARBITS)</DT>

<DD>Clear the bits specified by <I>byte-mask</I>.</DD>

<DT><B>0x00000001</B> (FLG_BITREG_SETBITS)</DT>

<DD>Set the bits specified by <I>byte-mask</I>.</DD>

<DT><B>0x00004000</B> (FLG_BITREG_32BITKEY) </DT>

<DD>(<I>Windows XP and later.</I>) Make the specified change in the 32-bit registry. If not specified, the change is made to the native registry.
</DD>
</DL>
</DD>

<DT><I>byte-mask</I></DT>

<DD>This byte-sized mask, expressed in hexadecimal notation, specifies which bits to clear or set in the current value of the given <I>value-entry-name</I>. </DD>

<DT><I>byte-to-modify</I></DT>

<DD>This byte-sized value, expressed in decimal, specifies the zero-based index of the byte within the REG_BINARY-type value to be modified. 
</DD>
</DL>

<H4>Comments</H4>

<P>The value of an existing REG_BINARY-type value entry also can be modified by simply overwriting its current value within an add-registry section elsewhere in the INF file. For more information about add-registry sections, see the reference for the <A HREF="inf-format_2v02.htm"><B>AddReg</B></A> directive. </P>

<P>Using a <B>BitReg</B> directive requires the definition of another INF file section. However, the value of an existing REG_BINARY-type value entry can be modified bit-by-bit in such a section, thereby preserving the values of all remaining bits. </P>

<H4>Examples</H4>

<P>These examples show a bit-registry section for a fictional application.</P>

<PRE>[AppX_BitReg]
; set first bit of byte 0 in ProgramData value entry
HKLM,Software\AppX,ProgramData,1,0x01,0 
; preceding would change value 30,00,10 to 31,00,10
 
; clear high bit of byte 2 in ProgramData value entry
HKLM,Software\AppX,ProgramData,,0x80,2
; preceding would change value 30,00,f0 to 30,00,70
 
; set second and third bits of byte 1 in ProgramData value entry
HKLM,Software\AppX,ProgramData,1,0x06,1
; preceding would change value 30,00,f0 to 30,06,f0</PRE>

<H4>See Also</H4>

<P><A HREF="inf-format_3omq.htm"><B>AddInterface</B></A>, <A HREF="inf-format_2v02.htm"><B>AddReg</B></A>, <A HREF="inf-format_79te.htm"><B>AddService</B></A>, <A HREF="inf-format_6p9u.htm"><B>ClassInstall32</B></A>, <A HREF="inf-format_2k8i.htm"><I>DDInstall</I></A>, <A HREF="inf-format_65bm.htm"><I>DDInstall</I><B>.CoInstallers</B></A>, <A HREF="inf-format_5k6q.htm"><I>DDInstall</I><B>.HW</B></A>, <A HREF="inf-format_3o8i.htm"><B>InterfaceInstall32</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: INF%20BitReg%20Directive"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
