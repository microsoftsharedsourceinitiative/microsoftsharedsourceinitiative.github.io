<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetupDiCreateDeviceInfo</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SetupDiCreateDeviceInfo">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_instance_id_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_setupdicreatedeviceinfo_dr"></A>SetupDiCreateDeviceInfo</H1>

<P>The <B>SetupDiCreateDeviceInfo</B> function creates a new device information element and adds it as a new member to the specified device information set.</P>

<PRE class=syntax><B>WINSETUPAPI BOOL WINAPI</B>
  <B>SetupDiCreateDeviceInfo(</B>
    <B>IN HDEVINFO</B>  <I>DeviceInfoSet</I><B>,</B>
    <B>IN PCTSTR</B>  <I>DeviceName</I><B>,</B>
    <B>IN LPGUID</B>  <I>ClassGuid</I><B>,</B>
    <B>IN PCTSTR</B>  <I>DeviceDescription</I><B>,  OPTIONAL</B>
    <B>IN HWND</B>  <I>hwndParent</I><B>,  OPTIONAL</B>
    <B>IN DWORD</B>  <I>CreationFlags</I><B>,
    OUT PSP_DEVINFO_DATA</B>  <I>DeviceInfoData</I><B>  OPTIONAL</B>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceInfoSet</I></DT>

<DD>Supplies a handle to the <A HREF="setup-cls_2h9j.htm">device information set</A> for the local machine.</DD>

<DT><I>DeviceName</I></DT>

<DD>Supplies either a full <A HREF="JavaScript:hhobj_1.Click()">device instance ID</A> (for example, <B>Root\*PNP0500\0000</B>) or a root-enumerated device ID without the <B>Enum</B> branch prefix and instance ID suffix (for example, <B>*PNP0500</B>). The root-enumerated device ID can be used only if the DICD_GENERATE_ID flag is specified in the <I>CreationFlags</I> parameter.</DD>

<DT><I>ClassGuid</I></DT>

<DD>Supplies a pointer to the GUID for this device's class. If the class is not known, this value should be GUID_NULL.</DD>

<DT><I>DeviceDescription</I></DT>

<DD>Supplies a textual description of the device.</DD>

<DT><I>hwndParent</I></DT>

<DD>Supplies the window handle of the top-level window to use for any user interface related to installing the device.</DD>

<DT><I>CreationFlags</I></DT>

<DD>Controls how the device information element is created. Can be a combination of the following values:

<DL>
<DT>DICD_GENERATE_ID</DT>

<DD>If this flag is specified, <I>DeviceName</I> contains only a Root-enumerated device ID and the system creates a unique device instance key for it. This unique device instance key is generated as:

<P><B>Enum\Root\</B><I>DeviceName</I><B>\</B><I>InstanceID<BR>
</I>where <I>InstanceID</I> is a four-digit, base-10 number that is unique among all subkeys under <B>Enum\Root\</B><I>DeviceName</I>. Call <B>SetupDiGetDeviceInstanceId</B> to find out what ID was generated for this device information element.
</DD>

<DT>DICD_INHERIT_CLASSDRVS</DT>

<DD>If this flag is specified, the resulting device information element inherits the class driver list, if any, associated with the device information set. In addition, if there is a selected driver for the device information set, that same driver is selected for the new device information element.</DD>
</DL>
</DD>

<DT><I>DeviceInfoData</I></DT>

<DD>Optionally supplies a pointer to an <A HREF="di-struct_7nqq.htm">SP_DEVINFO_DATA</A> structure to receive the new device information element. If this parameter is not NULL, the caller must set <B>cbSize</B> to <B>sizeof</B>(SP_DEVINFO_DATA).
</DD>
</DL>

<H4>Return Value</H4>

<P>The function returns TRUE if it is successful. Otherwise, it returns FALSE and the logged error can be retrieved with a call to <B>GetLastError</B>.</P>

<H4>Headers</H4>

<P>Declared in <I>setupapi.h</I>. Include <I>setupapi.h</I>. </P>

<H4>Comments</H4>

<P>The caller of this function must be a member of the Administrators group.</P>

<P>If this device instance is being added to a set that has an associated class, the device class must be the same or the call fails. In this case, a call to <B>GetLastError</B> returns ERROR_CLASS_MISMATCH.</P>

<P>If the specified device instance is the same as an existing device instance key in the registry, the call fails. In this case, a call to <B>GetLastError</B> returns ERROR_DEVINST_ALREADY_EXISTS. This occurs only if the DICD_GENERATE_ID flag is not set.</P>

<P>If the new device information element was successfully created but the caller-supplied <I>DeviceInfoData</I> buffer is invalid, the function returns FALSE. In this case, a call to <B>GetLastError</B> returns ERROR_INVALID_USER_BUFFER. However, the device information element will have been added as a new member of the set already.</P>

<P>The <I>DeviceInfoSet</I> must only contain elements on the local machine.</P>

<H4>See Also</H4>

<P><A HREF="di-rtns_1436.htm"><B>SetupDiDeleteDeviceInfo</B></A>, <A HREF="di-rtns_8z5e.htm"><B>SetupDiEnumDeviceInfo</B></A>, <A HREF="di-rtns_8n02.htm"><B>SetupDiOpenDeviceInfo</B></A>, <A HREF="di-struct_7nqq.htm">SP_DEVINFO_DATA</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SetupDiCreateDeviceInfo"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
