<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>UpdateDriverForPlugAndPlayDevices</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="UpdateDriverForPlugAndPlayDevices">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_hardware_id_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_updatedriverforplugandplaydevices_dr"></A>UpdateDriverForPlugAndPlayDevices</H1>

<P>Given an INF file and a <A HREF="JavaScript:hhobj_1.Click()">hardware ID</A>, the <B>UpdateDriverForPlugAndPlayDevices</B> function installs updated drivers for devices that match the hardware ID. </P>

<PRE class=syntax><B>BOOL WINAPI</B>
  <B>UpdateDriverForPlugAndPlayDevices(</B>
    <B>HWND</B>  <I>hwndParent</I><B>,</B>
    <B>LPCTSTR</B>  <I>HardwareId</I><B>,</B>
    <B>LPCTSTR</B>  <I>FullInfPath</I><B>,</B>
    <B>DWORD</B>  <I>InstallFlags</I><B>,
    PBOOL</B>  <I>bRebootRequired</I> <B>OPTIONAL</B>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hwndParent</I></DT>

<DD>A caller-supplied handle to the top-level window to use for any UI related to installing devices.</DD>

<DT><I>HardwareId</I></DT>

<DD>A caller-supplied hardware ID to match against existing devices on the machine. For information about hardware IDs, see <A HREF="idstrings_8tt3.htm">Device Identification Strings</A>. </DD>

<DT><I>FullInfPath</I></DT>

<DD>A caller-supplied full path to an INF file and any associated driver files. The files should be on the distribution media or in a vendor-created directory, not in a system location such as %<I>windir</I>%\<I>inf</I>. The function copies driver files to the appropriate system locations if the installation is successful.</DD>

<DT><I>InstallFlags</I></DT>

<DD>A caller-supplied value created by ORing zero or more for the following bit flags:

<DL>
<DT>INSTALLFLAG_FORCE</DT>

<DD>If this flag is set and the function finds a device that matches the <I>HardwareId </I>value, the function installs new drivers for the device whether or not better drivers already exist on the machine. <I>Use this flag only with extreme caution. Setting this flag can cause an older driver to be installed over a newer driver, if a user runs the vendor's application after newer drivers are available. </I></DD>

<DT>INSTALLFLAG_READONLY</DT>

<DD>If this flag is set, the function will not copy, rename, or delete any installation files. Use of this flag should be limited to environments in which file access is restricted or impossible, such as an "embedded" operating system.</DD>

<DT>INSTALLFLAG_NONINTERACTIVE</DT>

<DD>If this flag is set, the function will return FALSE when any attempt to display UI is detected. Set this flag only if the function will be called from a component (such as a service) that cannot display UI. <I>Note that if this flag is set and a UI display is attempted, the device can be left in an indeterminate state.</I> </DD>
</DL>


<P>The <I>InstallFlags</I> parameter is typically zero.
</DD>

<DT><I>bRebootRequired</I></DT>

<DD>Optional address of a Boolean value that indicates whether a reboot is required and who should prompt for it. 

<P>If <I>bRebootRequired</I> is NULL, this function prompts for a reboot after installing drivers, if necessary. If <I>bRebootRequired</I> is a valid pointer, the function supplies a BOOLEAN value that is TRUE if the system should be rebooted, and it is then the caller's responsibility to prompt for a reboot. For more information, see <B>Comments</B>.

</DD>
</DL>

<H4>Return Value</H4>

<P>The function returns TRUE if a device was upgraded to the specified driver. </P>

<P>Otherwise, it returns FALSE and the logged error can be retrieved with a call to <B>GetLastError</B>. Possible error values returned by <B>GetLastError</B> are included in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Error Value</TH>
<TH align=left width=52%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>ERROR_FILE_NOT_FOUND</TD>
<TD width=52%>The path specified for <I>FullInfPath</I> does not exist.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>ERROR_IN_WOW64</TD>
<TD width=52%>The calling application is a 32-bit application attempting to execute in a 64-bit environment, which is not allowed.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>ERROR_INVALID_FLAGS</TD>
<TD width=52%>The value specified for <I>InstallFlags</I> is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>ERROR_NO_SUCH_DEVINST</TD>
<TD width=52%>The value specified for <I>HardwareId</I> does not match any device on the system. That is, the device is not plugged in.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>NO_ERROR</TD>
<TD width=52%>The routine found a match for the <I>HardwareId</I> value, but the specified driver was not better than the current driver and the caller did not specify the INSTALLFLAG_FORCE flag.</TD>
</TR>
</TABLE><BR>

<H4>Headers</H4>

<P>Declared in <I>newdev.h</I>. Include <I>newdev.h</I>. Link to <I>newdev.lib</I>. </P>

<H4>Comments</H4>

<P><B>UpdateDriverForPlugAndPlayDevices</B> is available on Windows&nbsp;2000 and later versions of the NT-based operating system, and on Windows Me. </P>

<P><B>UpdateDriverForPlugAndPlayDevices</B> scans the devices on the system and attempts to install the drivers specified by <I>FullInfPath</I> for any devices that match the given <I>HardwareId</I> value. The default behavior is to only install the specified drivers if they are better than the currently installed drivers and the specified drivers are also better than any drivers in %<I>windir</I>%\<I>inf</I>. For more information, see <A HREF="install-over_7dnr.htm">How Setup Selects Drivers</A>. </P>

<P><B>UpdateDriverForPlugAndPlayDevices</B> attempts to install the specified drivers for all hardware that matches the specified <I>HardwareId</I> value. This function can also be used to determine whether the device with the specified <I>HardwareId</I> value is plugged in. For more information, see <A HREF="custom-install_7n53.htm">Writing a Device Installation Application</A>.</P>

<P>Generally, setup applications should supply NULL for <I>bRebootRequired</I>, so the system will initiate a reboot if necessary. An application should specify a pointer value <I>only</I> in the following cases:

<UL>
	<LI>The application must call <B>UpdateDriverForPlugAndPlayDevices</B> several times to complete an installation. </LI>

	<LI>The application must perform other operations before the reboot (if required) occurs.</LI>

	<LI>The application is a class installer, which should set DI_NEEDREBOOT in <A HREF="di-struct_7j76.htm">SP_DEVINSTALL_PARAMS</A> if a reboot is needed.</LI>
</UL>

<P>If the application must call <B>UpdateDriverForPlugAndPlayDevices</B> several times, it should save any TRUE reboot status value received, then prompt for a reboot after the final call has returned.</P>

<P>If the function returns ERROR_IN_WOW64 in a 32-bit application, the application is executing on a 64-bit system, which is not allowed. For more information, see <A HREF="install-over_84tj.htm">Installing Devices on 64-bit Systems</A>.</P>

<P></P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: UpdateDriverForPlugAndPlayDevices"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
