<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetupDiOpenDeviceInterface</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SetupDiOpenDeviceInterface">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_setupdiopendeviceinterface_dr"></A>SetupDiOpenDeviceInterface</H1>

<P>The <B>SetupDiOpenDeviceInterface</B> function retrieves information about an existing device interface and adds it to the specified device information set. If the device information element for the underlying device is not already present in the specified device information set, this function creates one and adds it to the device information set.</P>

<PRE class=syntax><B>WINSETUPAPI BOOL WINAPI</B>
  <B>SetupDiOpenDeviceInterface(</B>
    <B>IN HDEVINFO</B>  <I>DeviceInfoSet</I><B>,</B>
    <B>IN PCTSTR</B>  <I>DevicePath</I><B>,</B>
    <B>IN DWORD</B>  <I>OpenFlags</I><B>,
    OUT PSP_DEVICE_INTERFACE_DATA</B>  <I>DeviceInterfaceData</I><B>  OPTIONAL</B>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceInfoSet</I></DT>

<DD>Pointer to a <A HREF="setup-cls_2h9j.htm">device information set</A> that contains, or will contain, the device that exposes the interface being opened.</DD>

<DT><I>DevicePath</I></DT>

<DD>Pointer to a string containing the name of the device interface to be opened. This name is a Win32 device path typically received in a PnP notification structure or obtained by a previous call to <A HREF="di-rtns_1cky.htm"><B>SetupDiEnumDeviceInterfaces</B></A> and its related functions.</DD>

<DT><I>OpenFlags</I></DT>

<DD>Specifies a bitset of flags that determines how the device interface element is to be opened. This parameter currently can be set only to the following flag:

<DL>
<DT>DIODI_NO_ADD</DT>

<DD>Specifies that the device information element for the underlying device will not be created if that element is not already present in the specified <A HREF="setup-cls_2h9j.htm">device information set</A>. For more information, see the <B>Comments</B> section. 

<P>
</DD>
</DL>
</DD>

<DT><I>DeviceInterfaceData</I></DT>

<DD>Optionally points to a caller-allocated buffer to receive a completed <A HREF="di-struct_6j8y.htm">SP_DEVICE_INTERFACE_DATA</A> structure that identifies the interface. The caller must set <I>DeviceInterfaceData</I><B>.cbSize</B> to <B>sizeof</B>(SP_DEVICE_INTERFACE_DATA) before calling this function.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>SetupDiOpenDeviceInterface</B> returns TRUE if the function completed without error. If the function completed with an error, it returns FALSE and the error code for the failure can be retrieved by calling <B>GetLastError</B>.</P>

<H4>Headers</H4>

<P>Declared in <I>setupapi.h</I>. Include <I>setupapi.h</I>. </P>

<H4>Comments</H4>

<P>If a device interface element for the interface already exists in <I>DeviceInfoSet</I>, <B>SetupDiOpenDeviceInterface</B> updates the flags. This function, therefore, can be used to refresh the flags for a device interface. For example, an interface might have been inactive when it was first opened, but has subsequently become active. </P>

<P>If the new device interface is successfully opened, but the caller-supplied <I>DeviceInterfaceData</I> buffer is invalid, this function returns FALSE and <B>GetLastError</B> returns ERROR_INVALID_USER_BUFFER. The caller's buffer error does not prevent the interface from being opened.</P>

<P>If the DIODI_NO_ADD flag is specified for the <I>OpenFlags</I> parameter, and a device information element for the underlying device is not already present in the specified <A HREF="setup-cls_2h9j.htm">device information set</A>, this function returns FALSE and <B>GetLastError</B> returns ERROR_NO_SUCH_DEVICE_INTERFACE. </P>

<P>When the application has finished using the information that <B>SetupDiOpenDeviceInterface</B> retrieved<B>,</B> the application must call <A HREF="di-rtns_91f6.htm"><B>SetupDiDeleteDeviceInterfaceData</B></A>.</P>

<H4>See Also</H4>

<P><A HREF="di-rtns_91f6.htm"><B>SetupDiDeleteDeviceInterfaceData</B></A>, <A HREF="di-rtns_1cky.htm"><B>SetupDiEnumDeviceInterfaces</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SetupDiOpenDeviceInterface"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
