<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>USB Device Stack for Windows XP and Later</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="USB Device Stack for Windows XP and Later">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_usb_device_stack_for_windows_xp_and_later_kg"></A>USB Device Stack for Windows XP and Later</H2>

<P>The following figure illustrates a WDM device object stack for a composite USB device that contains both a keyboard interface and a power keys interface. This device object stack is created in Windows XP and later operating systems.</P>

<P><IMG SRC="images/usbdevxp.gif" ALT="" BORDER=0></P>

<P><B>USB Device Stack for Windows XP and Later</B></P>

<P>Starting from the bottom of the figure, the following describes each device object or device object stack and its associated driver: 

<OL>
	<LI>The PCI bus driver enumerates the USB host controllers in the system and creates a PDO for each one. In Windows&nbsp;XP (SP1 and later) and Windows Server 2003, the operating system supports USB&nbsp;2.0 and can enumerate both USB&nbsp;2.0-compliant and USB&nbsp;1.1-compliant hardware. If both sorts of controller are present on the same controller card in a version of Windows that supports USB&nbsp;2.0, the PCI bus driver creates two separate PDOs, one for each controller. Only one PDO is shown in the figure. After creating a PDO for the host controller, the system loads the port driver, <I>usbport.sys</I>, and its accompanying miniports (not shown in the figure). The port driver then creates an FDO for the host controller. </LI>

	<LI>The port driver enumerates the root hub. The <I>usbhub.sys </I>driver enumerates all other USB hubs. The figure only shows one level of hub device objects, but USB allows daisy-chaining of hub devices, so there could potentially be many more hub device objects in the tree. The hub driver detects and enumerates the USB composite keyboard device and creates a PDO for it. </LI>

	<LI>In Windows&nbsp;XP and later versions of the operating system, the generic parent facility is implemented by a separate driver called the USB composite client generic parent driver. For a detailed discussion of this driver, see <A HREF="usbsystem_3j8n.htm">USB Common Class Generic Parent Driver</A>. When the system detects a composite device, it loads the generic parent driver, which creates an FDO for the device as a whole. Afterwards, the generic parent driver creates separate PDOs for each interface of the composite device. In Windows&nbsp;2000, these actions are performed by the hub driver. For more information, see <A HREF="usbsystem_1lpj.htm">USB Device Stack for Windows 2000</A>. </LI>

	<LI>In the example illustrated in the figure, the composite device consists of a HID-compliant keyboard interface and a HID-compliant power keys interface. The hub driver creates a separate PDO for each interface. After that, the HID class driver creates an FDO for each interface. </LI>
</OL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: USB%20Device%20Stack%20for%20Windows%20XP%20and%20Later"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
