<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Communicating with a USB Device</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Communicating with a USB Device">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_internal_device_control_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iobuilddeviceiocontrolrequest_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_communicating_with_a_usb_device_kg"></A>Communicating with a USB Device</H1>

<P>USB client drivers must communicate with their devices using IOCTL requests that are delivered to the device by means of an I/O request packet (IRP) of type <A HREF="JavaScript:hhobj_1.Click()">IRP_MJ_INTERNAL_DEVICE_CONTROL</A>. This request must contain one of the device control codes that are defined in <A HREF="usbirp_85rm.htm">I/O Requests for USB Client Drivers</A>. These device control codes are "internal" in the sense that they provide an I/O interface that a USB client driver uses to manage its device and the port to which the device is connected. User-mode applications do not have access to this I/O interface. </P>

<P>The most important of the system-defined device control codes is <A HREF="usbirp_322a.htm">IOCTL_INTERNAL_USB_SUBMIT_URB</A>. A client driver uses IOCTL_INTERNAL_USB_SUBMIT_URB to deliver a variable-length data structure called a USB Request Block (<A HREF="usbstrct_3h9u.htm">URB</A>) to the device it manages. Kernel-mode client drivers perform all device-specific operations, including data transfers, by means of URBs. Each URB begins with a standard header. The <B>Length</B> member of the URB header specifies the size, in bytes, of the URB. The <B>Function</B> member, which must be one of a series of system-defined URB_FUNCTION_<I>XXX</I> constants, determines the type of operation that is requested. In the case of data transfers, for instance, this member indicates the type of transfer. Function codes <A HREF="usbstrct_1e0i.htm#ddk_urb_function_control_transfer_kr">URB_FUNCTION_CONTROL_TRANSFER</A>, </P>

<P><A HREF="usbstrct_1e0i.htm#ddk_urb_function_bulk_or_interrupt_transfer_kr">URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER</A>, and</P>

<P><A HREF="usbstrct_1e0i.htm#ddk_urb_function_isoch_transfer_kr">URB_FUNCTION_ISOCH_TRANSFER</A> indicate control, bulk/interrupt, and isochronous transfers respectively. The bus driver uses the <B>Status</B> member of the URB to return a USB-specific status code. To build the IOCTL_INTERNAL_USB_SUBMIT_URB request, client drivers can use the <A HREF="JavaScript:hhobj_2.Click()"><B>IoBuildDeviceIoControlRequest</B></A> routine.</P>

<P>Microsoft provides a library of <A HREF="usbfunc_81bm.htm">USB Client Support Routines</A> that build SRB requests for certain specified operations and forward them down the USB stack. If you prefer, you can design your driver to call these library routines for the supported operations rather than building your own SRB requests. </P>

<P>Kernel-mode clients in real-time threads running at an elevated IRQL can bypass the device control IRP mechanism and deliver SRBs directly to the bus driver. To do this, the client must query the bus driver for an interface, as explained in <A HREF="usbinterkg_5wvb.htm">Querying for USB Interfaces</A>. After obtaining a pointer to the interface, the client can submit an SRB directly to the bus driver using the <A HREF="usbinterkr_29f6.htm">SubmitIsoOutUrb</A> interface method. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Communicating%20with%20a%20USB%20Device"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
