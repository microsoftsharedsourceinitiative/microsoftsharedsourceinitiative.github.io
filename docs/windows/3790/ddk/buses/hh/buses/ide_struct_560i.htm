<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PCIIDE_TRANSFER_MODE_SELECT</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PCIIDE_TRANSFER_MODE_SELECT">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_pciide_transfer_mode_select_kr"></A>PCIIDE_TRANSFER_MODE_SELECT</H1>

<P>The PCIIDE_TRANSFER_MODE_SELECT structure contains transfer mode information for all devices attached to a channel of an IDE controller. </P>

<PRE class=syntax>typedef struct _PCIIDE_TRANSFER_MODE_SELECT {
  ULONG  Channel;
  BOOLEAN  DevicePresent[MAX_IDE_DEVICE];
  BOOLEAN  FixedDisk[MAX_IDE_DEVICE];
  BOOLEAN  IoReadySupported[MAX_IDE_DEVICE];
  ULONG  DeviceTransferModeSupported[MAX_IDE_DEVICE];
  ULONG  BestPioCycleTime[MAX_IDE_DEVICE];
  ULONG  BestSwDmaCycleTime[MAX_IDE_DEVICE];
  ULONG  BestMwDmaCycleTime[MAX_IDE_DEVICE];
  ULONG  BestUDmaCycleTime[MAX_IDE_DEVICE];
  ULONG  DeviceTransferModeCurrent[MAX_IDE_DEVICE];
  ULONG  DeviceTransferModeSelected[MAX_IDE_DEVICE];
} PCIIDE_TRANSFER_MODE_SELECT, *PPCIIDE_TRANSFER_MODE_SELECT;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Channel</B></DT>

<DD>Contains the IDE channel number (0 or 1) of the devices for which a transfer mode is requested. All devices for which information is requested must be attached to the same channel. </DD>

<DT><B>DevicePresent</B></DT>

<DD>Each array entry, when TRUE, indicates that the corresponding device is currently present in the system. All of the member arrays of PCIIDE_TRANSFER_MODE_SELECT contain entries for up to MAX_IDE_DEVICE devices, but for any given entry <I>n</I>, DevicePresent[<I>n</I>] must be consulted to determine if the <I>nth</I> device is actually present in the system. If the <I>nth</I> device is present, then DevicePresent[<I>n</I>] = TRUE. </DD>

<DT><B>FixedDisk</B></DT>

<DD>Each array entry, when TRUE, indicates that the corresponding device is an ATA hard disk. </DD>

<DT><B>IoReadySupported</B></DT>

<DD>Each array entry, when TRUE, indicates that the corresponding device supports I/O Ready. </DD>

<DT><B>DeviceTransferModeSupported</B></DT>

<DD>Furnishes a bitmap indicating the data transfer modes that each attached device supports. For more information, see the Comments section.</DD>

<DT><B>BestPioCycleTime</B></DT>

<DD>Indicates each device's best PIO cycle time. </DD>

<DT><B>BestSwDmaCycleTime</B></DT>

<DD>Indicates each device's best Single-word DMA cycle time. </DD>

<DT><B>BestMwDmaCycleTime</B></DT>

<DD>Indicates each device's best Multi-word DMA cycle time. </DD>

<DT><B>BestUDmaCycleTime</B></DT>

<DD>Indicates each device's best Ultra DMA cycle time. </DD>

<DT><B>DeviceTransferModeCurrent</B></DT>

<DD>Furnishes a bitmap indicating the data transfer modes each device is currently programmed for. For more information, see the Comments section. </DD>

<DT><B>DeviceTransferModeSelected</B></DT>

<DD>Furnishes a bitmap indicating the data transfer modes selected by the PCI mini driver for each device. For more information, see the Comments section. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ide.h</I>. Include <I>ide.h</I>. </P>

<H4>Comments</H4>

<P>Member arrays <B>DeviceTransferModeSupported</B>, <B>DeviceTransferModeCurrent</B>, and <B>DeviceTransferModeSelected</B> are arrays of ULONG bitmaps indicating combinations of PIO and DMA transfer modes. Each bitmap corresponds to the transfer modes of a single device. The bitmaps are defined as follows: </P>

<P class=indent1>// PIO Modes<BR>
#define PIO_MODE0        (1 &lt;&lt; 0)<BR>
#define PIO_MODE1        (1 &lt;&lt; 1)<BR>
#define PIO_MODE2        (1 &lt;&lt; 2)<BR>
#define PIO_MODE3        (1 &lt;&lt; 3)<BR>
#define PIO_MODE4        (1 &lt;&lt; 4)<BR>
<BR>
// Single-word DMA Modes<BR>
#define SWDMA_MODE0        (1 &lt;&lt; 5)<BR>
#define SWDMA_MODE1        (1 &lt;&lt; 6)<BR>
#define SWDMA_MODE2        (1 &lt;&lt; 7)<BR>
<BR>
// Multi-word DMA Modes<BR>
#define MWDMA_MODE0        (1 &lt;&lt; 8)<BR>
#define MWDMA_MODE1        (1 &lt;&lt; 9)<BR>
#define MWDMA_MODE2        (1 &lt;&lt; 10)<BR>
<BR>
// Ultra DMA Modes<BR>
#define UDMA_MODE0        (1 &lt;&lt; 11)<BR>
#define UDMA_MODE1        (1 &lt;&lt; 12)<BR>
#define UDMA_MODE2        (1 &lt;&lt; 13)<BR>
#define UDMA_MODE3        (1 &lt;&lt; 14)<BR>
#define UDMA_MODE4        (1 &lt;&lt; 15)</P>

<H4>See Also</H4>

<P><A HREF="ide_minikr_4alu.htm"><I>HwIdeXTransferModeSelect</I></A>, <A HREF="ide_minikr_7nea.htm"><I>HwIdeXGetControllerProperties</I></A>, <A HREF="ide_struct_8dde.htm">IDE_CONTROLLER_PROPERTIES</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PCIIDE_TRANSFER_MODE_SELECT"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
