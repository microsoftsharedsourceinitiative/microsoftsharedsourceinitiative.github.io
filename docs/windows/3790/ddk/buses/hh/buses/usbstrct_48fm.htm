<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_URB_CONTROL_VENDOR_OR_CLASS_REQUEST</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="_URB_CONTROL_VENDOR_OR_CLASS_REQUEST">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk__urb_control_vendor_or_class_request_kr"></A>_URB_CONTROL_VENDOR_OR_CLASS_REQUEST</H1>

<P>USB client drivers set up this structure to issue a vendor or class-specific command to a device, interface, endpoint, or other device-defined target.</P>

<PRE class=syntax>struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST {
  struct _URB_HEADER  Hdr;
  .
<B>  </B>.
  ULONG  TransferFlags ;
  ULONG  TransferBufferLength ;
  PVOID  TransferBuffer ;
  PMDL  TransferBufferMDL ;
  struct _URB  *UrbLink ;
  .
<B>  </B>.
  UCHAR  RequestTypeReservedBits;
  UCHAR  Request;
  USHORT  Value;
  USHORT  Index;
  .
<B>  </B>.
};</PRE>

<H4>Members</H4>

<DL>
<DT><B>Hdr</B></DT>

<DD>Pointer to a <A HREF="usbstrct_1e0i.htm">_URB_HEADER</A> structure that specifies the URB header information. <B>Hdr.Function</B> must be one of URB_FUNCTION_CLASS_XXX or URB_FUNCTION_VENDOR_XXX GET_STATUS, and <B>Hdr.Length</B> must be <B>sizeof</B>(_URB_CONTROL_VENDOR_OR_CLASS_REQUEST).</DD>

<DT><B>TransferFlags</B></DT>

<DD>Specifies zero, one, or a combination of the following flags:

<DL>
<DT>USBD_TRANSFER_DIRECTION_IN</DT>

<DD>Is set to request data from a device. To transfer data to a device, this flag must be clear. The flag must be set if the pipe is an interrupt transfer pipe.</DD>

<DT>USBD_SHORT_TRANSFER_OK</DT>

<DD>Can be used if USBD_TRANSFER_DIRECTION_IN is set. If set, directs the host controller driver not to return an error if a packet is received from the device shorter than the maximum packet size for the endpoint. Otherwise, a short request returns an error condition.</DD>
</DL>
</DD>

<DT><B>TransferBufferLength</B></DT>

<DD>Specifies the length, in bytes, of the buffer specified in <B>TransferBuffer</B> or described in <B>TransferBufferMDL</B>. The host controller driver returns the number of bytes sent to or read from the pipe in this member.</DD>

<DT><B>TransferBuffer</B></DT>

<DD>Pointer to a resident buffer for the transfer or is NULL if an MDL is supplied in <B>TransferBufferMDL</B>. The contents of this buffer depend on the value of <B>TransferFlags</B>. If USBD_TRANSFER_DIRECTION_IN is specified this buffer will contain data read from the device on return from the host controller driver. Otherwise, this buffer contains driver-supplied data for transfer to the device.</DD>

<DT><B>TransferBufferMDL</B></DT>

<DD>Pointer to an MDL that describes a resident buffer or is NULL if a buffer is supplied in <B>TransferBuffer</B>. The contents of the buffer depend on the value of <B>TransferFlags</B>. If USBD_TRANSFER_DIRECTION_IN is specified, the described buffer will contain data read from the device on return from the host controller driver. Otherwise, the buffer contains driver-supplied data for transfer to the device. This MDL must be allocated from nonpaged pool.</DD>

<DT><B>UrbLink</B></DT>

<DD>Pointer to a caller-initialized URB. <B>UrbLink</B> becomes the subsequent URB in a chain of requests with this URB being the predecessor.</DD>

<DT><B>RequestTypeReservedBits</B></DT>

<DD>Specifies a value, from 4 to 31 inclusive, that becomes part of the request type code in the USB-defined setup packet. This value is defined by USB for a class request or the vendor for a vendor request.</DD>

<DT><B>Request</B></DT>

<DD>Specifies the USB or vendor-defined request code for the device, interface, endpoint, or other device-defined target.</DD>

<DT><B>Value</B></DT>

<DD>Specifies a value, specific to <B>Request</B>, that becomes part of the USB-defined setup packet for the target. This value is defined by the creator of the code used in <B>Request</B>.</DD>

<DT><B>Index</B></DT>

<DD>Specifies the device-defined index, returned by a successful configuration request, if the request is for an endpoint or interface. Otherwise, <B>Index</B> must be zero.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>usb.h</I>. Include <I>usb.h</I>.</P>

<H4>Comments</H4>

<P>Drivers can use the <B>UsbBuildVendorRequest</B> service routine format this URB.</P>

<P>Other members that are part of this structure but not described here should be treated as opaque and considered to be reserved for system use.</P>

<H4>See Also</H4>

<P><A HREF="usbstrct_3h9u.htm">URB</A>, <A HREF="usbstrct_1e0i.htm">_URB_HEADER</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _URB_CONTROL_VENDOR_OR_CLASS_REQUEST"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
