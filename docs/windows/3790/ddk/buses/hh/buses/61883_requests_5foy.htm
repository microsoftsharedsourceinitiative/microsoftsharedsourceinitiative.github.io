<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Av61883_GetFcpResponse</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Av61883_GetFcpResponse">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_av61883_getfcpresponse_kr"></A>Av61883_GetFcpResponse</H1>

<H4>Operation</H4>

<P>The <B>Av61883_GetFcpResponse</B> request retrieves the next FCP response from the queue of requests maintained by the IEC-61883 protocol driver. FCP requests and responses from AV devices are routed to the IEC-61883 protocol driver, which queues the requests. Client drivers send <B>Av61883_GetFcpResponse</B> to retrieve an FCP response from the queue. The relevant members of the <A HREF="61883_structures_3sj6.htm">AV_61883_REQUEST</A> structure for this request are:</P>

<PRE class=syntax>typedef struct _AV_61883_REQUEST {
  ULONG Function;
  union {
    typedef struct _FCP_GET_RESPONSE {
      OUT NODE_ADDRESS  NodeAddress;
      IN OUT ULONG  Length;
      IN OUT PFCP_FRAME  Frame;
    } FCP_GET_RESPONSE, *PFCP_GET_RESPONSE;
    .
    .
    .
  };
} AV_61883_REQUEST, *PAV_61883_REQUEST;</PRE>

<H4>AV_61883_REQUEST Input</H4>

<DL>
<DT><B>Function</B></DT>

<DD><B>Av61883_GetFcpResponse</B></DD>

<DT><B>Length</B></DT>

<DD>The maximum available length, in bytes, of the frame payload, including FCP header. </DD>

<DT><B>Frame</B></DT>

<DD>Pointer to a caller-allocated <A HREF="61883_structures_5d82.htm">FCP_FRAME</A> structure to receive the FCP response.
</DD>
</DL>

<H4>AV_61883_REQUEST Output</H4>

<DL>
<DT><B>NodeAddress</B></DT>

<DD>If the protocol driver is being used to control a virtual device, the protocol driver supplies the node address of the device that sent the response obtained with this <B>Av61883_GetFcpResponse</B> IRP. If the protocol driver is being used to control a physical device, <B>NodeAddress</B> is not used.</DD>

<DT><B>Length</B></DT>

<DD>On completion, this field will contain the actual length of the response in bytes.</DD>

<DT><B>Frame</B></DT>

<DD>The FCP frame written to the caller-allocated FCP_FRAME structure by the protocol driver.
</DD>
</DL>

<H4>I/O Status Block</H4>

<P>If successful, the IEC-61883 protocol driver sets <B>Irp-&gt;IoStatus.Status </B>to STATUS_SUCCESS. </P>

<P>If the request is queued, the protocol driver sets a status of STATUS_PENDING. If the request has been previously canceled, the driver sets a status of STATUS_CANCELLED.</P>

<P>If an incorrect parameter is passed in, the protocol driver sets <B>Irp-&gt;IoStatus.Status </B>to STATUS_INVALID_PARAMETER.</P>

<H4>Headers</H4>

<P>Defined in <I>61883.h</I>. Include <I>61883.h</I>.</P>

<H4>See Also</H4>

<P><A HREF="61883_structures_3sj6.htm">AV_61883_REQUEST</A>, <A HREF="61883_requests_84s2.htm"><B>Av61883_SendFcpRequest</B></A>, <A HREF="61883_requests_4sdu.htm"><B>Av61883_SetFcpNotify</B></A>, <A HREF="61883_structures_5d82.htm">FCP_FRAME</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Av61883_GetFcpResponse"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
