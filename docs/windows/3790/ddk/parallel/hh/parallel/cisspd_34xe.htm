<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PARCLASS_INFORMATION</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PARCLASS_INFORMATION">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pdo_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Parallel&nbsp;Ports&nbsp;and&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_parclass_information_parport_kr"></A>PARCLASS_INFORMATION</H1>

<P>The PARCLASS_INFORMATION structure specifies information about a parallel port, pointers to callback routines to operate a parallel port, and pointers to callback routines to read and write to a parallel device.</P>

<PRE class=syntax>typedef struct _PARCLASS_INFORMATION {
  PUCHAR  Controller;
  ULONG  SpanOfController;
  PDETERMINE_IEEE_MODES  DetermineIeeeModes;
  PNEGOTIATE_IEEE_MODE  NegotiateIeeeMode;
  PTERMINATE_IEEE_MODE  TerminateIeeeMode;
  PPARALLEL_IEEE_FWD_TO_REV  IeeeFwdToRevMode;
  PPARALLEL_IEEE_REV_TO_FWD  IeeeRevToFwdMode;
  PPARALLEL_READ  ParallelRead;
  PPARALLEL_WRITE  ParallelWrite;
  PVOID  ParclassContext;
  ULONG  HardwareCapabilities;
  ULONG  FifoDepth;
  ULONG  FifoWidth;
} PARCLASS_INFORMATION, *PPARCLASS_INFORMATION;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Controller</B></DT>

<DD>Specifies the base I/O address allocated to a parallel port.</DD>

<DT><B>SpanOfController</B></DT>

<DD>Specifies the range in bytes of I/O address space allocated to a parallel port.</DD>

<DT><B>DetermineIeeeModes</B></DT>

<DD>Pointer to the <A HREF="cisspd_2che.htm">PDETERMINE_IEEE_MODES</A> callback routine that determines which IEEE protocols a parallel device supports.</DD>

<DT><B>NegotiateIeeeMode</B></DT>

<DD>Pointer to the<A HREF="cisspd_5qya.htm"> PNEGOTIATE_IEEE_MODE</A> callback routine that negotiates the fastest protocol that the system-supplied bus driver for parallel ports supports from among those specified by the caller.</DD>

<DT><B>TerminateIeeeMode</B></DT>

<DD>Pointer to the <A HREF="cisspd_60qa.htm">PTERMINATE_IEEE_MODE</A> callback routine that terminates the current IEEE mode and sets the mode to IEEE_COMPATIBILITY.</DD>

<DT><B>IeeeFwdToRevMode</B></DT>

<DD>Pointer to the <A HREF="cisspd_97le.htm">PPARALLEL_IEEE_FWD_TO_REV</A> callback routine that changes the transfer mode from forward to reverse.</DD>

<DT><B>IeeeRevToFwdMode</B></DT>

<DD>Pointer to the <A HREF="cisspd_7sxe.htm">PPARALLEL_IEEE_REV_TO_FWD</A> callback routine that changes the transfer mode from reverse to forward.</DD>

<DT><B>ParallelRead</B></DT>

<DD>Pointer to the <A HREF="cisspd_49bm.htm">PPARALLEL_READ</A> callback routine that a client can use to read from a parallel device.</DD>

<DT><B>ParallelWrite</B></DT>

<DD>Pointer to the <A HREF="cisspd_16lu.htm">PPARALLEL_WRITE</A> callback routine that a client can use to write to a parallel device.</DD>

<DT><B>ParclassContext</B></DT>

<DD>Pointer to the device extension of a parallel device's physical device object (<A HREF="JavaScript:hhobj_1.Click()">PDO</A>).</DD>

<DT><B>HardwareCapabilities</B></DT>

<DD>Specifies which hardware capabilities are present. <B>HardwareCapabilities</B> is a bitwise OR of one or more of the following flags:

<DL>
<DT>PPT_NO_HARDWARE_PRESENT</DT>

<DT>PPT_ECP_PRESENT</DT>

<DT>PPT_EPP_PRESENT</DT>

<DT>PPT_EPP_32_PRESENT</DT>

<DD>32-bit reads and writes are supported.</DD>

<DT>PPT_BYTE_PRESENT</DT>

<DT>PPT_BIDI_PRESENT</DT>

<DT>PPT_1284_3_PRESENT</DT>
</DL>
</DD>

<DT><B>FifoDepth</B></DT>

<DD>Specifies the size, in words, of the ECP FIFO. The ECP FIFO word size, in bits, is the value of <B>FifoWidth</B>.</DD>

<DT><B>FifoWidth</B></DT>

<DD>Specifies the ECP FIFO word size, in bits, which is the number of bits handled in parallel.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>parallel.h</I>. Include <I>parallel.h</I>.</P>

<H4>Comments</H4>

<P>A kernel-mode driver can obtain this information from the system-supplied bus driver for parallel ports using an <A HREF="cisspd_16eq.htm">IOCTL_INTERNAL_PARCLASS_CONNECT</A> request. The system-supplied bus driver for parallel ports supplies all the callback routines. </P>

<P>A client uses this information to operate a parallel port and to read and write a parallel device. The callback routines can only be used by a driver that holds a lock on the parent parallel port. A driver obtains a lock by using an <A HREF="cisspd_0qlu.htm">IOCTL_INTERNAL_LOCK_PORT</A> request.</P>

<P>For more information, see <A HREF="vspd_6rzb.htm">Connecting to a Parallel Device</A>.</P>

<H4>See Also</H4>

<P><A HREF="cisspd_16eq.htm">IOCTL_INTERNAL_PARCLASS_CONNECT</A>, <A HREF="cisspd_0qlu.htm">IOCTL_INTERNAL_LOCK_PORT</A>, <A HREF="cisspd_2che.htm">PDETERMINE_IEEE_MODES</A>, <A HREF="cisspd_5qya.htm">PNEGOTIATE_IEEE_MODE</A>, <A HREF="cisspd_97le.htm">PPARALLEL_IEEE_FWD_TO_REV</A>, <A HREF="cisspd_7sxe.htm">PPARALLEL_IEEE_REV_TO_FWD</A>, <A HREF="cisspd_49bm.htm">PPARALLEL_READ</A>, <A HREF="cisspd_16lu.htm">PPARALLEL_WRITE</A>, <A HREF="cisspd_60qa.htm">PTERMINATE_IEEE_MODE</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PARCLASS_INFORMATION"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
