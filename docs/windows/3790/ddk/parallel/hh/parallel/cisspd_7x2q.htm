<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PPARALLEL_TRY_SELECT_ROUTINE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PPARALLEL_TRY_SELECT_ROUTINE">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_fdo_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Parallel&nbsp;Ports&nbsp;and&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_pparallel_try_select_routine_kr"></A>PPARALLEL_TRY_SELECT_ROUTINE</H1>

<P>The PPARALLEL_TRY_SELECT_ROUTINE typed callback routine selects an IEEE 1284.3 daisy chain device or an IEEE 1284 end-of-chain device that is attached to a parallel port. The system-supplied function driver for parallel ports supplies this routine.</P>

<PRE class=syntax><B>typedef
NTSTATUS
(*PPARALLEL_TRY_SELECT_ROUTINE) (
    IN PVOID  </B><I>TrySelectContext</I><B>,</B>
<B>    IN PVOID  </B><I>TrySelectCommand</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>TrySelectContext</I></DT>

<DD>Pointer to the device extension of a parallel port's functional device object (<A HREF="JavaScript:hhobj_1.Click()">FDO</A>).</DD>

<DT><I>TrySelectCommand</I></DT>

<DD>Pointer to a <A HREF="cisspd_39o3.htm">PARALLEL_1284_COMMAND</A> structure. The caller specifies the following members:

<DL>
<DT><B>ID</B></DT>

<DD>Specifies the 1284.3 device ID. </DD>

<DT><B>CommandFlags</B></DT>

<DD>Specifies a bitwise OR of zero or more of the following flags:

<TABLE>

<TR VALIGN="top">
<TH align=left width=53%>Value</TH>
<TH align=left width=47%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=53%>PAR_END_OF_CHAIN_DEVICE</TD>
<TD width=47%>Specifies an end-of-chain device.</TD>
</TR>

<TR VALIGN="top">
<TD width=53%>PAR_HAVE_PORT_KEEP_PORT</TD>
<TD width=47%>Specifies that the caller has the port allocated and to keep the port allocated.</TD>
</TR>
</TABLE><BR>

</DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<DL>
<DT>STATUS_SUCCESS</DT>

<DD>The device was selected.</DD>

<DT>STATUS_INVALID_PARAMETER</DT>

<DD>The device ID is not valid.</DD>

<DT>STATUS_PENDING</DT>

<DD>The caller did not specify PAR_HAVE_PORT_KEEP_PORT, and the parallel port is already allocated.</DD>

<DT>STATUS_UNSUCCESSFUL</DT>

<DD>The caller has allocated the parallel port, but the system-supplied function driver for parallel ports could not select the specified parallel device.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>parallel.h</I>. Include <I>parallel.h</I>.</P>

<H4>Comments</H4>

<P>To obtain a pointer to the system-supplied PPARALLEL_TRY_SELECT_ROUTINE callback, a kernel-mode driver uses an <A HREF="cisspd_6iwi.htm">IOCTL_INTERNAL_GET_PARALLEL_PNP_INFO</A> request, which returns a <A HREF="cisspd_9yuq.htm">PARALLEL_PNP_INFORMATION</A> structure. The <B>TrySelectDevice</B> member of the PARALLEL_PNP_INFORMATION structure is a pointer to this callback.</P>

<P>A kernel-mode driver can use an <A HREF="cisspd_39o2.htm">IOCTL_INTERNAL_SELECT_DEVICE</A> request or the PPARALLEL_TRY_SELECT_ROUTINE callback to select a parallel device on a parallel port. The parallel port function driver queues a select request if the parallel port is already allocated. However, the PPARALLEL_TRY_SELECT_ROUTINE callback does not queue a select request, and the routine returns immediately if the port cannot be allocated.</P>

<P><I>If a client uses only </I>the PPARALLEL_TRY_SELECT_ROUTINE <I>callback</I> <I>to attempt to select a parallel device, and other clients are contending for the parallel port, the system-supplied function driver for parallel ports might never allocate the port to the client. To ensure success, a client must use an </I>IOCTL_INTERNAL_SELECT_DEVICE <I>request. (The parallel port function driver queues, and subsequently processes, port allocate requests and device select requests in the order in which select device requests are received.)</I></P>

<P>The PPARALLEL_TRY_SELECT_ROUTINE callback runs in the caller's thread at IRQL &lt;= DISPATCH_LEVEL.</P>

<P>For more information, see <A HREF="vspd_8hpj.htm">Selecting and Deselecting an IEEE 1284 Device Attached to a Parallel Port</A>.</P>

<H4>See Also</H4>

<P><A HREF="cisspd_541e.htm">IOCTL_INTERNAL_DESELECT_DEVICE</A>,<A HREF="cisspd_9qk2.htm"> IOCTL_INTERNAL_GET_PARALLEL_PORT_INFO</A>, <A HREF="cisspd_39o2.htm">IOCTL_INTERNAL_SELECT_DEVICE</A>, <A HREF="cisspd_39o3.htm">PARALLEL_1284_COMMAND</A>, <A HREF="cisspd_9yuq.htm">PARALLEL_PNP_INFORMATION</A>,<A HREF="cisspd_0sz6.htm"> PPARALLEL_DESELECT_ROUTINE</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PPARALLEL_TRY_SELECT_ROUTINE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
