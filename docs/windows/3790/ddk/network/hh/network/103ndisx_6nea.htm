<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMoveFromMappedMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMoveFromMappedMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismovefrommappedmemory_nr"></A>NdisMoveFromMappedMemory</H1>

<P><B>NdisMoveFromMappedMemory</B> copies data from device memory that was mapped during initialization with <A HREF="103ndisx_81de.htm"><B>NdisMMapIoSpace</B></A> to a system-space buffer.</P>

<PRE class=syntax><B>VOID
  NdisMoveFromMappedMemory(</B>
    <B>OUT PVOID</B>  <I>Destination</I><B>,</B>
    <B>IN PVOID</B>  <I>Source</I><B>,</B>
    <B>IN ULONG</B>  <I>Length</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Destination</I></DT>

<DD>Pointer to a system-space buffer into which this function copies data from mapped device memory. This buffer must be at least <I>Length</I> bytes in size. </DD>

<DT><I>Source</I></DT>

<DD>Specifies the base virtual address within mapped device memory from which to copy the data. This address must fall at least <I>Length</I> bytes from the end of the mapped range. </DD>

<DT><I>Length</I></DT>

<DD>Specifies the number of bytes to copy.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A NIC driver calls <B>NdisMoveFromMappedMemory</B> to copy data from NIC memory into a buffer in the host, as, for example, when transferring received data into a protocol-supplied buffer or miniport driver-allocated staging buffer. </P>

<P>Both the <I>Source</I> and <I>Destination</I> pointers are virtual addresses. The virtual range specified by <I>Source</I> and <I>Length</I> must fall within a range of device memory that was mapped during initialization with <A HREF="103ndisx_81de.htm"><B>NdisMMapIoSpace</B></A>. </P>

<P>Callers of <B>NdisMoveFromMappedMemory</B> can run at any IRQL when the given <I>Source</I> and <I>Destination</I> are resident. Otherwise, callers must be running at IRQL &lt; DISPATCH_LEVEL, as, for example if the <I>Destination</I> address is on the stack. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_4m42.htm"><B>NdisAllocateMemoryWithTag</B></A>, <A HREF="103ndisx_81de.htm"><B>NdisMMapIoSpace</B></A>, <A HREF="103ndisx_0o36.htm"><B>NdisMoveMappedMemory</B></A>, <A HREF="103ndisx_97qq.htm"><B>NdisMoveToMappedMemory</B></A>, <A HREF="103ndisx_1gc2.htm"><B>NdisReadRegisterUchar</B></A>, <A HREF="103ndisx_4d83.htm"><B>NdisReadRegisterUlong</B></A>, <A HREF="103ndisx_8vzm.htm"><B>NdisReadRegisterUshort</B></A>, <A HREF="103ndisx_1m2a.htm"><B>NdisWriteRegisterUchar</B></A>, <A HREF="103ndisx_4iya.htm"><B>NdisWriteRegisterUlong</B></A>, <A HREF="103ndisx_92lu.htm"><B>NdisWriteRegisterUshort</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMoveFromMappedMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
