<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMSetTimer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMSetTimer">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismsettimer_nr"></A>NdisMSetTimers</H1>

<P><B>NdisMSetTimer</B> sets a timer to fire after a specified interval, thereby running an associated <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A> function when the timer fires.</P>

<PRE class=syntax><B>VOID 
  NdisMSetTimer(
    IN PNDIS_MINIPORT_TIMER</B>  <I>Timer</I><B>,</B>
    <B>IN UINT</B>  <I>MillisecondsToDelay
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Timer</I></DT>

<DD>Pointer to caller-supplied resident storage for a timer object previously initialized with <B>NdisMInitializeTimer</B>.</DD>

<DT><I>MillisecondsToDelay</I></DT>

<DD>Specifies the interval, in milliseconds, to time out before calling the <I>MiniportTimer</I> function. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisMSetTimer</B> causes the driver-supplied <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A> function, which was associated with the timer object when <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> called <A HREF="103ndisx_87aq.htm"><B>NdisMInitializeTimer</B></A>, to run once after the given <I>MillisecondsToDelay</I> expires. Execution of the <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A> function associated with the <I>Timer</I> passed to <B>NdisMSetTimer</B> is episodic, rather than periodic. A miniport driver must call <B>NdisMSetTimer</B> each time the associated timer function should be run. </P>

<P>By contrast, <A HREF="103ndisx_4lte.htm"><B>NdisMSetPeriodicTimer</B></A> causes the associated <I>MiniportTimer</I> function to be run repeatedly whenever the given <I>MillisecondsPeriod</I> expires. At the initial call to <B>NdisMSetPeriodicTimer</B>, the timer object is queued until the <I>MillisecondsPeriod</I> expires, when the <I>MiniportTimer</I> function is run and the timer object is automatically requeued for the next interval. </P>

<P>As a general rule, a miniport driver should allocate and initialize two timer objects if it calls both <B>NdisMSetPeriodicTimer</B> and <B>NdisMSetTimer</B>. Such a driver is likely to have two <I>MiniportTimer</I> functions with different functionality, each associated with a particular timer object when it is initialized with <B>NdisMInitializeTimer</B>. For example, a <I>MiniportTimer</I> function that runs periodically might poll device state at regular intervals, while another <I>MiniportTimer</I> function might retry a particular runtime operation only if it times out on the NIC. </P>

<P>If a miniport driver calls <B>NdisMSetTimer</B>, <A HREF="103ndisx_6pgy.htm"><B>NdisMCancelTimer</B></A>, or <B>NdisMSetPeriodicTimer</B> with the same <I>Timer</I> pointer originally passed to <B>NdisMSetTimer</B> before the originally specified <I>MillisecondsToDelay</I> has expired, the current call cancels its preceding call to <B>NdisMSetTimer</B>. Any call to <B>NdisMSet..Timer</B> resets the given timer to expire at the interval specified in the most recent call and causes the associated <I>MiniportTimer</I> function to run when the most recently specified interval has expired. </P>

<P>Timer resolution on the host varies. Consequently, calling <B>NdisMSetTimer</B> with very small time-out values does not necessarily cause the execution of the <I>MiniportTimer</I> function exactly when the specified interval expires. The minimum practicable interval to specify on Windows&nbsp;2000 and later platforms is ten milliseconds. </P>

<P>Callers of <B>NdisMSetTimer</B> run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="103ndisx_6pgy.htm"><B>NdisMCancelTimer</B></A>, <A HREF="103ndisx_87aq.htm"><B>NdisMInitializeTimer</B></A>, <A HREF="103ndisx_4lte.htm"><B>NdisMSetPeriodicTimer</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMSetTimer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
