<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_TCP_TASK_OFFLOAD</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_TCP_TASK_OFFLOAD">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_tcp_task_offload_nr"></A>OID_TCP_TASK_OFFLOAD</H1>

<P>The OID_TCP_TASK_OFFLOAD OID is queried by the TCP/IP transport to determine the task-offload capabilities of a miniport driver's NIC. After determining which task-offload capabilities a NIC supports, the TCP/IP transport protocol sets this OID to enable the reported capabilities. The TCP/IP protocol can also disable all of a NIC's task-offload capabilities by setting this OID. Only one protocol at a time can enable the task-offload capabilities of a particular NIC. </P>

<H4>Querying a NIC's Task-Offload Capabilities</H4>

<P>When the TCP/IP transport queries OID_TCP_TASK_OFFLOAD, it supplies in the <I>InformationBuffer</I> an <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A> structure. This structure specifies the task-offload version supported by the TCP/IP transport, the encapsulation format for send and receives packets processed by the TCP/IP transport, and the size of the encapsulation header in such packets. With this information, the miniport driver or its NIC can locate the beginning of the first IP header in a transmit packet, which is a prerequisite for performing an offload task.</P>

<P>In response to a query of OID_TCP_TASK_OFFLOAD, a miniport driver returns, in the <I>InformationBuffer</I>, the NDIS_TASK_OFFLOAD_HEADER structure followed immediately by one or more <A HREF="105nstru_3f5e.htm">NDIS_TASK_OFFLOAD</A> structures. Each NDIS_TASK_OFFLOAD structure describes a task-offload capability supported by the miniport driver's NIC. If the miniport driver's NIC supports multiple versions of a particular task-offload capability, it should return one NDIS_TASK_OFFLOAD structure for each version.</P>

<P>Each NDIS_TASK_OFFLOAD structure has a <B>Task</B> member that specifies the particular offload task to which the structure applies. Each NDIS_TASK_OFFLOAD structure also has a <B>TaskBuffer</B> that contains information pertinent to the specified offload task. The information in the <B>TaskBuffer</B> is formatted as one of the following structures:

<UL>
	<LI><A HREF="105nstru_4sfm.htm">NDIS_TASK_TCP_IP_CHECKSUM</A> 
<P>Specifies checksum offload capabilities
</LI>

	<LI><A HREF="105nstru_0inm.htm">NDIS_TASK_IPSEC</A> 
<P>Specifies IP Security offload capabilities
</LI>

	<LI><A HREF="105nstru_9ng2.htm">NDIS_TASK_TCP_LARGE_SEND</A> 
<P>Specifies large-TCP-packet segmentation capabilities
</LI>
</UL>

<P class=note><B>Note</B>&nbsp;&nbsp;If an intermediate driver modifies the contents of TCP packets that it forwards down to an underlying miniport driver such that TCP offload functions cannot be performed on the packets, the intermediate driver should respond to OID_TCP_TASK_OFFLOAD queries with a status of NDIS_STATUS_NOT_SUPPORTED instead of passing the request down to the underlying miniport.</P>

<H4>Enabling a NIC's Task-Offload Capabilities</H4>

<P>After querying a NIC's task-offload capabilities, the TCP/IP transport enables one or more of these capabilities by setting OID_TCP_TASK_OFFLOAD. When setting OID_TCP_TASK_OFFLOAD, the TCP/IP transport supplies in the <I>InformationBuffer</I> an NDIS_TASK_OFFLOAD_HEADER structure, followed immediately by an NDIS_TASK_OFFLOAD structure for each task-offload capability that the transport is enabling.</P>

<P>The <B>Task</B> in each NDIS_TASK_OFFLOAD structure indicates the offload task that the TCP/IP transport is enabling. The TCP/IP transport also enables capabilities for a particular offload task by setting members of the structure (NDIS_TASK_TCP_IP_CHECKSUM, NDIS_TASK_IPSEC, or NDIS_TASK_TCP_LARGE_SEND) in the <B>TaskBuffer</B> of each NDIS_TASK_OFFLOAD structure.</P>

<H4>Changing a NIC's Task-Offload Capabilities</H4>

<P>To change which task-offload capabilities are enabled for a NIC, the TCP/IP transport sets OID_TCP_TASK_OFFLOAD. The miniport driver must enable only those task-offload capabilities specified by the most recent set of OID_TCP_TASK_OFFLOAD. The miniport driver must disable all other task-offload capabilities.</P>

<H4>Disabling a NIC's Task-Offload Capabilities</H4>

<P>To disable all task-offload capabilities supported by a NIC, the TCP/IP transport sets OID_TCP_TASK_OFFLOAD, passing in the <I>InformationBuffer</I> only an NDIS_TASK_OFFLOAD_HEADER structure with the <B>OffsetFirstTask</B> member of this structure set to zero.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_TCP_TASK_OFFLOAD"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
