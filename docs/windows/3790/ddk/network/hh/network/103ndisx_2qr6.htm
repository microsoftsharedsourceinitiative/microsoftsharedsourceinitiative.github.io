<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCmRequestComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCmRequestComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcmrequestcomplete_nr"></A>NdisMCmRequestComplete</H1>

<P><B>NdisMCmRequestComplete</B> returns the final status of a client's OID_GEN_CO_<I>XXX</I> request, for which the MCM driver's <A HREF="104tdlow_7hwy.htm"><I>ProtocolCoRequest</I></A> function previously returned NDIS_STATUS_PENDING. </P>

<PRE class=syntax><B>VOID 
  NdisMCmRequestComplete(
    IN NDIS_STATUS</B>  <I>Status</I><B>,
    IN NDIS_HANDLE</B>  <I>NdisAfHandle</I><B>,
    IN NDIS_HANDLE</B>  <I>NdisVcHandle</I>  <B>OPTIONAL,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisPartyHandle</I>  <B>OPTIONAL,</B>
    <B>IN PNDIS_REQUEST</B>  <I>NdisRequest</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Specifies the final status of the requested operation, either NDIS_STATUS_SUCCESS or any driver-determined NDIS_STATUS_<I>XXX except</I> NDIS_STATUS_PENDING. </DD>

<DT><I>NdisAfHandle</I></DT>

<DD>Specifies the AF handle, which implicitly identifies the client that made this request. The MCM driver originally obtained this handle as an input parameter to its <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A> function, and, more recently from its per-AF state designated by the <I>ProtocolAfContext</I> that was passed in to its <A HREF="104tdlow_7hwy.htm"><I>ProtocolCoRequest</I></A> function. </DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the VC handle or NULL if the request is not VC-specific in nature. For a VC-specific request, the MCM driver obtained this handle from its per-VC state designated by the <I>ProtocolVcContext</I> passed in to its <I>ProtocolCoRequest</I> function. </DD>

<DT><I>NdisPartyHandle</I></DT>

<DD>Specifies the party handle or NULL if the request is not party-specific in nature. For a party-specific request, the MCM driver obtained this handle from its per-party state designated by the <I>ProtocolPartyContext</I> passed in to its <I>ProtocolCoRequest</I> function</DD>

<DT><I>NdisRequest</I></DT>

<DD>Pointer to a buffer formatted as an NDIS_REQUEST structure, which the client that called <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A> supplied. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A call to <B>NdisMCmRequestComplete</B> causes a call to the <A HREF="104tdlow_860i.htm"><I>ProtocolCoRequestComplete</I></A> function of the client that originally called <B>NdisCoRequest</B> with the given handle(s) and <A HREF="103ndisx_0u42.htm"><I>NdisRequest</I></A> pointer. </P>

<P>In response to client-issued requests for which it returns NDIS_STATUS_PENDING, such an MCM driver subsequently must call <B>NdisMCmRequestComplete</B> or <A HREF="103ndisx_0kmq.htm"><B>NdisMCoRequestComplete</B></A> depending on whether each such request was routed to the MCM driver's <A HREF="104tdlow_7hwy.htm"><I>ProtocolCoRequest</I></A> or <A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A> function, respectively. </P>

<P>An MCM driver's <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> and <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A> functions, if any, usually handle client requests passed to <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>, such as the OID_GEN_<I>XXX</I> queries commonly issued to miniport drivers during initialization. Otherwise, NDIS calls the MCM driver's <I>MiniportCoRequest</I> function when a bound protocol calls <B>NdisRequest</B>. </P>

<P>For more information about the sets of OIDs defined for use with <A HREF="103ndisx_1pbm.htm"><B>NdisMCmRequest</B></A>, <B>NdisCoRequest</B>, and <B>NdisRequest</B>, see <A HREF="21oidovw_8q9e.htm">NDIS Object Identifiers</A>. </P>

<P>Callers of <B>NdisMCmRequestComplete</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A>, <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A>, <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A>, <A HREF="103ndisx_1pbm.htm"><B>NdisMCmRequest</B></A>, <A HREF="103ndisx_0kmq.htm"><B>NdisMCoRequestComplete</B></A>, <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>, <A HREF="105nstru_3f8y.htm">NDIS_REQUEST</A>, <A HREF="104tdlow_7hwy.htm"><I>ProtocolCoRequest</I></A>, <A HREF="104tdlow_860i.htm"><I>ProtocolCoRequestComplete</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCmRequestComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
