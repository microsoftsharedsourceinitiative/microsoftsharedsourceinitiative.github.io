<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Receiving Data on a PIO NIC</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Receiving Data on a PIO NIC">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_receiving_data_on_a_pio_nic_ng"></A>Receiving Data on a PIO NIC</H3>

<P>A miniport driver for a programmable I/O (PIO) network interface card (NIC) reads data from the NIC ports by calling <B>NdisRawReadPort</B><I>Xxx</I> and using ports previously claimed with <A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A>. Typically such a device indicates the lookahead portion of a received packet to bound protocol drivers by calling a filter-specific <B>Ndis</B><I>Xxx</I><B>IndicateReceive</B> function and transfers the rest of the data to interested protocol drivers in its <A HREF="101mini_9a42.htm"><I>MiniportTransferData</I></A> function. After the data is transferred, the data can be overwritten by new data after receive interrupts are reenabled.</P>

<P>A miniport driver for a PIO NIC should ensure that new data is not missed because of the time delay in transferring current data to an upper layer protocol driver. If a NIC has a relatively small on-board FIFO buffer, the miniport driver can preallocate a buffer in its <I>MiniportInitialize</I> function and then stage the received data into this buffer to be indicated up. Staging is done to try to keep the FIFO as empty as possible and available for new incoming data.</P>

<P>Alternatively, the miniport driver can indicate up data copied directly from the NIC port and move the rest of the received data directly from the NIC when its <I>MiniportTransferData</I> function is called. This receive technique incurs a delay equal to the time between when the received data was indicated up by calling <B>Ndis</B><I>Xxx</I><B>IndicateReceive</B> and when <I>MiniportTransferData</I> is called and moves the received data into the buffer provided to <I>MiniportTransferData</I>.</P>

<P>If the miniport driver calls <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> or <A HREF="103ndisx_6f02.htm"><B>NdisMCoIndicateReceivePacket</B></A>, it transfers the data into buffers chained to a preallocated packet before it makes the call.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Receiving%20Data%20on%20a%20PIO%20NIC"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
