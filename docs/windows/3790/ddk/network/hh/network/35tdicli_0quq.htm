<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ClientEventErrorEx</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ClientEventErrorEx">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_clienteventerrorex_nr"></A>ClientEventErrorEx</H1>

<P>The ClientEventErrorEx routine is an event handler that the underlying TDI transport calls in response to an error, either in the transport itself or in a still lower network driver, that makes I/O on a particular local transport address unreliable or impossible. </P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>ClientEventErrorEx(
</B>    <B>IN PVOID</B>  <I>TdiEventContext</I><B>,
</B>    <B>IN NTSTATUS</B>  <I>Status</I><B>,
</B>    <B>IN PVOID</B>  <I>Buffer
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>TdiEventContext</I></DT>

<DD>Pointer to the client-supplied context provided in the IRP that was set up with <B>TdiBuildSetEventHandler</B> when ClientEventErrorEx was registered with the underlying transport.</DD>

<DT><I>Status</I></DT>

<DD>Specifies an NTSTATUS value that provides information about the condition that caused this call to ClientEventErrorEx.</DD>

<DT><I>Buffer</I></DT>

<DD>Pointer to a buffer containing additional transport-supplied information about the error. For example, the system TCP/IP transport can supply information that identifies the port when it indicates that a destination port is unreachable. 
</DD>
</DL>

<H4>Return Value</H4>

<P>ClientEventErrorEx can return STATUS_SUCCESS.</P>

<H4>Comments</H4>

<P>A call to ClientEventErrorEx notifies the local-node client of an error condition in the underlying TDI transport, in one of the lower protocol layers of the transport stack, or in the underlying NDIS NIC driver to which the transport stack is bound. If such an error occurs, the TDI transport calls all currently registered ClientEventErrorEx handlers for each client on every open address that depends on the underlying driver that encountered the error condition.</P>

<P>A call to ClientEventErrorEx can indicate a catastrophic failure. After such a call, the client should cease to use, and in some cases close, the file object representing the transport address associated with this notification. If this address is associated with an endpoint-to-endpoint connection, ClientEventErrorEx can assume the connection is broken as well. However, such a call does not necessarily indicate a fatal error. For example, the TCP/IP notification of an "unreachable port" is not a catastrophic error. The client might set a timer and make another attempt to connect to the port when its timer expires. </P>

<P>When notified of a catastropich error, the ClientEventErrorEx handler usually cleans up any state it was maintaining for the address and for all connection endpoints it has associated with that address. That is, the client notifies higher level components for which it is handling pending operations on the address of the failure. For example, the client might forward such an indication to a Windows Sockets application that was using a particular port. Then, the client releases all resources it previously allocated that are relevant to those operations. </P>

<P>ClientEventErrorEx must be capable of carrying out its operations at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="35tdicli_98tu.htm"><B>ClientEventError</B></A>, <A HREF="34bldmac_6sxe.htm"><B>TdiBuildSetEventHandler</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ClientEventErrorEx"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
