<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Receiving Data on a Memory-Mapped Device</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Receiving Data on a Memory-Mapped Device">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_receiving_data_on_a_memory_mapped_device_ng"></A>Receiving Data on a Memory-Mapped Device</H3>

<P>A miniport driver that manages a network interface card (NIC) with on-board memory typically transfers the received data in <A HREF="101mini_9a42.htm"><I>MiniportTransferData</I></A> directly from the NIC to a buffer supplied in the <I>MiniportTransferData</I> call. Like a programmable I/O (PIO) miniport driver, the miniport driver can stage the receive if there is a possibility that new data will be lost because of the latency caused by the direct transfer from the NIC to the protocol driver-supplied buffers.</P>

<P>The miniport driver calls <B>NdisM</B><I>Xxx</I><B>IndicateReceive</B> to indicate up an amount of data equal to the lookahead size or, if the buffer is small and the miniport driver has the complete buffer, it indicates up the complete buffer. <I>MiniportTransferData</I> calls <A HREF="103ndisx_6nea.htm"><B>NdisMoveFromMappedMemory</B></A> to transfer data from the NIC’s on-board memory to the protocol driver’s packet or to a staging buffer. After the data is transferred, the miniport driver can reenable interrupts so that new data can be received.</P>

<P>If the miniport driver calls <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> or <A HREF="103ndisx_6f02.htm"><B>NdisMCoIndicateReceivePacket</B></A>, it transfers the data into buffers that are chained to a preallocated packet before it makes the call.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Receiving%20Data%20on%20a%20Memory-Mapped%20Device"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
