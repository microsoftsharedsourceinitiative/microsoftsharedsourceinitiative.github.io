<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisInterlockedRemoveHeadList</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisInterlockedRemoveHeadList">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_containing_record_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisinterlockedremoveheadlist_nr"></A>NdisInterlockedRemoveHeadList</H1>

<P><B>NdisInterlockedRemoveHeadList</B> removes an entry, usually a packet, from the head of a doubly linked list so that access to the list is synchronized in a multiprocessor-safe way. </P>

<PRE class=syntax><B>PLIST_ENTRY
  NdisInterlockedRemoveHeadList(</B>
    <B>IN PLIST_ENTRY</B>  <I>ListHead</I><B>,</B>
    <B>IN PNDIS_SPIN_LOCK</B>  <I>SpinLock</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ListHead</I></DT>

<DD>Pointer to the head of the doubly linked list from which an entry is to be removed. </DD>

<DT><I>SpinLock</I></DT>

<DD>Pointer to a caller-supplied spin lock, used to synchronize access to the list.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisInterlockedRemoveHeadList</B> returns a pointer to the dequeued entry. If the list was empty, it returns NULL. </P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>Before calling any <B>NdisInterlocked..List</B> function, a driver must initialize the variable at <I>ListHead</I> with <A HREF="103ndisx_5r02.htm"><B>NdisInitializeListHead</B></A> and the variable at <I>SpinLock</I> with <A HREF="103ndisx_7mk2.htm"><B>NdisAllocateSpinLock</B></A>. The driver also must provide resident storage for these variables and for its internal queue. </P>

<P>Before calling <B>NdisInterlockedRemoveHeadList</B>, entries are queued with one or more calls to the <B>NdisInterlockedInsert..List</B> functions. </P>

<P>The caller-supplied spin lock prevents any other function from accessing the driver’s internal queue while <B>NdisInterlockedRemoveHeadList</B> is removing an entry, even when the driver is running on a multiprocessor machine. </P>

<P><B>NdisInterlockedRemoveHeadList</B> raises IRQL to DISPATCH_LEVEL when it acquires the given spin lock and restores the original IRQL before it returns control. Consequently, any driver function that calls <B>NdisInterlockedRemoveHeadList</B> cannot be pageable code. </P>

<P>To convert a returned value back to the address of the inserted entry, a driver can use the <A HREF="JavaScript:hhobj_1.Click()">CONTAINING_RECORD</A> macro.</P>

<P>Callers of <B>NdisInterlockedRemoveHeadList</B> run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_7mk2.htm"><B>NdisAllocateSpinLock</B></A>, <A HREF="103ndisx_5r02.htm"><B>NdisInitializeListHead</B></A>, <A HREF="103ndisx_9pte.htm"><B>NdisInterlockedInsertHeadList</B></A>, <A HREF="103ndisx_7j02.htm"><B>NdisInterlockedInsertTailList</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisInterlockedRemoveHeadList"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
