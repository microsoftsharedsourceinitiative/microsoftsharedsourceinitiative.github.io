<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TdiDeregisterPnPHandlers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TdiDeregisterPnPHandlers">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdideregisterpnphandlers_nr"></A>TdiDeregisterPnPHandlers</H1>

<P>The <B>TdiDeregisterPnPHandlers</B> function is the reciprocal of <B>TdiRegisterPnPHandlers</B>. It disables further PnP and power-state notifications to a set of ClientPnPXxx previously registered on a particular transport-to-NIC binding. </P>

<PRE class=syntax><B>NTSTATUS</B>
  <B>TdiDeregisterPnPHandlers(</B>
    <B>IN HANDLE</B>  <I>BindingHandle</I>
    <B>);</B></PRE>

<H4>Parameter</H4>

<DL>
<DT><I>BindingHandle</I></DT>

<DD>Specifies the handle returned by the client's preceding call to <B>TdiRegisterPnPHandlers</B>. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>TdiDeregisterPnPHandlers</B> returns STATUS_SUCCESS if the registration was released. Otherwise, it can return either of the following:

<DL>
<DT>STATUS_INSUFFICIENT_RESOURCES</DT>

<DD>TDI could not allocate the resources it needed to complete this request at this time. Because the availability of system resources is dynamic, a subsequent call from the same client can succeed.</DD>

<DT>STATUS_NETWORK_BUSY</DT>

<DD>TDI failed the call to prevent a potential deadlock because a ClientPnPXxx routine is currently running. A subsequent call from the same client can succeed. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>TdiKrnl.h</I>. Include <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>A successful call to <B>TdiDeregisterPnPHandlers</B> stops further PnP/power, bind, unbind, and net-address-change notifications from being sent as calls to the ClientPnP<I>Xxx</I> routines that were previously registered with <B>TdiRegisterPnPHandlers</B> on a particular transport-to-NIC binding.</P>

<P>When <B>TdiDeregisterPnPHandlers</B> returns STATUS_SUCCESS, the caller should release any resources that it allocated to maintain state for the given binding. For example, the client should release any memory it allocated to maintain per-binding state and all other per-binding resources that it allocated, such as its internal list for currently registered network addresses on this binding that were maintained by its ClientPnPAddNetAddress and ClientPnPDelNetAddress routines. </P>

<P>Callers of <B>TdiDeregisterPnPHandlers</B> must be running at IRQL &lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="35tdicli_8d4i.htm"><B>ClientPnPAddNetAddress</B></A>, <A HREF="35tdicli_3k36.htm"><B>ClientPnPBindingChange</B></A>, <A HREF="35tdicli_33hu.htm"><B>ClientPnPDelNetAddress</B></A>, <A HREF="35tdicli_4h9u.htm"><B>ClientPnPPowerChange</B></A>, <A HREF="33tdifun_5boy.htm"><B>TdiRegisterPnPHandlers</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TdiDeregisterPnPHandlers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
