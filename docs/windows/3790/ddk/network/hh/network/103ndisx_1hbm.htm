<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisIMGetCurrentPacketStack</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisIMGetCurrentPacketStack">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisimgetcurrentpacketstack_nr"></A>NdisIMGetCurrentPacketStack</H1>

<P>The <B>NdisIMGetCurrentPacketStack</B> function returns a pointer to an NDIS_PACKET_STACK structure that is a descriptor for the current stack in a packet. <B>NdisIMGetCurrentPacketStack</B> also indicates if any stack locations are available in the packet.</P>

<PRE class=syntax><B>PNDIS_PACKET_STACK
  NdisIMGetCurrentPacketStack(
    IN PNDIS_PACKET  </B><I>Packet<B>
    </B></I><B>OUT BOOLEAN  </B>*<I>StacksRemaining</I><B>
<I>    </I>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Packet</I></DT>

<DD>Pointer to an <A HREF="105nstru_6jn6.htm">NDIS_PACKET</A> structure that is the descriptor for a packet. </DD>

<DT><I>StacksRemaining</I></DT>

<DD>Pointer to a caller-supplied variable in which NDIS returns TRUE to indicate that one or more stack locations are available in the packet or FALSE to indicate that the number of stack locations is zero or that the maximum number of stack locations has been exceeded. The intermediate driver can reuse this packet in a call to <A HREF="103ndisx_88s2.htm"><B>NdisSendPackets</B></A> or <A HREF="103ndisx_15de.htm"><B>NdisCoSendPackets</B></A> only if the value returned is TRUE.</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisIMGetCurrentPacketStack</B> returns a pointer to an NDIS_PACKET_STACK structure that is a descriptor for the current stack in a packet. The NDIS_PACKET_STACK structure is defined as follows:</P>

<PRE class=syntax>typedef struct _NDIS_PACKET_STACK
{
    ULONG_PTR   IMReserved[2];
    ULONG_PTR   NdisReserved[4];
} NDIS_PACKET_STACK, *PNDIS_PACKET_STACK;
</PRE>

<P>The members of this structure contain the following information:

<DL>
<DT><B>IMReserved</B></DT>

<DD>An array of two pointers that the caller of <B>NdisIMGetCurrentPacketStack</B> can use.</DD>

<DT><B>NdisReserved</B></DT>

<DD>An array of pointers that NDIS uses.</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>After calling <B>NdisIMGetCurrentPacketStack</B> to obtain a pointer to an NDIS_PACKET_STACK structure, an intermediate driver can store or retrieve driver-defined information at the locations referenced by the pointers in the <I>IMReserved</I> array. This capability allows the intermediate driver to “reuse” a packet--that is, pass the packet to the adjacent driver without having to allocate an additional packet into which the intermediate driver copies the original packet. An intermediate driver typically calls <B>NdisIMGetCurrentPacketStack</B> in the context of its send and receive functions.</P>

<P>NDIS modifies the stack pointer as the packet traverses through each intermediate driver. If all stack locations for intermediate drivers are in use in the packet, <B>NdisIMGetCurrentPacketStack</B> returns NULL and, in <I>StacksRemaining</I>, FALSE. </P>

<P>If <B>NdisIMGetCurrentPacketStack</B> returns FALSE in <I>StacksRemaining</I>, the intermediate driver must allocate a packet descriptor from a preallocated packet pool and copy the original packet into the newly allocated packet before passing the packet to another driver. </P>

<P>Note that the number of stack locations in a packet cannot be dynamically altered. The number of stack locations can be increased by incrementing the value at &lt;number of stack locations&gt; in the following registry entry:</P>

<P><B>HKLM\SYSTEM\CCS\ Services\NDIS\Parameters\PacketStackSize DWORD:&lt;</B>number of stack locations&gt;</P>

<P>After the changing the registry, the system must be rebooted for the change to take effect. The default value for the number of stack locations is two. This default value provides each NDIS packet with one NDIS_PACKET_STACK structure that is available for intermediate drivers. </P>

<P>System support for <B>NdisIMGetCurrentPacketStack</B> is available in Windows XP and later OS versions.</P>

<P>Callers of <B>NdisIMGetCurrentPacketStack</B> run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A>, <A HREF="103ndisx_6t82.htm"><B>NdisAllocatePacketPool</B></A>, <A HREF="103ndisx_390y.htm"><B>NdisAllocatePacketPoolEx</B></A>, <A HREF="103ndisx_9j02.htm"><B>NdisGetPoolFromPacket</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisIMGetCurrentPacketStack"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
