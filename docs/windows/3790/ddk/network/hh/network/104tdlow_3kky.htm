<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProtocolCmRegisterSap</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProtocolCmRegisterSap">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocolcmregistersap_nr"></A>ProtocolCmRegisterSap</H1>

<P>The <I>ProtocolCmRegisterSap</I> function is a required function that is called by NDIS to request that a call manager register a SAP (service access point) on behalf of a connection-oriented client.</P>

<PRE class=syntax><B>NDIS_STATUS 
</B>  <B>ProtocolCmRegSap(
</B>    <B>IN NDIS_HANDLE</B>  <I>CallMgrAfContext</I><B>,</B>
    <B>IN PCO_SAP</B>  <I>Sap</I><B>,</B>
    <B>IN NDIS_HANDLE </B> <I>NdisSapHandle</I><B>,</B>
    <B>OUT PNDIS_HANDLE</B>  <I>CallMgrSapContext</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>CallMgrAfContext</I></DT>

<DD>Specifies the handle to a call-manager allocated context area in which the call manager maintains its per-open AF state. The call manager supplied this handle to NDIS from its <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A> function.</DD>

<DT><I>Sap</I></DT>

<DD>Pointer to a media-specific CO_SAP structure that contains the specific SAP that a connection-oriented client is registering.</DD>

<DT><I>NdisSapHandle</I></DT>

<DD>Specifies a handle, supplied by NDIS, that uniquely identifies this SAP. This handle is opaque to the call manager and reserved for NDIS library use.</DD>

<DT><I>CallMgrSapContext</I></DT>

<DD>On return, specifies the handle to a call manager-supplied context area in which the call manager maintains state about this SAP.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>ProtocolCmRegisterSap</I> returns the status of its operation(s) as one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>Indicates that the call manager successfully allocated and/or initialized any necessary resources to register and maintain the SAP. In addition, it also indicates that the SAP was registered successfully as required by the network media that the call manager supports.</DD>

<DT>NDIS_STATUS_PENDING</DT>

<DD>Indicates that the call manager will complete the processing of this request asynchronously. Call managers must call <A HREF="103ndisx_4xgy.htm"><B>NdisCmRegisterSapComplete</B></A> when all processing has been completed to signal NDIS that the registration is finished.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>Indicates that the call manager was unable to allocated and/or initialize its resources required to register the SAP on behalf of the connection-oriented client.</DD>

<DT>NDIS_STATUS_INVALID_DATA</DT>

<DD>Indicates that the specification provided at <I>Sap</I> is invalid or cannot be supported.</DD>

<DT>NDIS_STATUS_<I>XXX</I></DT>

<DD>Indicates that the call manager encountered an error in attempting to register the SAP for the connection-oriented client. The return code is appropriate to the error and could be a return code propagated from another NDIS library function.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><I>ProtocolCmMakeCall</I> communicates with network control devices or other media-specific agents, as necessary, to register the SAP, as specified at <I>Sap</I>, on the network for a connection-oriented client. Such actions could include, but are not limited to communicating with switching hardware, communicating with a network control station, or other actions that are appropriate to the network medium.</P>

<P>If a call manager is required to communicate with networking control agents (in other words, a network switch) it should use a virtual connection to the network control agent that it established in its <I>ProtocolBindAdapter</I> function. Stand-alone call managers communicate through the underlying miniport driver by calling <A HREF="103ndisx_15de.htm"><B>NdisCoSendPackets</B></A>. Miniport drivers with integrated call-management support never call <B>NdisCoSendPackets</B>. Instead, they transmit the data directly across the network.</P>

<P>In addition, <I>ProtocolCmRegisterSap</I> should perform any necessary allocations of dynamic resources and structures that the call manager needs to maintain state information about the SAP on behalf of the connection-oriented client. Such resources include, but are not limited to, memory buffers, data structures, events, and other such similar resources. A call manager must also initialize any resources it allocates before returning control to NDIS. Call managers must store the NDIS-supplied handle identifying the SAP, provided at <I>NdisSapHandle</I>, in their context area for future use.</P>

<P>If <I>ProtocolCmRegisterSap</I> will return NDIS_STATUS_SUCCESS, it should, after allocating the per-SAP state area, set the address of this state area in <I>CallMgrSapContext</I> before returning control to NDIS. To do this, dereference <I>CallMgrSapContext</I> and store a pointer to the data area as the value of the handle. For example:</P>

<PRE>*CallMgrSapContext = SomeBuffer ;</PRE>

<P>If the given SAP that is already registered by another connection-oriented client, the call manager must fail the request and return NDIS_STATUS_INVALID_DATA.</P>

<P>After a call manager has registered a SAP on behalf of a connection-oriented client, it notifies that client of an incoming call offer directed to that SAP by calling <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>.</P>

<P><I>ProtocolCmRegisterSap</I> must be written so that it can run at IRQL = DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>, <A HREF="103ndisx_4xgy.htm"><B>NdisCmRegisterSapComplete</B></A>, <A HREF="103ndisx_15de.htm"><B>NdisCoSendPackets</B></A>, <A HREF="104tdlow_46ia.htm"><I>ProtocolCmDeregisterSap</I></A>, <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProtocolCmRegisterSap"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
