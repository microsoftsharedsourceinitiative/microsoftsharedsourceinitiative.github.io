<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a VC</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Creating a VC">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_creating_a_vc_ng"></A>Creating a VC</H3>

<P>Before making an outgoing call, a connection-oriented client initiates the creation a virtual connection (VC). Before indicating an incoming call to a connection-oriented client, a call manager or an MCM driver initiates the creation of a VC . After the VC has been set up and activated, client data can be transmitted and/or received on the VC.</P>

<P>A call manager or an MCM driver can also initiate the creation of a VC on which signaling messages are exchanged with network components, such as a network switch.</P>

<H4>Client-Initiated Creation of a VC</H4>

<P>Before making a call with <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A> (see <A HREF="401condis_69yf.htm">Making a Call</A>), a connection-oriented client calls <A HREF="103ndisx_3qia.htm"><B>NdisCoCreateVc</B></A> to initiate the creation of a VC.</P>

<P>The following figure shows a client of a call manager initiating the creation of a VC.</P>

<P><IMG SRC="images/cm_05.gif" ALT="" BORDER=0></P>



<P><A NAME="ddk_client_initiated_creation_of_a_vc_call_manager_present__ng"></A></P>

<P><B>Client-Initiated Creation of a VC (Call Manager Present)</B></P>

<P>The following figure shows a client of an MCM driver initiating the creation of a VC.</P>

<P><IMG SRC="images/fig1_05.gif" ALT="" BORDER=0></P>



<P><A NAME="ddk_client_initiated_creation_of_a_vc_mcm_driver_present__ng"></A></P>

<P><B>Client-Initiated Creation of a VC (MCM Driver Present)</B></P>

<P>When a connection-oriented client of a call manager calls <B>NdisCoCreateVC</B>, NDIS calls, as a synchronous operation, the <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVC</I></A> function of the call manager and the <A HREF="101mini_7otu.htm"><I>MiniportCoCreateVc</I></A> function of the underlying miniport (see <A HREF="#ddk_client_initiated_creation_of_a_vc_call_manager_present__ng">Client-Initiated Creation of a VC (Call Manager Present)</A>). NDIS passes to both <I>ProtocolCoCreateVC</I> and <I>MiniportCoCreateVC</I> an <I>NdisVcHandle</I> that represents the VC. If the call to <B>NdisCoCreateVc</B> is successful, NDIS returns the <I>NdisVcHandle</I> to <B>NdisCoCreateVc</B>.</P>

<P><I>ProtocolCoCreateVc</I> allocates and initializes any dynamic resources and structures that the call manager requires to perform subsequent operations on a VC that will be activated. <I>MiniportCoCreateVc</I> allocates and initializes any resources that the miniport requires to maintain state information about the VC. Both <I>ProtocolCoCreateVc</I> and <I>MiniportCoCreateVc</I> store the <I>NdisVcHandle</I>. </P>

<P>When a connection-oriented client of an MCM driver, the call to <B>NdisCoCreateVc</B> causes NDIS to call the MCM driver's <I>ProtocolCoCreateVc</I> function (see <A HREF="#ddk_client_initiated_creation_of_a_vc_mcm_driver_present__ng">Client-Initiated Creation of a VC (MCM Driver Present)</A>). In this case, <I>ProtocolCoCreateVc</I> performs the necessary allocation and initialization of resources for the VC. There is no call (internal or otherwise) to <I>MiniportCoCreateVc</I>, since an MCM driver does not supply such a function.</P>

<H4>Call-Manager-Initiated Creation of a VC</H4>

<P>Before indicating an incoming call to a connection-oriented client with <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A> (see <A HREF="401condis_3tyf.htm">Indicating an Incoming Call</A>), a call manager calls <B>NdisCoCreateVc</B> to initiate the creation of a VC (see the following figure).</P>

<P><IMG SRC="images/cm_06.gif" ALT="" BORDER=0></P>

<P><B>Call Manager Initiates VC Creation</B></P>

<P>When a call manager calls <B>NdisCoCreateVC</B>, NDIS calls, as a synchronous operation, the <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVC</I></A> function of the connection-oriented client that registered the SAP on which the call is being received, as well as the <A HREF="101mini_7otu.htm"><I>MiniportCoCreateVc</I></A> function of the underlying miniport. NDIS passes to both <I>ProtocolCoCreateVC</I> and <I>MiniportCoCreateVC,</I> an <I>NdisVcHandle</I> that represents the VC. If the call to <B>NdisCoCreateVc</B> is successful, NDIS returns the <I>NdisVcHandle</I> to <B>NdisCoCreateVc</B>.</P>

<H4>MCM Driver-Initiated Creation of a VC</H4>

<P>Before indicating an incoming call to a connection-oriented client with <A HREF="103ndisx_5zoy.htm"><B>NdisMCmDispatchIncomingCall</B></A> (see <A HREF="401condis_3tyf.htm">Indicating an Incoming Call</A>), an MCM driver calls <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A> to initiate the creation of a VC (see the following figure).</P>

<P><IMG SRC="images/fig1_06.gif" ALT="" BORDER=0></P>

<P><B>An MCM Driver Initiates VC Creation</B></P>

<P>When an MCM driver calls <B>NdisMCmCreateVC</B>, NDIS calls, as a synchronous operation before <B>NdisMCmCreateVC</B> returns, the <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVC</I></A> function of the connection-oriented client that registered the SAP on which the call is being received. NDIS passes to ProtocolCoCreateVC an <I>NdisVcHandle</I> that represents the VC. If the call to <B>NdisMCmCreateVc</B> is successful, NDIS returns the <I>NdisVcHandle</I> to <B>NdisMCmCreateVc</B>.</P>

<P><I>ProtocolCoCreateVc</I> allocates and initializes any dynamic resources and structures that the client requires to perform subsequent operations on the VC. <I>ProtocolCoCreateVc</I> also stores the <I>NdisVcHandle</I>.</P>

<P>Note that when an MCM driver creates a VC for exchanging signaling messages with a network component, it does not use <B>Ndis</B><I>Xxx</I> calls to create a VC. In fact, an MCM driver does not use <B>Ndis</B><I>Xxx</I> calls to create, activate, deactivate, or delete such VCs. Instead, an MCM driver performs these operations internally. Such VCs are therefore opaque to NDIS.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Creating%20a%20VC"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
