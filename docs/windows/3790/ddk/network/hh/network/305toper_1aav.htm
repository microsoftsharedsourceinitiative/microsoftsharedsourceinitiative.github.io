<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Packaging and Submitting IOCTL Requests</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Packaging and Submitting IOCTL Requests">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_packaging_and_submitting_ioctl_requests_ng"></A>Packaging and Submitting IOCTL Requests</H1>

<P>The following figure shows how TDI clients set up and submit TDI_<I>XXX</I> IOCTL requests to their underlying TDI transports.</P>

<P><IMG SRC="images/426-01.gif" ALT="" BORDER=0></P>

<P><B>Preparing an IOCTL IRP and Making a Request</B></P>

<P>A kernel-mode client prepares its own IOCTL IRPs for communication with the underlying transport driver, using one of the <B>TdiBuild</B><I>Xxx </I>macros summarized in <A HREF="304tovw_136v.htm">TDI Routines, Macros, and Callbacks</A>. The client can either obtain an IRP from a still higher layer of the network or call <A HREF="34bldmac_8df6.htm"><B>TdiBuildInternalDeviceControlIrp</B></A> to allocate an IRP for itself. </P>

<P>A subsequent call to a <B>TdiBuild</B><I>Xxx</I> macro sets the appropriate TDI_<I>XXX</I> code in the <B>MinorFunctionCode</B> of the IRP and sets the <B>MajorFunctionCode</B> to IRP_MJ_INTERNAL_DEVICE_CONTROL for the underlying transport driver, as well as setting the client-supplied and IOCTL-specific parameters to each <B>TdiBuild</B><I>Xxx</I> macro in the IRP. For example, to set up the TDI_ASSOCIATE_ADDRESS request, mentioned in the preceding section, the client passes both a pointer to the file object that represents its connection endpoint and the handle to the file object that represents its transport address when it uses <B>TdiBuildAccept</B>. </P>

<P>When the IRP is set up, the client calls <B>IoCallDriver</B> to submit its IOCTL request to its underlying transport. The transport's <A HREF="31tddisp_2sfm.htm">TdiDispatchInternalDeviceControl</A> routine receives the client-supplied IRP from <B>IoCallDriver</B> and usually forwards the client's request to an internal driver function for further processing. The transport completes the requested operation, sets the I/O status block in the IRP with the results of the operation, and calls <A HREF="33tdifun_8z1u.htm"><B>TdiCompleteRequest</B></A> (or <B>IoCompleteRequest</B>) with the IRP when the client's request has been satisfied. </P>

<P>If the client supplied the entry point of its IoCompletion routine when it called the <B>TdiBuild</B><I>Xxx</I> macro, the client's <B>IoCompletion</B> routine is called when the transport completes the requested operation and calls <B>Io/TdiCompleteRequest</B> with the client-supplied TDI_<I>XXX</I> IOCTL request. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Packaging%20and%20Submitting%20IOCTL%20Requests"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
