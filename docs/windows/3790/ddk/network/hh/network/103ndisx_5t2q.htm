<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCoSendComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCoSendComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcosendcomplete_nr"></A>NdisMCoSendComplete</H1>

<P><B>NdisMCoSendComplete</B> returns a packet descriptor and its associated resources to the protocol that requested the send.</P>

<PRE class=syntax><B>VOID 
  NdisMCoSendComplete(
    IN NDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisVcHandle</I><B>,</B>
    <B>IN PNDIS_PACKET</B>  <I>Packet</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Specifies the status of the send operation, either NDIS_STATUS_SUCCESS or any driver-determined NDIS_STATUS_<I>XXX except</I> NDIS_STATUS_PENDING. </DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle to the VC on which the given packet data was to be sent. The miniport driver recently obtained this handle from its <I>MiniportVcContext</I>, which was passed an input parameter to its <A HREF="101mini_0ycy.htm"><I>MiniportCoSendPackets</I></A> function. </DD>

<DT><I>Packet</I></DT>

<DD>Pointer to the packet descriptor with chained buffer descriptors mapping the buffered protocol-supplied data that was to be sent. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>NDIS assumes that any connection-oriented NIC driver is a deserialized miniport driver; that is, NDIS neither serializes nor queues incoming sends for drivers that have a <I>MiniportCoSendPackets</I> function. </P>

<P>Such a connection-oriented NIC driver must call <B>NdisMCoSendComplete</B> with each packet descriptor that NDIS forwards to its <I>MiniportCoSendPackets</I> function eventually, thereby returning the packet descriptor and associated resources to the allocating protocol that initiated the send operation. The miniport driver's call to <B>NdisMCoSendComplete</B> does not necessarily mean that all data associated with a packet descriptor has been transmitted over the network to its destination. Possibly the <I>MiniportCoSendPackets</I> function actually completes each input send packet with <B>NdisMCoSendComplete</B> after copying the protocol-supplied data into the NIC's transmit buffers, or perhaps the miniport driver holds send packets in an internal queue until the packet data has been transmitted over the network before it calls <B>NdisMCoSendComplete</B>. </P>

<P>If the VC identified by <I>NdisVcHandle</I> was activated by the NIC driver's <A HREF="101mini_7piq.htm"><I>MiniportCoActivateVc</I></A> function with INDICATE_END_OF_TX set in the <B>Flags</B> member of the <A HREF="105nstru_74oi.htm">CO_MEDIA_PARAMETERS</A> structure, the miniport driver cannot call <B>NdisMCoSendComplete</B> until the transmission of the packet data actually is completed. </P>

<P>In any case, a call to <B>NdisMCoSendComplete</B> causes NDIS to call the <A HREF="104tdlow_2t4i.htm"><I>ProtocolCoSendComplete</I></A> function of the driver that originally called <A HREF="103ndisx_15de.htm"><B>NdisCoSendPackets</B></A> with the packet descriptor at <I>Packet</I>. </P>

<P>With <B>NdisMCoSendComplete</B>, the miniport driver restores ownership of the given packet descriptor and of all resources associated with it to the protocol that originally allocated these resources. The NIC driver can no longer access the packet descriptor, any buffer descriptors chained to the packet descriptor or the buffers they map, and the out-of-band data block associated with the packet descriptor after calling <B>NdisMCoSendComplete</B>. </P>

<P>Callers of <B>NdisMCoSendComplete</B> can be running at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="105nstru_74oi.htm">CO_MEDIA_PARAMETERS</A>, <A HREF="101mini_7piq.htm"><I>MiniportCoActivateVc</I></A>, <A HREF="101mini_0ycy.htm"><I>MiniportCoSendPacket</I><B>s</B></A>, <A HREF="103ndisx_15de.htm"><B>NdisCoSendPackets</B></A>, <A HREF="104tdlow_2t4i.htm"><I>ProtocolCoSendComplete</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCoSendComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
