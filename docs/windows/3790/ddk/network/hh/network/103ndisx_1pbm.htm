<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCmRequest</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCmRequest">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcmrequest_nr"></A>NdisMCmRequest</H1>

<P><B>NdisMCmRequest</B> issues an OID_GEN_CO_<I>XXX</I> request from an MCM driver to a client. </P>

<PRE class=syntax><B>NDIS_STATUS 
  NdisMCmRequest(
    IN NDIS_HANDLE</B>  <I>NdisAfHandle</I> <B>,
    IN NDIS_HANDLE</B>  <I>NdisVcHandle</I>  <B>OPTIONAL,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisPartyHandle</I>  <B>OPTIONAL,</B>
    <B>IN OUT PNDIS_REQUEST</B>  <I>NdisRequest</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>NdisAfHandle</I></DT>

<DD>Specifies the handle identifying the open address family and implicitly the client to which this request is directed. The MCM driver originally obtained this handle as an input parameter to its <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A> function. </DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle identifying the VC for which the caller is requesting or setting information if the request is VC-specific, or this parameter is NULL. For any VC-specific request, the caller originally obtained this handle either when it created the VC with <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A>, or as an input parameter to its <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A> function.</DD>

<DT><I>NdisPartyHandle</I></DT>

<DD>Specifies the handle identifying the party on a multipoint VC for which the caller is requesting or setting information if the request is party-specific, or this parameter is NULL. For any party-specific request, the MCM driver originally obtained this handle as an input parameter to its <A HREF="104tdlow_9trm.htm"><I>ProtocolCmAddParty</I></A> function. </DD>

<DT><I>NdisRequest</I></DT>

<DD>Pointer to a caller-allocated resident buffer, formatted as a structure of type <A HREF="105nstru_3f8y.htm">NDIS_REQUEST</A> set up by the caller. 
</DD>
</DL>

<H4>Return Value</H4>

<P>When <B>NdisMCmRequest</B> returns anything other than NDIS_STATUS_PENDING, the caller should make an internal call to its <A HREF="104tdlow_860i.htm"><I>ProtocolCoRequestComplete</I></A> function. Otherwise, NDIS calls that driver's <I>ProtocolCoRequestComplete</I> function when this operation is completed.</P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>Before it calls <B>NdisMCmRequest</B>, an MCM driver allocates memory for its request and initializes an NDIS_REQUEST structure. Such a driver sets the <B>Oid</B> member of the NDIS_REQUEST structure with a system-defined OID_GEN_CO_<I>XXX</I> code when communicating with its clients. </P>

<P>An MCM driver can call <B>NdisMCmRequest</B> to communicate connection-oriented information, such as a change in addresses to a given client identified by the <I>NdisAfHandle</I>. </P>

<P>If the MCM driver's request is VC-specific or party-specific in nature, the MCM driver also passes an explicit <I>NdisVcHandle</I> or <I>NdisPartyHandle</I>, respectively, to <B>NdisMCmRequest</B>. </P>

<P>For more information about the OID_GEN_CO_<I>XXX</I> defined for use with <B>NdisMCmRequest</B>, see <A HREF="21oidovw_8q9e.htm">NDIS Object Identifiers</A>. </P>

<P>Callers of <B>NdisMCmRequest</B> can be running at IRQL &lt;= DISPATCH_LEVEL.  </P>

<H4>See Also</H4>

<P><A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A>, <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A>, <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A>, <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A>, <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A>, <A HREF="103ndisx_2qr6.htm"><B>NdisMCmRequestComplete</B></A>, <A HREF="103ndisx_0kmq.htm"><B>NdisMCoRequestComplete</B></A>, <A HREF="105nstru_3f8y.htm">NDIS_REQUEST</A>, <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>, <A HREF="104tdlow_9trm.htm"><I>ProtocolCmAddParty</I></A>, <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A>, <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A>, <A HREF="104tdlow_7hwy.htm"><I>ProtocolCoRequest</I></A>, <A HREF="104tdlow_860i.htm"><I>ProtocolCoRequestComplete</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCmRequest"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
