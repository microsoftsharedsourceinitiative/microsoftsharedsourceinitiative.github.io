<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS-Supplied Packet and Buffer Handling Functions</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS-Supplied Packet and Buffer Handling Functions">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_ndis_supplied_packet_and_buffer_handling_functions_ng"></A>NDIS-Supplied Packet and Buffer Handling Functions</H2>

<P>Miniport drivers must allocate buffers to receive incoming data. The driver of a bus-master DMA device that indicates the entire incoming packet up to interested protocols must allocate and manage packets for this purpose. A NIC driver might need to allocate buffer space to stage data on a send operation if the packet it receives from an upper layer is small and fragmented. On a send, all miniport drivers receive a complete packet and must call NDIS functions to manipulate those packets and extract the data to be sent. A miniport driver that transfers incoming data to an upper layer driver receives a packet from the upper layer and must manipulate the packet structure to fill it with received data. NDIS provides functions that miniport drivers can call to allocate, construct, and inspect packets. </P>

<P>NDIS defines a packet as a packet descriptor with a chain of one or more buffers containing the network packet data. The NDIS Library describes a packet descriptor by defining the NDIS_PACKET structure. The descriptor consists of two parts: a public component that a miniport driver can see, and a private component that is invisible to the driver. The public component allows a miniport driver to maintain context information about the packet. A miniport driver can use this component to link packets into data transfer queues.</P>

<P>The following table describes the functions supplied by NDIS to handle packets and buffers:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=24%>Function</TH>
<TH align=left width=76%>Definition</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_6t82.htm"><B>NdisAllocatePacketPool</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Allocates and initializes a block of nonpaged packet pool. The caller supplies the requested number of packet descriptors and the length of the protocol reserved space for each packet.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_390y.htm"><B>NdisAllocatePacketPoolEx</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Allocates and initializes a block of nonpaged packet pool. In addition to supplying the requested number of packet descriptors and protocol reserved length, the caller supplies the number of packet descriptors reserved for an overflow situation.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Allocates a fixed-size packet descriptor from the packet pool returned by <B>NdisAllocatePacketPool</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1unm.htm"><B>NdisAllocateBufferPool</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns a handle that the caller can use to allocate buffer descriptors with <B>NdisAllocateBuffer</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_39pu.htm"><B>NdisAllocateBuffer</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Creates a buffer descriptor that maps a specified virtual range within an allocated, nonpaged memory block, given a handle returned by <B>NdisAllocateBufferPool</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_2pki.htm"><B>NdisAdjustBufferLength</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Modifies the length of the range specified in a given buffer descriptor.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_0bn6.htm"><B>NdisBufferLength</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the length in bytes of a given mapped buffer.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>NdisBufferVirtualAddress(Safe)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the base virtual address for the buffer mapped by a given buffer descriptor and maps the physical pages described by the given buffer descriptor onto system space if these pages are not already mapped to system space.
<P>Drivers should call <A HREF="103ndisx_0pki.htm"><B>NdisBufferVirtualAddressSafe</B></A> instead of <A HREF="103ndisx_62uq.htm"><B>NdisBufferVirtualAddress</B></A>. NDIS 5.1 miniport drivers must call <B>NdisBufferVirtualAddressSafe</B> instead of <B>NdisBufferVirtualAddress</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1n5e.htm"><B>NdisCopyBuffer</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Creates a buffer descriptor for a specified range, given a handle for a block of already allocated memory and a pointer to the buffer descriptor for the block.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>NdisCopyFromPacketToPacket(Safe)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Copies a specified number of bytes from one packet to another, given a specified source packet and a destination packet and specified offsets in each.
<P>Drivers should call <A HREF="103ndisx_2ulu.htm"><B>NdisCopyFromPacketToPacketSafe</B></A> instead of <A HREF="103ndisx_2ak2.htm"><B>NdisCopyFromPacketToPacket</B></A>. NDIS 5.1 miniport drivers must call <B>NdisCopyFromPacketToPacketSafe</B> instead of <B>NdisCopyFromPacketToPacket</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_8z5e.htm"><B>NdisCreateLookaheadBufferFromSharedMemory</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the virtual address of a buffer within a block of memory shared with a bus-master DMA NIC. Allows a driver to map a portion of received data to indicate up to interested protocols as a read-only lookahead buffer.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_2rg2.htm"><B>NdisDestroyLookaheadBufferFromSharedMemory</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Releases a buffer acquired by calling <B>NdisCreateLookaheadBufferFromSharedMemory</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_4ooi.htm"><B>NdisQueryPacket</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns a set of information that describes a packet and a pointer to the initial buffer in the chain.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>NdisQueryBuffer(Safe)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the base virtual address and size of a buffer that is mapped by a given buffer descriptor.
<P>Drivers should call <A HREF="103ndisx_7t9u.htm"><B>NdisQueryBufferSafe</B></A> instead of <A HREF="103ndisx_0l82.htm"><B>NdisQueryBuffer</B></A>. NDIS 5.1 miniport drivers must call <B>NdisQueryBufferSafe</B> instead of <B>NdisQueryBuffer</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1rea.htm"><B>NdisQueryBufferOffset</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the offset of a virtual address within a page at which a given buffer begins.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>NdisGetFirstBufferFromPacket(Safe)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns pointers to the buffer descriptor and base virtual address, for the first buffer chained to a given packet, along with the sizes of the first buffer and the total buffer.
<P>Drivers should call <A HREF="103ndisx_92wi.htm"><B>NdisGetFirstBufferFromPacketSafe</B></A> instead of <A HREF="103ndisx_146q.htm"><B>NdisGetFirstBufferFromPacket</B></A>. NDIS 5.1 miniport drivers must call <B>NdisGetFirstBufferFromPacketSafe</B> instead of <B>NdisGetFirstBufferFromPacket</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_2j5e.htm"><B>NdisGetNextBuffer</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the next buffer descriptor in a chain, given the current buffer descriptor.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_57ua.htm"><B>NdisGetBufferPhysicalArraySize</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the number of discontiguous physical blocks backing a buffer, given the buffer descriptor. The driver of a bus-master DMA NIC might call this function to determine how many NDIS_PHYSICAL_ADDRESS structures to allocate and fill in before calling <B>NdisMStartBufferPhysicalMapping</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_67si.htm"><B>NdisGetPacketFlags</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the flags, if any, set by a protocol driver in a given packet.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_59f6.htm"><B>NdisFreePacketPool</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Releases a block of nonpaged pool allocated by calling <B>NdisAllocatePacketPool</B>. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_3b3m.htm"><B>NdisPacketPoolUsage</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns the number of packet descriptors currently allocated from a packet pool.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_47le.htm"><B>NdisFreePacket</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Releases a packet allocated by calling <B>NdisAllocatePacket</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_0auq.htm"><B>NdisFreeBufferPool</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Releases a handle obtained by calling <B>NdisAllocateBufferPool</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_044y.htm"><B>NdisFreeBuffer</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Releases a buffer descriptor allocated by calling <B>NdisAllocateBuffer</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_3c36.htm"><B>NdisChainBufferAtFront</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Links a given buffer descriptor at the front of a chain of buffer descriptors for a given packet.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_990y.htm"><B>NdisChainBufferAtBack</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Links a given buffer descriptor at the end of a chain of buffer descriptors for a given packet.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_30mq.htm"><B>NdisUnchainBufferAtFront</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Removes a given buffer descriptor from the front of a chain of buffer descriptors for a given packet and returns a pointer to that buffer descriptor.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_9vci.htm"><B>NdisUnchainBufferAtBack</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Removes a given buffer descriptor from the back of a chain of buffer descriptors for a given packet and returns a pointer to that buffer descriptor.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_87hu.htm"><B>NdisReinitializePacket</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Removes any chained buffers from a given packet and reinitializes it for reuse.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_51iq.htm"><B>NdisRecalculatePacketCounts</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Resets the valid count for a given packet so that the next call to <B>NdisQueryPacket</B> recalculates the counts.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_61v6.htm">NDIS_BUFFER_LINKAGE</A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Returns a pointer to the next buffer, given a pointer to a buffer descriptor. This macro allows a driver to queue allocated buffer descriptors.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_0f76.htm">NDIS_BUFFER_TO_SPAN_PAGES</A></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>&nbsp;</TD>
<TD width=76%>Determines how many physical pages of memory are being used to back a given buffer. </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS-Supplied%20Packet%20and%20Buffer%20Handling%20Functions"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
