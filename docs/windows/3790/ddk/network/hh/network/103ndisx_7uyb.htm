<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisWaitEvent</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisWaitEvent">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndiswaitevent_nr"></A>NdisWaitEvent</H1>

<P><B>NdisWaitEvent</B> puts the caller into a wait state until the given event is set to the Signaled state or the wait times out. </P>

<PRE class=syntax><B>BOOLEAN</B>
<B>  NdisWaitEvent(</B>
    <B>IN PNDIS_EVENT</B>  <I>Event</I><B>,</B>
    <B>IN UINT</B>  <I>MsToWait</I>
    <B>);</B> </PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Event</I></DT>

<DD>Pointer to an initialized event object for which the caller provides the storage. </DD>

<DT><I>MsToWait</I></DT>

<DD>Specifies the number of milliseconds the caller will wait if the event is not set to the Signaled state within that interval. A value of zero specifies that the caller will wait for the event indefinitely.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisWaitEvent</B> returns TRUE if the event is in the Signaled state when the wait is satisfied. </P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisWaitEvent</B> returns control to its caller when the given event is signaled or the specified  <I>MsToWait</I> interval expires, whichever is sooner. If the event is currently in the Signaled state when this call occurs, <B>NdisWaitEvent</B> returns control immediately. </P>

<P>A miniport driver typically calls <B>NdisWaitEvent</B> from its <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> and <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A> functions. A protocol driver typically calls <B>NdisWaitEvent</B> from its <A HREF="104tdlow_2bqq.htm"><I>ProtocolBindAdapter</I></A> and <A HREF="104tdlow_1l6a.htm"><I>ProtocolUnbindAdapter</I></A> functions.</P>

<P>Callers of <B>NdisWaitEvent</B> must be running at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="104tdlow_9raq.htm"><B>DriverEntry of NDIS Protocol Drivers</B></A>, <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_2rqq.htm"><B>NdisInitializeEvent</B></A>, <A HREF="103ndisx_12lu.htm"><B>NdisResetEvent</B></A>, <A HREF="103ndisx_0zjm.htm"><B>NdisSetEvent</B></A>, <A HREF="104tdlow_2bqq.htm"><I>ProtocolBindAdapter</I></A>, <A HREF="104tdlow_1l6a.htm"><I>ProtocolUnbindAdapter</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisWaitEvent"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
