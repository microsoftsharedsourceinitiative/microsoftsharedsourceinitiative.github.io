<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProtocolReceiveComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProtocolReceiveComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocolreceivecomplete_nr"></A>ProtocolReceiveComplete</H1>

<P>The <I>ProtocolReceiveComplete</I> function is a required driver function in any protocol. <I>ProtocolReceiveComplete</I> completes postprocessing of one or more preceding receive indications from a NIC driver. </P>

<PRE class=syntax><B>VOID
</B>  <B>ProtocolReceiveComplete(</B>
    <B>IN NDIS_HANDLE</B>  <I>ProtocolBindingContext</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ProtocolBindingContext</I></DT>

<DD>Specifies the handle to a protocol-allocated context area in which the protocol driver maintains per-binding run-time state. The driver supplied this handle when it called <A HREF="103ndisx_9koi.htm"><B>NdisOpenAdapter</B></A>.  
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><I>ProtocolReceiveComplete</I> performs postprocessing, such as notifying interested clients of processed data received from a remote node, after one or more calls to the driver’s <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A> function. </P>

<P>When an underlying miniport driver calls <B>NdisM...IndicateReceiveComplete</B>, NDIS calls the <I>ProtocolReceiveComplete</I> function(s) of bound protocol(s). NDIS always calls <I>ProtocolReceiveComplete</I> after one or more calls to the driver’s <I>ProtocolReceive</I> function, regardless of whether any particular packet(s) are accepted by bound protocols. </P>

<P>An underlying miniport driver need not make calls to <B>NdisM..IndicateReceive</B> in one-to-one correspondence with its calls to <B>NdisM...IndicateReceiveComplete</B>. <I>ProtocolReceiveComplete</I> is reentrant because the underlying NIC driver sometimes must wait to call <B>NdisM...IndicateReceiveComplete</B> until no receive operations are in progress. </P>

<P>After <I>ProtocolReceiveComplete</I> is called, the underlying NIC driver can make another receive indication before <I>ProtocolReceiveComplete</I> returns control, so <I>ProtocolReceiveComplete</I> can execute concurrently with the driver’s <I>ProtocolReceive</I> function in SMP machines. </P>

<P><I>ProtocolReceiveComplete</I> runs at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_0z1u.htm"><B>NdisMArcIndicateReceiveComplete</B></A>, <A HREF="103ndisx_969e.htm"><B>NdisMEthIndicateReceiveComplete</B></A>, <A HREF="103ndisx_96ya.htm"><B>NdisMFddiIndicateReceiveComplete</B></A>, <A HREF="103ndisx_6f02.htm"><B>NdisMCoIndicateReceivePacket</B></A>, <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A>, <A HREF="103ndisx_3jzm.htm"><B>NdisMTrIndicateReceiveComplete</B></A>, <A HREF="103ndisx_60aa.htm"><B>NdisMWanIndicateReceiveComplete</B></A>, <A HREF="104tdlow_3pwy.htm"><I>ProtocolCoReceivePacket</I></A>, <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A>, <A HREF="104tdlow_5i7n.htm"><I>ProtocolReceivePacket</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProtocolReceiveComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
