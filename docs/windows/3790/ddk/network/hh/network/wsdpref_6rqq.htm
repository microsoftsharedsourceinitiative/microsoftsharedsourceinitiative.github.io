<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WSPSend</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WSPSend">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wspsend_nr"></A>WSPSend</H1>

<P><B>WSPSend</B> sends data on a connected socket. </P>

<PRE class=syntax><B>int 
  WSPSend(
    IN SOCKET </B><I> s</I><B>,</B>
<B>    IN LPWSABUF </B><I> lpBuffers</I><B>,</B>
<B>    IN DWORD </B><I> dwBufferCount</I><B>,</B>
<B>    OUT LPDWORD </B><I> lpNumberOfBytesSent</I><B>,</B>
<B>    IN DWORD </B><I> dwFlags</I><B>,</B>
<B>    IN LPWSAOVERLAPPED </B><I> lpOverlapped</I><B>,</B>
<B>    IN LPWSAOVERLAPPED_COMPLETION_ROUTINE </B><I> lpCompletionRoutine</I><B>,</B>
<B>    IN LPWSATHREADID </B><I> lpThreadId</I><B>,</B>
<B>    OUT LPINT </B><I> lpErrno</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>s</I></DT>

<DD>Descriptor that identifies a connected socket.</DD>

<DT><I>lpBuffers</I></DT>

<DD>Pointer to an array of <A HREF="wsdpref_7gqa.htm">WSABUF</A> structures. This array must remain valid for the duration of the send operation. Each WSABUF structure describes a buffer. The switch registered each buffer in a previous call to the <B>WSPRegisterMemory</B> function. </DD>

<DT><I>dwBufferCount</I></DT>

<DD>Number of WSABUF structures at <I>lpBuffers</I>.</DD>

<DT><I>lpNumberOfBytesSent</I></DT>

<DD>Pointer to a variable that receives the number of bytes that <B>WSPSend</B> sent.</DD>

<DT><I>dwFlags</I></DT>

<DD>Set of flags that specify the way in which the call is made.</DD>

<DT><I>lpOverlapped</I></DT>

<DD>Pointer to a <A HREF="wsdpref_4xo2.htm">WSAOVERLAPPED</A> structure that provides a communication medium between the initiation of an overlapped I/O operation and its subsequent completion. Ignored for nonoverlapped sockets. </DD>

<DT><I>lpCompletionRoutine</I></DT>

<DD>Pointer to the completion routine that the SAN service provider might initiate after the send operation completes. Ignored for nonoverlapped sockets. The switch specifies NULL for a completion routine. </DD>

<DT><I>lpThreadId</I></DT>

<DD>Pointer to a <A HREF="wsdpref_26eq.htm">WSATHREADID</A> structure that the SAN service provider might use in a subsequent call to the <B>WPUQueueApc</B> function to arrange for the execution of the completion routine at <I>lpCompletionRoutine</I>. A WSATHREADID structure identifies a thread. Because the switch specifies NULL for a completion routine, the SAN service provider does not use <I>lpThreadId</I>. </DD>

<DT><I>lpErrno</I></DT>

<DD>Pointer to a variable that receives the error code.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns zero if successful and the send operation completed immediately; otherwise, returns SOCKET_ERROR and, at <I>lpErrno</I>, one of the following error codes: 

<DL>
<DT>WSAENETDOWN</DT>

<DD>Network subsystem failed.</DD>

<DT>WSAEFAULT</DT>

<DD>The <I>lpBuffers </I>parameter is not totally contained in a valid part of the user address space.</DD>

<DT>WSAENOBUFS</DT>

<DD>SAN service provider reports a buffer deadlock.</DD>

<DT>WSAENOTCONN</DT>

<DD>Socket is not connected.</DD>

<DT>WSAENOTSOCK</DT>

<DD>Descriptor is not a socket.</DD>

<DT>WSAESHUTDOWN</DT>

<DD>Socket has been shut down; it is not possible for the <B>WSPSend</B> function to send data on a socket after the socket has been shut down.</DD>

<DT>WSAEINVAL</DT>

<DD>The switch either did not create the socket with the overlapped flag or previously call the <B>WSPBind</B> function to bind the socket.</DD>

<DT>WSAECONNABORTED</DT>

<DD>The connection to the remote peer was terminated due to a time-out or other failure.</DD>

<DT>WSAECONNRESET</DT>

<DD>The connection was reset by the remote peer.</DD>

<DT>WSA_IO_PENDING</DT>

<DD>The SAN service provider successfully initiated an overlapped send operation and will indicate completion at a later time.</DD>

<DT>WSA_OPERATION_ABORTED</DT>

<DD>The overlapped operation was canceled, because the socket was closed.
</DD>
</DL>

<P>Note that a SAN service provider does not support the following error codes for <B>WSPSend</B>: 

<DL>
<DT>WSAEACCES</DT>

<DD>Broadcast addresses are not supported. </DD>

<DT>WSAEINPROGRESS</DT>

<DD>The Windows Sockets switch never issues cancel blocking calls to a SAN service provider. </DD>

<DT>WSAENETRESET</DT>

<DD>Detecting a broken connection from the remote host resetting is not supported. </DD>

<DT>WSAEOPNOTSUPP</DT>

<DD>The socket is the appropriate type. </DD>

<DT>WSAEWOULDBLOCK</DT>

<DD>The Windows Sockets switch uses overlapped sockets. </DD>

<DT>WSAEMSGSIZE</DT>

<DD>The current version of Windows Sockets Direct does not support SAN service providers handling sockets that send datagrams.
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>Ws2spi.h</I>. Include <I>Ws2spi.h</I>. Requires Windows Sockets version&nbsp;2.0.</P>

<H4>Comments</H4>

<P>The Windows Sockets switch calls a SAN service provider's <B>WSPSend</B> function to transmit data on a connected socket. A SAN service provider receives <B>WSPSend</B> requests from the switch, but never directly from an application. </P>

<P>Typically during connection setup time, the switch calls the SAN service provider's <A HREF="wsdpref_62gi.htm"><B>WSPRegisterMemory</B></A> extension function to preregister all memory for the buffer array that is the source of the outgoing data. </P>

<P>The switch specifies an overlapped structure and NULL for a completion routine if the switch calls the SAN service provider's <B>WSPSend</B> function in an overlapped manner. The switch calls <B>WSPSend</B> to post one or more buffers of data for transmission over the network. If the data-transmission operation cannot complete immediately, the operation proceeds, but <B>WSPSend</B> returns with the WSA_IO_PENDING error code. The switch later calls the SAN service provider's <B>WSPGetOverlappedResult</B> function and passes a pointer to the overlapped structure to retrieve the final completion status. </P>

<P>The buffer array that the switch supplies in a <B>WSPSend</B> call is a pointer to an array of WSABUF structures. The SAN service provider must transmit data in buffers in the order in which those buffers appear in the buffer array. The buffer array is transient. That is, if the <B>WSPSend</B> call returns without completing the data-transmission operation, the SAN service provider must capture the pointer to the array of WSABUF structures before returning from <B>WSPSend</B>. This requirement enables the switch to build stack-based buffer arrays. </P>

<P>The switch does not pass send message requests to the SAN service provider that exceed the size that the SAN service provider returns in <B>WSPGetSockOpt</B> calls for the value of the SO_MAX_MSG_SIZE socket option. </P>

<P>Note that the successful completion of a <B>WSPSend</B> call does not indicate that the SAN service provider successfully finished delivering data in the buffer array to the destination. </P>

<H4>Overlapped Socket I/O</H4>

<P>If the data transmission operation completes immediately, the SAN service provider returns from <B>WSPSend</B> with a value of zero and specifies the number of bytes transmitted at <I>lpNumberOfBytesSent</I>. If the SAN service provider successfully initiated the data transmission operation and will indicate completion at a later time, the SAN service provider returns from <B>WSPSend</B> with a value of SOCKET_ERROR and specifies the WSA_IO_PENDING error code at <I>lpErrno</I>. Note that in this case, a value is not specified at <I>lpNumberOfBytesSent</I>. After the data transmission operation completes, the switch calls the SAN service provider's <B>WSPGetOverlappedResult</B> function and passes a pointer to a variable to hold data transmission information. The SAN service provider specifies the number of bytes transmitted in this pointer. </P>

<P>The overlapped structure at <I>lpOverlapped</I> must be valid for the duration of the data transmission operation. If multiple data transmission operations are outstanding simultaneously, each must reference a separate overlapped structure.</P>

<P>As mentioned previously, the switch always specifies an event in an overlapped structure and NULL for a completion routine if the switch calls the SAN service provider's <B>WSPSend</B> function in an overlapped manner. The SAN service provider should call the <B>WPUCompleteOverlappedRequest</B> function in the context of an arbitrary thread to complete the data transmission operation. If the low order bit of the <B>hEvent</B> member in the WSAOVERLAPPED structure is set, the switch specifically requests to not be notified upon completion of the data transmission operation. Therefore, the SAN service provider is not required to call the <B>WPUCompleteOverlappedRequest</B> function to complete the I/O request. In this case, the switch calls the <B>WSPGetOverlappedResult</B> function to poll for completion. For more information, see the <B>GetQueuedCompletionStatus</B> function in the Platform SDK documentation. </P>

<P>The SAN service provider can deliver completion notifications in any order; the SAN service provider is not required to deliver notifications in the same order that overlapped operations are completed. However, the SAN service provider transmits data from posted buffers in the same order in which the switch supplies them. </P>

<H4>See Also</H4>

<P><A HREF="wsdpref_7gqa.htm">WSABUF</A>, <A HREF="wsdpref_4xo2.htm">WSAOVERLAPPED</A>, <A HREF="wsdpref_254i.htm"><B>WSPGetOverlappedResult</B></A>, <A HREF="wsdpref_1o4y.htm"><B>WSPGetSockOpt</B></A>, <A HREF="wsdpref_62gi.htm"><B>WSPRegisterMemory</B></A>, <A HREF="wsdpref_6ir6.htm"><B>WSPSocket</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WSPSend"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
