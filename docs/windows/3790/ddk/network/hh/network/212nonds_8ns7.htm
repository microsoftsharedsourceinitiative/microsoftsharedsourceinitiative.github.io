<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Registering Miniport Driver Functions for WDM Lower Edge</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Registering Miniport Driver Functions for WDM Lower Edge">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_registering_miniport_driver_functions_for_wdm_lower_edge_ng"></A>Registering Miniport Driver Functions for WDM Lower Edge</H1>

<P>A miniport driver that has a WDM lower edge must call the <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A> function in its <B>DriverEntry</B> routine to register certain entry-point functions with the NDIS library. These entry-point functions compose the miniport driver's upper edge and are described in <A HREF="203entry_0vl3.htm">Registering Miniport<I>Xxx</I> Functions</A>. However, a miniport driver that has a WDM lower edge is not required to set up certain entry-point functions. For example, the following entry-point functions are not set up for the following reasons: 

<UL>
	<LI><A HREF="101mini_38c2.htm"><I>MiniportISR</I></A>, <A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_222a.htm"><I>MiniportEnableInterrupt</I></A>, <A HREF="101mini_0jg2.htm"><I>MiniportDisableInterrupt</I></A> 
<P>Because the miniport driver does not receive interrupts from a physical NIC, it does not require these entry-point routines. The driver for the particular bus receives interrupts when packets arrive on the bus that are intended for the miniport driver. The bus driver then notifies the miniport driver. 
</LI>

	<LI><A HREF="101mini_9a42.htm"><I>MiniportTransferData</I></A> 
<P>The miniport driver passes entire packets when it indicates those packets. Higher-level drivers will never initiate calls to this entry-point routine to transfer the remaining contents of packets, so it is not specified. 
</LI>

	<LI><A HREF="101mini_225u.htm"><I>MiniportAllocateComplete</I></A> 
<P>Since the miniport driver does not allocate shared memory, a completion entry-point routine is not specified.
</LI>

	<LI><A HREF="101mini_2zua.htm"><I>MiniportCheckForHang</I></A> 
<P>The miniport driver can rely on NDIS to determine if its miniport instance is hung, based on sends and requests that time out, so this routine is not typically required. 
</LI>

	<LI><A HREF="101mini_7lo2.htm"><I>MiniportShutdown</I></A> 
<P>The miniport driver does not set up a shut-down routine because the miniport instance has no hardware that must be shut down. 
</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Registering%20Miniport%20Driver%20Functions%20for%20WDM%20Lower%20Edge"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
