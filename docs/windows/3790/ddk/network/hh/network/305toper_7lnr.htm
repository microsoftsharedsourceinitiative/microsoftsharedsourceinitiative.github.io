<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Disconnecting an Endpoint-to-Endpoint Connection</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Disconnecting an Endpoint-to-Endpoint Connection">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_disconnecting_an_endpoint_to_endpoint_connection_ng"></A>Disconnecting an Endpoint-to-Endpoint Connection</H1>

<P>The following figure shows how TDI clients release an endpoint-to-endpoint connection. </P>

<P><IMG SRC="images/426-10.gif" ALT="" BORDER=0></P>

<P><B>Disconnecting an Endpoint-To-Endpoint Connection</B></P>

<P>Disconnection behavior is transport-specific in nature. When a connection-oriented TDI client initiates a disconnect between nodes, both nodes might need to participate in the disconnection operation. That is, when one client initiates a disconnect, the remote-node client possibly must respond to it. </P>

<P>During a disconnect operation, the TDI transport driver usually refuses incoming requests on the open connection endpoint and stops all activity at the specified connection endpoint unless both transports support <I>controlled disconnects</I> and the initiating client requests one.</P>

<P>As the preceding figure shows, one client on an endpoint-to-endpoint connection can initiate a disconnection operation by submitting a <A HREF="32ioctl_4hgy.htm">TDI_DISCONNECT</A> request, set up with <A HREF="34bldmac_4eeq.htm"><B>TdiBuildDisconnect</B></A>, to its underlying transport. When that transport finishes processing the initiating client’s request, it notifies the remote-node transport driver that a disconnection is in progress, and this transport begins returning an appropriate status code for client-submitted I/O requests on the endpoint-to-endpoint connection.</P>

<P>If the responding client registered its <A HREF="35tdicli_2rg2.htm">ClientEventDisconnect</A> handler, the TDI transport driver notifies the client when the disconnect occurs by calling<B> </B>this handler. Then, ClientEventDisconnect acknowledges the disconnection by making a TDI_DISCONNECT request to its underlying transport. This notification allows the responding client to clean up client-allocated state for the endpoint-to-endpoint connection promptly.</P>

<P>However, a disconnection operation does not close either client's open connection endpoints or transport addresses. After TDI_DISCONNECT requests have been satisfied, both clients can reuse the file objects representing these open resources in their underlying transports. For example, either client might make a subsequent connection offer to another remote node on the network, as already described in <A HREF="305toper_8up3.htm">Making an Endpoint-to-Endpoint Connection</A>. Until each client closes the file objects representing its respective connection endpoint and the associated transport address as described in <A HREF="305toper_5ujr.htm">Closing a Connection Endpoint</A> and <A HREF="305toper_8bfr.htm">Closing a Transport Address or Control Channel</A>, respectively, these resources remain allocated to the client and available for client-submitted IOCTL requests to the underlying transport. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Disconnecting%20an%20Endpoint-to-Endpoint%20Connection"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
