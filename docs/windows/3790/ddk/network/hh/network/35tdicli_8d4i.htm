<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ClientPnPAddNetAddress</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ClientPnPAddNetAddress">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_zwcreatefile_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_clientpnpaddnetaddress_nr"></A>ClientPnPAddNetAddress</H1>

<P>The ClientPnPAddNetAddress routine is initially called by TDI as a consequence of the client's own call to <B>TdiRegisterPnPHandlers</B>. Subsequently, TDI calls ClientPnPAddNetAddress as a consequence of any transport's call to <B>TdiRegisterNetAddress</B> or, possibly but very rarely, as the consequences of the client's own call to <B>TdiEnumerateAddresses</B>. </P>

<PRE class=syntax><B>VOID</B>
  <B>ClientPnPAddNetAddress(</B>
    <B>IN PTA_ADDRESS</B>  <I>Address</I><B>,</B>
    <B>IN PUNICODE_STRING</B>  <I>DeviceName</I><B>,</B>
    <B>IN PTDI_PNP_CONTEXT</B>  <I>Context</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Address</I></DT>

<DD>Pointer to a buffered network address, formatted as a TA_ADDRESS structure. The contents and layout of this buffer are protocol-specific in nature with the information supplied at <B>Address</B> dependent on the <B>AddressType</B> and <B>AddressLength</B> members as set by the underlying transport.  </DD>

<DT><I>DeviceName</I></DT>

<DD>Pointer to a buffered Unicode string, which effectively identifies the transport on which the given network address is being registered with TDI. Typically, this is the name of the transport-created device object originally passed in to the ClientPnPBindingChange routine when the client was offered this binding. </DD>

<DT><I>Context</I></DT>

<DD>Pointer to a transport-supplied context associated with this address. 

<P>For example, TCP/IP passes in a pointer to the PDO representing the device on which this new address has just arrived.

</DD>
</DL>

<H4>Comments</H4>

<P>A client must register its ClientPnPAddNetAddress routine with a call to <B>TdiRegisterPnPHandlers</B> to be called to initialize whatever state the client maintains about currently registered network addresses. For maximum performance, the client should set up and maintain an internal list of valid network addresses for any transport to which it binds itself with a call to <A HREF="JavaScript:hhobj_1.Click()"><B>ZwCreateFile</B></A>.</P>

<P>Subsequent to the sequence of system-startup-time calls to ClientPnPAddNetAddress, TDI calls this routine whenever a PnP-supporting transport registers a new network address with TDI. That is, ClientPnPAddNetAddress can be called at runtime with a new address supplied by any transport, even a transport to which it is not bound. Consequently, ClientPnPAddNetAddress should return control promptly if the client does not recognize the protocol-specific type of the input address. A check on the <B>AddressType</B> member of the TA_ADDRESS structure is more efficient than doing a string comparison on the buffered contents at <I>DeviceName</I>. </P>

<P>The format and contents of the buffer at <I>Address</I> depend on the value of the <B>AddressType</B> member in the TA_ADDRESS structure.The underlying transport is responsible for providing only the specification of the new network address. If the TA_ADDRESS structure of a particular type also contains a Socket identifier or any other such collateral member(s), those member(s) should be ignored by ClientPnPAddNetAddress. </P>

<P>For the input <I>Context</I> parameter, the value of the <B>ContextType</B> member in the TDI_PNP_CONTEXT structure provides a hint about how to interpret this transport-supplied and protocol-determined context information. The <I>Context</I> pointer can be NULL if the underlying transport does not provide context information when it calls <B>TdiRegisterNetAddress</B>. </P>

<P>A reciprocal call to <B>TdiDeregisterPnPHandlers</B> disables calls to ClientPnPAddNetAddress.</P>

<P>A client's call to <B>TdiEnumerateAddresses</B> causes a sequence of calls to its ClientPnPAddNetAddress routine, one for each currently valid network address that a particular transport to which the client is bound has already registered with TDI. Consequently, most clients never call <B>TdiEnumerateAddresses</B> to avoid incurring the performance penalty of the resulting sequence of calls to ClientPnPAddNetAddress. However, a client could make this call to restore the integrity of its internal list of binding-specific valid network addresses if that list might have become corrupted. </P>

<P>TDI calls ClientPnPAddNetAddress at IRQL &lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="36tdstrc_8b8y.htm"><B>TA_ADDRESS</B></A>, <A HREF="33tdifun_5bea.htm"><B>TdiDeregisterPnPHandlers</B></A>, <A HREF="33tdifun_4y9e.htm"><B>TdiEnumerateAddresses</B></A>, <A HREF="36tdstrc_0bqq.htm"><B>TDI_PNP_CONTEXT</B></A>, <A HREF="33tdifun_6uia.htm"><B>TdiRegisterNetAddress</B></A>, <A HREF="33tdifun_5boy.htm"><B>TdiRegisterPnPHandlers</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ClientPnPAddNetAddress"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
