<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Protocol Driver Reset Operations</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Protocol Driver Reset Operations">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocol_driver_reset_operations_ng"></A>Protocol Driver Reset Operations</H1>

<P>To initiate a reset operation, a protocol driver calls <A HREF="103ndisx_9ib6.htm"><B>NdisReset</B></A>. If its reset request returns NDIS_STATUS_PENDING, NDIS calls <A HREF="104tdlow_0yya.htm"><I>ProtocolResetComplete</I></A> when the reset operation is complete. </P>

<P>A protocol driver seldom calls <B>NdisReset</B> unless it has special knowledge that the underlying NIC is not functioning correctly. For instance, if a protocol driver detects that it has not received completion calls for an unusually large number of sends or requests, and it has enough knowledge of the underlying NIC to conclude that this indicates hardware problems, it can call <B>NdisReset</B>. Typically, however, the need for a reset is detected and initiated by NDIS and/or the NIC's miniport driver using time-out logic. Any protocol driver bound to an underlying NDIS driver that reports its medium type as <B>NdisMediumWan</B> cannot call <B>NdisReset</B>. </P>

<P>Typically, an underlying miniport driver resets its NIC because the NIC is timing out during send or request operations. This condition causes NDIS to call the miniport driver’s <A HREF="101mini_2zua.htm"><I>MiniportCheckForHang</I></A> and subsequently <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A> functions. Alternatively, the miniport driver determines the NIC's receive capability is dysfunctional. </P>

<P>If a reset is initiated by NDIS and <I>MiniportReset</I> returns NDIS_STATUS_PENDING, NDIS first calls the <A HREF="104tdlow_6e42.htm"><I>ProtocolStatus</I></A> (or <A HREF="104tdlow_3khe.htm"><I>ProtocolCoStatus</I></A>) function of each bound protocol driver with a status of NDIS_STATUS_RESET_START, and then calls the same bound protocol driver’s <A HREF="104tdlow_3lrm.htm"><I>ProtocolStatusComplete</I></A><I> </I>function. When the miniport driver calls <A HREF="103ndisx_4m0j.htm"><B>NdisMResetComplete</B></A>, NDIS again calls <I>ProtocolStatus</I> (or <I>ProtocolCoStatus</I>) with a status of NDIS_STATUS_RESET_END followed by a call to <I>ProtocolStatusComplete</I>. </P>

<P>A protocol driver must handle the possibility that outstanding sends on a binding to an underlying NIC can be canceled because the NIC is reset. If a bound protocol driver has any transmit packets pending, NDIS will indicate a send complete to the protocol driver with an appropriate status. The protocol driver must resubmit the packets when the reset operation is completed, assuming the NIC becomes operational again.</P>

<P>When a protocol driver receives a status of NDIS_STATUS_RESET_START, it should do the following:

<UL>
	<LI>Hold any packets ready to be transmitted until <I>Protocol(Co)Status</I> receives an NDIS_STATUS_RESET_END notification.</LI>

	<LI>Not make any NDIS calls directed to the underlying miniport driver, except calls to return resources such as returning packets with <A HREF="103ndisx_61de.htm"><B>NdisReturnPackets</B></A>. </LI>
</UL>

<P>After <I>ProtocolStatus</I> (or <I>ProtocolCoStatus</I>) receives an NDIS_STATUS_RESET_END message and <I>ProtocolStatusComplete</I> is called, the protocol driver can resume sending packets and requests.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Protocol%20Driver%20Reset%20Operations"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
