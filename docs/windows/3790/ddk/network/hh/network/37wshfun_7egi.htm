<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WSHOpenSocket</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WSHOpenSocket">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wshopensocket_nr"></A>WSHOpenSocket</H1>

<P>The <B>WSHOpenSocket</B> function is called by the Windows Sockets DLL when opening a socket. </P>

<PRE class=syntax><B>INT</B>
  <B>WSHOpenSocket(</B>
<B>    IN OUT PINT</B>  <I>AddressFamily</I><B>,</B>
<B>    IN OUT PINT</B>  <I>SocketType</I><B>,</B>
<B>    IN OUT PINT</B>  <I>Protocol</I><B>,</B>
<B>    OUT PUNICODE_STRING</B>  <I>TransportDeviceName</I><B>,</B>
<B>    OUT PVOID</B>  <I>HelperDllSocketContext</I><B>,</B>
<B>    OUT PDWORD</B>  <I>NotificationEvents</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>AddressFamily</I></DT>

<DD>On input, propagates the address family specified in the call to <B>socket.</B> <B>WSHOpenSocket</B> resets this to the canonicalized value for the address family. 

<P>For example, if this is AF_UNSPEC on input, socket type is SOCK_STREAM, and protocol is IPPROTO_TCP, <B>WSHOpenSocket </B>resets this parameter to AF_INET.
</DD>

<DT><I>SocketType</I></DT>

<DD>On input, propagates the socket type specified in the call to <B>socket</B>. <B>WSHOpenSocket</B> resets this to the canonicalized value for the socket type. 

<P>For example, if this is zero on input, address family is AF_INET, and protocol is IPPROTO_TCP, <B>WSHOpenSocket</B> resets this parameter to SOCK_STREAM.
</DD>

<DT><I>Protocol</I></DT>

<DD>On input, this is set to the value specified in the call to <B>socket</B>. <B>WSHOpenSocket</B> resets this to the canonicalized value for the protocol. 

<P>For example, if this is zero on input, address family is AF_INET, and socket type is SOCK_STREAM, <B>WSHOpenSocket</B> resets this parameter to IPPROTO_TCP.
</DD>

<DT><I>TransportDeviceName</I></DT>

<DD>Pointer to a Unicode counted string, specifying the name of the TDI transport that will handle the socket.</DD>

<DT><I>HelperDllSocketContext</I></DT>

<DD>Pointer to a variable that the helper DLL sets to a pointer to a context area that the helper DLL allocates. The Windows Sockets DLL treats this as a handle, passing it uninterpreted to the helper DLL in all subsequent calls to <B>WSH</B><I>Xxx</I> functions involving the socket currently being opened. The helper DLL uses its context area to maintain state for tracking operations on the open socket.</DD>

<DT><I>NotificationEvents</I></DT>

<DD>Pointer to a bitmask variable that the helper DLL sets to specify the state-change events for which the Windows Sockets DLL should call the helper DLL's <B>WSHNotify</B> function. A helper DLL can request notifications by setting this variable to a combination (ORed) of the following, as defined in <I>wsahelp.h</I>:

<DL>
<DT>WSH_NOTIFY_BIND</DT>

<DD>Call <B>WSHNotify</B> on a successful call to <B>bind</B>.</DD>

<DT>WSH_NOTIFY_LISTEN</DT>

<DD>Call <B>WSHNotify</B> on a successful call to <B>listen</B>.</DD>

<DT>WSH_NOTIFY_ACCEPT</DT>

<DD>Call <B>WSHNotify</B> when a socket handle is being returned from the <B>accept</B> function.</DD>

<DT>WSH_NOTIFY_CONNECT</DT>

<DD>Call <B>WSHNotify</B> on a successful call to <B>connect</B>.</DD>

<DT>WSH_NOTIFY_SHUTDOWN_RECEIVE</DT>

<DD>Call <B>WSHNotify</B> on a successful call to <B>shutdown </B>for the receive side of the socket.</DD>

<DT>WSH_NOTIFY_SHUTDOWN_SEND</DT>

<DD>Call <B>WSHNotify</B> on a successful call to <B>shutdown </B>for the send side of the socket.</DD>

<DT>WSH_NOTIFY_SHUTDOWN_ALL</DT>

<DD>Call <B>WSHNotify</B> on a successful call to <B>shutdown </B>for both sides of the socket.</DD>

<DT>WSH_NOTIFY_CLOSE</DT>

<DD>Call <B>WSHNotify</B> when the socket is being closed.</DD>

<DT>WSH_NOTIFY_CONNECT_ERROR</DT>

<DD>Call <B>WSHNotify</B> when on a failed called to <B>connect </B>occurred.
</DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<P><B>WSHOpenSocket</B> returns zero if the given parameters are valid. Otherwise, it returns a Windows Sockets error code. If its return value is nonzero, the <B>socket</B> or <B>accept </B>call fails and the error is set to the value returned by <B>WSHOpenSocket</B>.</P>

<H4>Headers</H4>

<P>Declared in <I>wsahelp.h</I>. Include <I>wsahelp.h</I>.</P>

<H4>Comments</H4>

<P>The Windows Sockets DLL calls <B>WSHOpenSocket</B> whenever it is creating a new socket, either when an application calls <B>socket</B> or when a newly connected socket is being created by the <B>accept </B>function. If the helper DLL exports <B>WSHOpenSocket2</B>, it supersedes <B>WSHOpenSocket</B>. </P>

<P><B>WSHOpenSocket</B> verifies and canonicalizes the address family, socket type, and protocol parameters so that the Windows Sockets DLL can depend on a unique triple for each type of socket. </P>

<P><B>WSHOpenSocket</B> also allocates any necessary context structure to track subsequent operations on the open socket, and, through the <I>NotificationEvents </I>parameter, indicates to the Windows Sockets DLL the state-transition events at which the helper DLL does additional processing.</P>

<P>A WSH DLL <I>must</I> set <I>NotificationEvents</I> with WSH_NOTIFY_CLOSE if it allocates memory for per-socket context and returns a pointer at <I>HelperDllSocketContext</I>. Otherwise, a memory leak can occur.</P>

<H4>See Also</H4>

<P><A HREF="37wshfun_0b5e.htm"><B>WSHNotify</B></A>, <A HREF="37wshfun_9jle.htm"><B>WSHOpenSocket2</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WSHOpenSocket"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
