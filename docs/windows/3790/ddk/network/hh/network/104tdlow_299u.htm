<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProtocolCoCreateVc</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProtocolCoCreateVc">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocolcocreatevc_nr"></A>ProtocolCoCreateVc</H1>

<P>The <I>ProtocolCoCreateVc</I> function is a required function that allocates resources necessary for a call manager or client to activate and maintain a virtual connection (VC).</P>

<PRE class=syntax><B>NDIS_STATUS 
</B>  <B>ProtocolCoCreateVc(
</B>    <B>IN NDIS_HANDLE</B>  <I>ProtocolAfContext</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisVcHandle</I><B>,</B>
    <B>OUT PNDIS_HANDLE</B>  <I>ProtocolVcContext</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ProtocolAfContext</I></DT>

<DD>Specifies the handle to a protocol-allocated context area in which the call manager or client maintains its per-open state. The call manager supplied this handle from its <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A> function. The client supplied this handle when it called <A HREF="103ndisx_6quq.htm"><B>NdisClOpenAddressFamily</B></A> from its <I>ProtocolCoAfRegister</I> function. </DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies a handle, supplied by NDIS, that uniquely identifies this virtual connection. This handle is opaque to the protocol driver and reserved for NDIS library use. However, the call manager and client must save this handle to pass in subsequent calls to <B>NdisCo/Cl/Cm/MCm</B><I>Xxx</I> functions that concern this VC. </DD>

<DT><I>ProtocolVcContext</I></DT>

<DD>Specifies the handle to a protocol-supplied context area in which the call manager or client maintains state about this virtual connection.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>ProtocolCoCreateVc</I> returns the status of its operation(s) as one of the following values:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>Indicates that the call manager or client successfully allocated and/or initialized any necessary resources that were needed to establish and maintain a virtual connection.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>Indicates that the call manager or client was unable to allocate and/or initialize its resources for establishing and maintaining a virtual connection.</DD>

<DT>NDIS_STATUS_<I>XXX</I></DT>

<DD>Indicates that the call manager or client could not set itself into a state where it could establish a virtual connection. This can could be an error return value propagated from another NDIS library routine.
</DD>
</DL>

<P>Call managers or clients <I>cannot</I> return NDIS_STATUS_PENDING from their <I>ProtocolCoCreateVc </I>functions. Returning pending will render this virtual connection unusable and the NDIS library will call the client or call manager to delete it. </P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>The <I>ProtocolCoCreateVc</I> function of a call manager or client is called whenever the corresponding client or call manager, respectively, calls <A HREF="103ndisx_3qia.htm"><B>NdisCoCreateVc</B></A>. Clients initiate the creation of VCs in the process of setting up their outgoing calls before they call <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>. A call manager initiates the creation of a VC in the process of notifying its client that the CM received an incoming call offer from a remote node that is directed to a SAP already registered with the CM by that client before the CM calls <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>.</P>

<P><I>ProtocolCoCreateVc</I> performs any necessary allocations of dynamic resources and structures that the call manager or client requires to perform subsequent operations on a VC that will be activated. Such resources include, but are not limited to, memory buffers, data structures, events, and other such similar resources. Call managers and clients should also initialize any relevant per-VC structures that they will need when a call is established. </P>

<P>Connection-oriented protocols must store the handle for the VC, specified in <I>NdisVcHandle</I>, in their per-VC state area to be used in future operations on this virtual connection. The <I>NdisVcHandle </I>is as required parameter to the <B>NdisCo</B><I>Xxx</I>, <B>NdisCm</B><I>Xxx</I>, and/or <B>NdisCl</B><I>Xxx</I> that such a connection-oriented protocol subsequently calls. </P>

<P>When a call manager or client has allocated memory for its own per-VC data and initialized its state, the address of this data structure should be set in the handle before returning control to NDIS. To do this, dereference the handle and store a pointer to the protocol-allocated data area as the value of the handle. For example:</P>

<PRE>*ProtocolVcContext = SomeBuffer;</PRE>

<P>If <I>ProtocolCoCreateVc</I> cannot allocate the resource it needs to carry out subsequent network I/O operations, it should free all resources that were allocated for this VC and return control with a status of NDIS_STATUS_RESOURCES.</P>

<P>If <I>ProtocolCoCreateVc</I> has completed its required operations and has made the call manager or client ready to carry out call initialization for this virtual connection, <I>ProtocolCoCreateVc</I> should return control as quickly as possible with a status of NDIS_STATUS_SUCCESS.</P>

<P>Calls to <I>ProtocolCoCreateVc</I> are inherently synchronous in nature. That is, <I>ProtocolCoCreateVc</I> <I>cannot</I> return NDIS_STATUS_PENDING. </P>

<P>After a call manager's <I>ProtocolCoCreateVc</I> function returns control, the call manager's <A HREF="104tdlow_20oi.htm"><I>ProtocolCmMakeCall</I></A> function will be called to establish a connection to a remote node. Call managers should not take any action in <I>ProtocolCmMakeCall</I> that actually establishes a call because it is possible the VC will be destroyed before a call is established due to an error condition in another component of connection-oriented NDIS.</P>

<P>After a client's <I>ProtocolCoCreateVc</I> function returns control, the client's <A HREF="104tdlow_8a9e.htm"><I>ProtocolClIncomingCall</I></A> function will be notified when a remote-initiated request to connect on a SAP previously registered by the client comes in over the network.</P>

<P><I>ProtocolCoCreateVc</I> must be written so that it can run at IRQL = DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>, <A HREF="103ndisx_6quq.htm"><B>NdisClOpenAddressFamily</B></A>, <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>, <A HREF="104tdlow_8a9e.htm"><I>ProtocolClIncomingCall</I></A>, <A HREF="104tdlow_20oi.htm"><I>ProtocolCmMakeCall</I></A>, <A HREF="104tdlow_5ape.htm"><I>ProtocolCmOpenAf</I></A>, <A HREF="104tdlow_2goi.htm"><I>ProtocolCoAfRegisterNotify</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProtocolCoCreateVc"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
