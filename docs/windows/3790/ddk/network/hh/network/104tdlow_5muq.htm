<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProtocolPnPEvent</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProtocolPnPEvent">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_poregistersystemstate_dr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pounregistersystemstate_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocolpnpevent_nr"></A>ProtocolPnPEvent</H1>

<P>The <I>ProtocolPnPEvent</I> function is required in protocol drivers to support Plug and Play and/or Power Management. NDIS calls <I>ProtocolPnPEvent</I> to indicate a Plug and Play event or a Power Management event to a protocol bound to a NIC.</P>

<PRE class=syntax><B>NDIS_STATUS
</B>  <B>ProtocolPnPEvent(
</B>    <B>IN NDIS_HANDLE</B>  <I>ProtocolBindingContext</I><B>,
</B>    <B>IN PNET_PNP_EVENT</B>  <I>NetPnPEvent</I><B>
</B>    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ProtocolBindingContext</I></DT>

<DD>Specifies the handle to a protocol-allocated context area in which this driver maintains per-binding run-time state. The protocol supplied this handle when it called <A HREF="103ndisx_9koi.htm"><B>NdisOpenAdapter</B></A>. A <B>NetEvent</B><I>Xxx</I> indicated on a NULL <I>ProtocolBindingContext</I> pertains to all network bindings. <B>NetEventBindList</B> and <B>NetEventBindsComplete</B> are always indicated on a NULL <I>ProtocolBindingContext</I>. <B>NetEventReconfigure</B> can be indicated on a particular <I>ProtocolBindingContext</I> or a NULL <I>ProtocolBindingContext</I>.</DD>

<DT><I>NetPnPEvent</I></DT>

<DD>Pointer to a NET_PNP_EVENT structure, which describes the Plug and Play event or Power Management event being indicated to the protocol driver.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>ProtocolPnPEvent</I> can return any of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The protocol successfully handled the indicated Plug and Play or Power Management event. The meaning of this status code depends on the <B>NetEvent</B> code in the buffered NET_PNP_EVENT structure at <I>NetPnPEvent</I>:

<DL>
<DT><B>NetEventSetPower</B></DT>

<DD>The device has transitioned to the requested power device power state.</DD>

<DT><B>NetEventQueryPower</B></DT>

<DD>The device can transition to the requested device power state.</DD>

<DT><B>NetEventQueryRemoveDevice</B></DT>

<DD>The device can be removed.</DD>

<DT><B>NetEventCancelRemoveDevice</B></DT>

<DD>The removal of the device has been canceled.</DD>

<DT><B>NetEventReconfigure</B></DT>

<DD>The protocol has accepted the changed configuration parameter(s).</DD>

<DT><B>NetEventBindList</B></DT>

<DD>The protocol has the new bind list and has performed related processing. For example, it has conveyed the new binding list to all bound TDI clients that have registered a ClientBinding handler with the protocol.</DD>

<DT><B>NetEventBindsComplete</B></DT>

<DD>The protocol has acknowledged the indication from NDIS that the protocol has bound to all available NICs.</DD>

<DT><B>NetEventPnPCapabilities</B></DT>

<DD>The protocol has acknowledged that the wake-up capabilities of the NIC on the specified binding have changed.</DD>
</DL>
</DD>

<DT>NDIS_STATUS_PENDING</DT>

<DD>The protocol will return its response to the indicated event asynchronously with a call to <A HREF="103ndisx_0vaq.htm"><B>NdisCompletePnPEvent</B></A>.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>The protocol could not obtain the necessary system resources to satisfy the indicated Plug and Play or Power Management event.</DD>

<DT>NDIS_STATUS_NOT_SUPPORTED</DT>

<DD>A legacy (non-PnP-aware) protocol can return this status in response to a <B>NetEventSetPower</B> to indicate that NDIS should unbind it from the NIC.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>The protocol failed the indicated Plug and Play or Power Management event. The meaning of this status code depends on the <B>NetEvent</B> code in the buffered NET_PNP_EVENT structure at <I>NetPnPEvent</I>:

<DL>
<DT><B>NetEventSetPower</B></DT>

<DD>The protocol should not fail this event.</DD>

<DT><B>NetEventQueryPower</B></DT>

<DD>The protocol should not fail this event.</DD>

<DT><B>NetEventQueryRemoveDevice</B></DT>

<DD>The protocol could not release the device.</DD>

<DT><B>NetEventCancelRemoveDevice</B></DT>

<DD>The protocol should not fail this event.</DD>

<DT><B>NetEventReconfigure</B></DT>

<DD>The protocol should not fail this event.</DD>

<DT><B>NetEventBindList</B></DT>

<DD>The protocol should not fail this event.</DD>

<DT><B>NetEventBindsComplete</B></DT>

<DD>The protocol should not fail this event</DD>

<DT><B>NetEventPnPCapabilities</B></DT>

<DD>The protocol should not fail this event
</DD>
</DL>
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>NDIS calls <I>ProtocolPnPEvent</I> to notify a protocol bound to a network NIC that the operating system has issued a Plug and Play or Power Management event to the device object representing the NIC. NDIS calls the <I>ProtocolPnPEvent</I> function of each protocol bound to the NIC.</P>

<P>The NET_PNP_EVENT structure passed to <I>ProtocolPnPEvent</I> describes the Plug and Play or Power Management event. <I>ProtocolPnPEvent</I> interprets two basic pieces of information in the NET_PNP_EVENT structure:

<UL>
	<LI>A <B>NetEvent</B> code that describes the Plug and Play or Power Management event.</LI>

	<LI>Event-specific information (for example, for a <B>NetEventSetPower</B>, the device power state to which the device is transitioning).</LI>
</UL>

<P>The protocol should save the <I>NetPnPEvent</I> pointer. This pointer is a required input parameter to <A HREF="103ndisx_0vaq.htm"><B>NdisCompletePnPEvent</B></A>, which the protocol must subsequently call if <I>ProtocolPnPEvent</I> returns NDIS_STATUS_PENDING.</P>

<P>A protocol should always succeed a <B>NetEventQueryPower</B>. After establishing an active connection, a protocol can call <A HREF="JavaScript:hhobj_1.Click()"><B>PoRegisterSystemState</B></A> to register a continuously busy state. As long as the state registration is in effect, the Power Manager does not attempt to put the system to sleep. After the connection becomes inactive, the protocol cancels the state registration by calling <A HREF="JavaScript:hhobj_2.Click()"><B>PoUnregisterSystemState</B></A>. A protocol should never try to prevent the system from transitioning to the sleeping state by failing a <B>NetEventQueryRemoveDevice</B>. Note that a <B>NetEventQueryPower</B> is always followed by a <B>NetEventSetPower</B>. A <B>NetEventSetPower</B> to the device's current power state in effect cancels the <B>NetEventQueryPower</B>.</P>

<P>If a protocol cannot release a device (for example, because the device is in use) it must fail a <B>NetEventQueryRemoveDevice</B> by returning NDIS_STATUS_FAILURE.</P>

<P>A protocol should always succeed a <B>NetEventCancelRemoveDevice</B>, a <B>NetEventReconfigure</B>, <B>NetEventBindList¸ NetEventBindsComplete</B>, or <B>NetEventPnPCapabilities</B> by returning NDIS_STATUS_SUCCESS.</P>

<P>A PnP-aware protocol must always succeed a <B>NetEventSetPower</B>. A legacy protocol that does not support power management returns NDIS_STATUS_NOT_SUPPORTED in response to a <B>NetEventSetPower</B> to indicate that NDIS should unbind the protocol from the NIC.</P>

<P>When handling a <B>NetEventReconfigure</B> or a <B>NetEventBindList</B>, a protocol should validate the data associated with the event. For more information on such data, see <A HREF="105nstru_6c1e.htm"><B>NET_PNP_EVENT for Protocol Drivers</B></A>.</P>

<P>A protocol can return NDIS_STATUS_RESOURCES for any Plug and Play or Power Management event.</P>

<P><I>ProtocolPnPEvent</I> runs at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="105nstru_6c1e.htm"><B>NET_PNP_EVENT for Protocol Drivers</B></A>,<A HREF="103ndisx_0vaq.htm"> <B>NdisCompletePnPEvent</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProtocolPnPEvent"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
