<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WSHGetSockaddrType</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WSHGetSockaddrType">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wshgetsockaddrtype_nr"></A>WSHGetSockaddrType</H1>

<P>The <B>WSHGetSockaddrType</B> function parses a socket address and returns information about it to Windows Sockets.</P>

<PRE class=syntax><B>INT</B>
  <B>WSHGetSockaddrType(</B>
<B>    IN PSOCKADDR</B>  <I>Sockaddr</I><B>,</B>
<B>    IN DWORD</B>  <I>SockaddrLength</I><B>,</B>
<B>    OUT PSOCKADDR_INFO</B>  <I>SockaddrInfo</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Sockaddr</I></DT>

<DD>Pointer to the SOCKADDR structure to be evaluated.</DD>

<DT><I>SockaddrLength</I></DT>

<DD>Specifies the length, in bytes, of the structure at <I>Sockaddr</I>.</DD>

<DT><I>SockaddrInfo</I></DT>

<DD>Pointer to a buffer in which the helper DLL returns information about the socket address, formatted as a SOCKADDR_INFO structure.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>WSHGetSockaddrType</B> returns zero if the given socket address is valid for the address family supported by this helper DLL. Otherwise, it returns a Windows Sockets error code.</P>

<H4>Headers</H4>

<P>Declared in <I>wsahelp.h</I>. Include <I>wsahelp.h</I>.</P>

<H4>Comments</H4>

<P>Windows Sockets calls <B>WSHGetSockaddrType</B> when it needs information about a SOCKADDR. The helper DLL evaluates both the machine address and endpoint portions of the SOCKADDR. The machine-address portion specifies a particular machine, for example, the IP address in an internet address. The endpoint specifies a particular service on a machine, corresponding to the port number in an internet address. </P>

<P>The SOCKADDR_INFO<B> </B>structure is defined as follows:</P>

<PRE>typedef struct _SOCKADDR_INFO {
    SOCKADDR_ADDRESS_INFO AddressInfo;
    SOCKADDR_ENDPOINT_INFO EndpointInfo;
} SOCKADDR_INFO, *PSOCKADDR_INFO;</PRE>

<P>SOCKADDR_ADDRESS_INFO<B> </B>is an enumerated type, with the following possible values:

<DL>
<DT><B>SockaddrAddressInfoNormal</B></DT>

<DD>The address portion of the SOCKADDR has no unusual characteristics.</DD>

<DT><B>SockaddrAddressInfoWildcard</B></DT>

<DD>The address portion of the SOCKADDR is a “wildcard,” meaning that it does not specify a particular address. For example, this corresponds to INADDR_ANY<B> </B>(0.0.0.0) for IP addresses, which an application passes to <B>bind</B> when it has no particular requirements for the IP address used for a socket.</DD>

<DT><B>SockaddrAddressInfoBroadcast </B></DT>

<DD>The address portion of the SOCKADDR refers to the address family’s broadcast address. For example, in IP addresses, this is INADDR_BROADCAST (255.255.255.255).</DD>

<DT><B>SockaddrAddressInfoLoopback</B></DT>

<DD>The address portion of the SOCKADDR refers to the address family’s loopback address. For example, in internet addresses, this is INADDR_LOOPBACK (127.0.0.1).
</DD>
</DL>

<P>SOCKADDR_ENDPOINT_INFO also is an enumerated type, with the following possible values: 

<DL>
<DT><B>SockaddrEndpointInfoNormal</B> </DT>

<DD>The endpoint portion of the SOCKADDR has no unusual characteristics.</DD>

<DT><B>SockaddrEndpointInfoWildcard</B> </DT>

<DD>The endpoint portion of the SOCKADDR is a wildcard, meaning that it could refer to any endpoint. An application, typically a client, can pass a wildcard endpoint to <B>bind </B>when it has no particular requirements for the endpoint assigned. For example, in IP addresses, a port set to zero is a wildcard endpoint.</DD>

<DT><B>SockaddrEndpointInfoReserved</B></DT>

<DD>The endpoint of the SOCKADDR is reserved, meaning that special privilege is required to bind to it. For example, in internet addresses, a port with a value less than IPPORT_RESERVED (1024) is a reserved endpoint.
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WSHGetSockaddrType"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
