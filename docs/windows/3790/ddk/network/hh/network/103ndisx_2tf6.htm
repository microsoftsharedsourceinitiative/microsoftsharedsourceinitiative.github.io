<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisClDropParty</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisClDropParty">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndiscldropparty_nr"></A>NdisClDropParty</H1>

<P><B>NdisClDropParty</B> drops a party from the client's multipoint VC. </P>

<PRE class=syntax><B>NDIS_STATUS
  NdisClDropParty(
    IN NDIS_HANDLE</B>  <I>NdisPartyHandle</I><B>,</B>
    <B>IN PVOID</B>  <I>Buffer  </I><B>OPTIONAL,</B>
    <B>IN UINT</B>  <I>Size </I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>NdisPartyHandle</I></DT>

<DD>Specifies the handle identifying the party to be dropped on the multipoint connection. The client obtained this handle from a preceding call to <A HREF="103ndisx_5fua.htm"><B>NdisClAddParty</B></A> or <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>. </DD>

<DT><I>Buffer</I></DT>

<DD>Pointer to a caller-allocated buffer containing any data to be transmitted to close the multipoint connection of the party on the remote node. Depending on the underlying medium, this pointer can be NULL. For example, this parameter is NULL on ATM networks.</DD>

<DT><I>Size</I></DT>

<DD>Specifies the size in bytes at <I>Buffer</I>, zero if <I>Buffer</I> is NULL.
</DD>
</DL>

<H4>Return Value</H4>

<P>When <B>NdisClDropParty</B> returns anything other than NDIS_STATUS_PENDING, the client should make an internal call to its <A HREF="104tdlow_07ea.htm"><I>ProtocolClDropPartyComplete</I></A> function. Otherwise, NDIS calls the client's <I>ProtocolClDropPartyComplete</I> function when this operation is completed.</P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>Clients usually call <B>NdisClDropParty</B> in either of the following circumstances:

<UL>
	<LI>From the <A HREF="104tdlow_8pde.htm"><I>ProtocolClIncomingDropParty</I></A> function to remove the given party from a multipoint connection
<P>This occurs when a party on a remote node closes its connection with <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>. When NDIS calls the local client's <I>ProtocolClDropPartyComplete</I> function, it can release or reuse the context area at <I>ProtocolPartyContext</I> in which the client was maintaining state about this party. 
</LI>

	<LI>Before the client calls <B>NdisClCloseCall</B> with the last party on a multipoint connection that the client originally set up with <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>
<P>For such a client-initiated close of its own multipoint call, the client must call <B>NdisClDropParty</B> one or more times to drop every other remaining party on the multipoint VC. 
</LI>
</UL>

<P>A client's call to <B>NdisClDropParty</B> causes NDIS to call the <A HREF="104tdlow_3koi.htm"><I>ProtocolCmDropParty</I></A> function of the call manager that shares the same <I>NdisVcHandle</I> to the multipoint VC. The call manager is responsible for notifying its remote-node peer that the party connection has been or should be closed, depending on which client initiated the drop-party operation. </P>

<P>As a general guideline, a client must call <B>NdisClDropParty</B> as many times as it called <A HREF="103ndisx_5fua.htm"><B>NdisClAddParty</B></A> with a particular <I>NdisVcHandle</I> obtained from <B>NdisClMakeCall</B> <I>before</I> it closes its multipoint connection with <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>. Since remote parties can initiate closes of their connections, thereby causing calls to the local client's <A HREF="104tdlow_8pde.htm"><I>ProtocolClIncomingDropParty</I></A> function, the local client must keep track of the number of active parties on its multipoint VCs in order to know how many calls it must make to <B>NdisClDropParty</B> before it can call <B>NdisClCloseCall</B>. </P>

<P>However, the client is not required to pass <B>NdisClCloseCall</B> the same <I>NdisPartyHandle</I> returned by <B>NdisClMakeCall</B> when the client originally set up its multipoint connection. The client can release parties on its multipoint VC in any order, as long as it releases every <I>NdisPartyHandle</I> returned by <B>NdisClAddParty</B> or <B>NdisClMakeCall</B> in its calls to <B>NdisClDropParty</B>, followed by a final call with the last party handle to <B>NdisClCloseCall</B> for the same multipoint VC. After the client has closed its multipoint call, it can release the VC that it originally created with <A HREF="103ndisx_920i.htm"><B>NdisCoDeleteVc</B></A>. </P>

<P>The caller of <B>NdisClDropParty</B> should consider the input <I>NdisPartyHandle</I> invalid as soon as it makes this call. If it stored this handle in the party context area it allocated, the client's <A HREF="104tdlow_07ea.htm"><I>ProtocolClDropPartyComplete</I></A> function should reset the handle variable to NULL if it reinitializes its per-party context area for reuse when the party has been dropped. </P>

<P>Callers of <B>NdisClDropParty</B> can be running at IRQL &lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_5fua.htm"><B>NdisClAddParty</B></A>, <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>, <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>, <A HREF="103ndisx_920i.htm"><B>NdisCoDeleteVc</B></A>, <A HREF="104tdlow_07ea.htm"><I>ProtocolClDropPartyComplete</I></A>, <A HREF="104tdlow_8pde.htm"><I>ProtocolClIncomingDropParty</I></A>, <A HREF="104tdlow_3koi.htm"><I>ProtocolCmDropParty</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisClDropParty"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
