<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCmActivateVc</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCmActivateVc">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcmactivatevc_nr"></A>NdisMCmActivateVc</H1>

<P><B>NdisMCmActivateVc</B> notifies NDIS that an MCM driver is ready to make transfers on a particular VC.</P>

<PRE class=syntax><B>NDIS_STATUS
  NdisMCmActivateVc(
    IN NDIS_HANDLE</B>  <I>NdisVcHandle</I><B>,</B>
    <B>IN PCO_CALL_PARAMETERS</B>  <I>CallParameters
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle identifying the VC. </DD>

<DT><I>CallParameters</I></DT>

<DD>Pointer to a caller-allocated buffer, formatted as a structure of type <A HREF="105nstru_3raq.htm">CO_CALL_PARAMETERS</A>, containing all the media-specific parameters that the miniport driver uses for the activated VC. 
</DD>
</DL>

<H4>Return Value</H4>

<P>When <B>NdisMCmActivateVc</B> returns anything other than NDIS_STATUS_PENDING, the MCM driver should make an internal call to its <A HREF="104tdlow_5aeq.htm"><I>ProtocolCmActivateVcComplete</I></A> function. Otherwise, NDIS calls the MCM driver's <I>ProtocolCmActivateVcComplete</I> function when this operation is completed.</P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisMCmActivateVc</B> informs NDIS that an MCM driver has set up call and media parameters on a newly created VC or changed the call parameters on an established VC. </P>

<P>An MCM driver must call <B>NdisMCmActivateVc</B> after establishing a connection on a VC but before any data is sent or received on that VC. This call notifies NDIS that the miniport driver has made its NIC ready for transfers on the VC. </P>

<P>For a client-initiated outgoing call, an MCM driver usually calls <B>NdisMCmActivateVc</B> following the handshake denoting a negotiated agreement with the remote node or successful call-setup at the switch, before it notifies NDIS (and the client) of outgoing call completion with <A HREF="103ndisx_8a2a.htm"><B>NdisMCmMakeCallComplete</B></A>. For an incoming call, an MCM driver usually calls <B>NdisMCmActivateVc</B> after it has called <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A> successfully and before it calls <A HREF="103ndisx_5zoy.htm"><B>NdisMCmDispatchIncomingCall</B></A>. </P>

<P>The driver writer determines whether an MCM driver has an (internal) <I>MiniportCoActivateVc</I> function that the driver calls in the context of setting up connections for outgoing and incoming calls. </P>

<P>For the duration of the connection, an MCM driver can modify the call parameters as conditions on the network change and/or whenever the client calls <A HREF="103ndisx_7jhu.htm"><B>NdisClModifyCallQoS</B></A>. The MCM driver must update the state that it maintains about call parameters to the new values if it can continue to make transfers on the VC according to the newly modified call parameters. It must call <B>NdisMCmActivateVc</B> to notify NDIS of any changes in the call parameters for the active VC. Otherwise, the MCM driver can do either of the following:

<UL>
	<LI>Call <B>NdisMCmDeactivateVc</B> after failing the client's request to modify QoS or other call parameters for the VC to such a state that the NIC driver cannot continue to make transfers on the VC. </LI>

	<LI>Restore the call parameters to a previously accepted state, notify the client that requested the change, and remain ready to continue transferring data on the VC. In this case, the client has the option of accepting the restored call parameters or rejecting them and initiating a close of the VC. </LI>
</UL>

<P>Only connection-oriented miniport drivers that provide integrated call-management support can call <B>NdisMCmActivateVc</B>. Stand-alone call managers, which register themselves with NDIS as protocols, call <B>NdisCmActivateVc</B> instead. </P>

<P>Callers of <B>NdisMCmActivateVc</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="105nstru_3raq.htm">CO_CALL_PARAMETERS</A>, <A HREF="101mini_7piq.htm"><I>MiniportCoActivateVc</I></A>, <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>, <A HREF="103ndisx_7jhu.htm"><B>NdisClModifyCallQoS</B></A>, <A HREF="103ndisx_3zzm.htm"><B>NdisCmActivateVc</B></A>, <A HREF="103ndisx_1nqq.htm"><B>NdisMCmDeactivateVc</B></A>, <A HREF="103ndisx_5zoy.htm"><B>NdisMCmDispatchIncomingCall</B></A>, <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A>, <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCmActivateVc"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
