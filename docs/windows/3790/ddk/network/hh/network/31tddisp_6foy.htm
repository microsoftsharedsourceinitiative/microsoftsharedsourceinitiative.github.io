<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TdiDispatchCreate</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TdiDispatchCreate">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iogetcurrentirpstacklocation_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdidispatchcreate_nr"></A>TdiDispatchCreate</H1>

<P>The <I>TdiDispatchCreate</I> routine opens a file object that represents an address, connection endpoint, or control channel, setting up driver-allocated state to track subsequent I/O operations on the open file object.</P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>TdiDispatchCreate(
</B>    <B>IN PDEVICE_OBJECT</B>  <I>DeviceObject</I><B>,
</B>    <B>IN PIRP</B>  <I>Irp
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceObject</I></DT>

<DD>Pointer to the device object created by the TDI transport.</DD>

<DT><I>Irp</I></DT>

<DD>Pointer to the IRP with IRP_MJ_CREATE set as the <B>MajorFunctionCode</B> in the I/O stack location of the transport driver. 

<P>A transport calls <A HREF="JavaScript:hhobj_1.Click()"><B>IoGetCurrentIrpStackLocation</B></A> with the given <I>Irp</I> to get a pointer to its own stack location in the IRP, shown in the following list as IrpSp. The transport can use the information set in the following members of the IRP in processing a create request:


<DL>
<DT><B>IoStatus.Status</B></DT>

<DD>Specifies the final status of the create/open operation. The transport sets this member to the same value that will be returned by <B>TdiDispatchCreate</B>. (<B>IoStatus.Information</B> is set to zero.)</DD>

<DT>IrpSp<B>-&gt;MajorFunction</B></DT>

<DD>Specifies IRP_MJ_CREATE. The transport can ignore this member if it exports a <B>TdiDispatchCreate</B> routine that handles only create requests. </DD>

<DT>IrpSp<B>-&gt;FileObject</B></DT>

<DD>Pointer to a file object that the I/O Manager creates to represent the address, connection endpoint, or control channel. The transport driver sets the <B>FsContext</B> and possibly <B>FsContext2</B> fieldss in this file object to access driver-allocated context areas set up in <B>TdiDispatchCreate</B> to track subsequent I/O requests on the address, connection endpoint, or control channel. </DD>

<DT><B>Irp-&gt;AssociatedIrp.SystemBuffer</B></DT>

<DD>Pointer to a FILE_FULL_EA_INFORMATION-structured buffer if the file object represents an address or a connection endpoint to be opened. 

<P>Always verify the values in the FILE_FULL_EA_INFORMATION structure before using them. Do not assume the structure was formatted by a trusted source. Verify that the <B>EaNameLength</B> and <B>EaValueLength</B> members are within the expected range. 


<P>For an address, the <B>EaName</B> member is set to the system-defined constant <B>TdiTransportAddress</B> and the EA value following the <B>EaName</B> array is of type TRANSPORT_ADDRESS, set up by the client to specify the address to be opened. For some transports, this value can be a symbolic netBIOS or DNS name to be translated by the transport.


<P>For a connection endpoint, the <B>EaName</B> member is set to the system-defined constant <B>TdiConnectionContext</B> and the EA value following the <B>EaName</B> array is a client-supplied handle, opaque to the transport driver. The transport must save this handle and subsequently pass it back to the client's registered event handlers for this connection. 


<P>If the given file object represents a control channel, this member is NULL. 
</DD>

<DT>IrpSp<B>-&gt;Parameters.Create.EaLength</B></DT>

<DD>Specifies the size in bytes of the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>. If the given file object represents a control channel, specifies zero.</DD>

<DT>IrpSp<B>-&gt;Parameters.Create.ShareAccess</B></DT>

<DD>If the given file object represents an address, specifies whether the client has requested an exclusive open of the file object. If the initial client to open an address sets either of FILE_SHARE_READ or FILE_SHARE_WRITE in the <I>ShareAccess</I> parameter to <B>ZwCreateFile</B>, the same address can be opened by other clients subsequently. </DD>

<DT>IrpSp<B>-&gt;Parameters.Create.SecurityContext-&gt;AccessState</B></DT>

<DD>If the given file object represents a shareable address, defines the requested access to that address. The initial client to open a file object representing a particular address sets the access control list for that address. A TDI transport driver calls Security Reference Monitor (<B>Se</B><I>Xxx</I>) routines to check this member against the original ACL assigned to the corresponding file object when subsequent open-address requests occur. The transport fails subsequent open requests if the requested access is incompatible with the access rights granted in the original ACL. 
</DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<P><B>TdiDispatchCreate</B> returns STATUS_SUCCESS if the create/open operation succeeds and the transport has set up whatever state it uses to track subsequent I/O operations for the address, connection endpoint, or control channel. Otherwise, it can return any driver-determined status, such as one of the following:

<DL>
<DT>STATUS_INVALID_PARAMETER</DT>

<DD>A transport might return this value if it found <B>EaName</B> entries set with both <B>TdiTransportAddress</B> and <B>TdiConnectionContext</B> in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.  </DD>

<DT>STATUS_SHARING_VIOLATION</DT>

<DD>A transport might return this value if an attempt is made to open a file object representing an address that has already been opened for exclusive access. </DD>

<DT>STATUS_NONEXISTENT_EA_ENTRY</DT>

<DD>A transport might return this value if an entry's <B>EaName</B> array is not followed by a valid address value of the given <B>EaValueLength</B> in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.</DD>

<DT>STATUS_INSUFFICIENT_RESOURCES</DT>

<DD>A transport might return this status if it could not allocate sufficient memory in which to maintain state information about the address, connection endpoint, or control channel. </DD>

<DT>STATUS_INVALID_DEVICE_REQUEST</DT>

<DD>A transport might return this status as a default error return or if the next lower driver's device currently is being closed. 
</DD>
</DL>

<H4>Comments</H4>

<P>Opening an address, connection endpoint, or control channel object is an inherently synchronous operation. <B>TdiDispatchCreate</B> can block waiting for internal driver functions to handle particular subtasks, such as initializing structures in driver-allocated context areas or checking the ACL for an address. However, <B>TdiDispatchCreate</B> should either set <B>IoStatus.Status</B> in the IRP to STATUS_SUCCESS or to an appropriate error status before it returns control. </P>

<P>A transport driver should fail any create/open request in which the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B> contains <B>EaName</B> members set with both <B>TdiTransportAddress</B> and <B>TdiConnectionContext</B>. Clients must make separate calls to <B>ZwCreateFile</B> to open an address and a connection endpoint because a single file object cannot represent a combined address and connection endpoint. </P>

<P>A client opens a file object representing an address to indicate its transport address to the TDI driver. The first client to open such a file object can specify that it be either exclusive or shared. If the initial client specifies an exclusively opened file object, the transport driver fails all subsequent client requests to open that address. If the initial client specifies a shared file object, the transport driver also fails all subsequent client requests for an exclusive open of that address. Otherwise, any number of clients can open the same file object for shared access of the same address.</P>

<P>Depending on the transport, a client can specify a transport address to be opened or allow the transport driver to select an address. For example, a client might specify a TDI driver's broadcast address to receive datagrams in connectionless mode.</P>

<P>Opening a connection endpoint defines a client's end of a network connection. When <B>TdiDispatchCreate</B> processes such a request, it sets up the connection endpoint in an idle state. The client must eventually associate the open connection endpoint with an opened file object representing an address. That is, a transport does no I/O on an opened connection endpoint until it has been associated with an open address.</P>

<P>Opening a control channel sets up a control channel between a client and the TDI transport driver. A client can use an open control channel to query and set information not specifically tied to an address or connection endpoint. For example, a client might use an opened control channel to query the transport driver's broadcast address (used to receive broadcast datagrams) or to query performance statistics maintained in the transport.</P>

<P><B>TdiDispatchCreate</B> runs at IRQL=PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="31tddisp_3vn6.htm"><B>TdiDispatchCleanup</B></A>, <A HREF="31tddisp_9pwy.htm"><B>TdiDispatchDeviceControl</B></A>, <A HREF="31tddisp_2sfm.htm"><B>TdiDispatchInternalDeviceControl</B></A>, <A HREF="36tdstrc_6hgy.htm"><B>TRANSPORT_ADDRESS</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TdiDispatchCreate"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
