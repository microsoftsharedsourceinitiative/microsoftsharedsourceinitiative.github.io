<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Issuing Set and Query Requests from an Intermediate Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Issuing Set and Query Requests from an Intermediate Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_issuing_set_and_query_requests_from_an_intermediate_driver_ng"></A>Issuing Set and Query Requests from an Intermediate Driver</H3>

<P>The protocol edge of an intermediate driver must issue set and query information requests to the underlying miniport driver. The most common intermediate driver requests are documented in this topic. The virtual miniport edge of an intermediate driver can use the information obtained from the underlying driver to determine how to respond to set and query requests. For more information about responding to set and query requests, see <A HREF="301int_2hgn.htm">Responding to Sets and Queries in an Intermediate Driver</A>. </P>

<P>An intermediate driver with a connectionless lower edge typically issues an <A HREF="22genoid_55gy.htm">OID_GEN_MAXIMUM_FRAME_SIZE</A> request to query the maximum frame size, in bytes, that is supported by an underlying miniport driver. The size returned does not include the header.</P>

<P>An intermediate driver with a connectionless lower edge can query a binding with <A HREF="22genoid_7u9e.htm">OID_GEN_MAXIMUM_TOTAL_SIZE</A> to determine the largest packet an underlying miniport driver can accommodate on the NIC that it manages. The intermediate driver must always set up send packets that conform to this size. It is an error for an overlying driver to submit a packet that is larger than an underlying miniport driver can support.</P>

<P>An intermediate driver with a connectionless lower edge can query the size of the lookahead data buffer. The OID used is <A HREF="22genoid_1jzm.htm">OID_GEN_CURRENT_LOOKAHEAD</A>. If the intermediate driver issues this as a query, NDIS returns the current lookahead buffer size for the given binding to the underlying miniport driver. If the intermediate driver makes a set request, it indicates its preferred lookahead buffer size but the intermediate driver is not assured that the underlying miniport driver will conform to this. </P>

<P>An intermediate driver with a connectionless lower edge queries the underlying miniport driver for its link speed with <A HREF="22genoid_25pu.htm">OID_GEN_LINK_SPEED</A> and uses the response to set any internal time-out values that it maintains. An intermediate driver with a connection-oriented lower edge queries the underlying miniport driver for its link speed with <A HREF="211cooid_1242.htm">OID_GEN_CO_LINK_SPEED</A> and can also set the link speed of the underlying miniport driver with OID_GEN_CO_LINK_SPEED.</P>

<P>If an intermediate driver is bound to an NDIS WAN miniport driver, it cannot determine the link speed until it receives a line-up indication, indicating that a connection has been established between the local node and a remote node. For a description of the line-up indication, see <A HREF="208mwan_949z.htm">Indicating NDIS WAN Miniport Driver Status</A>. </P>

<P>An intermediate driver must also determine the set of operating characteristics of the underlying miniport driver. An intermediate driver with a connectionless lower edge accomplishes this by issuing an <A HREF="22genoid_499u.htm">OID_GEN_MAC_OPTIONS</A>. An intermediate driver with a connection-oriented lower edge accomplishes this by issuing an <A HREF="211cooid_3uk2.htm">OID_GEN_CO_MAC_OPTIONS</A>.</P>

<P>An intermediate driver with a connectionless lower edge usually issues an <A HREF="22genoid_9roy.htm">OID_GEN_MAXIMUM_SEND_PACKETS</A> query, particularly if the intermediate driver exports a <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> function. Such an intermediate driver can propagate the returned value when it, in turn, responds to an OID_GEN_MAXIMUM_SEND_PACKETS query from a higher-level driver. </P>

<P>An intermediate driver also can query the medium-dependent current address with a medium-specific OID. For example, an intermediate driver with a connectionless lower edge might issue an <A HREF="28wanoid_0u42.htm">OID_WAN_CURRENT_ADDRESS</A>, <A HREF="23ethoid_8b8y.htm#ddk_oid_802_3_current_address_nr">OID_802_3_CURRENT_ADDRESS</A>, <A HREF="24tokoid_16gi.htm#ddk_oid_802_5_current_address_nr">OID_802_5_CURRENT_ADDRESS</A>, or <A HREF="25fddoid_14oi.htm">OID_FDDI_LONG_CURRENT_ADDR</A>. An intermediate driver with a connection-oriented lower edge might issue an <A HREF="213atmoid_4zua.htm">OID_ATM_HW_CURRENT_ADDRESS</A>.</P>

<P>If needed, the intermediate driver issues a set request to inform NDIS of its operating characteristics. An intermediate driver with a connectionless lower edge accomplishes this by passing <A HREF="22genoid_18fm.htm">OID_GEN_PROTOCOL_OPTIONS</A> to <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>. An intermediate driver with a connection-oriented lower edge accomplishes this by passing <A HREF="211cooid_1m5u.htm">OID_GEN_CO_PROTOCOL_OPTIONS</A> to <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A>.</P>

<P>For more information about issuing set and query requests, see <A HREF="302pro_33l3.htm">Protocol Driver Query and Set Operations</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Issuing%20Set%20and%20Query%20Requests%20from%20an%20Intermediate%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
