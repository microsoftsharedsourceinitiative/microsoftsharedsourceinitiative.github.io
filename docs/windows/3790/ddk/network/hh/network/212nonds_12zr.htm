<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Initializing a Miniport Driver with a WDM Lower Edge</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Initializing a Miniport Driver with a WDM Lower Edge">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_handling_irps_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_initializing_a_miniport_driver_with_a_wdm_lower_edge_ng"></A>Initializing a Miniport Driver with a WDM Lower Edge</H1>

<P>After a miniport driver has been loaded by the operating system, NDIS calls the miniport driver's <I>MiniportInitialize</I> function to initialize a miniport instance that the miniport driver manages. To communicate through a miniport instance that has a WDM lower edge, the miniport driver must retrieve specific information to set up its communications. During initialization of this miniport instance, the miniport driver must call the <A HREF="103ndisx_314i.htm"><B>NdisMGetDeviceProperty</B></A> function to retrieve device objects that are required to set up communication with the miniport instance through a WDM interface. In this call, the miniport driver passes the handle to the miniport instance in the <I>MiniportAdapterHandle</I> parameter and buffers that receive pointers to DEVICE_OBJECT structures. The miniport driver uses the retrieved pointer to the next-device object (<I>NextDeviceObject</I> parameter) to create and submit IRPs. For more information, see <A HREF="JavaScript:hhobj_1.Click()">Handling IRPs</A>.</P>

<P>A miniport driver with a WDM lower edge must be a deserialized miniport driver. A deserialized miniport driver manages its own queue of send and receive requests internally whenever it has insufficient resources to handle these requests immediately; if a miniport driver is not deserialized, NDIS manages this queue. An NDIS-WDM miniport driver must be deserialized because it sends and receives packets outside of the context of NDIS calls. During initialization of a miniport instance, an NDIS-WDM miniport driver must specify the deserialized feature. To specify this feature, the miniport driver must set the NDIS_ATTRIBUTE_DESERIALIZE flag when it calls the <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A> function. </P>

<P>Note that an NDIS-WDM miniport driver cannot be an intermediate driver—a driver that exposes a miniport driver interface at the top and a protocol driver interface at the bottom—so it should not set the NDIS_ATTRIBUTE_INTERMEDIATE_DRIVER flag when it calls <B>NdisMSetAttributesEx</B>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Initializing%20a%20Miniport%20Driver%20with%20a%20WDM%20Lower%20Edge"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
