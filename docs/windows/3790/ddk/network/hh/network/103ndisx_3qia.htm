<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisCoCreateVc</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisCoCreateVc">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndiscocreatevc_nr"></A>NdisCoCreateVc</H1>

<P><B>NdisCoCreateVc</B> sets up a connection endpoint from which a client can make outgoing calls or on which a stand-alone call manager can dispatch incoming calls. </P>

<PRE class=syntax><B>NDIS_STATUS 
  NdisCoCreateVc(
    IN NDIS_HANDLE</B>  <I>NdisBindingHandle</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisAfHandle</I>  <B>OPTIONAL,</B>
    <B>IN NDIS_HANDLE</B>  <I>ProtocolVcContext</I><B>,</B>
    <B>IN OUT PNDIS_HANDLE</B>  <I>NdisVcHandle</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>NdisBindingHandle</I></DT>

<DD>Specifies the handle returned by <A HREF="103ndisx_9koi.htm"><B>NdisOpenAdapter</B></A> that identifies the target NIC or virtual adapter of the next-lower driver to which the caller is bound.</DD>

<DT><I>NdisAfHandle</I></DT>

<DD>Specifies the handle returned by <A HREF="103ndisx_6quq.htm"><B>NdisClOpenAddressFamily</B></A> if the caller is a client. A call manager sets this parameter to NULL if it is creating a VC for itself, such as a VC to a network switch. When it creates a VC for incoming call notifications, a call manager passes the AF handle that it saved in its per-AF state designated by the <I>CallMgrAfContext</I> that was passed as an input parameter to its <A HREF="104tdlow_3kky.htm"><I>ProtocolCmRegisterSap</I></A> function. </DD>

<DT><I>ProtocolVcContext</I></DT>

<DD>Specifies the handle to a caller-supplied resident context area in which the caller maintains state for this VC. NDIS passes this handle back to the VC creator in all subsequent calls concerning this endpoint if the call to <B>NdisCoCreateVc</B> succeeds.</DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Pointer to a caller-supplied variable that <I>must</I> <I>be initialized to NULL</I> when <B>NdisCoCreateVc</B> is called. On return from a successful call, this points to a variable that NDIS has set to its handle for the newly created VC. The caller must save this handle for subsequent calls to connection-oriented <B>Ndis</B><I>Xxx</I><B> </B>functions. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisCoCreateVc</B> can return one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>NDIS created the VC successfully.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>NDIS could not allocate sufficient memory to set up the VC.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>The given <I>NdisAfHandle</I> is invalid.</DD>

<DT>NDIS_STATUS_<I>XXX</I></DT>

<DD>The underlying NIC driver failed the creation of the VC for a miniport driver-determined reason, which NDIS has propagated to the caller.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A client or stand-alone call manager creates a VC with <B>NdisCoCreateVc</B>, depending on whether the VC represents an outgoing or incoming call, respectively. </P>

<P>In the process of VC creation, NDIS supplies an <I>NdisVcHandle</I> to the client, the call manager, and the miniport driver to which both protocols are bound. This handle identifies the virtual circuit for the client, call manager, and miniport driver to which subsequent requests concerning the given VC are directed. Each driver must treat this VC handle as an opaque variable, passing it unmodified and uninterpreted in subsequent calls to certain connection-oriented NDIS library functions. </P>

<P>Usually<I>,</I> callers of <B>NdisCoCreateVc</B> store the returned <I>NdisVcHandle </I>in the caller-allocated state area at <I>ProtocolVcContext</I>. NDIS passes this handle as an input parameter to the <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A> and <A HREF="101mini_7otu.htm"><I>MiniportCoCreateVc</I></A> functions of the other two drivers involved in each creation of a VC. </P>

<P>To make an outgoing call, a client must call <B>NdisCoCreateVc</B> first. As a synchronous operation, NDIS calls the underlying NIC driver's <I>MiniportCoCreateVc</I> function and the call manager’s <I>ProtocolCoCreateVc</I> function before <B>NdisCoCreateVc</B> returns control. If its call to <B>NdisCoCreateVc</B> succeeds, the client can proceed in making an outgoing call, passing the returned <I>NdisVcHandle</I> to <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>. </P>

<P>When its <A HREF="104tdlow_3pwy.htm"><I>ProtocolCoReceivePacket</I></A><I> </I>function processes the offer of an incoming call directed to one of its registered SAPs, a call manager must call <B>NdisCoCreateVc</B> first. As a synchronous operation, NDIS calls the underlying NIC driver's <I>MiniportCoCreateVc</I> function and the client's <I>ProtocolCoCreateVc</I> function before <B>NdisCoCreateVc</B> returns control. If its call to <B>NdisCoCreateVc</B> succeeds, the call manager can proceed in notifying the appropriate client, passing the returned value at <I>NdisVcHandle</I> to <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>.</P>

<P>Stand-alone call managers, which register themselves with NDIS as protocols, can call <B>NdisCoCreateVc</B>. Connection-oriented NIC drivers that provide integrated call-management support call <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A>, instead. </P>

<P>Callers of <B>NdisCoCreateVc</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_7otu.htm"><I>MiniportCoCreateVc</I></A>, <A HREF="103ndisx_72wi.htm"><B>NdisAllocateFromNPagedLookasideList</B></A>, <A HREF="103ndisx_7mr6.htm"><B>NdisClMakeCall</B></A>, <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>, <A HREF="103ndisx_920i.htm"><B>NdisCoDeleteVc</B></A>, <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A>, <A HREF="104tdlow_3kky.htm"><I>ProtocolCmRegisterSap</I></A>, <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A>, <A HREF="104tdlow_3pwy.htm"><I>ProtocolCoReceivePacket</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisCoCreateVc"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
