<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Receiving Packets on a VC</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Receiving Packets on a VC">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_receiving_packets_on_a_vc_ng"></A>Receiving Packets on a VC</H3>

<P>A connection-oriented miniport driver or MCM driver calls <A HREF="103ndisx_6f02.htm"><B>NdisMCoIndicateReceivePacket</B></A> to indicate one or more received packets up to a connection-oriented client or call manager. If the miniport driver or MCM driver handles interrupts, it calls <B>NdisMCoIndicateReceivePacket</B> from its <A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A> function.</P>

<P>The following figure shows a miniport driver indicating received packets.</P>

<P><IMG SRC="images/cm_14.gif" ALT="" BORDER=0></P>

<P><B>Receiving Packets Through a Miniport Driver</B></P>

<P>The next figure shows an MCM driver indicating received packets.</P>

<P><IMG SRC="images/fig1_14.gif" ALT="" BORDER=0></P>

<P><B>Receiving Packets Through an MCM Driver</B></P>

<P>In the call to <B>NdisMCoIndicateReceivePacket</B>, the miniport driver or MCM driver passes a pointer to an array of packet descriptor pointers. The miniport driver or MCM driver also passes an <I>NdisVcHandle</I> that identifies the VC on which the packets were received. Before calling <B>NdisMCoIndicateReceivePacket</B>, the miniport driver or MCM driver must set up a packet array (see <A HREF="204trnsf_0u7b.htm">Receiving Data</A>). </P>

<P>The call to <B>NdisMCoIndicateReceivePacket</B> causes NDIS to call the <A HREF="104tdlow_3pwy.htm"><I>ProtocolCoReceivePacket</I></A> function of the protocol driver (connection-oriented client or call manager) that shares the indicated VC with the <I>miniport driver. The ProtocolCoReceivePacket</I> function processes the receive indication.</P>

<P>After some miniport driver-determined number of calls to <B>NdisMCoIndicateReceivePacket</B>, the miniport driver must call <A HREF="103ndisx_2f76.htm"><B>NdisMCoReceiveComplete</B></A> to indicate the completion of the previous receive indications made with one or more calls to <B>NdisMCoIndicateReceivePacket</B>. The call to <B>NdisMCoReceiveComplete</B> causes NDIS to call the <A HREF="104tdlow_5i7m.htm"><I>ProtocolReceiveComplete</I></A> function of the connection-oriented client or call manager.</P>

<P>If a protocol does not return the miniport driver-allocated resources for a receive indication promptly enough, the miniport driver or MCM driver can call <A HREF="103ndisx_0qgi.htm"><B>NdisMCoIndicateStatus</B></A> with NDIS_STATUS_RESOURCES to alert the offending protocol that the miniport driver or MCM driver is running low on available packet or buffer descriptors (or even on NIC receive buffer space) for subsequent receive indications.</P>

<P>For more information on receiving packets, see <A HREF="204trnsf_0u7b.htm">Receiving Data</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Receiving%20Packets%20on%20a%20VC"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
