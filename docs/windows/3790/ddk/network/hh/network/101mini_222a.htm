<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MiniportEnableInterrupt</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MiniportEnableInterrupt">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_miniportenableinterrupt_nr"></A>MiniportEnableInterrupt</H1>

<P>The <I>MiniportEnableInterrupt</I> function is optionally supplied by some drivers of NICs that support dynamic enabling and disabling of interrupts but that do not share an IRQ.</P>

<PRE class=syntax><B>VOID</B> <B>
</B>  <B>MiniportEnableInterrupt(</B>
    <B>IN</B> <B>NDIS_HANDLE</B>  <I>MiniportAdapterContext</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterContext</I></DT>

<DD>Specifies the handle to a miniport driver-allocated context area in which the driver maintains per-NIC state, set up by <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h.</I></P>

<H4>Comments</H4>

<P><I>MiniportEnableInterrupt</I> typically enables interrupts by writing a mask to the NIC.</P>

<P>A NIC driver that exports a <A HREF="101mini_0jg2.htm"><I>MiniportDisableInterrupt</I></A> function need not have a reciprocal <I>MiniportEnableInterrupt</I> function. Such a driver’s <A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A> function is responsible for reenabling interrupts on the NIC. </P>

<P>If its NIC does not support dynamic enabling and disabling of interrupts or if it shares an IRQ, the NIC driver must register a <A HREF="101mini_38c2.htm"><I>MiniportISR</I></A> function and set <I>RequestIsr</I> to TRUE when it calls <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A>. Such a driver’s <I>MiniportISR</I> function must acknowledge each interrupt generated by the NIC and save any necessary interrupt information for the driver’s <I>MiniportHandleInterrupt</I> function.</P>

<P><I>MiniportEnableInterrupt</I> can be preempted by an interrupt.</P>

<P><I>MiniportEnableInterrupt</I> runs at IRQL = DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="101mini_0jg2.htm"><I>MiniportDisableInterrupt</I></A>, <A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_38c2.htm"><I>MiniportISR</I></A>, <A HREF="103ndisx_5uk2.htm"><B>NdisMRegisterInterrupt</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MiniportEnableInterrupt"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
