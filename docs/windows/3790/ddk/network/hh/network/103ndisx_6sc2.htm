<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisFreeMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisFreeMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisfreememory_nr"></A>NdisFreeMemory</H1>

<P><B>NdisFreeMemory</B> releases a block of memory previously allocated with <A HREF="103ndisx_9xwy.htm"><B>NdisAllocateMemory</B></A><B> </B>or <A HREF="103ndisx_4m42.htm"><B>NdisAllocateMemoryWithTag</B></A>.</P>

<PRE class=syntax><B>VOID
  NdisFreeMemory(</B>
    <B>IN PVOID</B>  <I>VirtualAddress</I><B>,</B>
    <B>IN UINT</B>  <I>Length</I><B>,</B>
    <B>IN UINT</B>  <I>MemoryFlags</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>VirtualAddress</I></DT>

<DD>Pointer to the base virtual address of the allocated memory. This address was returned by <B>NdisAllocateMemory or NdisAllocateMemoryWithTag</B>. </DD>

<DT><I>Length</I></DT>

<DD>Specifies the size in bytes of the memory block to be released. This parameter must be identical to the <I>Length</I> that was passed to <B>NdisAllocateMemory</B>. However, if the memory was allocated with <B>NdisAllocateMemoryWithTag</B> or the <I>MemoryFlags</I> parameter is zero, this parameter is ignored.</DD>

<DT><I>MemoryFlags</I></DT>

<DD>Specifies zero or the bitmask originally passed to <B>NdisAllocateMemory</B> for the preceding range, designating the following: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Value</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>zero</TD>
<TD width=52%>Nonpaged system-space memory</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>NDIS_MEMORY_CONTIGUOUS</TD>
<TD width=52%>Physically contiguous memory</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>NDIS_MEMORY_NONCACHED</TD>
<TD width=52%>Noncached memory</TD>
</TR>
</TABLE><BR>



<P>This value must be zero if the memory was allocated with <B>NdisAllocateMemoryWithTag. </B>This value must be identical to the <I>MemoryFlags</I> that was passed to <B>NdisAllocateMemory</B>. 

</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>The parameters passed to <B>NdisFreeMemory</B> must be identical to those passed to <A HREF="103ndisx_9xwy.htm"><B>NdisAllocateMemory</B></A> when the block of memory was allocated. That is, a caller of <B>NdisFreeMemory</B> cannot release a subrange of the block that was allocated. </P>

<P>Because noncached memory and contiguous memory are seldom released until the allocating NIC driver is unloading, a caller of <B>NdisFreeMemory</B> usually is running at IRQL = PASSIVE_LEVEL for these types of deallocations. In any case:

<UL>
	<LI>When releasing contiguous memory, a caller of <B>NdisFreeMemory</B> must be running at IRQL = PASSIVE_LEVEL</LI>

	<LI>When releasing noncached memory, a caller of <B>NdisFreeMemory</B> must be running at IRQL &lt; DISPATCH_LEVEL</LI>

	<LI>When releasing memory that is neither contiguous nor noncached, a caller of <B>NdisFreeMemory</B> must be running at IRQL &lt;= DISPATCH_LEVEL</LI>
</UL>

<H4>See Also</H4>

<P><A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="103ndisx_9xwy.htm"><B>NdisAllocateMemory</B></A>,<A HREF="103ndisx_4m42.htm"><B>NdisAllocateMemoryWithTag</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisFreeMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
