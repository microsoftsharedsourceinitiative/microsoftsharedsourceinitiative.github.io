<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Control Channel Characteristics</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Control Channel Characteristics">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_control_channel_characteristics_ng"></A>Control Channel Characteristics </H2>

<P>The Control channel for the device is its USB Control endpoint. A control message from the host to the device is sent as a SEND_ENCAPSULATED_COMMAND transfer. This transfer is defined in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=27%>BmRequestType</TH>
<TH align=left width=17%>bRequest</TH>
<TH align=left width=14%>wValue</TH>
<TH align=left width=14%>wIndex</TH>
<TH align=left width=17%>wLength</TH>
<TH align=left width=11%>Data</TH>
</TR>

<TR VALIGN="top">
<TD width=27%>0x21</TD>
<TD width=17%>0x00</TD>
<TD width=14%>0x0000</TD>
<TD width=14%><I>bInterfaceNumber</I> field of Communication Class interface descriptor</TD>
<TD width=17%>Byte length of control message block</TD>
<TD width=11%>Control message block</TD>
</TR>
</TABLE><BR>

<P>The host does not continuously poll the USB Control endpoint for input control messages. Upon placing a control message on its Control endpoint, the device must return a notification on the Communication Class interface’s Interrupt IN endpoint, which is polled by the host whenever the device can return control messages. The transfer from the device’s interrupt IN endpoint to the host is a standard USB Interrupt IN transfer. The only defined device notification is the RESPONSE_AVAILABLE notification, defined in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=22%>Offset (bytes)</TH>
<TH align=left width=26%>Length (bytes) </TH>
<TH align=left width=26%>Field</TH>
<TH align=left width=26%>Data</TH>
</TR>

<TR VALIGN="top">
<TD width=22%>0</TD>
<TD width=26%>4</TD>
<TD width=26%>Notification</TD>
<TD width=26%>RESPONSE_AVAILABLE (0x00000001)</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>4</TD>
<TD width=26%>4</TD>
<TD width=26%>Reserved</TD>
<TD width=26%>0</TD>
</TR>
</TABLE><BR>

<P>Upon receiving the RESPONSE_AVAILABLE notification, the host reads the control message from the Control endpoint using a GET_ENCAPSULATED_RESPONSE transfer, defined in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=27%>bmRequestType</TH>
<TH align=left width=17%>bRequest</TH>
<TH align=left width=14%>wValue</TH>
<TH align=left width=14%>wIndex</TH>
<TH align=left width=17%>wLength</TH>
<TH align=left width=11%>Data</TH>
</TR>

<TR VALIGN="top">
<TD width=27%>0xA1</TD>
<TD width=17%>0x01</TD>
<TD width=14%>0x0000</TD>
<TD width=14%><I>bInterfaceNumber</I> field of Communication Class interface descriptor</TD>
<TD width=17%>0x0400 (this is the minimum byte length of the buffer posted by host)</TD>
<TD width=11%>Control message block</TD>
</TR>
</TABLE><BR>

<P>If for some reason the device receives a GET_ENCAPSULATED_RESPONSE and is unable to respond with a valid data on the Control endpoint, then it should return a one-byte packet set to 0x00, rather than stalling the Control endpoint.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Control%20Channel%20Characteristics"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
