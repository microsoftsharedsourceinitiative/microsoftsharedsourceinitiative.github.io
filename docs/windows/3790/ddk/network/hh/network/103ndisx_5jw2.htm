<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisInitializeWorkItem</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisInitializeWorkItem">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisinitializeworkitem_nr"></A>NdisInitializeWorkItem</H1>

<P><B>NdisInitializeWorkItem</B> initializes a work-queue item with a caller-supplied context and callback routine to be queued for execution when a system worker thread is given control.</P>

<PRE class=syntax><B>VOID 
  NdisInitializeWorkItem(</B>
    <B>IN PNDIS_WORK_ITEM</B>  <I>WorkItem</I><B>,
    IN NDIS_PROC</B>  <I>Routine</I><B>,
    IN PVOID</B>  <I>Context</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>WorkItem</I></DT>

<DD>Pointer to the caller-supplied storage to be initialized. It must be allocated from nonpaged pool.</DD>

<DT><I>Routine</I></DT>

<DD>Specifies the entry point of a caller-supplied function that processes this work item when it is dequeued. This callback is declared as follows:

<PRE>VOID
(*NDIS_PROC)(
    IN struct _NDIS_WORK_ITEM *  pWorkItem,
    IN PVOID  Context
);</PRE>
</DD>

<DT><I>Context</I></DT>

<DD>Pointer to a caller-supplied context area that is passed, uninterpreted, to the callback as its only parameter. This area should be in resident memory and accessible in any arbitrary thread context in which the callback might be run subsequently. In particular, <I>Context</I> cannot point to the stack. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisInitializeWorkItem</B> initializes <I>Item</I> with pointers to <I>Routine</I> and <I>Context</I> and a NULL list pointer.</P>

<P>In general, only higher level drivers queue worker thread items. </P>

<P>A miniport driver that is neither deserialized nor connection-oriented should <I>never</I> call an <B>Ndis..WorkItem</B> function. </P>

<P>The given <I>Routine</I> is responsible for calling <A HREF="103ndisx_6sc2.htm"><B>NdisFreeMemory</B></A> to release the storage for <I>Item</I>.</P>

<P>Callers of <B>NdisInitializeWorkItem</B> must be running at IRQL &lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_6sc2.htm"><B>NdisFreeMemory</B></A>, <A HREF="103ndisx_20ky.htm"><B>NdisScheduleWorkItem</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisInitializeWorkItem"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
