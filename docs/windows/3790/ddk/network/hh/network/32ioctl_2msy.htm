<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TDI_SEND_DATAGRAM</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TDI_SEND_DATAGRAM">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdi_send_datagram_nr"></A>TDI_SEND_DATAGRAM</H1>

<P>When a kernel-mode client makes a TDI_SEND_DATAGRAM request, it asks the underlying TDI transport driver to transmit a TSDU, as a datagram, to a specified remote-node address. </P>

<H4>IRP</H4>

<P>The transport calls <B>IoGetCurrentIrpStackLocation</B> with the given <I>Irp</I> to get a pointer to its own I/O stack location in the IRP, shown in the following list as <B>IrpSp</B>. The pointer to the IRP is shown in the following list as <B>Irp</B>. IRP members relevant to this request include the following:

<DL>
<DT><B>Irp-&gt;IoStatus.Status</B></DT>

<DD>Specifies the final status of the send-datagram request. The transport sets this member before it completes the IRP, possibly to one of the following:

<P>STATUS_PENDING<BR>
STATUS_INSUFFICIENT_RESOURCES<BR>
STATUS_INVALID_ADDRESS<BR>
STATUS_INVALID_PARAMETER
</DD>

<DT><B>Irp-&gt;IoStatus.Information</B></DT>

<DD>Specifies the number of bytes of client-supplied data the driver transferred from the client-supplied buffer mapped at <B>Irp-&gt;MdlAddress</B>. </DD>

<DT><B>IrpSp-&gt;MajorFunction</B></DT>

<DD>Specifies IRP_MJ_INTERNAL_DEVICE_CONTROL. The transport can ignore this member if it exports a <B>TdiDispatchInternalDeviceControl</B> routine that handles only TDI_<I>XXX</I> requests. </DD>

<DT><B>IrpSp-&gt;MinorFunction</B></DT>

<DD>Specifies TDI_SEND_DATAGRAM.</DD>

<DT><B>IrpSp-&gt;FileObject</B></DT>

<DD>Pointer to an open file object representing the local-node address. The transport uses the <B>FsContext</B> and, possibly, <B>FsContext2</B> fields to access the state it maintains about this address. </DD>

<DT><B>IrpSp-&gt;Parameters</B></DT>

<DD>Pointer to a TDI_REQUEST_KERNEL_SENDDG structure, defined as follows:

<PRE>struct _TDI_REQUEST_KERNEL_SENDDG {<B> </B>
    ULONG SendLength;<B> </B>
    PTDI_CONNECTION_INFORMATION SendDatagramInformation;<B> </B>
} TDI_REQUEST_KERNEL_SENDDG, *PTDI_REQUEST_KERNEL_SENDDG;<B> </B></PRE>


<P>The transport uses the members of this structure as follows:


<DL>
<DT><B>SendLength</B></DT>

<DD>Specifies the number of bytes in the datagram to send.</DD>

<DT><B>SendDatagramInformation</B></DT>

<DD>Pointer to a TDI_CONNECTION_INFORMATION structure specifying the remote-node address to which the local-node client wants the datagram to be sent.</DD>
</DL>
</DD>

<DT><B>Irp-&gt;MdlAddress</B></DT>

<DD>Pointer to an MDL, possibly the initial MDL in a chain, mapping a client-supplied buffer containing the datagram to be sent. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>TdiKrnl.h</I>. Include <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>A TDI transport does not send fragmented datagrams. Consequently, its client makes one send-datagram request to send each datagram, which is associated only with the particular request for a connectionless data transfer operation. </P>

<P>In its send-datagram request, the sending client provides a buffer containing the TSDU. The client can provide a buffer of any size up to the transport-determined limit. The transport is given ownership of this client-supplied buffer until it completes the send-datagram IRP. The transport fails any send-datagram request for which a client specifies a <B>SendLength</B> larger than the transport supports. </P>

<P>Clients can determine their underlying transports' send-size limits by submitting query-information requests with <B>QueryType</B> set to any of TDI_QUERY_PROVIDER_INFO, TDI_QUERY_DATAGRAM_INFO, or TDI_QUERY_MAX_DATAGRAM_INFO. </P>

<P>A transport can allow its clients to send zero-length datagrams. For example, a zero-length send-datagram request might force protocol flow. </P>

<P>Some transports allow clients to direct datagrams to remote-node multicast and/or broadcast addresses. The syntax of such a multicast or broadcast address is transport-specific. </P>

<P>As a connectionless transfer, a datagram-send is inherently unreliable. The transport can drop or duplicate a datagram at the discretion of the driver writer. The transport must complete each send-datagram IRP in a timely manner, whether with a success or error status. The driver should determine a reasonable time-out based on its knowledge of underlying network conditions.</P>

<P>If it queues datagrams internally, the transport must process send-datagram requests in FIFO order. Send-datagram requests should be queued separately from endpoint-to-endpoint send requests. </P>

<P><B>TdiBuildSendDatagram</B> is the macro a client uses to fill in this IRP.</P>

<H4>See Also</H4>

<P><A HREF="34bldmac_3rhu.htm"><B>TdiBuildSendDatagram</B></A>, <A HREF="36tdstrc_9vg2.htm"><B>TDI_CONNECTION_INFORMATION</B></A>, <A HREF="31tddisp_2sfm.htm"><B>TdiDispatchInternalDeviceControl</B></A>, <A HREF="32ioctl_508i.htm"><B>TDI_QUERY_INFORMATION</B></A>, <A HREF="32ioctl_7ype.htm"><B>TDI_RECEIVE_DATAGRAM</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TDI_SEND_DATAGRAM"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
