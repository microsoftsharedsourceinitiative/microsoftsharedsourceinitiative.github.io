<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling OID_PNP_XXX Queries and Sets</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Handling OID_PNP_XXX Queries and Sets">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_handling_oid_pnp_xxx_queries_and_sets_ng"></A>Handling OID_PNP_<I>XXX</I> Queries and Sets</H3>

<P>The virtual miniport of an intermediate driver must export <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> and <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A> functions. NDIS calls the intermediate driver's <I>MiniportQueryInformation</I> or <I>MiniportSetInformation</I> function when an overlying driver bound to the intermediate driver's virtual miniport calls <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A> to query or set information objects (OID_<I>XXX</I>), or NDIS can also call <I>MiniportQueryInformation</I> or <I>MiniportSetInformation</I> on its own behalf. For more information on miniport driver handling of sets and queries to information objects, see <A HREF="205mpinfo_96nb.htm">Obtaining and Setting Miniport Driver Information and NDIS Support for WMI</A>.</P>

<P>The intermediate driver is not required to maintain information about the capabilities of the underlying miniport driver. However, the intermediate driver can query or set OID_XXX maintained by the underlying miniport driver with <B>NdisRequest</B> (if the intermediate driver has a connectionless lower edge) or with <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A> (if the intermediate driver has a connection-oriented lower edge). </P>

<P>An intermediate driver should handle queries and sets as follows:

<UL>
	<LI><A HREF="212pnpoid_5j02.htm">OID_PNP_CAPABILITIES</A> 
<P>The intermediate driver forwards OID_PNP_CAPABILITIES requests to the underlying miniport driver. The response from the underlying miniport driver must be modified before forwarding the response at the intermediate driver's upper edge. If the underlying NIC is PM-aware, the intermediate driver must return NDIS_STATUS_SUCCESS to a query of OID_PNP_CAPABILITIES. In the NDIS_PM_WAKE_UP_CAPABILITIES structure returned by this OID, the intermediate driver must specify a device power state of <B>NdisDeviceStateUnspecified</B> for each wake-up capability:

<UL>
	<LI>MinMagicPacketWakeUp </LI>

	<LI>MinPatternWakeUp</LI>

	<LI>MinLinkChangeWakeUp</LI>
</UL>

<P>Such a response indicates that the intermediate driver is PM-aware but is incapable of waking up the system. 

<P>If the underlying NIC is not PM-aware, the intermediate driver must return NDIS_STATUS_NOT_SUPPORTED to a query of OID_PNP_CAPABILITIES.
</LI>

	<LI><A HREF="212pnpoid_9pwy.htm">OID_PNP_QUERY_POWER</A> and <A HREF="212pnpoid_52sy.htm">OID_PNP_SET_POWER</A>
<P>The intermediate driver must always return NDIS_STATUS_SUCCESS to a query of OID_PNP_QUERY_POWER or a set of OID_PNP_SET_POWER. The intermediate driver must never propagate either of these OID requests to the underlying miniport driver.
</LI>

	<LI>"Wake-up OIDs"
<P>If the underlying NIC is PM-aware, the intermediate driver <I>must</I> pass to the underlying miniport driver (by calling <B>NdisRequest </B>or<B> NdisCoRequest</B>) the following OID_PNP_<I>XXX</I> relating to wake-up events:

<P class=indent1><A HREF="212pnpoid_58fm.htm">OID_PNP_ENABLE_WAKE_UP</A> </P>

<P class=indent1><A HREF="212pnpoid_8lwy.htm">OID_PNP_ADD_WAKE_UP_PATTERN</A> </P>

<P class=indent1><A HREF="212pnpoid_9q7m.htm">OID_PNP_REMOVE_WAKE_UP_PATTERN</A> </P>

<P class=indent1><A HREF="212pnpoid_8i2a.htm">OID_PNP_WAKE_UP_PATTERN_LIST</A> </P>

<P class=indent1><A HREF="212pnpoid_6v76.htm">OID_PNP_WAKE_UP_ERROR</A> </P>

<P class=indent1><A HREF="212pnpoid_85pu.htm">OID_PNP_WAKE_UP_OK</A> </P>
</LI>
</UL>

<P>The intermediate driver must also propagate the underlying miniport driver's response to these OIDs to the overlying protocol drivers.</P>

<P>If the underlying NIC is not PM-aware, the intermediate driver should return NDIS_STATUS_NOT_SUPPORTED in response to a query or set of these OIDs.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20OID_PNP_XXX%20Queries%20and%20Sets"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
