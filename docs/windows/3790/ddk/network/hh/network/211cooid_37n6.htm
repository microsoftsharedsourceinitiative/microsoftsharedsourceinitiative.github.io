<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_GEN_CO_GET_TIME_CAPS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_GEN_CO_GET_TIME_CAPS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_gen_co_get_time_caps_nr"></A>OID_GEN_CO_GET_TIME_CAPS</H1>

<P>The OID_GEN_CO_GET_TIME_CAPS OID requests a miniport driver to return its capabilities for reporting a NIC's local time formatted as a GEN_GET_TIME_CAPS structure, which is defined as follows:</P>

<PRE class=syntax>typedef struct _GEN_GET_TIME_CAPS {
  ULONG  Flags;
  ULONG  ClockPrecision;
} GEN_GET_TIME_CAPS, *PGEN_GET_TIME_CAPS;</PRE>

<P>The members of this structure contain the following information:

<DL>
<DT><B>Flags</B></DT>

<DD>The following flags can be ORed together. All unspecified flags must be set to zero.

<DL>
<DT>READABLE_LOCAL_CLOCK</DT>

<DD>When set, indicates the presence of a readable clock on the NIC. Even without such a hardware clock, a miniport driver can use the system clock by calling <A HREF="103ndisx_6m42.htm"><B>NdisGetCurrentSystemTime</B></A>, so long as it reports the correct precision in the <B>ClockPrecision</B><I> </I>member.</DD>

<DT>CLOCK_NETWORK_DERIVED</DT>

<DD>When set, indicates that the NIC's local time is derived from the network connection, as opposed to a free-running, onboard clock.</DD>

<DT>CLOCK_PRECISION</DT>

<DD>When set, indicates that the <B>ClockPrecision</B> member contains valid information.</DD>

<DT>RECEIVE_TIME_INDICATION_CAPABLE</DT>

<DD>When set, indicates that the NIC hardware can note the local time at which it receives the first cell of a received PDU and that the miniport driver propagates this receive time for each PDU when indicating the packet to a protocol.</DD>

<DT>TIMED_SEND_CAPABLE</DT>

<DD>When set, indicates that the NIC can schedule a packet for transmission according to its local time. Protocols can use NDIS_SET_PACKET_TIME_TO_SEND to set the <B>TimeToSend</B> timestamp in the out-of-band data block of a packet descriptor. </DD>

<DT>TIME_STAMP_CAPABLE</DT>

<DD>When set, indicates that the NIC can stamp (in the appropriate field of the outgoing packet) the time at which the first byte of the packet is transmitted and that the NIC can retrieve this time from the same field of an inbound packet.</DD>
</DL>
</DD>

<DT><B>ClockPrecision</B></DT>

<DD>Specifies the clock precision in parts per million. For this information to be considered valid, the CLOCK_PRECISION flag must be set.
</DD>
</DL>

<P>A miniport driver can provide support for certain timing parameters even in the absence of a local or network clock. In particular, a miniport driver can use the system clock for receive time indications, timed sends, and even time stamping. A NIC-based clock is better since it is likely to provide higher precision and to be accessible with lower latencies than the system clock. In all cases, the miniport driver must specify the precision of the clock that it uses. This allows protocols to determine how to best use the miniport driver’s timing support.</P>

<P>If the miniport driver reports the presence of a readable clock, it must be prepared to immediately respond to an OID_GEN_GET_NETCARD_TIME query. The miniport driver's response to this call is time-critical and therefore must be synchronous.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_GEN_CO_GET_TIME_CAPS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
