<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CO_SAP</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="CO_SAP">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_co_sap_nr"></A>CO_SAP</H1>

<P>The CO_SAP structure specifies a Service Access Point (SAP) on which a connection-oriented client can receive incoming calls.</P>

<PRE class=syntax>typedef struct _CO_SAP{
  ULONG  SapType;
  ULONG  SapLength;
  UCHAR  Sap[1];
} CO_SAP, *PCO_SAP;</PRE>

<H4>Members</H4>

<DL>
<DT><B>SapType</B></DT>

<DD>Specifies the format of the SAP address:

<DL>
<DT>NSAP</DT>

<DD>Specifies an OSI SAP, which is a 20-octet hexadecimal address.</DD>

<DT>E164</DT>

<DD>Specifies an E.164 SAP, which is a 0-15-digit decimal address.</DD>

<DT>AF_TAPI_SAP_TYPE</DT>

<DD>Specifies a SAP used for TAPI calls.</DD>
</DL>
</DD>

<DT><B>SapLength</B></DT>

<DD>Specifies the size in bytes of the structure at <B>Sap</B>.</DD>

<DT><B>Sap</B></DT>

<DD>Specifies a variable-length array that contains the SAP information. The number and type of elements is defined by the call manager for the address family opened by the client.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ndis.h</I>. Include <I>ndis.h</I>.</P>

<H4>Comments</H4>

<P>A connection-oriented client registers a SAP with a call manager by passing a CO_SAP structure in a call to <A HREF="103ndisx_22nm.htm"><B>NdisClRegisterSap</B></A>. NDIS forwards the SAP information to the call manager's <A HREF="104tdlow_3kky.htm"><I>ProtocolCmRegisterSap</I></A> function for validation. The SAP format is medium-dependent and specific to the address family supported by the call manager. If the SAP is already in use or if the call manager does not recognize the client-supplied specification at <B>Sap</B>, <I>ProtocolCmRegisterSap</I> fails the call, and <B>NdisClRegisterSap</B> propagates the failure back to the client.</P>

<P>After a client has successfully registered a SAP, the call manager notifies the client of incoming calls on that SAP. A client can register more than one SAP with a call manager.</P>

<P><B>SapType</B> is meaningful only to the client and to the call manager or integrated miniport driver call manager (MCM) driver with which the client registers the SAP. The client can therefore set <B>SapType</B> to a driver-defined value that is recognized by the call manager or MCM driver.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_22nm.htm"><B>NdisClRegisterSap</B></A>, <A HREF="104tdlow_2faq.htm"><I>ProtocolClRegisterSapComplete</I></A>, <A HREF="104tdlow_3kky.htm"><I>ProtocolCmRegisterSap</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: CO_SAP"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
