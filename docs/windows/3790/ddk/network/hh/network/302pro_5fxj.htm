<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Receiving Data in a Connection-Oriented Protocol Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Receiving Data in a Connection-Oriented Protocol Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_receiving_data_in_a_connection_oriented_protocol_driver_ng"></A>Receiving Data in a Connection-Oriented Protocol Driver</H2>

<P>Underlying connection-oriented miniport drivers call <A HREF="103ndisx_6f02.htm"><B>NdisMCoIndicateReceivePacket</B></A> to indicate packets. A miniport driver passes in a pointer to an array of packet descriptor pointers to one or more full packets. It relinquishes ownership of the resources for these packets to the overlying drivers, which can consume the data and return the packet resources at a later time.</P>

<P>A connection-oriented protocol receives indicated packets in its <A HREF="104tdlow_3pwy.htm"><I>ProtocolCoReceivePacket</I></A> function. <I>ProtocolCoReceivePacket</I> receives a pointer to packet descriptor that specifies a buffered full network packet. </P>

<P><I>ProtocolCoReceivePacket</I> examines the packet data and determines whether the packet is intended for its clients. If so, the protocol can return a nonzero value (a count of clients to which the protocol forwarded the receive indication) from <I>ProtocolCoReceivePacket </I>to give its clients ownership of the indicated packet resources, including direct read-only access to the buffered packet data. The protocol driver's clients must subsequently call <A HREF="103ndisx_61de.htm"><B>NdisReturnPackets</B></A> to return the packet descriptor and all the resources it specifies to the underlying driver. Each client must make this call with the packet descriptor until all clients' calls total the nonzero value returned from <I>ProtocolCoReceivePacket</I> for that receive indication. </P>

<P>When the protocol driver's clients return the packet descriptor the required number of times, they relinquish ownership of the returned packet resources to the underlying miniport driver that originally indicated the receive. If a protocol driver returns zero from <I>ProtocolCoReceivePacket</I>, it relinquishes ownership of the packet resources when <I>ProtocolCoReceivePacket</I> returns. Relinquishing such a received packet immediately could occur, for instance, if the client for the packet closed the connection or became unavailable in some manner. This can also occur if the protocol driver copies the indicated data into buffers of its own and processes the data internally before indicating the data up to its clients. </P>

<P>The following topics contain additional information about receiving data in a connection-oriented protocol driver:</P>

<P class=indent1><A HREF="302pro_8k87.htm">Implementing a <I>ProtocolCoReceivePacket</I> Handler</A></P>

<P class=indent1><A HREF="302pro_3zhj.htm">Accessing OOB Information from a Connection-Oriented Protocol</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Receiving%20Data%20in%20a%20Connection-Oriented%20Protocol%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
