<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Registering the ProtocolXxx Functions of a Connectionless Protocol Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Registering the ProtocolXxx Functions of a Connectionless Protocol Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_registering_the_protocolxxx_functions_of_a_connectionless_protocol_driver_ng"></A>Registering the <I>ProtocolXxx</I> Functions of a Connectionless Protocol Driver</H3>

<P>To register <A HREF="104tdlow_6gvm.htm">NDIS driver lower-edge functions</A> (<I>ProtocolXxx</I> functions) with NDIS, a connectionless protocol driver calls <A HREF="103ndisx_2cfm.htm"><B>NdisRegisterProtocol</B></A>. The NDIS_PROTOCOL_CHARACTERISTICS structure that the driver passes to <B>NdisRegisterProtocol</B> specifies the entry points of the <I>ProtocolXxx</I> functions.</P>

<P>The following is a list of NDIS_PROTOCOL_CHARACTERISTICS structure members. These members specify the entry points for optional and required <I>ProtocolXxx</I> functions that a connectionless protocol driver can export:

<DL>
<DT><B>BindAdapterHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_2bqq.htm"><I>ProtocolBindAdapter</I></A> to request that the protocol driver bind to an underlying miniport driver or virtual miniport. See <A HREF="302pro_5rl3.htm">Dynamic Binding in a Protocol Driver</A> for more information on dynamic binding. </DD>

<DT><B>UnbindAdapterHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_1l6a.htm"><I>ProtocolUnbindAdapter</I></A> to close a binding to the underlying miniport driver or virtual miniport. <I>ProtocolUnbindAdapter</I> calls <B>NdisCloseAdapter</B> and deallocates resources when the binding is successfully closed. </DD>

<DT><B>OpenAdapterCompleteHandler</B></DT>

<DD>This is a required function. If a protocol driver’s call to <A HREF="103ndisx_9koi.htm"><B>NdisOpenAdapter</B></A> returns NDIS_STATUS_PENDING, NDIS calls <A HREF="104tdlow_9xbm.htm"><I>ProtocolOpenAdapterComplete</I></A> subsequently to complete the binding operation. </DD>

<DT><B>CloseAdapterCompleteHandler</B></DT>

<DD>This is a required function. If a protocol driver’s call to <A HREF="103ndisx_27ea.htm"><B>NdisCloseAdapter</B></A> returns NDIS_STATUS_PENDING, NDIS calls <A HREF="104tdlow_3v5e.htm"><I>ProtocolCloseAdapterComplete</I></A> subsequently to complete the unbinding operation. </DD>

<DT><B>ReceiveHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A> with a pointer to a lookahead buffer. If this buffer contains less than the full network packet, <I>ProtocolReceive</I> calls <A HREF="103ndisx_6bci.htm"><B>NdisTransferData</B></A> to obtain the remainder of the received packet. <I>ProtocolReceive </I>calls <B>NdisTransferData</B> with a protocol-allocated packet descriptor that specifies the protocol-allocated buffers for the packet.</DD>

<DT><B>ReceiveCompleteHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_5i7m.htm"><I>ProtocolReceiveComplete</I></A> to indicate that any received packets previously indicated to <I>ProtocolReceive</I> can now be postprocessed.</DD>

<DT><B>TransferDataCompleteHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_8u7m.htm"><I>ProtocolTransferDataComplete</I></A> after a previous call to <A HREF="103ndisx_6bci.htm"><B>NdisTransferData</B></A> returned NDIS_STATUS_PENDING and after NDIS has copied the remaining data into the protocol-supplied buffers that are chained to the protocol-supplied packet descriptor.</DD>

<DT><B>ReceivePacketHandler</B></DT>

<DD>This is an optional function. Protocol drivers should provide <A HREF="104tdlow_5i7n.htm"><I>ProtocolReceivePacket</I></A> to obtain better performance from miniport drivers that call <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> to indicate receive packets.</DD>

<DT><B>SendCompleteHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_6qr6.htm"><I>ProtocolSendComplete</I></A> for each packet that the protocol driver transmitted where <A HREF="103ndisx_7jw2.htm"><B>NdisSend</B></A> returned NDIS_STATUS_PENDING. If the protocol driver sends an array of packets, <I>ProtocolSendComplete</I> is called once for each packet that the protocol passed to <A HREF="103ndisx_88s2.htm"><B>NdisSendPackets</B></A>. </DD>

<DT><B>ResetCompleteHandler</B></DT>

<DD>This is a required function. If a protocol driver calls <A HREF="103ndisx_9ib6.htm"><B>NdisReset</B></A> and the call returns NDIS_STATUS_PENDING, NDIS calls <A HREF="104tdlow_0yya.htm"><I>ProtocolResetComplete</I></A> after the reset operation is completed. </DD>

<DT><B>RequestCompleteHandler</B></DT>

<DD>This is a required function. If a protocol driver calls <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A> and the call returns NDIS_STATUS_PENDING, NDIS calls <A HREF="104tdlow_3nn6.htm"><I>ProtocolRequestComplete</I></A> after the request operation is completed. </DD>

<DT><B>StatusHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_6e42.htm"><I>ProtocolStatus</I></A> to handle status changes that are indicated by underlying NDIS drivers.</DD>

<DT><B>StatusCompleteHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_3lrm.htm"><I>ProtocolStatusComplete</I></A>, along with <I>ProtocolStatus</I>, to report the start and end of a reset operation that NDIS or a miniport driver initiated. </DD>

<DT><B>PnPEventHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_5muq.htm"><I>ProtocolPnPEvent</I></A> to indicate a Plug and Play (PnP) event or a Power Management (PM) event. See <A HREF="302pro_8o6f.htm">Handling PnP Events and PM Events in a Protocol Driver</A> for more information.</DD>

<DT><B>UnloadHandler</B></DT>

<DD>This is an optional function. NDIS calls <A HREF="104tdlow_8kxe.htm"><I>ProtocolUnload</I></A> in response to a user request to uninstall a protocol driver. NDIS calls <I>ProtocolUnload</I> after calling <A HREF="104tdlow_1l6a.htm"><I>ProtocolUnbindAdapter</I></A> once for each bound adapter. 
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Registering%20the%20ProtocolXxx%20Functions%20of%20a%20Connectionless%20Protocol%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
