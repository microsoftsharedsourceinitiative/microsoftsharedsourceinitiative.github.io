<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WSPRdmaRead</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WSPRdmaRead">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wsprdmaread_nr"></A>WSPRdmaRead</H1>

<P><B>WSPRdmaRead</B> transfers data from an RDMA buffer in an address space accessible by a socket's remote peer to a buffer in an address space accessible only by the local socket. </P>

<PRE class=syntax><B>int
  WSPRdmaRead(</B>
<B>    IN SOCKET</B>  <I>s</I><B>,</B>
<B>    IN LPWSABUFEX</B>  <I>lpBuffers</I><B>,</B>
<I>    </I><B>IN</B> <B>DWORD</B>  <I>dwBufferCount</I><B>,</B>
<I>    </I><B>IN LPVOID<I>  </I></B><I>lpTargetBufferDescriptor</I><B>,</B>
<I>    </I><B>IN</B> <B>DWORD</B>  <I>dwTargetDescriptorLength</I><B>,</B>
<I>    </I><B>IN</B> <B>DWORD</B>  <I>dwTargetBufferOffset</I><B>,</B>
<I>    </I><B>OUT LPDWORD<I>  </I></B><I>lpdwNumberOfBytesRead</I><B>,</B>
<I>    </I><B>IN</B> <B>DWORD</B>  <I>dwFlags</I><B>,</B>
<I>    </I><B>IN LPWSAOVERLAPPED<I>  </I></B><I>lpOverlapped</I><B>,</B>
<I>    </I><B>IN LPWSAOVERLAPPED_COMPLETION_ROUTINE  </B><I>lpCompletionRoutine</I><B>,</B>
<I>    </I><B>IN LPWSATHREADID<I>  </I></B><I>lpThreadId</I><B>,</B>
<I>    </I><B>OUT</B> <B>LPINT  </B><I>lpErrno</I>
<I>    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>s</I></DT>

<DD>Descriptor that identifies a connected socket.</DD>

<DT><I>lpBuffers</I></DT>

<DD>Pointer to an array of <A HREF="wsdpref_7qb6.htm">WSABUFEX</A> structures. Each WSABUFEX structure contains members that describe a previously registered buffer in the buffer array. This buffer array receives transferred data. Each buffer was registered in a call to the <A HREF="wsdpref_62gi.htm"><B>WSPRegisterMemory</B></A> function. </DD>

<DT><I>dwBufferCount</I></DT>

<DD>Number of WSABUFEX structures at <I>lpBuffers</I>.</DD>

<DT><I>lpTargetBufferDescriptor</I></DT>

<DD>Pointer to a memory block that contains a descriptor. This descriptor identifies an RDMA buffer in the address space accessible by the socket's remote peer. This descriptor was returned from a previous call to the <A HREF="wsdpref_0sj6.htm"><B>WSPRegisterRdmaMemory</B></A> function. Data is transferred from this RDMA buffer to the buffer at <I>lpBuffers</I>. </DD>

<DT><I>dwTargetDescriptorLength</I></DT>

<DD>Size, in bytes, of the memory block at <I>lpTargetBufferDescriptor</I>. </DD>

<DT><I>dwTargetBufferOffset</I></DT>

<DD>Offset, in bytes, into the RDMA buffer at which to begin the data transfer. The descriptor at <I>lpTargetBufferDescriptor</I> identifies this RDMA buffer. Data is transferred from this RDMA buffer to the buffer at <I>lpBuffers</I>. </DD>

<DT><I>lpdwNumberOfBytesRead</I></DT>

<DD>Pointer to a variable that receives the number of bytes that <B>WSPRdmaRead</B> transfers from the RDMA buffer to the buffer at <I>lpBuffers</I>. </DD>

<DT><I>dwFlags</I></DT>

<DD>Set of flags that specify how the call is made. </DD>

<DT><I>lpOverlapped</I></DT>

<DD>Pointer to a <A HREF="wsdpref_4xo2.htm">WSAOVERLAPPED</A> structure that provides a communication medium between the initiation of an overlapped I/O operation and its subsequent completion. Ignored for nonoverlapped sockets. </DD>

<DT><I>lpCompletionRoutine</I></DT>

<DD>Pointer to the completion routine that the SAN service provider can initiate after the data transfer operation completes. Ignored for nonoverlapped sockets. The switch specifies NULL for a completion routine. </DD>

<DT><I>lpThreadId</I></DT>

<DD>Pointer to a <A HREF="wsdpref_26eq.htm">WSATHREADID</A> structure that the SAN service provider can use in a subsequent call to the <B>WPUQueueApc</B> function to arrange for the execution of the completion routine at <I>lpCompletionRoutine</I>. A WSATHREADID structure identifies a thread. Because the switch specifies NULL for a completion routine, the SAN service provider does not use <I>lpThreadId</I>. </DD>

<DT><I>lpErrno</I></DT>

<DD>Pointer to a variable that receives the error code.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns zero, if successful and the data transfer operation completed immediately; otherwise, returns SOCKET_ERROR and, at <I>lpErrno</I>, one of the following error codes: 

<DL>
<DT>WSAENETDOWN</DT>

<DD>Network subsystem failed.</DD>

<DT>WSANOBUFS</DT>

<DD>No memory resources available. </DD>

<DT>WSAEFAULT</DT>

<DD>Either the receiving buffer at <I>lpBuffers </I>or the RDMA buffer identified by the descriptor at <I>lpTargetBufferDescriptor</I> is not contained completely within a valid part of the user address space. </DD>

<DT>WSAEINVAL</DT>

<DD>Invalid flags specified. </DD>

<DT>WSAENOTCONN</DT>

<DD>Socket not connected (connection-oriented sockets only).</DD>

<DT>WSAENOTSOCK</DT>

<DD>Descriptor at <I>s</I> is not a socket.</DD>

<DT>WSAECONNABORTED</DT>

<DD>Connection to the remote peer was terminated, because of a time-out or other failure. </DD>

<DT>WSAECONNRESET</DT>

<DD>Remote peer terminated the connection. </DD>

<DT>WSA_IO_PENDING</DT>

<DD>SAN service provider successfully initiated an overlapped data-transfer operation and will indicate completion at a later time.</DD>

<DT>WSA_OPERATION_ABORTED</DT>

<DD>Overlapped operation canceled, because socket was closed. 
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>Ws2san.h</I>. Include <I>Ws2san.h</I>. Requires Windows Sockets version&nbsp;2.2.</P>

<H4>Comments</H4>

<P>The Windows Sockets switch calls <B>WSPRdmaRead</B> to transfer data from the RDMA buffer that is identified by the descriptor at <I>lpTargetBufferDescriptor</I> to the buffer at <I>lpBuffers</I> on the local computer. This RDMA buffer is in the address space for the remote peer connection. The switch at the remote peer connection calls the <B>WSPRegisterRdmaMemory</B> function to register this RDMA buffer for read access. The switch at the remote peer connection then calls the  <A HREF="wsdpref_6rqq.htm"><B>WSPSend</B></A> function to send to the local switch a control message that indicates the location of this RDMA buffer. The local switch can then call the <B>WSPRdmaRead</B> function to transfer data to a receiving buffer at <I>lpBuffers</I>. </P>

<P>A SAN service provider receives <B>WSPRdmaRead</B> requests only from the switch, but never directly from an application. The switch always calls the SAN service provider's <B>WSPRdmaRead</B> function in an overlapped manner. In this call, the switch always specifies an overlapped structure and NULL for a completion routine. In the call to the <B>WSPRdmaRead</B> function, the switch posts RDMA and receiving buffers for the data transfer operation. If the data transfer operation cannot complete immediately, the operation proceeds, but <B>WSPRdmaRead</B> returns with the WSA_IO_PENDING error code. The switch later calls the SAN service provider's <A HREF="wsdpref_254i.htm"><B>WSPGetOverlappedResult</B></A> function and passes a pointer to the overlapped structure to retrieve the final completion status. </P>

<P>The array of WSABUFEX structures at <I>lpBuffers</I> is transient. If the data transfer operation completes in an overlapped manner, the SAN service provider must capture these WSABUFEX structures before it returns from the <B>WSPRdmaRead</B> function with the WSA_IO_PENDING error code. This requirement enables applications to build stack-based WSABUFEX arrays. </P>

<H4>Overlapped Socket I/O</H4>

<P>If the data transfer operation completes immediately, the SAN service provider returns from the <B>WSPRdmaRead</B> function with a value of zero and specifies the number of bytes transferred from RDMA to receiving buffers at <I>lpdwNumberOfBytesRead</I>. If the SAN service provider successfully initiated the data transfer operation and will indicate completion at a later time, it returns from <B>WSPRdmaRead</B> with a value of SOCKET_ERROR and specifies the WSA_IO_PENDING error code at <I>lpErrno</I>. Note that, in this case, the SAN service provider does not specify a value at <I>lpdwNumberOfBytesRead</I>. After the data transfer operation completes, the switch calls the SAN service provider's <B>WSPGetOverlappedResult</B> function and passes a pointer to a variable in which the SAN service provider specifies the number of bytes transferred from RDMA to receiving buffers.</P>

<P>The overlapped structure at <I>lpOverlapped</I> must be valid for the duration of the data transfer operation. If multiple data transfer operations are outstanding simultaneously, each must reference a separate overlapped structure. </P>

<P>As mentioned previously, the switch always specifies an overlapped structure and NULL for a completion routine whenever it calls the SAN service provider's <B>WSPRdmaRead</B> function in an overlapped manner. Because the switch specifies NULL for a completion routine, the SAN service provider must call the <B>WPUCompleteOverlappedRequest</B> function in the context of an arbitrary thread to complete the request. If the low order bit of the <B>hEvent</B> member in the WSAOVERLAPPED structure is set, the switch specifically requests to not be notified upon completion of the I/O request. Therefore, the SAN service provider is not required to call the <B>WPUCompleteOverlappedRequest</B> function to complete the I/O request. In this case, the switch calls the <B>WSPGetOverlappedResult</B> function to poll for completion. For more information, see the <B>GetQueuedCompletionStatus</B> function in the Platform SDK documentation. </P>

<P>Completion indications can be delivered in any order and not necessarily in the same order that the overlapped operations are completed.</P>

<H4>See Also</H4>

<P><A HREF="wsdpref_7qb6.htm">WSABUFEX</A>, <A HREF="wsdpref_4xo2.htm">WSAOVERLAPPED</A>, <A HREF="wsdpref_62gi.htm"><B>WSPRegisterMemory</B></A>, <A HREF="wsdpref_0sj6.htm"><B>WSPRegisterRdmaMemory</B></A>, <A HREF="wsdpref_7c6q.htm"><B>WSPRdmaWrite</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WSPRdmaRead"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
