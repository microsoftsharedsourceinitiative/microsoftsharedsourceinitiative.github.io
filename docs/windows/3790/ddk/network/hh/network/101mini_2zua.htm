<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MiniportCheckForHang</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MiniportCheckForHang">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_miniportcheckforhang_nr"></A>MiniportCheckForHang</H1>

<P>The <I>MiniportCheckForHang</I> function is an optional function that reports the state of the NIC, or monitors the responsiveness of an underlying device driver.</P>

<PRE class=syntax><B>BOOLEAN
</B>  <B>MiniportCheckForHang(
    IN</B> <B>NDIS_HANDLE</B>  <I>MiniportAdapterContext
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterContext</I></DT>

<DD>Specifies the handle to a miniport driver-allocated context area in which the driver maintains per-NIC state, set up by <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>. 
</DD>
</DL>

<H4>Return Value</H4>

<P><I>MiniportCheckForHang</I> returns TRUE if the driver determines that its NIC is not operating or if an intermediate driver determines that the underlying device driver is unresponsive.</P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h.</I></P>

<H4>Comments</H4>

<P>In NIC drivers, <I>MiniportCheckForHang</I> does nothing more than check the internal state of the NIC and return TRUE if it detects that the NIC is not operating correctly.</P>

<P>In intermediate drivers, <I>MiniportCheckForHang</I> can periodically check the state of the driver’s virtual NIC to determine whether the underlying device driver appears to be hung. </P>

<P>By default, the NDIS library calls <I>MiniportCheckForHang</I> approximately every two seconds. </P>

<P>If <I>MiniportCheckForHang</I> returns TRUE, NDIS then calls the driver’s <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A> function. </P>

<P>If a NIC driver has no <I>MiniportCheckForHang</I> function and NDIS judges the driver unresponsive as, for example, when NDIS holds many pending sends and requests queued to the miniport driver for a time-out interval, NDIS calls the driver’s <I>MiniportReset</I> function. The NDIS library’s default time-out interval for queued sends and requests is around four seconds. However, a NIC driver’s <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function can extend NDIS’s time-out interval by calling <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A> from <I>MiniportInitialize</I> to avoid unnecessary resets. </P>

<P>The <I>MiniportInitialize</I> function of an intermediate driver should disable NDIS’s time-out interval with <B>NdisMSetAttributesEx</B> because such a driver can neither control nor estimate a reasonable completion interval for the underlying device driver. </P>

<P><I>MiniportCheckForHang</I> can be preempted by an interrupt.</P>

<P><I>MiniportCheckForHang</I> runs at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A>, <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MiniportCheckForHang"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
