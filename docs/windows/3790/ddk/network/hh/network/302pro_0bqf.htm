<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Allocating Packet Pools and Buffer Pools in a Protocol Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Allocating Packet Pools and Buffer Pools in a Protocol Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_allocating_packet_pools_and_buffer_pools_in_a_protocol_driver_ng"></A>Allocating Packet Pools and Buffer Pools in a Protocol Driver</H2>

<P>A protocol driver receives one or more buffers of data from a client to transmit over the network. A protocol driver must, at a minimum, allocate and initialize a packet descriptor to which the client’s data buffers are chained. Packet descriptors <I>must</I> be allocated from a packet pool, as follows:

<OL>
	<LI>Call <A HREF="103ndisx_6t82.htm"><B>NdisAllocatePacketPool</B></A> or <A HREF="103ndisx_390y.htm"><B>NdisAllocatePacketPoolEx</B></A> to allocate and initialize a block of nonpaged storage for a packet pool. The packet pool is a caller-specified number of fixed-size packet descriptors. This can be done during driver initialization or when each binding is first established. </LI>

	<LI>Call <A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A> to allocate a packet descriptor from the packet pool.</LI>
</OL>

<P>To chain buffer descriptors that map such buffers to a packet descriptor, protocol drivers call <A HREF="103ndisx_990y.htm"><B>NdisChainBufferAtBack</B></A> or <A HREF="103ndisx_3c36.htm"><B>NdisChainBufferAtFront</B></A>. If a protocol driver receives a data buffer from a client that must be sent in several smaller buffers, the protocol driver can copy the data into protocol-allocated buffers, map its buffers with previously-allocated buffer descriptors, and chain these buffer descriptors to protocol-allocated packet descriptors. Such buffers can be allocated by calling a kernel-mode support routine, <A HREF="103ndisx_4m42.htm"><B>NdisAllocateMemoryWithTag</B></A> and can be mapped with protocol-allocated buffer descriptors as follows:

<OL>
	<LI>Call <A HREF="103ndisx_1unm.htm"><B>NdisAllocateBufferPool</B></A> to obtain a handle. Use this handle to allocate buffer descriptors during driver initialization or when each binding is first established. </LI>

	<LI>Call <B>NdisAllocateMemoryWithTag</B> to allocate a buffer to chain to a packet descriptor allocated with <A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A>.</LI>

	<LI>Call <A HREF="103ndisx_39pu.htm"><B>NdisAllocateBuffer</B></A> to allocate and set up a buffer descriptor that maps the buffer allocated with <B>NdisAllocateMemoryWithTag</B>.</LI>
</OL>

<P>The base virtual address and the length returned by <B>NdisAllocateMemoryWithTag</B> are passed in the call to <B>NdisAllocateBuffer</B> to initialize a buffer descriptor. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Allocating%20Packet%20Pools%20and%20Buffer%20Pools%20in%20a%20Protocol%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
