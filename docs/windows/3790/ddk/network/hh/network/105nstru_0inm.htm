<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS_TASK_IPSEC</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS_TASK_IPSEC">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_task_ipsec_nr"></A>NDIS_TASK_IPSEC</H1>

<P>When supplied by a miniport driver in response to a query of <A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>, the NDIS_TASK_IPSEC structure specifies the miniport driver's NIC's capabilities for performing IP Security tasks on packets. When passed to a miniport driver in a set of OID_TCP_TASK_OFFLOAD, the structure specifies the IP Security capabilities that the TCP/IP transport is enabling for the NIC.</P>

<PRE class=syntax>typedef struct _NDIS_TASK_IPSEC
{
  struct
  {
    ULONG   AH_ESP_COMBINED;
    ULONG   TRANSPORT_TUNNEL_COMBINED;
    ULONG   V4_OPTIONS;
    ULONG   RESERVED;
  } Supported;
 
  struct
  {
    ULONG   MD5:1;
    ULONG   SHA_1:1;
    ULONG   Transport:1;
    ULONG   Tunnel:1;
    ULONG   Send:1;
    ULONG   Receive:1;
  } V4AH;
 
  struct
  {
    ULONG   DES:1;
    ULONG   RESERVED:1;
    ULONG   TRIPLE_DES:1;
    ULONG   NULL_ESP:1;
    ULONG   Transport:1;
    ULONG   Tunnel:1;
    ULONG   Send:1;
    ULONG   Receive:1;
  } V4ESP;
 
} NDIS_TASK_IPSEC, *PNDIS_TASK_IPSEC;</PRE>

<H4>Members</H4>

<DL>
<DT><B>AH_ESP_COMBINED</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can perform IP Security operations on send and receive packets that contain both an authentication header (AH) security payload and an encapsulating security payload (ESP). A value of zero indicates that the NIC does not support this capability.

<P>Set by the TCP/IP transport to enable this capability.
</DD>

<DT><B>TRANSPORT_TUNNEL_COMBINED</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can process security payloads for both the transport-mode portion and the tunnel-mode portion of send and receive packets. (The transport-mode portion of a packet pertains to an end-to-end connection. The tunnel-mode portion of a packet pertains to a tunnel connection.) A value of zero indicates that the NIC does not support this capability.

<P>Set by the TCP/IP transport to enable this capability.
</DD>

<DT><B>V4_OPTIONS</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can perform IP security operations on IPv4 send and receive packets whose IP header(s) contain IP options. A value of zero indicates that the NIC does not support this capability.

<P>Set by the TCP/IP transport to enable this capability.
</DD>

<DT><B>RESERVED</B></DT>

<DD>A miniport driver sets one or more of the following flags to indicate the types of UDP-encapsulated ESP data packets that its NIC can parse. For a description of the UDP-encapsulation types, see <A HREF="209offl_84mf.htm">UDP-ESP Encapsulation Types</A>.

<DL>
<DT><B>IPSEC_TPT_UDPESP_ENCAPTYPE_IKE</B></DT>

<DD>Reserved.</DD>

<DT><B>IPSEC_TUN_UDPESP_ENCAPTYPE_IKE</B></DT>

<DD>Reserved.</DD>

<DT><B>IPSEC_TPTOVERTUN_UDPESP_ENCAPTYPE_IKE</B></DT>

<DD>Reserved.</DD>

<DT><B>IPSEC_TPT_UDPESP_OVER_PURE_TUN_ENCAPTYPE_IKE</B></DT>

<DD>Reserved.</DD>

<DT><B>IPSEC_TPT_UDPESP_ENCAPTYPE_OTHER</B></DT>

<DD>When set, indicates that the NIC can parse UDP-encapsulated transport-mode packets.

<P>When cleared, indicates that the NIC does not have this capability.
</DD>

<DT><B>IPSEC_TUN_UDPESP_ENCAPTYPE_OTHER</B></DT>

<DD>When set, indicates that the NIC can parse UDP-encapsulated tunnel-mode packets.

<P>When cleared, indicates that the NIC does not have this capability.
</DD>

<DT><B>IPSEC_TPTOVERTUN_UDPESP_ENCAPTYPE_OTHER</B></DT>

<DD>When set, indicates that the NIC can parse transport over UDP-encapsulated tunnel-mode packets.

<P>When cleared, indicates that the NIC does not have this capability.
</DD>

<DT><B>IPSEC_TPT_UDPESP_OVER_PURE_TUN_ENCAPTYPE_OTHER</B></DT>

<DD>When set, indicates that the NIC can parse UDP-encapsulated transport over tunnel-mode packets.

<P>When cleared, indicates that the NIC does not have this capability.

</DD>

<DT>A miniport whose NIC is incapable of parsing UDP-encapsulated ESP packets must not set any flags in the <B>Reserved</B> member.</DT>
</DL>
</DD>

<DT><B>V4AH</B></DT>

<DT><B>MD5</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can use the keyed MD5 algorithm for computing and/or validating a cryptographic checksum for an AH payload and/or ESP payload. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>SHA_1</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can use the SHA 1 algorithm for computing and/or validating a cryptographic checksum for an AH payload and/or ESP payload. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Transport</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate and/or validate the cryptographic checksum(s) for the portion of a packet that pertains to an end-to-end connection. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Tunnel</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate and/or validate cryptographic checksum(s) for the portion of a packet that pertains to a tunnel connection. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Send</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate cryptographic checksum(s) for send packets. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Receive</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate cryptographic checksum(s) for receive packets. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>V4ESP</B></DT>

<DT><B>DES</B></DT>

<DD>Set by a miniport driver to indicate that its NIC supports the DES algorithm for encrypting and decrypting ESP payloads. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>RESERVED</B></DT>

<DD>This is reserved.</DD>

<DT><B>TRIPLE_DES</B></DT>

<DD>Set by a miniport driver to indicate that its NIC supports the triple-DES algorithm for encrypting and decrypting ESP payloads. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>NULL_ESP</B></DT>

<DD>Set by a miniport driver to indicate that its NIC supports null encryption, which is the ESP payload without encryption but with authentication information. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Transport</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can encrypt and decrypt ESP data for the portion of a packet that pertains to an end-to-end connection. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Tunnel</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can encrypt and decrypt ESP data for the portion of a packet that pertains to a tunnel connection. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Send</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can encrypt and decrypt ESP payloads in send packets. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>Receive</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can encrypt and decrypt ESP payloads in receive packets. Set by the TCP/IP transport to enable this capability.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ndis.h</I>. Include <I>ndis.h</I>.</P>

<H4>Comments</H4>

<P>In response to a query of <A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>, a miniport driver returns in the <I>InformationBuffer</I> an <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A> structure followed by one or <A HREF="105nstru_3f5e.htm">NDIS_TASK_OFFLOAD</A> structures. Each NDIS_TASK_OFFLOAD structure specifies a task-offload capability supported by the miniport driver's NIC. </P>

<P>When the <B>Task</B> member of the NDIS_TASK_OFFLOAD structure specifies <B>IpSecNdisTask</B>, the <B>TaskBuffer</B> of the NDIS_TASK_OFFLOAD structure contains an NDIS_TASK_IPSEC structure. When the NDIS_TASK_IPSEC structure is filled in by a miniport driver in response to the TCP/IP transport's query of OID_TCP_TASK_OFFLOAD, it specifies the miniport driver's NIC's capabilities for performing IP Security tasks on packets. When the NDIS_TASK_IPSEC structure is passed to a miniport driver through the TCP/IP transport's set of OID_TCP_TASK_OFFLOAD, it specifies the IP Security capabilities that the transport is enabling.</P>

<H4>See Also</H4>

<P><A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>, <A HREF="105nstru_3f5e.htm">NDIS_TASK_OFFLOAD</A>, <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS_TASK_IPSEC"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
