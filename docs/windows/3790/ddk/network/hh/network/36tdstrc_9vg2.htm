<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TDI_CONNECTION_INFORMATION</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TDI_CONNECTION_INFORMATION">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdi_connection_information_nr"></A>TDI_CONNECTION_INFORMATION</H1>

<P>The TDI_CONNECTION_INFORMATION structure defines the structure of information that a kernel-mode client passes to or receives from the underlying transport for a subset of the TDI_<I>XXX</I> internal-device-control requests, particularly those relevant to endpoint-to-endpoint connections. </P>

<PRE class=syntax>typedef struct _TDI_CONNECTION_INFORMATION { 
  LONG  UserDataLength; 
  PVOID  UserData; 
  LONG  OptionsLength; 
  PVOID  Options; 
  LONG  RemoteAddressLength; 
  PVOID  RemoteAddress; 
} TDI_CONNECTION_INFORMATION, *PTDI_CONNECTION_INFORMATION; </PRE>

<H4>Members</H4>

<DL>
<DT><B>UserDataLength</B></DT>

<DD>Specifies the size in bytes of the buffer at <B>UserData</B> or zero if <B>UserData</B> is NULL. </DD>

<DT><B>UserData</B></DT>

<DD>Pointer to client-supplied buffer for user data, generally sent or received when an endpoint-to-endpoint connection is being established or, possibly, disconnected. </DD>

<DT><B>OptionsLength</B></DT>

<DD>Specifies the size in bytes of the buffer at <B>Options</B>. </DD>

<DT><B>Options</B></DT>

<DD>Pointer to a client-supplied buffer, either containing client-supplied data or awaiting transport-returned data for the given IOCTL request. </DD>

<DT><B>RemoteAddressLength</B></DT>

<DD>Specifies the size in bytes of the buffer at <B>RemoteAddress</B>. </DD>

<DT><B>RemoteAddress</B></DT>

<DD>Pointer to a buffer containing a remote-node transport address either specified by the client or returned by the transport to the client. The syntax of this address depends on the type of network and/or the underlying transport (see <A HREF="36tdstrc_8b8y.htm">TA_ADDRESS</A>).
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Tdi.h</I>. Include <I>Tdi.h </I>or <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>While several <B>TdiBuild</B><I>Xxx</I> macros and the corresponding TDI_<I>XXX</I> IOCTL requests use this structure to pass information between TDI transports and their clients, each does not use every member of the TDI_CONNECTION_INFORMATION structure. </P>

<P>As a general rule, a transport does not return any information in this structure if it returns STATUS_PENDING for a given IOCTL request. Instead, the driver defers setting the data in this structure until just before it completes the IRP. </P>

<H4>Supplying and Receiving UserData</H4>

<P>After an endpoint-to-endpoint connection is established, a local-node client can send TSDUs to its remote-node peer by submitting TDI_SEND requests to the underlying transport. The local-node client can either receive TSDUs from its remote-node peer by submitting TDI_RECEIVE requests or through calls to its registered ClientEvent(Chained)Receive(Expedited) handlers. </P>

<P>However, until such a connection is established, two TDI clients in the process of establishing an endpoint-to-endpoint connection can send data to each other by supplying it in a buffer at <B>UserData</B> with their TDI_CONNECT, TDI_LISTEN, and, possibly, TDI_ACCEPT requests to their respective underlying transports. In a similar manner, two such clients also can supply disconnection data to each other in the process of controlled-disconnect operation, assuming their respective transports support controlled disconnections. </P>

<P>A client can determine the transport-specific limit on the amount of user data by submitting a query-information request, set up with <B>TdiBuildQueryInformation</B> for the <I>QType</I> TDI_QUERY_PROVIDER_INFO. </P>

<P>When the client can send user data with a particular TDI IOCTL request, a <B>UserDataLength</B> set to zero implies that the client has provided no user data in its request to the transport. When the client can receive user data with a particular TDI IOCTL request, a <B>UserDataLength</B> set to zero implies that the transport returned no data in the buffer at <B>UserData</B>. Otherwise, the transport sets <B>UserDataLength</B> to the number of bytes of data it received for the client. </P>

<P>If the client specifies a nonzero <B>UserDataLength</B> and the transport receives more data from the remote node than it can fit into the client-supplied buffer, the transport returns as much data as it can in the client's buffer. In this case, the transport completes the operation normally but returns a status indicating data truncation to its client.</P>

<P><B>UserDataLength</B> must be zero and <B>UserData</B> must NULL for the following TDI_<I>XXX</I> IOCTL requests:

<DL>
<DT>TDI_RECEIVE_DATAGRAM and TDI_SEND_DATAGRAM</DT>

<DD>The TDI_CONNECTION_INFORMATION structure is used only to specify the remote-node address for these requests. </DD>

<DT>TDI_LISTEN if the client requests a delayed-connection acceptance</DT>

<DD>Such a client can supply any necessary user data with its subsequent TDI_ACCEPT request when it accepts a connection offer from a remote-node peer. 
</DD>
</DL>

<P>When the transport does not allow its clients to supply user data for a particular TDI IOCTL request, the transport fails all such requests in which a client specifies a nonzero <B>UserDataLength</B>.</P>

<H4>Using Options and OptionsLength</H4>

<P>For a TDI_LISTEN request, the <B>OptionsLength</B> is either zero or <B>sizeof(</B>ULONG<B>)</B> if the client set TDI_QUERY_ACCEPT in the <I>Flags</I> parameter to <B>TdiBuildListen</B>, and <B>Options</B> is either NULL or the buffer contains TDI_QUERY_ACCEPT. </P>

<P>Except for the TDI_LISTEN request, the transport defines the syntax and semantics of any additional options it supports for its clients, usually along the following lines: 

<UL>
	<LI>When a client can supply transport-specific information at <B>Options</B>, setting <B>OptionsLength</B> to zero implies that the underlying driver can use its default values for options. When the transport can return information at <B>Options</B>, setting <B>OptionsLength</B> to zero implies that the client would not use the returned data so the transport should ignore <B>Options</B>.</LI>

	<LI>If such a client sets <B>OptionsLength</B> to a nonzero value, but the transport receives an option string too large for the client-supplied buffer, the transport truncates the options string and completes the client's request normally with a status that indicates data truncation occurred.</LI>

	<LI>When the client of such a transport uses <B>Options</B> to specify option values for the driver to transfer, the values the driver actually writes can be different from the client-specified values.</LI>
</UL>

<H4>Using RemoteAddress and RemoteAddressLength</H4>

<P>Use of these members depends on the TDI_<I>XXX</I> IOCTL and on the size of the transport-specific address. In general, a local-node client uses <B>RemoteAddress</B> to specify the target remote-node address when it initiates network-transfer operations, such as connection offers and sends. The transport returns information to <B>RemoteAddress</B> when such an operation was initiated at the remote node, such as to satisfy listen and receive requests. </P>

<P>If the client specifies zero for <B>RemoteAddressLength</B>, the transport assumes <B>RemoteAddress</B> is NULL. If the client specifies a nonzero value for <B>RemoteAddressLength</B> but the transport has received an address too long for the client-supplied buffer, the driver function truncates the address to fit in the client's buffer. In this case, the transport completes the operation normally but returns a status code indicating data truncation to the client.</P>

<H4>See Also</H4>

<P><A HREF="36tdstrc_8b8y.htm"><B>TA_ADDRESS</B></A>, <A HREF="32ioctl_3376.htm"><B>TDI_ACCEPT</B></A>, <A HREF="34bldmac_3f5e.htm"><B>TdiBuildQueryInformation</B></A>, <A HREF="32ioctl_2m42.htm"><B>TDI_CONNECT</B></A>, <A HREF="32ioctl_4hgy.htm"><B>TDI_DISCONNECT</B></A>, <A HREF="32ioctl_6jua.htm"><B>TDI_LISTEN</B></A>, <A HREF="32ioctl_7ype.htm"><B>TDI_RECEIVE_DATAGRAM</B></A>, <A HREF="32ioctl_2msy.htm"><B>TDI_SEND_DATAGRAM</B></A>, <A HREF="32ioctl_23ci.htm"><B>TDI_SET_INFORMATION</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TDI_CONNECTION_INFORMATION"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
