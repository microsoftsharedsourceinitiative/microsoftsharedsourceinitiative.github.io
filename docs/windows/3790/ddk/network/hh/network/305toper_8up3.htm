<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Making an Endpoint-to-Endpoint Connection</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Making an Endpoint-to-Endpoint Connection">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_making_an_endpoint_to_endpoint_connection_ng"></A>Making an Endpoint-to-Endpoint Connection</H1>

<P>TDI clients on separate nodes of the network and their respective transports cooperate to establish an endpoint-to-endpoint connection between them. Before such a connection can be attempted, each client on its own node must do the following:

<OL>
	<LI>Open a transport address, as described in <A HREF="305toper_2grr.htm">Opening a Transport Address</A>.</LI>

	<LI>Open a connection endpoint, as described in <A HREF="305toper_4wdj.htm">Opening a Connection Endpoint</A>. </LI>

	<LI>Associate its open connection with the open address by submitting a TDI_ASSOCIATE_ADDRESS IOCTL request to its underlying transport, as mentioned in <A HREF="305toper_4wdj.htm">Opening a Connection Endpoint</A> and described in <A HREF="305toper_1aav.htm">Packaging and Submitting IOCTL Requests</A>. </LI>
</OL>

<P>Then, one of the clients makes a connection offer to the other, while the other usually listens (passively) for the connection offer to come in. </P>

<P>Either client also might have registered its ClientEventConnect handler with its underlying transport (see <A HREF="305toper_2grr.htm">Opening a Transport Address</A>). The transport driver calls <A HREF="35tdicli_56r6.htm">ClientEventConnect</A> when any connection offer directed to its client's open transport address comes in from a remote node. </P>

<H4>Requesting a Connection to a Remote Node</H4>

<P>The following figure shows how a local-node TDI client initiates a connection offer to a remote-node peer process.</P>

<P><IMG SRC="images/426-04.gif" ALT="" BORDER=0></P>

<P><B>Requesting a Connection</B></P>

<P>The local-node client makes a connection offer to a remote-node peer process by submitting a <A HREF="32ioctl_2m42.htm">TDI_CONNECT</A> request, set up with <A HREF="34bldmac_99pu.htm"><B>TdiBuildConnect</B></A>, to its underlying transport. </P>

<P>The local-node transport determines the client-specified target remote-node address from its client’s connect request and transmits the connection offer to the corresponding remote-node transport. </P>

<P>The remote-node transport notifies its client of the incoming connection offer, either by satisfying a TDI_LISTEN request previously submitted by its client or by calling the previously registered ClientEventConnect handler. </P>

<P>The local-node transport fails the connect IRP if the remote-node client is not listening or if the remote-node transport does not respond. The remote-node client can accept or reject the offered connection if both transports support <I>delayed-connection acceptance</I>, as described next.</P>

<H4>Accepting a Connection Offer from a Remote Node</H4>

<P>The following figure shows how a local-node client listens for a connection offer from a remote-node peer process.</P>

<P><IMG SRC="images/426-05.gif" ALT="" BORDER=0></P>

<P><B>Accepting a Connection (Listen Operation)</B></P>

<P>To establish an endpoint-to-endpoint connection, one client makes a connection offer, and the other indicates to its underlying transport that it is waiting for a connection offer to occur.</P>

<P>A local-node client can passively listen for such an incoming connection offer by submitting a <A HREF="32ioctl_6jua.htm">TDI_LISTEN</A> request, set up with <A HREF="34bldmac_6cc2.htm"><B>TdiBuildListen</B></A>, to its underlying transport. The client can specify the remote-node transport address from which an acceptable offer can occur when it sets up the listen IRP. If the transports support delayed-connection acceptances, the client can direct the transport to either accept an offer from a particular remote-node address immediately or allow the client to inspect the offer and decide whether to accept it. </P>

<P>When the transport receives a TDI_LISTEN request, it monitors connection offers coming from remote nodes that are directed to the transport address opened by the client. When it receives such a connection offer from an acceptable remote-node address, the transport copies information transmitted with the offer into a buffer the local-node client supplied with its TDI_LISTEN request and completes the IRP back to the listening client. </P>

<P>If the client directed the transport to accept the incoming connection offer immediately, completion of the listen request occurs as the transport notifies the remote-node transport that an endpoint-to-endpoint connection has been established with the remote-node client. In effect, the local-node client has made an endpoint-to-endpoint connection with its remote-node peer even before it "knows" that its listen IRP has been completed, and the local-node client can receive data on that endpoint-to-endpoint connection at once. Otherwise, the transport's completion of the listen request notifies the local-node client of the offer to connect, and the client either accepts or rejects the request by issuing a <A HREF="32ioctl_3376.htm">TDI_ACCEPT</A> or <A HREF="32ioctl_4hgy.htm">TDI_DISCONNECT</A> request, respectively. The local-node client uses <A HREF="34bldmac_2voy.htm"><B>TdiBuildAccept</B></A> or <A HREF="34bldmac_4eeq.htm"><B>TdiBuildDisconnect</B></A> to set up the IRP it submits to its underlying transport for a delayed-connection acceptance operation. </P>

<P>Accepting a connection is even simpler if the local-node client is using event handling to communicate with the underlying TDI transport driver. When its transport receives a connection offer from a remote-node client that is directed to the open transport address of the local-node client, the transport calls the registered <A HREF="35tdicli_56r6.htm">ClientEventConnect</A> handler of the local-node client, passing in the transport address of the offering client and any connect data the transport received with the connection offer. ClientEventConnect then accepts or rejects the connection offer immediately.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Making%20an%20Endpoint-to-Endpoint%20Connection"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
