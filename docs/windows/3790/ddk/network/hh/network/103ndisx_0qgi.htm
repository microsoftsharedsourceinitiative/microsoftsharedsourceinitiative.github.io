<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCoIndicateStatus</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCoIndicateStatus">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcoindicatestatus_nr"></A>NdisMCoIndicateStatus</H1>

<P><B>NdisMCoIndicateStatus</B> indicates a change in the status of a connection-oriented NIC to bound protocols, or a change in the status of a particular VC active on the NIC.</P>

<PRE class=syntax><B>VOID 
  NdisMCoIndicateStatus(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisVcHandle</I>  <B>OPTIONAL,</B>
    <B>IN NDIS_STATUS</B>  <I>GeneralStatus</I><B>,</B>
    <B>IN PVOID</B>  <I>StatusBuffer</I>  <B>OPTIONAL,</B>
    <B>IN ULONG</B>  <I>StatusBufferSize</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the NDIS-supplied handle originally input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle to the VC for which VC-specific status is being indicated. The miniport driver originally obtained this handle as an input parameter to its <A HREF="101mini_7otu.htm"><I>MiniportCoCreateVc</I></A> function. To make a notification of a general status change in the NIC to all bound protocols, this handle should be NULL.</DD>

<DT><I>GeneralStatus</I></DT>

<DD>Specifies the NDIS_STATUS_<I>XXX</I> value that describes the change in status. </DD>

<DT><I>StatusBuffer</I></DT>

<DD>Pointer to a caller-allocated buffer containing medium- and status-specific information, if any, supplemental to the value at <I>GeneralStatus</I>. This parameter can be NULL.</DD>

<DT><I>StatusBufferSize</I></DT>

<DD>Specifies the size in bytes of the buffer at <I>StatusBuffer</I>, zero if <I>StatusBuffer</I> is NULL
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A call to <B>NdisMCoIndicateStatus</B> with a NULL <I>NdisVcHandle</I> causes NDIS to forward the miniport driver's status-change notification to all bound protocols by calling each bound protocol’s <A HREF="104tdlow_3khe.htm"><I>ProtocolCoStatus</I></A> function in turn. A call with an explicit <I>NdisVcHandle</I> restricts such a notification only to the client and/or, possibly, call manager, with which the miniport driver shares this VC handle. </P>

<P>In either case, such a notification makes it possible for protocols to log the change in status or to take corrective action. For example, a protocol might call <A HREF="103ndisx_9ib6.htm"><B>NdisReset</B></A>, depending on the NDIS_STATUS_<I>XXX</I> indicated by the underlying NIC driver. </P>

<P>When a miniport driver senses that the network connection has been lost, it should call <B>NdisMCoIndicateStatus</B> with NDIS_STATUS_MEDIA_DISCONNECT. When the connection is restored, the miniport driver should call <B>NdisMCoIndicateStatus</B> with NDIS_STATUS_MEDIA_CONNECT.</P>

<P>When a miniport driver calls <B>NdisMCoIndicateStatus</B> to report operational problems in its NIC, NDIS itself can call the <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A> function to try restoring the NIC to a working condition. In these circumstances, NDIS calls bound protocols only with NDIS_STATUS_RESET_START and later with NDIS_STATUS_RESET_END, rather that forwarding the <I>GeneralStatus</I> that the miniport driver passed to <B>NdisMCoIndicateStatus</B>. </P>

<P>A miniport driver cannot call <B>NdisMCoIndicateStatus</B> in the context of its <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_38c2.htm"><I>MiniportISR</I></A>, <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, or <A HREF="101mini_7lo2.htm"><I>MiniportShutdown</I></A> function.</P>

<P>Callers of <B>NdisMCoIndicateStatus</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>WAN Miniport Driver Calls to NdisMCoIndicateStatus</H4>

<P>A CoNDIS WAN miniport driver indicates VC status with specific status codes and buffer contents. These status indications are generated by a CoNDIS WAN miniport driver. A connection-oriented client (protocol) that shares the VC with such a miniport driver can ignore these indications. However, processing these indications typically results in improved performance for a protocol and miniport driver. </P>

<P>The following types of CoNDIS-WAN-specific indications can be sent to connection-oriented clients with <B>NdisMCoIndicateStatus</B>: 

<UL>
	<LI>Link parameters</LI>

	<LI>Fragment</LI>
</UL>

<H4>NDIS_STATUS_WAN_CO_LINKPARAMS</H4>

<P>A CoNDIS WAN miniport driver makes a link-parameters indication whenever parameters for a particular VC that is active on the NIC change. </P>

<P>The status code for the link-parameters indication is NDIS_STATUS_WAN_CO_LINKPARAMS. The buffer at <I>StatusBuffer</I> is formatted as an <A HREF="105nstru_5hma.htm">WAN_CO_LINKPARAMS</A> structure.</P>

<H4>NDIS_STATUS_WAN_CO_FRAGMENT</H4>

<P>A CoNDIS WAN miniport driver makes a fragment indication whenever it receives a partial packet from the endpoint of a virtual connection. After this indication occurs, a connection-oriented client should send frames to the connection-oriented client at the other end of the VC. These frames will notify the opposite endpoint of this partial-packet situation, rather than waiting for a time-out to occur.</P>

<P>The status code for the fragment indication is NDIS_STATUS_WAN_CO_FRAGMENT. The buffer at <I>StatusBuffer</I> is formatted as an <A HREF="105nstru_7zoy.htm">NDIS_WAN_CO_FRAGMENT</A> structure. </P>

<P>NDISWAN monitors dropped packets by counting the number of fragment indications on each link.</P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A>, <A HREF="103ndisx_9ib6.htm"><B>NdisReset</B></A>, <A HREF="105nstru_7zoy.htm">NDIS_WAN_CO_FRAGMENT</A>, <A HREF="104tdlow_3khe.htm"><I>ProtocolCoStatus</I></A>, <A HREF="105nstru_5hma.htm">WAN_CO_LINKPARAMS</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCoIndicateStatus"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
