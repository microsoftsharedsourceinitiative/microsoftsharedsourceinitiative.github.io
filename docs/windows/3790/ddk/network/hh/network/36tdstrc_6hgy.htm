<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TRANSPORT_ADDRESS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TRANSPORT_ADDRESS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_transport_address_nr"></A>TRANSPORT_ADDRESS</H1>

<P>The TRANSPORT_ADDRESS structure defines the general format for an array of TDI driver-specific transport addresses. </P>

<PRE class=syntax>typedef struct _TRANSPORT_ADDRESS { 
  LONG  TAAddressCount; 
  TA_ADDRESS  Address[1]; 
} TRANSPORT_ADDRESS, *PTRANSPORT_ADDRESS; </PRE>

<H4>Members</H4>

<DL>
<DT><B>TAAddressCount</B></DT>

<DD>Specifies the number of elements in the array at <B>Address</B>. </DD>

<DT><B>Address</B></DT>

<DD>Specifies an array of one or more TA_ADDRESS structures each specifying a transport address of a particular TDI_ADDRESS_TYPE_<I>XXX</I>. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Tdi.h</I>. Include <I>Tdi.h </I>or <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>Although any address specified in a TRANSPORT_ADDRESS structure is always driver-specific, all transports of a particular protocol type (for example, all NetBIOS transports or all IPX transports) use the same address format. </P>

<P>When it is given a TRANSPORT_ADDRESS structure, the transport uses the first recognizable address in the array at <B>Address</B>. For instance, if its client passes in several TDI_ADDRESS_TYPE_NETBIOS addresses, a NetBIOS transport would use only the first such address. If a transport can use some number of TDI_ADDRESS_TYPE_<I>XXX</I> addresses and it is given an array of mixed types, it uses only the first valid address of each such type.</P>

<P>A transport returns an error if it is given a TRANSPORT_ADDRESS structure containing elements of a type it is unable to parse. If the transport is given an address of a recognizable type that it cannot use, the transport can search the array elements for a usable address and return an error if it finds no valid address. </P>

<H4>See Also</H4>

<P><A HREF="36tdstrc_8b8y.htm"><B>TA_ADDRESS</B></A>, <A HREF="36tdstrc_7ywi.htm"><B>TA_APPLETALK_ADDR</B></A>, <A HREF="36tdstrc_4n3m.htm"><B>TA_IP_ADDRESS</B></A>, <A HREF="36tdstrc_3ecy.htm"><B>TA_IPX_ADDRESS</B></A>, <A HREF="36tdstrc_19pu.htm"><B>TA_NETBIOS_ADDRESS</B></A>, <A HREF="36tdstrc_97xu.htm"><B>TA_NS_ADDRESS</B></A>, <A HREF="36tdstrc_33zm.htm"><B>TA_VNS_ADDRESS</B></A> </P>

<P></P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TRANSPORT_ADDRESS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
