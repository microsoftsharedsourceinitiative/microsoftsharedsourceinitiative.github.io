<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisReadNetworkAddress</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisReadNetworkAddress">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisreadnetworkaddress_nr"></A>NdisReadNetworkAddress</H1>

<P><B>NdisReadNetworkAddress</B> returns the software-configurable network address that was stored in the registry for a NIC when it was installed in the machine.</P>

<PRE class=syntax><B>VOID
  NdisReadNetworkAddress(</B>
    <B>OUT PNDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>OUT PVOID</B>  *<I>NetworkAddress</I><B>,</B>
    <B>OUT PUINT</B>  <I>NetworkAddressLength</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>ConfigurationHandle</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the status of the call as one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The caller can use the address returned at <I>NetworkAddress</I> for its NIC. </DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>There was no NIC address information available in the caller’s registry <B>Parameters</B> key or the value stored was not a string. </DD>
</DL>
</DD>

<DT><I>NetworkAddress</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns a pointer to the buffered network address, stored as a sequence of byte integers, if the call is successful. </DD>

<DT><I>NetworkAddressLength</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the number of bytes returned at <I>NetworkAddress</I>.</DD>

<DT><I>ConfigurationHandle</I></DT>

<DD>Specifies the handle returned by <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A>.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisReadNetworkAddress</B> searches the registry <B>Parameters</B> key designated by the given <I>ConfigurationHandle</I> for the keyword <B>NetworkAddress</B>, converts the value of this string-type entry into a sequence of byte integers, and stores the requested information internally. The storage that NDIS allocates for such an address remains valid until the NIC driver calls <A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A>, which frees the memory. </P>

<P>The caller cannot use the variable at <I>NetworkAddress</I> as a pointer unless <B>NdisReadNetworkAddress</B> returns NDIS_STATUS_SUCCESS at <I>Status</I>.</P>

<P>The installation program for a NIC that supports software-configurable network addressing should store a value entry named with the <B>NetworkAddress</B> keyword in the <B>HKLM\System\CurrentControlSet\Control\Class\{4d36e972…}\00</B><I>xx</I> key of the registry. </P>

<P>A NIC installer usually stores the value of a <B>NetworkAddress</B> entry in the registry as a string of hexadecimal digits. Optionally, an installer can store such an address as a string of paired digits, with each pair separated from the next by a hyphen. <B>NdisReadNetworkAddress</B> discards hyphens and converts each such pair into a single byte. </P>

<P>In either form, <B>NdisReadNetworkAddress</B> converts the address specified as a string, one character at a time, into the equivalent integer until the string is exhausted. </P>

<P>In the registry of Windows&nbsp;2000 and later versions, such an installed address string contains Unicode characters. </P>

<P>Note that NDIS does not validate the value at <I>NetworkAddress</I>. NDIS does not guarantee that this value is a valid address, that the value has the proper length, or even that the value is a network address. The caller of <B>NdisReadNetworkAddress</B> must therefore not make any assumptions about this value and must itself validate the value. If the caller determines that the value is out of bounds, it should not use the value; instead, it should use the permanent medium access control (MAC) address or a default address.</P>

<P>Callers of <B>NdisReadNetworkAddress</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A>, <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisReadNetworkAddress"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
