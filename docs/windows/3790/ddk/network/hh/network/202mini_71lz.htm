<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS-Supplied Initialization and Registration Functions</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS-Supplied Initialization and Registration Functions">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_ndis_supplied_initialization_and_registration_functions_ng"></A>NDIS-Supplied Initialization and Registration Functions</H2>

<P>During initialization, a miniport driver configures itself and registers with NDIS by calling configuration functions provided by NDIS. Some of these functions access configuration information written to the registry by the miniport driver's INF file. </P>

<P>The following table describes the initialization and registration functions supplied by NDIS.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=23%>Function</TH>
<TH align=left width=77%>Definition</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_244y.htm"><B>NdisMInitializeWrapper</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Initializes the NDIS Library data structures for the miniport driver.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Provides the NDIS Library with information about the miniport driver.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Informs the NDIS Library of the type of NIC supported by the miniport driver and passes the handle to the miniport driver’s context area. NDIS will pass this handle in subsequent calls to <I>MiniportXxx</I> functions. This function can also change the default NIC timeout behavior and allows a driver to specify some additional flags, including flags that must be set by a deserialized miniport driver or an NDIS intermediate driver. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_314i.htm"><B>NdisMGetDeviceProperty</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Retrieves device objects required to set up communication with a NIC through a bus driver. For example, USB and IEEE 1394 bus drivers. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_8hrm.htm"><B>NdisMQueryAdapterResources</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Returns a list of hardware resources for a NIC.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_4ktu.htm"><B>NdisMQueryInformationComplete</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Indicates that a call to <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> has completed. Called only by connectionless miniport drivers.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_3alu.htm"><B>NdisMSetInformationComplete</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Informs the NDIS Library that the previous <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A> operation has completed. Called only by connectionless miniport drivers.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Supplies a handle that the caller can use to call <B>NdisReadConfiguration</B>, <B>NdisWriteConfiguration</B>, <B>NdisOpenConfigurationKeyByIndex</B>, or <B>NdisOpenConfigurationKeyByName</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1e2a.htm"><B>NdisOpenConfigurationKeyByIndex</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Opens a subkey of a given open registry key designated by a caller-supplied handle.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1k6q.htm"><B>NdisOpenConfigurationKeyByName</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Opens a named subkey of a given open registry key designated by a caller-supplied handle.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_5ek2.htm"><B>NdisReadConfiguration</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Uses the <B>Parameters</B> handle obtained by calling <B>NdisOpenConfiguration</B> to read key values stored in the registry at the keyword passed to <B>NdisReadConfiguration</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_5kaa.htm"><B>NdisWriteConfiguration</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Uses the <B>Parameters</B> handle obtained by calling <B>NdisOpenConfiguration</B> to write key values into the registry at the keyword passed to <B>NdisWriteConfiguration</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Closes the handle to the registry that was opened with a call to <B>NdisOpenConfiguration</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_4fea.htm"><B>NdisMRegisterAdapterShutdownHandler</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Registers a NIC-driver-supplied <A HREF="101mini_7lo2.htm"><I>MiniportShutdown</I></A> function to be called when the system is shutting down. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_1qia.htm">NDIS_INIT_FUNCTION</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Marks a driver function to be run only once during initialization. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><A HREF="103ndisx_5svm.htm">NDIS_PAGEABLE_FUNCTION</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>&nbsp;</TD>
<TD width=77%>Marks a driver function as pageable code. </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS-Supplied%20Initialization%20and%20Registration%20Functions"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
