<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ClientEventConnect</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ClientEventConnect">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_clienteventconnect_nr"></A>ClientEventConnect</H1>

<P>The ClientEventConnect routine is an event handler the TDI driver calls in response to an incoming endpoint-to-endpoint connection offer from a remote node. </P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>ClientEventConnect(
</B>    <B>IN PVOID</B>  <I>TdiEventContext</I><B>,
</B>    <B>IN LONG</B>  <I>RemoteAddressLength</I><B>,
</B>    <B>IN PVOID</B>  <I>RemoteAddress</I><B>,
</B>    <B>IN LONG</B>  <I>UserDataLength</I><B>,
</B>    <B>IN PVOID</B>  <I>UserData</I><B>,
</B>    <B>IN LONG</B>  <I>OptionsLength</I><B>,
</B>    <B>IN PVOID</B>  <I>Options</I><B>,
</B>    <B>OUT CONNECTION_CONTEXT</B>  <B>*</B><I>ConnectionContext</I><B>,
</B>    <B>OUT PIRP</B>  <B>*</B><I>AcceptIrp
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>TdiEventContext</I></DT>

<DD>Pointer to the client-supplied context provided in the IRP that was set up with <B>TdiBuildSetEventHandler</B> when ClientEventConnect was registered with the underlying transport.</DD>

<DT><I>RemoteAddressLength</I></DT>

<DD>Specifies the size in bytes of the buffer at <I>RemoteAddress</I>.</DD>

<DT><I>RemoteAddress</I></DT>

<DD>Pointer to a buffer containing the transport address of the remote-node client that offered this connection.</DD>

<DT><I>UserDataLength</I></DT>

<DD>Specifies the size in bytes of the buffer at <I>UserData</I>. Zero indicates either that no data is available or that the underlying transport(s) do not support sending data with an offered connection. <I>UserData </I>is NULL if this parameter is zero. </DD>

<DT><I>UserData</I></DT>

<DD>Pointer to a buffer containing connect data provided by the remote-node client with its connection offer. This parameter is NULL if <I>UserDataLength</I> is zero. </DD>

<DT><I>OptionsLength</I></DT>

<DD>Specifies the size in bytes of the buffer at <I>Options</I>. Zero implies no option string. <I>Options</I> is NULL if this parameter is zero.</DD>

<DT><I>Options</I></DT>

<DD>Pointer to a buffer containing options for the connection in a transport-specific format. This parameter is NULL if <I>OptionsLength</I> is zero. </DD>

<DT><I>ConnectionContext</I></DT>

<DD>Pointer to a caller–supplied variable in which ClientEventConnect returns a pointer to the client's context area in which it maintains client-determined state for this connection endpoint. Usually, the specified address is identical to the value that the client set for the value at <I>EaBuffer</I> when it originally called <B>ZwCreateFile</B> to open the local connection endpoint. If ClientEventConnect rejects the offered connection, the value it returns is NULL. </DD>

<DT><I>AcceptIrp</I></DT>

<DD>Pointer to a caller-supplied variable in which ClientEventConnect returns a pointer to an IRP, set up by ClientEventConnect with <B>TdiBuildAccept</B>. The transport completes this IRP if it is supplied as it does any normal accept request. If ClientEventConnect rejects the connection offer, this parameter is NULL. 
</DD>
</DL>

<H4>Return Value</H4>

<P>ClientEventConnect can return one of the following:

<DL>
<DT>STATUS_MORE_PROCESSING_REQUIRED</DT>

<DD>ClientEventConnect is accepting the offered connection and has supplied an accept request at <I>AcceptIrp</I>. 

<P>Some transports assume the connection offer is being rejected if ClientEventConnect returns anything other than this value. 
</DD>

<DT>STATUS_CONNECTION_REFUSED</DT>

<DD>ClientEventConnect is rejecting the offered connection.</DD>

<DT>STATUS_INSUFFICIENT_RESOURCES</DT>

<DD>ClientEventConnect could not allocate sufficient resources to accept the offered connection. The transport will send a rejection to the remote node. 
</DD>
</DL>

<H4>Comments</H4>

<P>This call notifies the local-node client of an incoming connection offer from a remote-node peer process. The local-node ClientEventConnect handler inspects the transport-supplied address information identifying the remote-node client and any data at <I>UserData</I> and/or <I>Options</I> to determine whether to accept this connection offer.</P>

<P>To accept an offered endpoint-to-endpoint connection, ClientEventConnect must set up the buffer at <I>ConnectionContext</I>, together with a TDI_ACCEPT request, and, then, return STATUS_MORE_PROCESSING_REQUIRED. The local-node transport notifies the remote node of the acceptance, transmitting any connect data that its client supplied in the accept IRP, and completes the TDI_ACCEPT request normally. </P>

<P>A client should preallocate the IRP it will use to accept a connection offer before its ClientEventConnect handler is called. In general, any client should preallocate a few IRPs for the TDI_<I>XXX</I> IOCTL requests it might subsequently submit to the underlying transport while running at IRQL = DISPATCH_LEVEL. Client calls to <B>TdiBuildInternalDeviceControlIrp</B> can occur at IRQL = PASSIVE_LEVEL. </P>

<P>When ClientEventConnect returns control with STATUS_MORE_PROCESSING_REQUIRED, the underlying transport can indicate incoming receives on the endpoint-to-endpoint connection to the client's registered ClientEvent(Chained)Receive(Expedited) handler(s), even before the transport completes the given accept IRP back to its local-node client. A client must be prepared to accept received data as soon as it agrees to accept an endpoint-to-endpoint connection offer from a remote-node peer. </P>

<P>To reject an offered endpoint-to-endpoint connection, ClientEventConnect can simply return STATUS_CONNECTION_REFUSED. For this return status, the local-node transport notifies the remote-node transport that the connection offer has been rejected. </P>

<P>If the client either does not have or cannot allocate sufficient resources to accept the connection offer, ClientEventConnect returns STATUS_INSUFFICIENT_RESOURCES. For this return status, the TDI transport either sends a rejection of the remote-node client's connection offer to the corresponding transport on the remote node or simply drops the connection offer.</P>

<P>ClientEventConnect must be capable of carrying out its operations at IRQL = DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="35tdicli_4qnm.htm"><B>ClientEventChainedReceive</B></A>, <A HREF="35tdicli_57n6.htm"><B>ClientEventChainedReceiveExpedited</B></A>, <A HREF="35tdicli_7yeq.htm"><B>ClientEventReceive</B></A>, <A HREF="35tdicli_7jea.htm"><B>ClientEventReceiveExpedited</B></A>, <A HREF="32ioctl_3376.htm"><B>TDI_ACCEPT</B></A>, <A HREF="34bldmac_2voy.htm"><B>TdiBuildAccept</B></A>, <A HREF="34bldmac_8df6.htm"><B>TdiBuildInternalDeviceControlIrp</B></A>, <A HREF="34bldmac_6cc2.htm"><B>TdiBuildListen</B></A>, <A HREF="34bldmac_6sxe.htm"><B>TdiBuildSetEventHandler</B></A>, <A HREF="31tddisp_6foy.htm"><B>TdiDispatchCreate</B></A>, <A HREF="36tdstrc_8b8y.htm"><B>TA_ADDRESS</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ClientEventConnect"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
