<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Protocol Driver Binding Operations</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Protocol Driver Binding Operations">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_protocol_driver_binding_operations_ng"></A>Protocol Driver Binding Operations</H2>

<P>When a NIC becomes available, NDIS calls the <A HREF="104tdlow_2bqq.htm"><I>ProtocolBindAdapter</I></A> function of any protocol driver that can bind itself to that NIC. </P>

<P>NDIS supplies the name of the newly-available adapter for <I>ProtocolBindAdapter</I> to open in the <I>DeviceName </I>parameter. The <I>DeviceName</I> parameter can refer to a NIC managed by an underlying miniport driver, or it can be the name of a virtual miniport exported by an intermediate driver. NDIS passes a handle in the <I>BindContext</I> parameter that represents the adapter's context for the bind request. </P>

<P>The<I>SystemSpecific1</I> parameter of <I>ProtocolBindAdapter</I> points to a registry path if the protocol driver stores adapter-specific information in the registry. This value is passed to <A HREF="103ndisx_6yr6.htm"><B>NdisOpenProtocolConfiguration</B></A> to obtain a handle that is used to read and possibly to write such information. </P>

<P>The <I>SystemSpecific2</I> parameter of <I>ProtocolBindAdapter</I> is reserved for system use. It is the physical device object of the adapter to which the protocol is requested to bind.</P>

<P>The protocol driver must retain the <I>BindContext</I> parameter and pass it back to NDIS as a parameter to <A HREF="103ndisx_2w6q.htm"><B>NdisCompleteBindAdapter</B></A> when the driver has completed its binding-related activities and is ready to transmit and receive packets. </P>

<P>The protocol driver can store the <I>BindContext</I> parameter in the allocated binding-related context area or in another driver-accessible location. The value of the <I>BindContext</I> parameter must be stored if <B>NdisOpenAdapter</B> returns NDIS_STATUS_PENDING. In this case, the protocol driver cannot call <A HREF="103ndisx_2w6q.htm"><B>NdisCompleteBindAdapter</B></A> until the open-adapter operation is complete and NDIS calls the protocol driver's <A HREF="104tdlow_9xbm.htm"><I>ProtocolOpenAdapterComplete</I></A> function. <I>BindContext</I> must then be retrieved from a known location and passed by <I>ProtocolOpenAdapterComplete</I> to <B>NdisCompleteBindAdapter</B>.</P>

<P>Binding-time operations include allocating and initializing an adapter-specific context area for the binding, and calling <A HREF="103ndisx_9koi.htm"><B>NdisOpenAdapter</B></A> to open the adapter passed in the <I>DeviceName </I>parameter. </P>

<P>If <B>NdisOpenAdapter</B> returns NDIS_STATUS_PENDING, the protocol driver cannot call <B>NdisCompleteBindAdapter</B> until the open operation is complete. The open operation is complete when NDIS calls the protocol driver's <A HREF="104tdlow_9xbm.htm"><I>ProtocolOpenAdapterComplete</I></A> function. </P>

<P>For additional information about opening an underlying adapter, see <A HREF="302pro_7mxz.htm">Opening an Adapter Underlying a Protocol Driver</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Protocol%20Driver%20Binding%20Operations"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
