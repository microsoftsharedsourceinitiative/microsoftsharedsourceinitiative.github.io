<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating Property Pages for the Component</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Creating Property Pages for the Component">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_creating_property_pages_for_the_component_ng"></A>Creating Property Pages for the Component</H2>

<P>A notify object creates custom property pages after the network configuration subsystem calls the notify object's <A HREF="ntfrf_3uk2.htm"><B>INetCfgComponentPropertyUi::MergePropPages</B></A> method. Custom property pages can be merged into the default set of pages on the component's property sheet using the <B>MergePropPages</B> method. <B>MergePropPages</B> will return the appropriate number of default pages into which the custom pages can be merged. </P>

<P>To create custom property pages, <B>MergePropPages</B> calls the COM <B>CoTaskMemAlloc</B> function to allocate memory for handles to <B>PROPSHEETPAGE</B> structures. Each of these handles represents a property page to create. If <B>CoTaskMemAlloc</B> successfully allocates the memory for the handles, <B>MergePropPages</B> will declare and fill <B>PROPSHEETPAGE</B> structures for each property page. After <B>MergePropPages</B> fills these structures, it calls the Win32® <B>CreatePropertySheetPage</B> function for each property page. In this call, <B>MergePropPages</B> passes the address of the <B>PROPSHEETPAGE</B> structure to create. </P>

<P>A dialog-box callback function should also be implemented for each property page that <B>MergePropPages</B> creates. A dialog-box callback function processes messages that the operating system sends to the property page that is associated with that dialog-box function. To associate a property page with a dialog-box function, <B>MergePropPages</B> should point the <B>pfnDlgProc</B> member of each <B>PROPSHEETPAGE</B> structure for each page to the dialog-box function for the page. </P>

<P>A dialog-box function processes the following messages: 

<UL>
	<LI>The WM_INITDIALOG message, which is sent to the dialog-box function immediately before the operating system displays its associated property page. Dialog-box functions typically use this message to initialize the property page and to perform tasks that affect the appearance of the property page. </LI>

	<LI>The WM_NOTIFY message, which is sent to the dialog-box function after an event occurs in the property page. Other information sent with this message identifies what event has occurred. This event information is contained in a pointer to a <B>NMHDR</B> structure. Information that <B>NMHDR</B> can contain for a property sheet includes, for example:
<UL>
	<LI>The PSN_APPLY event, which indicates that a user clicks OK, Close, or Apply on the property page. If the user clicks OK, Close, or Apply, the dialog-box function can call the <B>PropSheet_Changed</B> macro to inform the property sheet that information in the page has changed. In this call, the dialog-box function passes handles to the property sheet and the page. The dialog-box function can call the Win32® <B>GetParent</B> function and pass the handle to the page to retrieve the handle to the property sheet. 
<P>After the dialog-box function notifies the property sheet about the change, the network configuration subsystem calls the <A HREF="ntfrf_2pyr.htm"><B>INetCfgComponentPropertyUi::ValidateProperties</B></A> method to check the validity of all changes. If all changes are valid, the subsystem calls the notify object's <A HREF="ntfrf_8fzm.htm"><B>INetCfgComponentPropertyUi::ApplyProperties</B></A> method to cause all changes to take effect. The network configuration subsystem calls <B>ApplyProperties</B> before the operating system closes the dialog box. 

<P>The <B>ApplyProperties</B> method can be implemented to retrieve information that the user enters and to set the information to the notify object's data members. 
</LI>

	<LI>The PSN_RESET event, which indicates that the operating system is about to destroy a property page. A user might click Cancel on the property page to initiate this action. If the user clicks Cancel, the network configuration subsystem calls the <A HREF="ntfrf_1qpe.htm"><B>INetCfgComponentPropertyUi::CancelProperties</B></A> method to cause all changes to be disregarded. The network configuration subsystem calls <B>CancelProperties</B> before the dialog box is closed. </LI>

	<LI>The PSN_KILLACTIVE event, which indicates that a property page is about to become inactive. This event occurs when a user activates another page or clicks OK. </LI>
</UL>
</LI>
</UL>

<P><I>Property-page callback</I> functions can also be implemented for each property page that <B>MergePropPages</B> creates. A property-page callback function performs initialization and cleanup operations for the page. To associate a property page with a property-page callback function, <B>MergePropPages</B> should point the <B>pfnCallback</B> member of each <B>PROPSHEETPAGE</B> structure for each page to the property-page callback function for that page.</P>

<P>See the Platform SDK documentation for more information on: 

<UL>
	<LI>creating property pages and on structures, functions, and notifications for property pages </LI>

	<LI>dialog-box callback procedures, messages, and structures </LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Creating%20Property%20Pages%20for%20the%20Component"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
