<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_TAPI_ANSWER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_TAPI_ANSWER">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_tapi_answer_nr"></A>OID_TAPI_ANSWER</H1>

<P>The OID_TAPI_ANSWER OID requests the miniport driver to answer the specified call on offer. Optionally, it requests that the miniport driver send the specified user-to-user information to the calling party.</P>

<P>Support for this request is mandatory. </P>

<P>The OID_TAPI_ANSWER request uses an NDIS_TAPI_ANSWER structure, defined as follows:</P>

<PRE class=syntax>typedef struct _NDIS_TAPI_ANSWER { 
  IN ULONG  ulRequestID; 
  IN HDRV_CALL  hdCall; 
  IN ULONG  ulUserUserInfoSize; 
  IN UCHAR  UserUserInfo[1]; 
} NDIS_TAPI_ANSWER, *PNDIS_TAPI_ANSWER; </PRE>

<P>The members of this structure contain the following information:

<DL>
<DT><B>ulRequestID</B></DT>

<DD>Reserved.</DD>

<DT><B>hdCall</B></DT>

<DD>Specifies the miniport driver's handle to the call to be answered. The driver set this handle up when it called <A HREF="103ndisx_5nn6.htm"><B>NdisMIndicateStatus</B></A> with the LINE_EVENT_NEWCALL indication. </DD>

<DT><B>ulUserUserInfoSize</B></DT>

<DD>Specifies the size in bytes of the user-to-user information in <B>UserUserInfo</B>. If this member is zero, <B>UserUserInfo</B> should be ignored.</DD>

<DT><B>UserUserInfo</B></DT>

<DD>Specifies a string containing user-to-user information to be sent to the remote party as part of the call accept. User-to-user information is sent only if supported by the underlying network (see <A HREF="29tpioid_64c2.htm">OID_TAPI_GET_DEV_CAPS</A>).
</DD>
</DL>

<P>The <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A> function can return one of the following:</P>

<P class=indent1>NDIS_STATUS_SUCCESS<BR>
NDIS_STATUS_PENDING<BR>
NDIS_STATUS_TAPI_INVALCALLHANDLE<BR>
NDIS_STATUS_TAPI_INVALCALLSTATE<BR>
NDIS_STATUS_TAPI_RESOURCEUNAVAIL<BR>
NDIS_STATUS_TAPI_USERUSERINFOTOOBIG<BR>
NDIS_STATUS_FAILURE</P>

<P>Upon successful completion of the OID_TAPI_ANSWER request, the miniport driver must be prepared to respond to the <A HREF="29tpioid_5rsi.htm">OID_TAPI_GET_ID</A> request. </P>

<P>The initiating application must wait for the LINECALLSTATE_CONNECTED indication before actually writing data.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_TAPI_ANSWER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
