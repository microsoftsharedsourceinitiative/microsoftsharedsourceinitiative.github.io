<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMArcIndicateReceive</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMArcIndicateReceive">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismarcindicatereceive_nr"></A>NdisMArcIndicateReceive</H1>

<P><B>NdisMArcIndicateReceive</B> notifies NDIS that an ARCNET packet (or some initial lookahead portion of the packet) has arrived so NDIS can forward the received packet to bound protocols. </P>

<PRE class=syntax><B>VOID 
  NdisMArcIndicateReceive(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN PUCHAR</B>  <I>HeaderBuffer</I><B>,</B>
    <B>IN PUCHAR</B>  <I>DataBuffer</I><B>,</B><I>
    </I><B>IN UINT</B>  <I>Length
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle originally input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A><I>.</I></DD>

<DT><I>HeaderBuffer</I></DT>

<DD>Specifies the base virtual address of the packet header. The header buffer includes all bytes preceding the protocol ID. </DD>

<DT><I>DataBuffer</I></DT>

<DD>Specifies the virtual base virtual address of a buffer containing <I>Length</I> bytes of received packet data. </DD>

<DT><I>Length</I></DT>

<DD>Specifies the number of bytes in the buffer at <I>DataBuffer</I>. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A serialized miniport driver calls <B>NdisMArcIndicateReceive</B> if it designates its NIC as of type <B>NdisMediumArcnet878_3</B> or <B>NdisMediumArcnetRaw</B> in response to the OID_GEN_MEDIA_IN_USE query, unless the driver supports multipacket receives. Any miniport driver that supports multipacket receives calls <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> with a packet array, rather than calling any of the medium-type-specific <B>NdisM..IndicateReceive</B> functions. </P>

<P>When a miniport driver calls <B>NdisMArcIndicateReceive</B>, NDIS passes a pointer to the header of the packet and a pointer to some or all of the data in the packet to the <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A> function(s) of bound protocol driver(s). Each protocol that receives such an indication can do the following:

<OL>
	<LI>Inspect the header and data in the packet to decide whether the indication is of interest to the protocol’s client(s).</LI>

	<LI>If it is, copy as much of the header or data as is visible into protocol-allocated memory, using <A HREF="103ndisx_87le.htm"><B>NdisMoveMemory</B></A>.</LI>

	<LI>Get the remaining data, if any, for the indication by allocating a packet descriptor with sufficient chained buffer descriptors and calling <A HREF="103ndisx_6bci.htm"><B>NdisTransferData</B></A>. The call to <B>NdisTransferData</B> causes the NIC driver’s <A HREF="101mini_9a42.htm"><I>MiniportTransferData</I></A> function to copy the data into the protocol-supplied packet.</LI>
</OL>

<P>For any protocol driver that receives an indication through <B>NdisMArcIndicateReceive</B>, the <I>HeaderBuffer</I> and <I>DataBuffer</I> addresses are valid only during the current call to its <I>ProtocolReceive</I> function, and these buffers are read-only. A protocol driver cannot retain a pointer to the indicated packet with these associated buffers nor can it retain any pointers to these buffers for later use. Any data that a protocol driver needs from such a packet must be copied and saved during the receive indication.</P>

<P>The data in the header is the same as that received on the NIC. A miniport driver need not remove any headers or trailers from the data its NIC receives.</P>

<P>The transmitting driver adds padding to any packet that is too short for the requirements of the medium. The receiving miniport driver can include such padding in the data and length it subsequently indicates. Each bound protocol is responsible for detecting any such padding and ignoring it.</P>

<P>Note that only serialized miniport drivers should call <B>NdisMArcIndicateReceive</B>.</P>

<P>Callers of <B>NdisMArcIndicateReceive</B> run at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="101mini_9a42.htm"><I>MiniportTransferData</I></A>, <A HREF="103ndisx_0z1u.htm"><B>NdisMArcIndicateReceiveComplete</B></A>, <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A>, <A HREF="103ndisx_87le.htm"><B>NdisMoveMemory</B></A>, <A HREF="103ndisx_6bci.htm"><B>NdisTransferData</B></A>, <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMArcIndicateReceive"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
