<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMDeregisterIoPortRange</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMDeregisterIoPortRange">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismderegisterioportrange_nr"></A>NdisMDeregisterIoPortRange</H1>

<P><B>NdisMDeregisterIoPortRange</B> releases a mapping that was set up with <A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A> during driver initialization.</P>

<PRE class=syntax><B>VOID 
  NdisMDeregisterIoPortRange(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN UINT</B>  <I>InitialPort</I><B>,</B><I>
    </I><B>IN UINT</B>  <I>NumberOfPorts</I><B>,</B>
    <B>IN PVOID</B>  <I>PortOffset
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>InitialPort</I></DT>

<DD>Specifies the bus-relative address of the first port in the range of ports.</DD>

<DT><I>NumberOfPorts</I></DT>

<DD>Specifies the number of ports in the range.</DD>

<DT><I>PortOffset</I></DT>

<DD>Specifies the mapped base port address returned by <B>NdisMRegisterIoPortRange</B>.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>The miniport driver must pass the same <I>InitialPort</I> and <I>NumberOfPorts</I> to <B>NdisMDeregisterIoPortRange</B> that were passed when <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> called <A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A> to get the mapped <I>PortOffset</I> value. That is, a miniport driver cannot call <B>NdisMDeregisterIoPortRange</B> to release a subrange of a mapped port range. </P>

<P><B>NdisMDeregisterIoPortRange</B> can be called from the <I>MiniportInitialize</I> or <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A> functions only if <I>MiniportInitialize</I> previously made a successful call to <B>NdisMRegisterIoPortRange</B>.</P>

<P><B>NdisMDeregisterIoPortRange</B> also releases the driver’s claim on the I/O port range in the registry. </P>

<P>After it calls <B>NdisMRegisterIoPortRange</B>, the miniport driver can no longer access the NIC’s port range with calls to the <B>NdisRaw..Port</B><I>Xxx</I> functions.</P>

<P>Callers of <B>NdisMDeregisterIoPortRange</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMDeregisterIoPortRange"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
