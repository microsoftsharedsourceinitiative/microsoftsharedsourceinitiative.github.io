<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_TAPI_PROVIDER_INITIALIZE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_TAPI_PROVIDER_INITIALIZE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_tapi_provider_initialize_nr"></A>OID_TAPI_PROVIDER_INITIALIZE</H1>

<P>The OID_TAPI_PROVIDER_INITIALIZE OID requests that the miniport driver initialize itself as a TAPI provider. The driver should set up whatever internal state it uses to track incoming requests from TAPI.</P>

<P>Support for this request is mandatory. </P>

<P>This request uses an NDIS_TAPI_PROVIDER_INITITIALIZE structure, defined as follows: </P>

<PRE class=syntax>typedef struct _NDIS_TAPI_PROVIDER_INITIALIZE { 
  IN ULONG  ulRequestID; 
  IN ULONG  ulDeviceIDBase; 
  OUT ULONG  ulNumLineDevs; 
  OUT ULONG  ulProviderID; 
} NDIS_TAPI_PROVIDER_INITIALIZE, *PNDIS_TAPI_PROVIDER_INITIALIZE; </PRE>

<P>The members of this structure contain the following information:

<DL>
<DT><B>ulRequestID</B></DT>

<DD>Reserved.</DD>

<DT><B>ulDeviceIDBase</B></DT>

<DD>Specifies the lowest device ID for the line devices supported by the miniport driver. Subsequent to this request, the driver uses this value as the zero-based line device identifier value. That is, if <B>ulNumLineDevs</B> is greater than one, the <B>ulDeviceID</B> values subsequently passed in requests such as <A HREF="29tpioid_9jhu.htm">OID_TAPI_OPEN</A>, contains this value for the first line, this value plus one for the second line, and so forth. </DD>

<DT><B>ulNumLineDevs</B></DT>

<DD>Specifies the number of line devices supported by the miniport driver to complete this request successfully. </DD>

<DT><B>ulProviderID</B></DT>

<DD>Specifies an ID for the WAN NIC driver if this request is completed successfully. This value must be unique within the set of WAN drivers that support TAPI; the <I>NdisMiniportContext</I> handle passed in to the <I>MiniportInitialize</I> function can be used to provide a guaranteed unique value.
</DD>
</DL>

<P>The <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> function can return one of the following:</P>

<P class=indent1>NDIS_STATUS_SUCCESS<BR>
NDIS_STATUS_PENDING<BR>
NDIS_STATUS_TAPI_RESOURCEUNAVAIL<BR>
NDIS_STATUS_FAILURE</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_TAPI_PROVIDER_INITIALIZE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
