<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisGetCurrentProcessorCounts</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisGetCurrentProcessorCounts">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisgetcurrentprocessorcounts_nr"></A>NdisGetCurrentProcessorCounts</H1>

<P><B>NdisGetCurrentProcessorCounts</B> returns counts for the current processor that a driver can use to determine CPU utilization for a particular time interval.</P>

<PRE class=syntax><B>VOID 
  NdisGetCurrentProcessorCounts(</B>
    <B>OUT PULONG</B>  <I>pIdleCount</I><B>,</B><I>
    </I><B>OUT PULONG</B>  <I>pKernelAndUser</I><B>,</B><I>
    </I><B>OUT PULONG</B>  <I>pIndex</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pIdleCount</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the cumulative idle time for the processor since the system was booted.</DD>

<DT><I>pKernelAndUser</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the cumulative processing time (kernel-mode time plus user-mode time) for the processor since the system was booted.</DD>

<DT><I>pIndex</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns a zero-based index that identifies the processor within the machine.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisGetCurrentProcessorCounts</B> returns idle and CPU-usage counts that the caller can use to determine CPU utilization for the current processor. The CPU utilization value indicates how loaded the CPU was since the immediately preceding call to this function. If the CPU was heavily loaded, such a driver can change how it handles certain operations to improve driver performance.</P>

<P>A driver might call <B>NdisGetCurrentProcessorCounts</B> periodically within a timer function. The driver can use the following calculation to determine the CPU utilization for a multiple of the timer interval:</P>

<PRE>CpuUsage = 100-100*(Idle - Idle[n])/(KernelAndUser - KernelAndUser[n]);</PRE>

<P>where:

<UL>
	<LI>CpuUsage is CPU utilization as a percentage of the total interval time</LI>

	<LI>Idle is the <I>IdleCount</I> value returned by the most recent call to <B>NdisGetCurrentProcessorCounts</B></LI>

	<LI>Idle[n] is an <I>IdleCount</I> value returned by a previous call, stored as the nth element in an array</LI>

	<LI>KernelandUser is the <I>KernelAndUser</I> value returned by the most recent call to <B>NdisGetCurrentProcessorCounts</B></LI>

	<LI>KernelandUser[n] is the KernelandUser value returned by a previous call, stored as the nth element in an array</LI>
</UL>

<P>For example, as the percentage of CPU usage trends higher, a miniport driver can disable interrupts on the NIC and switch to polling the state of its NIC. This strategy yields higher performance during periods of high network traffic by eliminating interrupt-processing overhead while the NIC is generating many interrupts. Instead, such a NIC driver's polling <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A> function makes indications and completes sends until network traffic declines again. When its periodic calls to <B>NdisGetCurrentProcessorCounts</B> indicate that CPU usage is trending lower again, such a driver would reenable interrupts on its NIC and cancel its polling MiniportTimer function.</P>

<P>Callers of <B>NdisGetCurrentProcessorCounts</B> must be running at IRQL &lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="101mini_0jg2.htm"><I>MiniportDisableInterrupt</I></A>,<A HREF="101mini_7s36.htm"> <I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_38c2.htm"><I>MiniportISR</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="103ndisx_9g8i.htm"><B>NdisGetCurrentProcessorCpuUsage</B></A>, <A HREF="103ndisx_6pgy.htm"><B>NdisMCancelTimer</B></A>, <A HREF="103ndisx_4lte.htm"><B>NdisMSetPeriodicTimer</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisGetCurrentProcessorCounts"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
