<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisReleaseReadWriteLock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisReleaseReadWriteLock">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisreleasereadwritelock_nr"></A>NdisReleaseReadWriteLock</H1>

<P><B>NdisReleaseReadWriteLock</B> releases a lock that was acquired in a preceding call to <A HREF="103ndisx_9r3m.htm"><B>NdisAcquireReadWriteLock</B></A>. </P>

<PRE class=syntax><B>VOID
  NdisReleaseReadWriteLock(</B>
    <B>IN PNDIS_RW_LOCK</B>  <I>Lock</I><B>,</B>
    <B>IN PLOCK_STATE</B>  <I>LockState</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Lock</I></DT>

<DD>Pointer to the acquired lock to be released.</DD>

<DT><I>LockState</I></DT>

<DD>Pointer to an opaque variable that tracks the state of the lock. This variable exists in the interval between the time the caller acquires and releases the lock. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A driver must initialize a lock before calling any other <B>Ndis..ReadWriteLock</B> function used to gain or release read or write access to the resources protected by that lock. The <A HREF="103ndisx_2tiq.htm"><B>NdisInitializeReadWriteLock</B></A> function is used to initialize a lock.</P>

<P>A driver must call <A HREF="103ndisx_9r3m.htm"><B>NdisAcquireReadWriteLock</B></A> to acquire a lock before the driver can call <B>NdisReleaseReadWriteLock</B>. Each call to <B>NdisAcquireReadWriteLock</B> requires a reciprocal call to <B>NdisReleaseReadWriteLock</B>. </P>

<P><B>NdisReleaseReadWriteLock</B> restores the original IRQL used by its caller before the call to <B>NdisAcquireReadWriteLock</B> was made.</P>

<P>Callers of <B>NdisReleaseReadWriteLock</B> are running at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_9r3m.htm"><B>NdisAcquireReadWriteLock</B></A>, <A HREF="103ndisx_2tiq.htm"><B>NdisInitializeReadWriteLock</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisReleaseReadWriteLock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
