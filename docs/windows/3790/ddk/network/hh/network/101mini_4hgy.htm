<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS Driver Upper-Edge Functions</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS Driver Upper-Edge Functions">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_standard_driver_routine_requirements_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_driver_upper_edge_functions_nr"></A>NDIS Driver Upper-Edge Functions</H1>

<P>This section describes, in alphabetic order, the system-defined functions implemented in NIC drivers and in intermediate drivers that export a set of NDIS upper-edge functions. </P>

<P>Two types of NDIS drivers have some or all of the functions described here:

<OL>
	<LI>NDIS miniport drivers, whether for LAN or WAN NICs, export the <A HREF="101mini_0quq.htm"><B>DriverEntry</B></A> and <I>MiniportXxx</I> functions described here.  
<P>NIC drivers for WAN media export the same functions as NIC drivers for LAN media with one exception: a <A HREF="101mini_7oj6.htm"><I>MiniportWanSend</I></A> function replaces the <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> or <A HREF="101mini_7svm.htm"><I>MiniportSend</I></A> function of LAN miniports. Each of these <I>MiniportXxx</I> functions is described later. 
</LI>

	<LI>Intermediate drivers export a subset of the <I>MiniportXxx</I> functions described here and a <B>DriverEntry</B> function that fulfills the initialization-time requirements of the NDIS library. 
<P>Intermediate drivers also can export a set of the <A HREF="104tdlow_6gvm.htm">NDIS Driver Lower-Edge Functions</A>, described later, or they can use another interface to communicate with underlying drivers of devices other than a NIC.  

<P>NDIS intermediate drivers export both <I>ProtocolXxx</I> and <I>MiniportXxx</I> functions, but they need not have certain functions, such as <A HREF="101mini_38c2.htm"><I>MiniportISR</I></A> or <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, that any NIC driver must have to communicate with and control its NIC. 
</LI>
</OL>

<H4>Driver Function Names</H4>

<P>All NDIS driver functions with the prefix "Miniport" have been given metanames describing their respective basic functionality in the alphabetical references that follow. </P>

<P>Except for the <B>DriverEntry</B> function, NDIS driver functions can have any name the driver writer chooses. For easy debugging, most system-supplied miniports simply substitute a driver-specific prefix for the "Miniport" prefix used in this documentation.</P>

<P>The initial entry point of any kernel-mode driver has the explicit name <B>DriverEntry</B> in order to be loaded. For more information about the general requirements for and functionality of <B>DriverEntry</B> routines, see <A HREF="JavaScript:hhobj_1.Click()">Standard Driver Routine Requirements</A>. </P>

<H4>Calling Ndis<I>Xxx</I> Functions at Appropriate IRQLs</H4>

<P>NDIS drivers’ functions run, by default, at one of the following IRQLs, shown in order of increasing priority:<BR>
PASSIVE_LEVEL &lt; DISPATCH_LEVEL &lt; DIRQL. </P>

<P>NDIS intermediate drivers’ functions run, by default, at either of the preceding lower priority IRQLs. Only drivers of NICs that generate interrupts have functions that run at device IRQL. </P>

<P>Any driver function running at IRQL = PASSIVE_LEVEL can be preempted by a thread of execution running at a higher priority IRQL. Any driver function running at PASSIVE_LEVEL or DISPATCH_LEVEL can be preempted by an interrupt, that is, by an interrupt service routine or by a synchronization routine that also runs at DIRQL. </P>

<P>Each of the following <B>DriverEntry</B> and <I>MiniportXxx</I> descriptions specifies the default IRQL at which that function runs. The default IRQLs of certain <I>MiniportXxx</I> effectively restrict the set of <B>Ndis</B><I>Xxx</I> functions that these <I>MiniportXxx</I> can call. For example, it is a fatal error for a MiniportISR function, which runs at DIRQL, to call any <B>Ndis</B><I>Xxx</I> function that requires calls from IRQL &lt;= DISPATCH_LEVEL. </P>

<P>For specific information about the range of valid IRQLs for calls to each <B>Ndis</B><I>Xxx</I> function, see <A HREF="103ndisx_9omq.htm">NDIS Library Function References</A>. </P>

<H4>Initialization-Only and Pageable Driver Code</H4>

<P>NDIS miniport drivers and intermediate drivers mark their <B>DriverEntry</B> functions as initialization-only code, using the NDIS_INIT_FUNCTION macro. This causes <B>DriverEntry</B> to be discarded after it returns control. </P>

<P>Other driver functions can be marked as pageable code, using the <A HREF="103ndisx_5svm.htm">NDIS_PAGEABLE_FUNCTION</A> macro. However, a driver function can be pageable code if and only if it <I>never</I> runs at IRQL &gt;= DISPATCH_LEVEL. This restriction implies the following:

<UL>
	<LI>A function marked pageable cannot acquire any spin lock and should not call other functions that do.</LI>

	<LI>A function marked pageable cannot be called by any function that is holding a spin lock when the call occurs. </LI>

	<LI>A function marked pageable must run <I>always</I> at IRQL &lt; DISPATCH_LEVEL. </LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS%20Driver%20Upper-Edge%20Functions"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
