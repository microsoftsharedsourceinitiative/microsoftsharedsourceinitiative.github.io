<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Querying Task-Offload Capabilities</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Querying Task-Offload Capabilities">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_querying_task_offload_capabilities_ng"></A>Querying Task-Offload Capabilities</H1>

<P>The TCP/IP transport determines a NIC's task-offload capabilities by querying <A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>. In this query, the TCP/IP transport supplies, in the <I>InformationBuffer</I>, an <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A>, which is defined as:</P>

<PRE>typedef struct _NDIS_TASK_OFFLOAD_HEADER
{
    ULONG  Version;
    ULONG  Size;
    ULONG  Reserved;
    UCHAR  OffsetFirstTask;
    NDIS_ENCAPSULATION_FORMAT  EncapsulationFormat;
} NDIS_TASK_OFFLOAD_HEADER, *PNDIS_TASK_OFFLOAD_HEADER;</PRE>

<P>The <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A> structure specifies the following:

<UL>
	<LI>The task-offload version supported by the TCP/IP transport</LI>

	<LI>The size of the NDIS_TASK_OFFLOAD_HEADER structure (which is used to check the version of the structure).</LI>

	<LI>The offset in bytes from the beginning of the <I>InformationBuffer</I> to the first <A HREF="105nstru_3f5e.htm">NDIS_TASK_OFFLOAD</A> structure. </LI>

	<LI>The encapsulation format for send and receive packets that were passed between the TCP/IP transport and the miniport driver.</LI>
</UL>

<P>By using the information supplied by the NDIS_TASK_OFFLOAD_HEADER, the miniport driver or its NIC can locate the beginning of the first IP header in a send or receive packet. This is a prerequisite for performing offload tasks.</P>

<P>In response to a query of OID_TCP_TASK_OFFLOAD, a miniport driver returns, in the <I>InformationBuffer</I>, the NDIS_TASK_OFFLOAD_HEADER followed by one or more NDIS_TASK_OFFLOAD structures. The NDIS_TASK_OFFLOAD structure is defined as:</P>

<PRE>typedef struct _NDIS_TASK_OFFLOAD
{
    ULONG      Version;
    ULONG      Size;
    NDIS_TASK  Task;
    ULONG      OffsetNextTask;
    ULONG      TaskBufferLength;
    UCHAR      TaskBuffer[1];
} NDIS_TASK_OFFLOAD, *PNDIS_TASK_OFFLOAD;
</PRE>

<P>The NDIS_TASK_OFFLOAD structure specifies the following:

<UL>
	<LI>The version of the specified offload task.</LI>

	<LI>The size of the NDIS_TASK_OFFLOAD structure (which is used to check the version of the structure).</LI>

	<LI>The offload task.</LI>

	<LI>The offset from the beginning of the <I>InformationBuffer</I> to the next NDIS_TASK_OFFLOAD structure.</LI>

	<LI>The length of the <B>TaskBuffer</B>.</LI>

	<LI>A variable-length array that contains task-specific information.</LI>
</UL>

<P>Each NDIS_TASK_OFFLOAD structure specifies a task-offload capability supported by the miniport driver's NIC. If the miniport driver's NIC supports multiple versions of a particular task-offload capability, it returns one NDIS_TASK_OFFLOAD structure for each version.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Querying%20Task-Offload%20Capabilities"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
