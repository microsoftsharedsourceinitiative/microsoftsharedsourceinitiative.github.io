<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMMapIoSpace</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMMapIoSpace">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismmapiospace_nr"></A>NdisMMapIoSpace</H1>

<P><B>NdisMMapIoSpace</B> maps a given bus-relative “physical” range of device RAM or registers onto a system-space virtual range.</P>

<PRE class=syntax><B>NDIS_STATUS 
  NdisMMapIoSpace(
    OUT PVOID</B>  <B>*</B><I>VirtualAddress</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B><I>
    </I><B>IN NDIS_PHYSICAL_ADDRESS</B>  <I>PhysicalAddress</I><B>,</B>
    <B>IN UINT</B>  <I>Length
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Virtual Address</I></DT>

<DD>Pointer to a caller-supplied variable that is set to the converted virtual address if the call is successful.</DD>

<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>PhysicalAddress</I></DT>

<DD>Specifies the bus-relative base physical address of the device memory range to be mapped.</DD>

<DT><I>Length</I></DT>

<DD>Specifies the number of bytes to be mapped.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisMMapIoSpace</B> can return any of the following status values:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The device memory range was mapped successfully so the value at <I>VirtualAddress</I> is valid and the mapped range has been claimed in the registry for the NIC. </DD>

<DT>NDIS_STATUS_RESOURCE_CONFLICT</DT>

<DD>An attempt to claim the device memory range in the registry has failed, possibly because another driver has already claimed the range for its device. <B>NdisMMapIoSpace </B>logs an error if this occurs.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>The memory could not be mapped or sufficient virtual memory could not be allocated.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>Either the bus type or bus number is out of range or the given <I>PhysicalAddress</I> and <I>Length</I> were invalid (possibly not within the I/O space of the current platform). 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>This function is called by drivers of NICs that have on-board memory or a bank of device registers appearing in the I/O space of the host. For example, the driver of a NIC that uses PIO calls <B>NdisMMapIoSpace</B>. </P>

<P>A successful call to <B>NdisMMapIoSpace</B> claims hardware resources in the registry for the driver’s NIC. Consequently, only <I>MiniportInitialize</I> functions call <B>NdisMMapIoSpace</B>.</P>

<P><B>NdisMMapIoSpace</B> sets the variable at <I>VirtualAddress</I> to NULL if it does not return NDIS_STATUS_SUCCESS.</P>

<P>MiniportInitialize either gets the <I>PhysicalAddress</I> value from the driver’s <B>Parameters</B> registry key or by calling a bus-type-specific <B>Ndis</B><I>Xxx</I> configuration function. The given physical address range must fall within the I/O space of the current platform. It is a programming error to call <B>NdisMMapIoSpace</B> with a host physical memory address.</P>

<P>A miniport driver must call the reciprocal <B>NdisMUnmapIoSpace</B> to release its claim on system resources if <I>MiniportInitialize</I> subsequently fails to initialize the NIC, if its NIC is removed from the machine, and/or when the driver is unloading. </P>

<P>Callers of <B>NdisMMapIoSpace</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_5mcy.htm"><B>NdisMUnmapIoSpace</B></A>, <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A>, <A HREF="103ndisx_019v.htm"><B>NdisReadEisaSlotInformation</B></A>, <A HREF="103ndisx_3egi.htm"><B>NdisReadPciSlotInformation</B></A>, <A HREF="103ndisx_1gc2.htm"><B>NdisReadRegisterUchar</B></A>, <A HREF="103ndisx_4d83.htm"><B>NdisReadRegisterUlong</B></A>, <A HREF="103ndisx_8vzm.htm"><B>NdisReadRegisterUshort</B></A>, <A HREF="103ndisx_1m2a.htm"><B>NdisWriteRegisterUchar</B></A>, <A HREF="103ndisx_4iya.htm"><B>NdisWriteRegisterUlong</B></A>, <A HREF="103ndisx_92lu.htm"><B>NdisWriteRegisterUshort</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMMapIoSpace"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
