<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>H</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="HAL">
<META NAME="MS-HKWD" CONTENT="handle">
<META NAME="MS-HKWD" CONTENT="hardware abstraction layer">
<META NAME="MS-HKWD" CONTENT="hardware branch">
<META NAME="MS-HKWD" CONTENT="hardware exception">
<META NAME="MS-HKWD" CONTENT="hardware ID">
<META NAME="MS-HKWD" CONTENT="hardware key">
<META NAME="MS-HKWD" CONTENT="hardware priority">
<META NAME="MS-HKWD" CONTENT="hardware tree">
<META NAME="MS-HKWD" CONTENT="HBA">
<META NAME="MS-HKWD" CONTENT="HCD">
<META NAME="MS-HKWD" CONTENT="HCL">
<META NAME="MS-HKWD" CONTENT="HCT">
<META NAME="MS-HKWD" CONTENT="HDEV">
<META NAME="MS-HKWD" CONTENT="heap">
<META NAME="MS-HKWD" CONTENT="heap manager">
<META NAME="MS-HKWD" CONTENT="Heatherington escape sequence">
<META NAME="MS-HKWD" CONTENT="hibernate state">
<META NAME="MS-HKWD" CONTENT="hibernation file">
<META NAME="MS-HKWD" CONTENT="HID">
<META NAME="MS-HKWD" CONTENT="hook">
<META NAME="MS-HKWD" CONTENT="host CPU">
<META NAME="MS-HKWD" CONTENT="host-based IDCT">
<META NAME="MS-HKWD" CONTENT="hue">
<META NAME="MS-HKWD" CONTENT="hyperspace">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_object_handles_kg">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_identification_strings_dg">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driver_information_in_the_registry_dg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Glossary:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_h_gg-gly"></A>H</H1>



<DL>
<DT><A NAME="ddk_hal_kg_gly"></A><B>HAL</B></DT>

<DD><I>See</I> hardware abstraction layer.</DD>

<DT><A NAME="ddk_handle_kg_gly"></A><B>handle</B></DT>

<DD>An opaque type that represents a reference to an object.  For more information see <A HREF="JavaScript:hhobj_1.Click()">Object Handles</A>.</DD>

<DT><A NAME="ddk_hardware_abstraction_layer_gg_gly"></A><B>hardware abstraction layer (HAL)</B></DT>

<DD>An NT-based operating system component that provides platform-specific support for the NT kernel, the I/O Manager, kernel-mode debuggers, and the lowest-level device drivers. The HAL exports routines that abstract platform-specific hardware details about caches, I/O buses, interrupts, and so forth, and provides an interface between the platform’s hardware and the system software. For example, the HAL implements a routine to map each device driver's bus-relative device interrupt vector to a system-assigned vector with a corresponding platform-specific hardware priority (DIRQL), as well as several routines that provide DMA-transfer support.</DD>

<DT><A NAME="_hardware_branch_glossary"></A><B>hardware branch</B></DT>

<DD>The hardware archive root key in the registry that is a superset of the memory-resident hardware tree. Although the hardware tree contains information only about those devices currently detected and running in the system, the registry contains a complete list of all hardware ever installed on the particular computer. The hardware root key is <B>\\Hkey_Local_Machine\Hardware</B>. </DD>

<DT><A NAME="ddk_hardware_exception_kg_gly"></A><B>hardware exception</B></DT>

<DD><I>See</I> <A HREF="glossary_6vsp.htm#ddk_structured_exception_handling_kg_gly">structured exception handling</A>.</DD>

<DT><A NAME="ddk_hardware_id_dg_gly"></A><B>hardware ID</B></DT>

<DD>A vendor-defined device identification string that Setup uses to match a device to an INF file.

<P>For more information see the topic, <A HREF="JavaScript:hhobj_2.Click()">Device Identification Strings</A>.


<P><I>See also</I> <A HREF="glossary_4321.htm#ddk_device_id_dg_gly">Device ID</A>, <A HREF="glossary_5svt.htm#ddk_compatible_id_dg_gly">Compatible ID</A>, <A HREF="glossary_9g1l.htm#ddk_instance_id_dg_gly">Instance ID</A>, <I>and</I> <A HREF="glossary_4321.htm#ddk_device_instance_id_dg_gly">Device Instance ID</A>.
</DD>

<DT><A NAME="ddk_hardware_key_kg_gly"></A><B>hardware key</B></DT>

<DD>A system-generated, device-specific, registry subkey that contains information such as the device description, hardware IDs, compatible IDs, and resource requirements. Also called a <I>device key</I>. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Driver Information in the Registry</A>.

<P><I>See also</I> <A HREF="glossary_6vsp.htm#ddk_software_key_kg_gly">software key</A>.
</DD>

<DT><A NAME="ddk_hardware_priority_kg_gly"></A><B>hardware priority</B></DT>

<DD><I>See</I> <A HREF="glossary_50mx.htm#ddk_idt_kg_gly">IDT</A> <I>and</I> <A HREF="glossary_9g1l.htm#ddk_irql_kg_gly">IRQL</A>.</DD>

<DT><A NAME="_hardware_tree_glossary"></A><B>hardware tree</B></DT>

<DD>A record in RAM of the current system configuration based on the configuration information for all devices in the hardware branch of the registry. The hardware tree is created each time the system is started or whenever a dynamic change occurs to the system configuration.</DD>

<DT><A NAME="ddk_hba_kg_gly"></A><B>HBA</B></DT>

<DD>Host bus adapter. A hardware device that "connects" the operating system and a SCSI bus. A SCSI miniport driver manages the lower layers of the SCSI-II protocol on the HBA. 

<P><I>See</I> <A HREF="glossary_5ri1.htm#ddk_miniport_driver_kg_gly">miniport driver</A>. <I>See also</I> <A HREF="glossary_6bnd.htm#ddk_port_driver_kg_gly">port driver</A>, <A HREF="glossary_5svt.htm#ddk_class_driver_kg_gly">class driver</A>, <A HREF="glossary_6vsp.htm#ddk_sfd_kg_gly">SFD</A>, <I>and</I> <A HREF="glossary_6vsp.htm#ddk_scsi_kg_gly">SCSI</A>.
</DD>

<DT><A NAME="ddk_hcd_kg_gly"></A><B>HCD</B></DT>

<DD>Host controller driver. For USB, HCD defines a driver stack that controls the USB chipset to which a device is attached.</DD>

<DT><A NAME="_hcl_glossary"></A><B>HCL</B></DT>

<DD>Hardware compatibility list. 

<P><I>See </I><A HREF="glossary_7mnt.htm#ddk_whql_gg_gly">WHQL</A>.
</DD>

<DT><A NAME="_hct_glossary"></A><B>HCT</B></DT>

<DD>Hardware compatibility tests. A suite of tests from WHQL to verify hardware and device driver operations under a specific operating environment. These tests exercise the combination of a device, a software driver, and an operating system under controlled conditions to verify that all components operate properly. </DD>

<DT><A NAME="ddk_hdev_gg_gly"></A><B>HDEV</B></DT>

<DD>A handle to a device object. Every NT-based operating system display driver needs a handle to its device object; this handle is of type <I>HDEV</I>. An object of this type is created by GDI at driver initialization and is stored by the driver for use when calling GDI engine services.

<P>The term <I>hdev</I>, in lower-case, is typically used as the name of a function parameter or structure member of type HDEV.
</DD>

<DT><A NAME="ddk_heap_kg_gly"></A><B>heap</B></DT>

<DD><I>See</I> <A HREF="glossary_6bnd.htm#ddk_pool_memory_kg_gly">pool memory</A>.</DD>

<DT><A NAME="ddk_heap_manager_gg_gly"></A><B>heap manager</B></DT>

<DD>The portion of the display driver responsible for managing the frame buffer memory.</DD>

<DT><A NAME="ddk_heatherington_escape_sequence_gg"></A><B>Heatherington escape sequence</B></DT>

<DD>A reliable technique used in modems to switch between data mode and command mode.</DD>

<DT><A NAME="ddk_hibernate_state_dg_gly"></A><B>hibernate state</B></DT>

<DD>System power state S4, in which power is off exactly as for the shutdown state (S5), but the system can resume quickly from a file written to disk before power down.</DD>

<DT><A NAME="ddk_hibernation_file_dg_gly"></A><B>hibernation file</B></DT>

<DD>A system-image file that is written to disk immediately before a system transition to system state S4. On reboot, the hibernate file is loaded so that the system can resume from its previous location.</DD>

<DT><A NAME="ddk_hid_dg_gly"></A><B>HID</B></DT>

<DD>Human Interface Device.</DD>

<DT><A NAME="ddk_hook_gg_gly"></A><B>hook</B></DT>

<DD>A callback function that handles I/O port and board memory accesses. Synonymous with <I>handler</I>.</DD>

<DT><A NAME="ddk_host_cpu_kg_gly"></A><B>host CPU</B></DT>

<DD>In DirectX® video acceleration, the programmable processor that controls the overall function of video decode (high-level operations).</DD>

<DT><A NAME="ddk_host_based_idct_kg_gly"></A><B>host-based IDCT</B></DT>

<DD>In DirectX® VA IDCT is performed on the host decoder with the decoder passing blocks of spatial-domain results to the accelerator for external picture reconstruction. 

<P><I>See also</I> <A HREF="glossary_50mx.htm#ddk_idct_kg_gly">IDCT</A>.
</DD>

<DT><A NAME="_hue_glossary"></A><B>hue</B></DT>

<DD>The color tint of an image. The color of the analog video signal is determined by three factors: hue, <A HREF="glossary_6vsp.htm#_saturation_glossary">saturation</A>, and <A HREF="glossary_2rnd.htm#_luminance_glossary">luminance</A>. </DD>

<DT><A NAME="ddk_hyperspace_kg_gly"></A><B>hyperspace</B></DT>

<DD>A block of virtual memory somewhere in kernel space, dedicated to the use of the Memory Manager. Every instance of a user-mode virtual address space has an associated hyperspace area where the Memory Manager maintains internal data (such as page table pages and WSLs) for the current process. 

<P><I>See also</I> <A HREF="glossary_5e2h.htm#ddk_kernel_space_kg_gly">kernel space</A> <I>and</I> <A HREF="glossary_1795.htm#ddk_user_space_kg_gly">user space</A>.
</DD>
</DL>


<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: H"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
