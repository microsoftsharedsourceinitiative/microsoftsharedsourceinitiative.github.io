<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>How to Provide Virtual Device Support</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="How to Provide Virtual Device Support">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Other&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_how_to_provide_virtual_device_support"></A>How to Provide Virtual Device Support</H1>

<P>On NT-based 32-bit systems, a 16-bit MS-DOS application runs in the context of the VDM. Likewise, any TSRs or 16-bit drivers also run in the VDM layer, just as they would on a normal MS-DOS machine. Attempts to perform privileged hardware access from the VDM layer must be intercepted and routed to the kernel-mode device driver where those operations can occur without compromising system integrity.</P>

<P>There are two strategies for intercepting an application’s attempts to access its hardware:

<OL>
	<LI>Modify your application (or its 16-bit device driver) to call the VDD you have written, instead of directly accessing the hardware.</LI>

	<LI>Instead of modifying your MS-DOS application, rely on the VDM to intercept disallowed hardware accesses and route them to your VDD.</LI>
</OL>

<P>These two strategies, and the support routines provided to support them, are discussed in the following sections.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: How%20to%20Provide%20Virtual%20Device%20Support"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
