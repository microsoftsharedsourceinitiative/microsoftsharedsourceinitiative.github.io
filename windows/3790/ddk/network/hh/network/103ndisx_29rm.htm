<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMUpdateSharedMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMUpdateSharedMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismupdatesharedmemory_nr"></A>NdisMUpdateSharedMemory</H1>

<P><B>NdisMUpdateSharedMemory</B> ensures that data, just transferred from a bus-master NIC, to be read from driver-allocated shared memory is current. </P>

<PRE class=syntax><B>VOID 
  NdisMUpdateSharedMemory(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN ULONG</B>  <I>Length</I><B>,</B>
    <B>IN PVOID</B>  <I>VirtualAddress</I><B>,</B>
    <B>IN NDIS_PHYSICAL_ADDRESS</B>  <I>PhysicalAddress
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle originally input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>Length</I></DT>

<DD>Specifies the number of bytes in the range.</DD>

<DT><I>VirtualAddress</I></DT>

<DD>Specifies the base virtual address within a range returned by <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A> or <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A>.</DD>

<DT><I>PhysicalAddress</I></DT>

<DD>Specifies the physical address mapped to <I>VirtualAddress</I>.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisMUpdateSharedMemory</B> guarantees that any data written by the NIC is present in host physical memory at the virtual address returned by <B>NdisMAllocateSharedMemory</B> or <B>NdisMAllocateSharedMemoryAsync</B> on certain platforms. On any other platform, a call to <B>NdisMUpdateSharedMemory</B> has no overhead. </P>

<P>Callers of <B>NdisMUpdateSharedMemory</B> run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_188i.htm"><B>NdisFlushBuffer</B></A>, <A HREF="103ndisx_44j6.htm"><B>NdisMAllocateMapRegisters</B></A>, <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A>, <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A>, <A HREF="103ndisx_9fjm.htm"><B>NdisMFreeSharedMemory</B></A>, <A HREF="103ndisx_3a42.htm"><B>NdisMStartBufferPhysicalMapping</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMUpdateSharedMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
