<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMFreeSharedMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMFreeSharedMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismfreesharedmemory_nr"></A>NdisMFreeSharedMemory</H1>

<P><B>NdisMFreeSharedMemory</B> frees memory that was previously allocated by <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A> or <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A> by the driver of a DMA NIC.</P>

<PRE class=syntax><B>VOID 
  NdisMFreeSharedMemory(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN ULONG</B>  <I>Length</I><B>,</B>
    <B>IN BOOLEAN</B>  <I>Cached</I><B>,</B>
    <B>IN PVOID</B>  <I>VirtualAddress</I><B>,</B>
    <B>IN NDIS_PHYSICAL_ADDRESS</B>  <I>PhysicalAddress
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle originally input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>Length</I></DT>

<DD>Specifies the number of bytes originally allocated.</DD>

<DT><I>Cached</I></DT>

<DD>Specifies TRUE if the original allocation was cacheable.</DD>

<DT><I>VirtualAddress</I></DT>

<DD>Specifies the base virtual address returned by <B>NdisMAllocateSharedMemory</B> or <B>NdisMAllocateSharedMemoryAsync</B>.</DD>

<DT><I>PhysicalAddress</I></DT>

<DD>Specifies the corresponding physical address returned by <B>NdisMAllocateSharedMemory</B> or <B>NdisMAllocateSharedMemoryAsync</B>.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>If it has already made a successful call to <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A> or <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A>, the NIC driver of a DMA device calls <B>NdisMFreeSharedMemory</B> if any of the following occurs:

<UL>
	<LI>Its <I>MiniportInitialize</I> function is unable to initialize the NIC, so this function must release all existing claims on hardware resources for that NIC before it returns control.</LI>

	<LI>The NIC for which the miniport driver allocated the memory is being removed.</LI>

	<LI>The driver is being unloaded, whether because the system is shutting down or because the user reconfigured the network components used in the machine.</LI>

	<LI>The driver allocated additional shared memory with <B>NdisMAllocateSharedMemoryAsync</B> when I/O demand on its NIC was high but network traffic has now subsided to an average level.</LI>
</UL>

<P>A miniport driver cannot call <B>NdisMFreeSharedMemory</B> to free a subrange within an allocated shared memory range. The parameters passed to <B>NdisMFreeSharedMemory</B> must match exactly those that were passed to <B>NdisMAllocateSharedMemory</B> or <B>NdisMAllocateSharedMemoryAsync</B>. </P>

<P><B>NdisMFreeSharedMemory</B> cannot be called from a <A HREF="101mini_7lo2.htm"><I>MiniportShutdown</I></A> function.</P>

<P>Before calling <A HREF="103ndisx_1l6a.htm"><B>NdisMFreeMapRegisters</B></A>, a miniport driver must free any shared memory that it has allocated.</P>

<P>Windows Server 2003 and Windows XP Service Pack 1 and later releases allow both bus-master DMA NICs and slave DMA NICs to call <B>NdisMFreeSharedMemory</B>. Prior releases allow only bus-master DMA NICs to call <B>NdisMFreeSharedMemory</B>.</P>

<P>Callers of <B>NdisMFreeSharedMemory</B> run at IRQL = DISPATCH_LEVEL, except when in the context of <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A> or <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> (a failed initialization code path), in which case callers of this function must run at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="101mini_225u.htm"><I>MiniportAllocateComplete</I></A>, <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_7lo2.htm"><I>MiniportShutdown</I></A>, <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A>, <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A>, <A HREF="103ndisx_1l6a.htm"><B>NdisMFreeMapRegisters</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMFreeSharedMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
