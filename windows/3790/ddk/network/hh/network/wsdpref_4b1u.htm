<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WSPDeregisterMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WSPDeregisterMemory">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wspderegistermemory_nr"></A>WSPDeregisterMemory</H1>

<P><B>WSPDeregisterMemory</B> releases a buffer that was registered by a previous call to the <B>WSPRegisterMemory</B> function. </P>

<PRE class=syntax><B>int
  WSPDeregisterMemory(</B>
<B>    IN SOCKET</B>  <I>s</I><B>,</B>
<B>    IN HANDLE</B>  <I>Handle</I><B>,</B>
<I>    </I><B>OUT</B> <B>LPINT</B>  <I>lpErrno</I>
<I>    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>s</I></DT>

<DD>Descriptor that identifies a connected socket.</DD>

<DT><I>Handle</I></DT>

<DD>Handle to the memory buffer that was previously registered.</DD>

<DT><I>lpErrno</I></DT>

<DD>Pointer to a variable that receives the error code.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns zero if successful; otherwise, returns SOCKET_ERROR and, at <I>lpErrno</I>, the following error code: 

<DL>
<DT>WSAEINVAL</DT>

<DD>The specified handle to the memory buffer does not represent a previously registered memory buffer, or the SAN service provider cannot release the memory, because the memory is currently being used in a data transfer operation. 
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>Ws2san.h</I>. Include <I>Ws2san.h</I>. Requires Windows Sockets version&nbsp;2.2.</P>

<H4>Comments</H4>

<P>The Windows Sockets switch calls the <B>WSPDeregisterMemory</B> function to release a memory buffer that it previously registered in a call to the <A HREF="wsdpref_62gi.htm"><B>WSPRegisterMemory</B></A> function. In the call to <B>WSPDeregisterMemory</B>, the switch passes the same socket descriptor that it supplied to the <B>WSPRegisterMemory</B> function. </P>

<P>A SAN service provider is not required to return a different handle to a memory buffer when the switch makes an additional call to the <B>WSPRegisterMemory</B> function to register that memory buffer for use by another socket. However, the SAN service provider should maintain an internal reference count of the number of registered instances of that memory buffer. Each time that it is called, the <B>WSPDeregisterMemory</B> function should decrement this internal reference count. Only the final call to the <B>WSPDeregisterMemory</B> function, which causes the function to decrement the internal reference count for the buffer to zero, releases all resources that the SAN service provider used to register the memory buffer.</P>

<H4>See Also</H4>

<P><A HREF="wsdpref_1v5e.htm"><B>WSPMemoryRegistrationCacheCallback</B></A>, <A HREF="wsdpref_62gi.htm"><B>WSPRegisterMemory</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WSPDeregisterMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
