<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_WAN_CO_SET_LINK_INFO</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_WAN_CO_SET_LINK_INFO">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_wan_co_set_link_info_nr"></A>OID_WAN_CO_SET_LINK_INFO</H1>

<P>The OID_WAN_CO_SET_LINK_INFO OID requests the miniport driver to set PPP framing information for a specific virtual connection (VC). A protocol uses a NDIS_WAN_CO_SET_LINK_INFO structure, defined as follows, to indicate this PPP framing information. </P>

<PRE class=syntax>typedef struct _NDIS_WAN_CO_SET_LINK_INFO {
  IN ULONG  MaxSendFrameSize;
  IN ULONG  MaxRecvFrameSize;
  IN ULONG  SendFramingBits;
  IN ULONG  RecvFramingBits;
  IN ULONG  SendCompressionBits;
  IN ULONG  RecvCompressionBits;
  IN ULONG  SendACCM;
  IN ULONG  RecvACCM;
} NDIS_WAN_CO_SET_LINK_INFO, *PNDIS_WAN_CO_SET_LINK_INFO;</PRE>

<P>The members of this structure contain the following information:

<DL>
<DT><B>MaxSendFrameSize</B></DT>

<DD>Specifies the largest buffer, in bytes, the protocol will send for this VC. This value must be less than or equal to that returned by the miniport driver for the <A HREF="28wanoid_4sfm.htm">OID_WAN_CO_GET_LINK_INFO</A> query. 

<P>The miniport driver's <I>MiniportCoSendPackets</I> function can reject any send packets submitted for this link that are larger than this value.
</DD>

<DT><B>MaxRecvFrameSize</B></DT>

<DD>Specifies the largest network packet that the protocol will receive subsequently. This value must be less than or equal to that returned by the miniport driver for the OID_WAN_CO_GET_LINK_INFO query. The miniport driver can drop any received packets for this VC that are larger.</DD>

<DT><B>SendFramingBits</B></DT>

<DD>Specifies send-framing bits indicating the type of framing that should be sent. If the miniport driver detects incompatibilities between <B>SendFramingBits </B>and <B>RecvFramingBits</B>, it returns NDIS_STATUS_INVALID_DATA.  

<P>The proper NLPID and framing format should be used based on the framing bits wherever applicable.
</DD>

<DT><B>RecvFramingBits</B></DT>

<DD>Specifies receive-framing bits indicating the type of framing that should be received.</DD>

<DT><B>SendCompressionBits</B></DT>

<DD>Reserved. </DD>

<DT><B>RecvCompressionBits</B></DT>

<DD>Reserved. </DD>

<DT><B>SendACCM</B></DT>

<DD>For asynchronous media types, logical bits 0-31 indicate the respective byte to be byte stuffed. That is, if bit 0 is set to one then ASCII character 0x00 should be byte stuffed, and so forth.</DD>

<DT><B>RecvACCM</B></DT>

<DD>As described for <B>SendACCM</B><I>.</I>
</DD>
</DL>

<P>Possible values for <B>SendFramingBits</B> and <B>RecvFramingBits</B> include any the underlying driver returned in response to the <A HREF="28wanoid_3pma.htm">OID_WAN_CO_GET_INFO</A> query. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_WAN_CO_SET_LINK_INFO"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
