<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProtocolClModifyCallQoSComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProtocolClModifyCallQoSComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocolclmodifycallqoscomplete_nr"></A>ProtocolClModifyCallQoSComplete</H1>

<P>The <I>ProtocolClModifyCallQoSComplete</I> function is used by connection-oriented NDIS clients that can modify the quality of service on a connection dynamically. Such clients must have <I>ProtocolClModifyCallQoSComplete</I> functions to complete the asynchronous operations that they initate with <A HREF="103ndisx_7jhu.htm"><B>NdisClModifyCallQoS</B></A>. Otherwise, such a protocol driver's registered <I>ProtocolClModifyCallQoSComplete</I> function can simply return control.</P>

<PRE class=syntax><B>VOID 
</B>  <B>ProtocolClModifyCallQoSComplete(
</B>    <B>IN NDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>ProtocolVcContext</I><B>,</B>
    <B>IN PCO_CALL_PARAMETERS</B>  <I>CallParameters
</I>    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Specifies the final status of the client’s asynchronous request to modify the call parameters for this VC as one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The QoS was modified as requested by the client.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>NDIS or the call manager could not modify the QoS because one of them could not allocate sufficient resources dynamically.</DD>

<DT>NDIS_STATUS_INVALID_DATA</DT>

<DD>The call parameters that the client supplied to <B>NdisClModifyCallQoS</B> were invalid. </DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>The call manager could not change the QoS because of a failure on the network or in another connection-oriented network component.</DD>

<DT>NDIS_STATUS_<I>XXX</I></DT>

<DD>The call manager failed to change the QoS, and NDIS propagated the CM-determined failure status to the client.</DD>
</DL>
</DD>

<DT><I>ProtocolVcContext</I></DT>

<DD>Specifies the handle to the client’s per-VC context area, which the client originally supplied to NDIS when it called <A HREF="103ndisx_3qia.htm"><B>NdisCoCreateVc</B></A> to set up the VC for its outgoing call request or from its <I>ProtocolCoCreateVc</I> function if the client accepted an incoming call on this VC.</DD>

<DT><I>CallParameters</I></DT>

<DD>Pointer to a buffered CO_CALL_PARAMETERS structure containing the client-specified QoS change it requested, or, possibly, the original QoS for this VC established when the connection was activated, which the call manager has restored. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A call to <I>ProtocolClModifyCallQoSComplete</I> indicates that the call manager has completed processing of a client-initiated request to change the quality of service on an active VC. For example, if the underlying network medium supports dynamic QoS changes, a client can request modifications at any time on an active VC. </P>

<P>If the client's call to <A HREF="103ndisx_7jhu.htm"><B>NdisClModifyCallQoS</B></A> succeeds, <I>ProtocolClModifyCallQoSComplete</I> can accept the QoS change by simply returning control. Otherwise, <I>ProtocolClModifyCallQoSComplete</I> can engage in further negotiation with the call manager as long as the client's developer places some reasonable limit on the number of possible renegotiations. Alternatively, <I>ProtocolClModifyCallQoSComplete</I> can simply tear down the call with <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A> whenever the call manager rejects a request to change the QoS and the previously established QoS has become unacceptable to the client. </P>

<P><I>ProtocolClModifyCallQoSComplete</I> must be written so that it can run at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="105nstru_3raq.htm">CO_CALL_PARAMETERS</A>, <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>, <A HREF="103ndisx_7jhu.htm"><B>NdisClModifyCallQoS</B></A>, <A HREF="103ndisx_2zn6.htm"><B>NdisCmModifyCallQoSComplete</B></A>, <A HREF="103ndisx_2z8y.htm"><B>NdisMCmModifyCallQoSComplete</B></A>, <A HREF="104tdlow_3436.htm"><I>ProtocolCmModifyCallQoS</I></A>, <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProtocolClModifyCallQoSComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
