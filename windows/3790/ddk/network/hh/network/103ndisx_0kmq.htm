<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCoRequestComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCoRequestComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcorequestcomplete_nr"></A>NdisMCoRequestComplete</H1>

<P><B>NdisMCoRequestComplete</B> returns the final status of an OID_GEN_CO_<I>XXX</I> or connection-oriented medium-specific OID_XXX request for which the <A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A> function previously returned NDIS_STATUS_PENDING. </P>

<PRE class=syntax><B>VOID 
  NdisMCoRequestComplete(
    IN NDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN PNDIS_REQUEST</B>  <I>Request</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Specifies the final status of the requested operation, either NDIS_STATUS_SUCCESS or any driver-determined NDIS_STATUS_<I>XXX except</I> NDIS_STATUS_PENDING. </DD>

<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the NDIS-supplied handle originally input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>Request</I></DT>

<DD>Pointer to a buffer formatted as an <A HREF="105nstru_3f8y.htm">NDIS_REQUEST</A> structure. The miniport driver obtained this pointer as an input parameter to its <I>MiniportCoRequest</I> function. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A NIC driver that returns NDIS_STATUS_PENDING from its <A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A> function must call <B>NdisMCoRequestComplete</B> subsequently when the miniport driver has finished the requested operation. </P>

<P>A call to <B>NdisMCoRequestComplete</B> causes a call to the <A HREF="104tdlow_860i.htm"><I>ProtocolCoRequestComplete</I></A> function of the protocol that originally called <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A> with the given <A HREF="103ndisx_0u42.htm"><I>NdisRequest</I></A> pointer. </P>

<P>An MCM driver that returns NDIS_STATUS_PENDING from its <I>ProtocolCoRequest</I> function must call <A HREF="103ndisx_2qr6.htm"><B>NdisMCmRequestComplete</B></A>, subsequently, rather than <B>NdisMRequestComplete</B> or <B>NdisMCoRequestComplete</B>.</P>

<P>Callers of <B>NdisMCoRequestComplete</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A>, <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A>, <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A>, <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A>, <A HREF="103ndisx_93oy.htm"><B>NdisCoRequestComplete</B></A>, <A HREF="103ndisx_2qr6.htm"><B>NdisMCmRequestComplete</B></A>, <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>, <A HREF="105nstru_3f8y.htm">NDIS_REQUEST</A>, <A HREF="104tdlow_7hwy.htm"><I>ProtocolCoRequest</I></A>, <A HREF="104tdlow_860i.htm"><I>ProtocolCoRequestComplete</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCoRequestComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
