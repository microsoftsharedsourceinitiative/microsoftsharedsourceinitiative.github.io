<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MiniportReconfigure</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MiniportReconfigure">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_miniportreconfigure_nr"></A>MiniportReconfigure</H1>

<P><I>MiniportReconfigure</I> is a function that the NDIS library currently never calls but that a <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function can call as an internal driver function. </P>

<PRE class=syntax><B>NDIS_STATUS</B> <B>
</B>  <B>MiniportReconfigure(
    OUT</B> <B>PNDIS_STATUS</B>  <I>OpenErrorStatus</I><B>,</B>
    <B>IN</B> <B>NDIS_HANDLE</B>  <I>MiniportAdapterContext</I><B>,</B>
    <B>IN</B> <B>NDIS_HANDLE</B>  <I>WrapperConfigurationContext
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>OpenErrorStatus</I></DT>

<DD>Pointer to a variable that <I>MiniportReconfigure</I> sets to an NDIS_STATUS_<I>XXX</I> code specifying additional information about the error if <I>MiniportReconfigure</I> will return NDIS_STATUS_OPEN_ERROR. </DD>

<DT><I>MiniportAdapterContext</I></DT>

<DD>Specifies the handle to a miniport driver-allocated context area in which the driver maintains per-NIC state, set up by <I>MiniportInitialize</I> with <A HREF="103ndisx_175e.htm"><B>NdisMSetAttributes</B></A> or <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A>. </DD>

<DT><I>WrapperConfigurationContext</I></DT>

<DD>Specifies a handle used only during initialization for calls to <B>Ndis</B><I>Xxx</I> configuration and initialization functions. For example, this handle is a required parameter to <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A> and the <B>NdisImmediateRead</B><I>Xxx</I> and <B>NdisImmediateWrite</B><I>Xxx</I> functions.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>MiniportReconfigure</I> either returns NDIS_STATUS_SUCCESS or it can return any driver-determined value, such as one of the following:</P>

<P>NDIS_STATUS_NOT_ACCEPTED<BR>
NDIS_STATUS_OPEN_ERROR<BR>
NDIS_STATUS_FAILURE</P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h.</I></P>

<H4>Comments</H4>

<P>As an internal driver function, <I>MiniportReconfigure</I> might be called from <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> to reconfigure a NIC to new parameters returned by one of the <B>Ndis</B><I>Xxx</I> bus-relative configuration functions. For example, a <I>MiniportReconfigure</I> function might be used to support Plug and Play NICs or software-configurable NICs. </P>

<P>Because an internal <I>MiniportReconfigure</I> function is called from <I>MiniportInitialize</I>, no other driver request can be outstanding when <I>MiniportReconfigure</I> is called, and NDIS will never submit another request to the miniport driver until its caller, <I>MiniportInitialize</I>, returns control.</P>

<P>Like <I>MiniportInitialize</I>, <I>MiniportReconfigure</I> can be preempted by an interrupt if the driver has already called <B>NdisMRegisterInterrupt</B> or if the NIC shares an IRQ. </P>

<P>As an internal driver function called from <I>MiniportInitialize</I>, <I>MiniportReconfigure</I> can be pageable code. </P>

<P><I>MiniportReconfigure</I> runs at the same IRQL as <I>MiniportIntialize</I>. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MiniportReconfigure"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
