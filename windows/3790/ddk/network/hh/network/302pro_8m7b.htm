<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Status Indications in a Protocol Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Status Indications in a Protocol Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_status_indications_in_a_protocol_driver_ng"></A>Status Indications in a Protocol Driver</H1>

<P>An protocol driver with a connectionless lower edge is required to supply a <A HREF="104tdlow_6e42.htm"><I>ProtocolStatus</I></A> function and a <A HREF="104tdlow_3lrm.htm"><I>ProtocolStatusComplete</I></A> function. NDIS calls <I>ProtocolStatus</I> when an underlying connectionless miniport driver calls <A HREF="103ndisx_5nn6.htm"><B>NdisMIndicateStatus</B></A> to report a change in its hardware status. NDIS calls <I>ProtocolStatus</I> when the status change begins. Subsequently, the underlying miniport driver calls <A HREF="103ndisx_62ur.htm"><B>NdisMIndicateStatusComplete</B></A>. When this occurs, NDIS calls <I>ProtocolStatusComplete</I> to carry out any postprocessing for the status change. However, a miniport driver need not deliver <B>NdisMIndicateStatusComplete</B> indications in one-to-one correspondence with its <B>NdisMIndicateStatus</B> indications. It can issue a single status-complete indication for several status indications. </P>

<P>A connection-oriented protocol driver is required to supply a <A HREF="104tdlow_3khe.htm"><I>ProtocolCoStatus</I></A> function and a <I>ProtocolStatusComplete</I> function. NDIS calls <I>ProtocolCoStatus</I> when an underlying connection-oriented miniport driver calls <A HREF="103ndisx_0qgi.htm"><B>NdisMCoIndicateStatus</B></A> to report a change in its hardware status. NDIS calls <I>ProtocolCoStatus</I> when the status change begins.</P>

<P>Following are the possible values for the <I>GeneralStatus</I> parameter of <I>Protocol(Co)Status</I>:

<UL>
	<LI>NDIS_STATUS_MEDIA_CONNECT and NDIS_STATUS_MEDIA_DISCONNECT. When a miniport driver senses that the network connection has been lost, it calls <B>NdisMIndicateStatus</B> or <B>NdisMCoIndicateStatus</B> with NDIS_STATUS_MEDIA_DISCONNECT. When the connection is restored, it must then call <B>NdisM(Co)IndicateStatus</B> with NDIS_STATUS_MEDIA_CONNECT.</LI>

	<LI>NDIS_STATUS_RESET_START and NDIS_STATUS_RESET_END are reported to both <I>Protocol(Co)Status</I> and <I>ProtocolStatusComplete</I> as explained in <A HREF="302pro_3u5j.htm">Protocol Driver Reset Operations</A>. </LI>

	<LI>NDIS_STATUS_LINE_UP is indicated if the protocol driver is layered over NDISWAN while an underlying WAN-capable miniport driver has an established connection with a remote node. The protocol driver exchanges handles for an active connection on which it can send and receive as well as query the connection for call-specific information. See <A HREF="208mwan_5tuv.htm">WAN Miniport Drivers</A>.</LI>

	<LI>NDIS_STATUS_RING_STATUS or any other medium-specific status value, for which <I>StatusBuffer</I> provides more detailed information about the status. For instance, problems specific to a Token Ring medium.</LI>
</UL>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Status%20Indications%20in%20a%20Protocol%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
