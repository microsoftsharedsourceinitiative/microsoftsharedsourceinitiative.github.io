<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisCancelTimer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisCancelTimer">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndiscanceltimer_nr"></A>NdisCancelTimer</H1>

<P><B>NdisCancelTimer</B> cancels the immediately preceding call to <A HREF="103ndisx_8wdu.htm"><B>NdisSetTimer</B></A> if the interval given to <B>NdisSetTimer</B> has not yet expired.</P>

<PRE class=syntax><B>VOID 
  NdisCancelTimer(
    IN PNDIS_TIMER</B>  <I>Timer</I><B>,</B>
    <B>OUT PBOOLEAN</B>  <I>TimerCanceled
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Timer</I></DT>

<DD>Pointer to a timer object, already initialized with <A HREF="103ndisx_0oky.htm"><B>NdisInitializeTimer</B></A> and set with <B>NdisSetTimer</B>.</DD>

<DT><I>TimerCanceled</I></DT>

<DD>Pointer to a caller-supplied variable. <B>NdisCancelTimer</B> sets this variable to TRUE if the timer was queued and then canceled, or to FALSE if the timer either was not set or has already fired and caused the associated timer function to run.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>All <B>Ndis</B><I>Xxx</I><B>Timer</B> functions operate on an opaque timer object, for which a protocol driver must supply resident storage. The protocol driver must call <A HREF="103ndisx_0oky.htm"><B>NdisInitializeTimer</B></A> with a caller-supplied pointer to this storage, thereby associating a driver-supplied timer function with the timer object. The protocol driver must call <B>NdisInitializeTimer</B> before the driver passes the <I>Timer</I> pointer to any other <B>Ndis</B><I>Xxx</I><B>Timer</B> function. </P>

<P>The following describes the syntax of the driver-supplied timer function:</P>

<PRE class=syntax><B>VOID</B> 
  <B>(*PNDIS_TIMER_FUNCTION)(</B>
    <B>IN</B> <B>PVOID</B>  <I>SystemSpecific1</I><B>,</B>
    <B>IN</B> <B>PVOID</B>  <I>FunctionContext</I><B>,</B>
    <B>IN</B> <B>PVOID</B>  <I>SystemSpecific2</I><B>,</B>
    <B>IN</B> <B>PVOID</B>  <I>SystemSpecific3
    </I><B>);</B></PRE>

<P>Calls to the <A HREF="103ndisx_8wdu.htm"><B>NdisSetTimer</B></A> functions insert the timer object in the system timer queue. During the interval in which the timer object is queued, calls to <B>NdisCancelTimer</B> remove the timer object from the queue, thereby canceling the execution of the associated timer function. Only one instance of a particular timer object can be queued at any given moment. </P>

<P>A subsequent call to <B>NdisSetTimer</B> requeues the timer object so the timer function again will be run when the given interval expires. </P>

<P>A call to <B>NdisCancelTimer</B> returns TRUE in the <I>TimerCanceled</I> parameter if the timer was queued and then canceled. <B>NdisCancelTimer</B> returns FALSE if the timer function is already running or if there is no way to stop the timer function from running. If <B>NdisCancelTimer</B> returns FALSE, the caller must take appropriate action.</P>

<P>Callers of <B>NdisCancelTimer</B> run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_0oky.htm"><B>NdisInitializeTimer</B></A>, <A HREF="103ndisx_8wdu.htm"><B>NdisSetTimer</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisCancelTimer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
