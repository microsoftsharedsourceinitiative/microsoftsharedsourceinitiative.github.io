<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TdiEnumerateAddresses</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TdiEnumerateAddresses">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdienumerateaddresses_nr"></A>TdiEnumerateAddresses</H1>

<P>The <B>TdiEnumerateAddresses</B> function provides information to a client about the currently registered network addresses on a particular transport-to-NIC binding. </P>

<PRE class=syntax><B>NTSTATUS</B>
  <B>TdiEnumerateAddresses(</B>
    <B>IN HANDLE</B>  <I>BindingHandle</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>BindingHandle</I></DT>

<DD>Specifies the handle returned by a preceding call to <B>TdiRegisterPnPHandlers</B>. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>TdiEnumerateAddresses</B> returns STATUS_SUCCESS when the caller has been notified of all currently registered network addresses on the given binding. Otherwise, it can return STATUS_INSUFFICIENT_RESOURCES. </P>

<H4>Headers</H4>

<P>Declared in <I>TdiKrnl.h</I>. Include <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>A client's call to <B>TdiEnumerateAddresses</B> initiates a sequence of calls to its own ClientPnPAddNetAddress routine, which the client previously registered with <B>TdiRegisterPnPHandlers</B>. Each such call to the ClientPnPAddNetAddress routine supplies a currently active network address provided and registered with TDI by the underlying transport. </P>

<P>Rather than suffering the runtime performance penalty of this call, most TDI clients never call <B>TdiEnumerateAddresses</B>, except possibly to verify the validity of a client's own internal list of per-binding network addresses if its list might have been corrupted. </P>

<P>Instead, a TDI client sets up its own internal list for binding-specific and transport-registered network addresses when it establishes the binding, and TDI makes a sequence of binding-time calls to the registered ClientPnPAddNetAddress routine so the client can initialize its internal list with the network addresses currently registered on that binding. </P>

<P>After setting up and initializing such an internal list, the client's own ClientPnPAddNetAddress and ClientPnPDelNetAddress routines update this internal list of per-binding valid network addresses dynamically. Before the client releases the binding, it must clean up such an internal list, whether for reuse with a subsequent binding or to release all allocated resources associated with its list. </P>

<P>Callers of <B>TdiEnumerateAddresses</B> must be running at IRQL &lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="35tdicli_8d4i.htm"><B>ClientPnPAddNetAddress</B></A>, <A HREF="35tdicli_33hu.htm"><B>ClientPnPDelNetAddress</B></A>, <A HREF="33tdifun_6uia.htm"><B>TdiRegisterNetAddress</B></A>, <A HREF="33tdifun_6ovm.htm"><B>TdiDeregisterNetAddress</B></A>, <A HREF="33tdifun_5boy.htm"><B>TdiRegisterPnPHandlers</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TdiEnumerateAddresses"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
