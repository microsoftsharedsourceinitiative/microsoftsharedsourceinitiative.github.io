<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IOCTL_PF_SET_EXTENSION_POINTER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IOCTL_PF_SET_EXTENSION_POINTER">
<META NAME="MS-HKWD" CONTENT="PF_SET_EXTENSION_HOOK_INFO">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioctl_pf_set_extension_pointer_nr"></A>IOCTL_PF_SET_EXTENSION_POINTER</H1>

<P>The filter-hook driver uses this IOCTL to set up an IRP that the filter-hook driver submits to the IP filter driver. The filter-hook driver passes this IOCTL along with related parameters in the <B>IoBuildDeviceIoControlRequest</B> function to set up the IRP.</P>

<H4>Operation</H4>

<P>IOCTL_PF_SET_EXTENSION_POINTER registers filter-hook callback functions to the IP filter driver to inform the IP filter driver to call those filter hook callbacks for every IP packet that is received or transmitted. Also, IOCTL_PF_SET_EXTENSION_POINTER clears filter-hook callback functions from the IP filter driver. </P>

<H4>Parameters</H4>

<DL>
<DT><I>IoControlCode</I></DT>

<DD>IOCTL_PF_SET_EXTENSION_POINTER.</DD>

<DT><I>DeviceObject</I></DT>

<DD>Pointer to the device object for the IP filter driver.</DD>

<DT><I>InputBuffer</I></DT>

<DD>Pointer to a buffer that contains a <A HREF="#ddk_pf_set_extension_hook_info_nr">PF_SET_EXTENSION_HOOK_INFO</A> structure. To register the filter-hook callback function, this structure holds the address of the filter-hook callback function. To clear the filter-hook callback function, this structure holds a NULL value. </DD>

<DT><I>InputBufferLength</I></DT>

<DD>Size, in bytes, of the PF_SET_EXTENSION_HOOK_INFO structure. </DD>

<DT><I>OutputBuffer</I></DT>

<DD>NULL.</DD>

<DT><I>OutputBufferLength</I></DT>

<DD>Zero.</DD>

<DT><I>InternalDeviceIoControl</I></DT>

<DD>FALSE.</DD>

<DT><I>Event</I></DT>

<DD>NULL.</DD>

<DT><I>IoStatusBlock</I></DT>

<DD>Pointer to a buffer that is to receive an I/O status block. The I/O status is set after the IP filter driver completes the I/O request. 
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>Pfhook.h</I>. Include <I>Pfhook.h</I>.</P>

<H4>Comments</H4>

<P>To set up an IRP, the filter-hook driver calls the <B>IoBuildDeviceIoControlRequest</B> function. In this call, the filter-hook driver passes parameters specifying the IOCTL_PF_SET_EXTENSION_POINTER IOCTL request; the pointer to the device object for the IP filter driver; and an input buffer containing a PF_SET_EXTENSION_HOOK_INFO structure. To retrieve the device object for the IP filter driver, the filter-hook driver calls the <B>IoGetDeviceObjectPointer</B> function. In this call, the filter-hook driver passes parameters specifying the name of the device object for the IP filter driver, along with SYNCHRONIZE, GENERIC_READ, and GENERIC_WRITE. These values specify that synchronous, read, and write access to the driver must be provided. In the <B>IoGetDeviceObjectPointer</B> call, the filter-hook driver also passes pointers to buffers to hold the returned file and device objects for the IP filter driver. The Unicode string that contains the name of the device object for the IP filter driver is <I>\\Device\Ipfilterdriver</I>.</P>

<P>To submit the IRP, the filter-hook driver calls the <B>IoCallDriver</B> function. </P>

<P>The PF_SET_EXTENSION_HOOK_INFO structure is defined in the following section.</P>



<H4><A NAME="ddk_pf_set_extension_hook_info_nr"></A>PF_SET_EXTENSION_HOOK_INFO</H4>

<P>The PF_SET_EXTENSION_HOOK_INFO structure contains information that describes a filter-hook callback function.</P>

<PRE class=syntax>typedef struct _PF_SET_EXTENSION_HOOK_INFO {
    PacketFilterExtensionPtr  ExtensionPointer; 
} PF_SET_EXTENSION_HOOK_INFO, *PPF_SET_EXTENSION_HOOK_INFO;</PRE>

<P>The member of this structure contains the following information: 

<DL>
<DT><B>ExtensionPointer</B></DT>

<DD>Specifies a <A HREF="fltrref_2mwi.htm"><B>PacketFilterExtensionPtr</B></A> data type that points to a filter-hook callback function to register the function with the IP filter driver. If <B>ExtensionPointer</B> is a NULL value, the previously registered function is cleared from the IP filter driver. 
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>Pfhook.h</I>. Include <I>Pfhook.h</I>.</P>

<H4>See Also</H4>

<P><A HREF="fltrref_2mwi.htm"><B>PacketFilterExtensionPtr</B></A> </P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IOCTL_PF_SET_EXTENSION_POINTER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
