<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Registering the ProtocolXxx Functions of a Connection-Oriented Protocol Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Registering the ProtocolXxx Functions of a Connection-Oriented Protocol Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_registering_the_protocolxxx_functions_of_a_connection_oriented_protocol_driver_ng"></A>Registering the <I>ProtocolXxx</I> Functions of a Connection-Oriented Protocol Driver</H3>

<P>A connection-oriented protocol driver must register some <A HREF="104tdlow_6gvm.htm">NDIS driver lower-edge functions</A> (<I>ProtocolXxx</I>) that are specific to connection-oriented protocol drivers in addition to those that are common with connectionless protocol drivers. </P>

<P>The following protocol handlers are defined for connectionless and connection-oriented protocol drivers: 

<UL>
	<LI><B>BindAdapterHandler</B></LI>

	<LI><B>UnbindAdapterHandler</B></LI>

	<LI><B>OpenAdapterCompleteHandler</B></LI>

	<LI><B>CloseAdapterCompleteHandler</B></LI>

	<LI><B>ReceiveCompleteHandler</B></LI>

	<LI><B>ResetCompleteHandler</B></LI>

	<LI><B>RequestCompleteHandler</B></LI>

	<LI><B>StatusCompleteHandler</B></LI>

	<LI><B>PnPEventHandler</B></LI>
</UL>

<P>These functions are summarized in <A HREF="302pro_5qlj.htm">Registering the <I>ProtocolXxx</I> Functions of a Connectionless Protocol Driver</A>.</P>

<P>A connection-oriented protocol driver must also register the following connection-oriented protocol functions. Specifying these entry points requires a NDIS version 5.0 structure in the <I>ProtocolCharacteristics </I>parameter that the protocol<I> </I>passes to <A HREF="103ndisx_2cfm.htm"><B>NdisRegisterProtocol</B></A>:

<DL>
<DT><B>CoSendCompleteHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_2t4i.htm"><I>ProtocolCoSendComplete</I></A> once for each packet that the protocol driver passed to <A HREF="103ndisx_15de.htm"><B>NdisCoSendPackets</B></A>. The protocol driver determines the status of an <B>NdisCoSendPackets</B> send operation from the <I>Status</I> parameter that NDIS passes to <I>ProtocolCoSendComplete</I>. </DD>

<DT><B>CoStatusHandler</B></DT>

<DD>This is a required function. NDIS calls <A HREF="104tdlow_3khe.htm"><I>ProtocolCoStatus</I></A> with status notifications that underlying miniport drivers indicate.</DD>

<DT><B>CoReceivePacketHandler</B></DT>

<DD>This is a required function. When a bound connection-oriented miniport driver or MCM calls <A HREF="103ndisx_6f02.htm"><B>NdisMCoIndicateReceivePacket</B></A> to indicate an array of pointers, NDIS calls the protocol driver's <A HREF="104tdlow_3pwy.htm"><I>ProtocolCoReceivePacket</I></A><I> </I>function<I>.</I></DD>

<DT><B>CoAfRegisterNotifyHandler</B></DT>

<DD>If the protocol driver is a connection-oriented client that uses the call manager services of a call manager or an MCM, it must register a <A HREF="104tdlow_2goi.htm"><I>ProtocolCoAfRegisterNotify</I></A> function. NDIS calls the <I>ProtocolCoAfRegisterNotify</I> function of each protocol on a binding when a call manager or MCM driver registers an address family with <A HREF="103ndisx_58tu.htm"><B>NdisCmRegisterAddressFamily</B></A> or <A HREF="103ndisx_58fm.htm"><B>NdisMCmRegisterAddressFamily</B></A>. <I>ProtocolCoAfRegisterNotify</I> determines whether the protocol driver can use the services of a call manager or MCM that has advertised its services. Protocol drivers that are standalone call managers must also register a <I>ProtocolCoAfRegisterNotify</I> function. When called by NDIS, the <I>ProtocolCoAfRegisterNotify</I> function of a call manager simply returns control.
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Registering%20the%20ProtocolXxx%20Functions%20of%20a%20Connection-Oriented%20Protocol%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
