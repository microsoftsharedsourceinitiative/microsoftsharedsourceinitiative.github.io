<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisCoDeleteVc</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisCoDeleteVc">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndiscodeletevc_nr"></A>NdisCoDeleteVc</H1>

<P><B>NdisCoDeleteVc</B> destroys a caller-created VC. </P>

<PRE class=syntax><B>NDIS_STATUS 
  NdisCoDeleteVc(
    IN NDIS_HANDLE</B>  <I>NdisVcHandle</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle identifying the VC to be deleted. The caller originally obtained this handle from <A HREF="103ndisx_3qia.htm"><B>NdisCoCreateVc</B></A>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisCoDeleteVc</B> can return one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>NDIS deleted the VC.</DD>

<DT>NDIS_STATUS_NOT_ACCEPTED</DT>

<DD>The VC is still active, so it could not be deleted.</DD>

<DT>NDIS_STATUS_CLOSING</DT>

<DD>This call is redundant, but deactivation on the given VC is still pending.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>When a protocol calls <B>NdisCoDeleteVc</B>, there must be no outstanding calls on the given VC and that VC already has been deactivated. To meet these requirements implies that the following conditions hold:

<UL>
	<LI>If the call tear-down was initiated by a local client, that client has already called <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A> with the given <I>NdisVcHandle</I> and its close-call request has completed successfully. </LI>

	<LI>If the call tear-down was initiated by a remote client, the stand-alone call manager has already called <A HREF="103ndisx_5g4y.htm"><B>NdisCmDeactivateVc</B></A> with the given <I>NdisVcHandle</I> and its deactivation request has completed successfully.</LI>
</UL>

<P>Only the protocol that created a particular VC can delete that VC. A call to <B>NdisCoDeleteVc</B> causes NDIS to call both the underlying NIC driver's <A HREF="101mini_30c2.htm"><I>MiniportCoDeleteVc</I></A> function and the <A HREF="104tdlow_7ks2.htm"><I>ProtocolCoDeleteVc</I></A> function of the client or call manager with which the caller shares the <I>NdisVcHandle</I>.</P>

<P>When <B>NdisCoDeleteVc</B> returns control, the <I>NdisVcHandle</I> is no longer valid.</P>

<P>Stand-alone call managers, which register themselves with NDIS as protocols, can call <B>NdisCoDeleteVc</B>. Connection-oriented miniport drivers that provide integrated call-management support call <A HREF="103ndisx_6qur.htm"><B>NdisMCmDeleteVc</B></A> instead. </P>

<P>Callers of <B>NdisCoDeleteVc</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_30c2.htm"><I>MiniportCoDeleteVc</I></A>, <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>, <A HREF="103ndisx_5g4y.htm"><B>NdisCmDeactivateVc</B></A>, <A HREF="103ndisx_3qia.htm"><B>NdisCoCreateVc</B></A>, <A HREF="103ndisx_6qur.htm"><B>NdisMCmDeleteVc</B></A>, <A HREF="104tdlow_3ofm.htm"><I>ProtocolClCloseCallComplete</I></A>, <A HREF="104tdlow_3nqq.htm"><I>ProtocolClIncomingCloseCall</I></A>, <A HREF="104tdlow_8j1u.htm"><I>ProtocolCmCloseCall</I></A>, <A HREF="104tdlow_7ks2.htm"><I>ProtocolCoDeleteVc</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisCoDeleteVc"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
