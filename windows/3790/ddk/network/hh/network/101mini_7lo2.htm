<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MiniportShutdown</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MiniportShutdown">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_miniportshutdown_nr"></A>MiniportShutdown</H1>

<P>The <I>MiniportShutdown</I> function restores a NIC to its initial state when the system is shut down, whether by the user or because an unrecoverable system error occurred.</P>

<PRE class=syntax><B>VOID</B>
  <B>MiniportShutdown(</B>
    <B>IN</B> <B>PVOID</B>  <I>ShutdownContext</I>
    <B>);</B> </PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ShutdownContext</I></DT>

<DD>Pointer to a context area supplied when the miniport driver’s <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function called <A HREF="103ndisx_4fea.htm"><B>NdisMRegisterAdapterShutdownHandler</B></A>. Usually, this input parameter is the NIC-specific <I>MiniportAdapterContext</I> pointer passed to other <I>MiniportXxx</I> functions. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h.</I></P>

<H4>Comments</H4>

<P>Every miniport driver should have a <I>MiniportShutdown</I> function. NDIS 5.1 miniport drivers and intermediate drivers must register a <I>MiniportShutdown</I> function.</P>

<P><I>MiniportShutdown</I> does nothing more than restore the NIC to its initial state (before the miniport’s <B>DriverEntry</B> function runs). However, this ensures that the NIC is in a known state and ready to be reinitialized when the machine is rebooted after a system shutdown occurs for any reason, including a crash dump.</P>

<P>An NDIS 5.0 miniport driver's or intermediate driver’s <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function must call <A HREF="103ndisx_4fea.htm"><B>NdisMRegisterAdapterShutdownHandler</B></A> to set up a <I>MiniportShutdown</I> function. The driver’s <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A> function must make a reciprocal call to <B>NdisMDeregisterAdapterShutdownHandler</B>. </P>

<P>An NDIS 5.1 miniport driver or intermediate driver, however, should register its <I>MiniportShutdown</I> function in the call to <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A> or <A HREF="103ndisx_0sj7.htm"><B>NdisIMRegisterLayeredMiniport</B></A>, respectively.</P>

<P>If <I>MiniportShutdown</I> is called due to a user-initiated system shutdown, it runs at IRQL = PASSIVE_LEVEL in a system-thread context. If it is called due to an unrecoverable error, <I>MiniportShutdown</I> runs at an arbitrary IRQL and in the context of whatever component raised the error. For example, <I>MiniportShutdown</I> might be run at high DIRQL in the context of an ISR for a device essential to continued execution of the system. </P>

<P><I>MiniportShutdown</I> should call no <B>Ndis</B><I>Xxx</I> functions.</P>

<H4>See Also</H4>

<P><A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_0sj7.htm"><B>NdisIMRegisterLayeredMiniport</B></A>, <A HREF="103ndisx_7q7m.htm"><B>NdisMDeregisterAdapterShutdownHandler</B></A>, <A HREF="103ndisx_4fea.htm"><B>NdisMRegisterAdapterShutdownHandler</B></A>, <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A>, <A HREF="103ndisx_0tma.htm"><B>NdisRawReadPortBufferUchar</B></A>, <A HREF="103ndisx_3qib.htm"><B>NdisRawReadPortBufferUlong</B></A>, <A HREF="103ndisx_8i5u.htm"><B>NdisRawReadPortBufferUshort</B></A>, <A HREF="103ndisx_4kj6.htm"><B>NdisRawReadPortUchar</B></A>, <A HREF="103ndisx_7hf6.htm"><B>NdisRawReadPortUlong</B></A>, <A HREF="103ndisx_8cmq.htm"><B>NdisRawReadPortUshort</B></A>, <A HREF="103ndisx_8vsi.htm"><B>NdisRawWritePortBufferUchar</B></A>, <A HREF="103ndisx_1soi.htm"><B>NdisRawWritePortBufferUlong</B></A>, <A HREF="103ndisx_4d82.htm"><B>NdisRawWritePortBufferUshort</B></A>, <A HREF="103ndisx_4hde.htm"><B>NdisRawWritePortUchar</B></A>, <A HREF="103ndisx_7e9e.htm"><B>NdisRawWritePortUlong</B></A>, <A HREF="103ndisx_2qcy.htm"><B>NdisRawWritePortUshort</B></A>, <A HREF="103ndisx_1gc2.htm"><B>NdisReadRegisterUchar</B></A>, <A HREF="103ndisx_4d83.htm"><B>NdisReadRegisterUlong</B></A>, <A HREF="103ndisx_8vzm.htm"><B>NdisReadRegisterUshort</B></A>, <A HREF="103ndisx_1m2a.htm"><B>NdisWriteRegisterUchar</B></A>, <A HREF="103ndisx_4iya.htm"><B>NdisWriteRegisterUlong</B></A>, <A HREF="103ndisx_92lu.htm"><B>NdisWriteRegisterUshort</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MiniportShutdown"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
