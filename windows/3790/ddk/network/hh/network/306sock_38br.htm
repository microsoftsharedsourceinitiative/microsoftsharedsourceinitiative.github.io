<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Supporting Connect and Disconnect Data with a WSH DLL</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Supporting Connect and Disconnect Data with a WSH DLL">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_supporting_connect_and_disconnect_data_with_a_wsh_dll_ng"></A>Supporting Connect and Disconnect Data with a WSH DLL</H1>

<P>Some transports, such as DECNet and OSI TP4, support <I>connect and disconnect data</I>: additional data, not in the normal network data stream, that is sent on the wire along with connect or disconnect requests. Typically, connect and disconnect data is used for operations like application-level version negotiation. </P>

<P>TDI supports the transmission of connect and disconnect data in the <A HREF="36tdstrc_4mpe.htm">TDI_CONNECTION_INFORMATION</A> structure, which has members specifying the <B>UserDataLength</B>, <B>UserData</B>, <B>OptionsLength</B>, and <B>Options</B>. This structure is passed in TDI connect, accept, and disconnect requests by kernel-mode TDI clients.</P>

<P>However, Windows Sockets does not provide input parameters for connect data to the <B>connect</B> function or for disconnect data to the <B>shutdown</B> and <B>closesocket</B> functions. WSH DLLS can add support for connect and disconnect data for applications that call the Windows Sockets <B>setsockopt</B> and <B>getsockopt</B> functions. </P>

<P>The <B>setsockopt</B> function can be called to specify connect and disconnect data to be sent to a remote node, and <B>getsockopt</B> can be called to retrieve connect and disconnect data sent from the remote node. To support this, see the SO_XXX options in the header file, <I>winsock.h</I>.</P>

<P>How an application uses these options in conjunction with <B>getsockopt</B> and <B>setsockopt</B> depends on whether the application is a server or client, and on how the application uses the transmitted connect data. For information about client applications, see <A HREF="306sock_2bqf.htm">Client Applications and Connect Data</A>. For information about server applications, see <A HREF="306sock_3ht3.htm">Server Applications and Connect Data</A>. For transports, such as DECNet, that have a preexisting definition of connect data different from what is described here, a WSH DLL translates between the transport's semantics and the semantics expected by Windows Sockets, making calls to <B>getsockopt</B> and <B>setsockopt</B>.</P>

<P>Connect and disconnect options are effectively the same as connect and disconnect data from the standpoint of Windows Sockets. These are actually a buffer of data passed to the transport prior to the connect or disconnect, and a buffer containing data that is retrieved following a connect or disconnect. Consequently, an application uses connect or disconnect options in much the same manner as connect or disconnect data. The only difference is the option names used for the parameter passed to <B>getsockopt</B> and <B>setsockopt</B>; for example, SO_CONNOPT in place of SO_CONNDATA.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Supporting%20Connect%20and%20Disconnect%20Data%20with%20a%20WSH%20DLL"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
