<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisReadConfiguration</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisReadConfiguration">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_unicode_string_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_installation_overview_dg">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_ansi_string_kr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_unicode_string_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisreadconfiguration_nr"></A>NdisReadConfiguration</H1>

<P><B>NdisReadConfiguration</B> returns the value of a named entry of the specified type from the registry, given the handle to an open registry key.</P>

<PRE class=syntax><B>VOID
  NdisReadConfiguration(</B>
    <B>OUT PNDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>OUT PNDIS_CONFIGURATION_PARAMETER</B>  *<I>ParameterValue</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>ConfigurationHandle</I><B>,</B>
    <B>IN PNDIS_STRING</B>  <I>Keyword</I><B>,</B>
    <B>IN NDIS_PARAMETER_TYPE</B>  <I>ParameterType</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the status of the call as one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The buffer at <I>ParameterValue</I> contains the returned configuration information. </DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>NDIS could not allocate resources, usually enough memory, to return the requested information.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>The requested information could not be found under the opened registry key designated by the <I>ConfigurationHandle</I>. </DD>
</DL>
</DD>

<DT><I>ParameterValue</I></DT>

<DD>Pointer to a caller-supplied variable in which a successful call to <B>NdisReadConfiguration</B> returns a pointer to an NDIS_CONFIGURATION_PARAMETER structure, defined as follows:

<PRE>typedef struct _NDIS_CONFIGURATION_PARAMETER {
    NDIS_PARAMETER_TYPE ParameterType;
    union {
        ULONG IntegerData;
        NDIS_STRING StringData;
    } ParameterData;
} NDIS_CONFIGURATION_PARAMETER, *PNDIS_CONFIGURATION_PARAMETER;</PRE>


<P>The members of this structure contain the following data: 


<DL>
<DT><B>ParameterType</B></DT>

<DD>Matches the value at <I>ParameterType</I> if the call is successful. </DD>

<DT><B>ParameterData</B></DT>

<DD>Specifies the value of the given named entry. If <B>ParameterType</B> is a string type, this member is an NDIS_STRING type describing a counted string in the system-default character set. For Windows&nbsp;2000 and later drivers, such a string contains Unicode characters. That is, for Windows 2000 and later, NDIS defines the NDIS_STRING type as a <A HREF="JavaScript:hhobj_1.Click()">UNICODE_STRING</A> type. </DD>
</DL>
</DD>

<DT><I>ConfigurationHandle</I></DT>

<DD>Specifies the handle to a registry key returned by <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A> to a NIC driver, by <A HREF="103ndisx_6yr6.htm"><B>NdisOpenProtocolConfiguration</B></A> to a protocol driver, or by <A HREF="103ndisx_1e2a.htm"><B>NdisOpenConfigurationKeyByIndex</B></A> or <A HREF="103ndisx_1k6q.htm"><B>NdisOpenConfigurationKeyByName</B></A> to either type of NDIS driver. </DD>

<DT><I>Keyword</I></DT>

<DD>Pointer to a caller-supplied NDIS_STRING type describing a counted string, in the system-default character set, specifying the name of the entry under the open registry key for which to return the value. 

<P>Alternatively, pointer to a caller-supplied NDIS_STRING_CONSTANT specifying one of the following predefined entry names along with predefined return values:


<TABLE>

<TR VALIGN="top">
<TH align=left width=37%>Predefined Entry Name</TH>
<TH align=left width=63%>Predefined Return Values</TH>
</TR>

<TR VALIGN="top">
<TD width=37%><B>Environment</B></TD>
<TD width=63%><B>NdisEnvironmentWindowsNt<BR>
NdisEnvironmentWindows</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>ProcessorType</B></TD>
<TD width=63%><B>NdisProcessorX86<BR>
//<BR>
//</B> Following possible only if<BR>
<B>//</B> current machine’s <B> Environment ==<BR>
// NdisEnvironmentWindowsNt<BR>
//</B><BR>
<B>NdisProcessorAlpha<BR>
//</B> Following possible only if legacy driver<B><BR>
NdisProcessorMips<BR>
NdisProcessorPpc</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>NdisVersion</B></TD>
<TD width=63%><B>0x</B><I>MMMMmmmm <BR>
</I><B>//</B><I> </I>where <I>MMMM</I> is the major version and<BR>
<B>//</B> <I>mmmm</I> the minor version number. <BR>
<B>//</B> For example, 0x00050000 indicates that <BR>
<B>//</B> the highest NDIS version supported by <BR>
<B>//</B> the system is major version 5, minor <BR>
// version 0.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>ParameterType</I></DT>

<DD>Specifies the type of the value entry as one of the following:

<DL>
<DT><B>NdisParameterInteger</B></DT>

<DD>Specifies an integer in decimal notation. </DD>

<DT><B>NdisParameterHexInteger</B></DT>

<DD>Specifies an integer in hexadecimal notation. </DD>

<DT><B>NdisParameterString</B></DT>

<DD>Specifies a string of type NDIS_STRING. For Windows&nbsp;2000 and later drivers, this is a counted Unicode string. </DD>

<DT><B>NdisParameterMultiString</B></DT>

<DD>Specifies a multistring parameter of the REG_MULTI_SZ type, which is defined in Windows&nbsp;2000 and later versions. 
</DD>
</DL>
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>In the configuration registry of Windows&nbsp;2000 and later versions, an NDIS <I>keyword</I> is a synonym for a <I>value entry name</I>. Such a name is a counted sequence of Unicode characters, terminated with a NULL. </P>

<P>Every NDIS driver can set up configuration information in the registry for itself under the driver’s <B>Parameters</B> key using an installation script. For example, a protocol driver might store its own name as an entry with a preformatted string value that can be passed in calls to <A HREF="103ndisx_2cfm.htm"><B>NdisRegisterProtocol</B></A>. </P>

<P>Each NIC driver also has associated value entries under the driver’s <B>Parameters</B> registry key. The value entries for any particular NIC driver can be device-dependent in nature. For example, an Ethernet NIC driver might have keywords such as <B>InterruptNumber</B>, <B>SharedMemoryAddress</B>, and <B>MulticastListSize</B>. The value associated with such an NDIS keyword can be either an integer (ULONG-type) or a string (NDIS_STRING-type). For example, the set of possible values for the already mentioned <B>InterruptNumber</B> entry might be <B>NdisParameterInteger</B> values 2, 3, 4, or 5, or the equivalents in hexadecimal as <B>NdisParameterHexInteger</B> values.</P>

<P><B>NdisReadConfiguration</B> buffers and copies the caller-supplied string at <I>Keyword</I> and releases the storage it allocates for this copy before it returns control to the caller. The memory it allocates for the NDIS_CONFIGURATION_PARAMETER structure is freed when the driver releases the <I>ConfigurationHandle</I> with <A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A>. The caller of <B>NdisReadConfiguration</B> is responsible for releasing the buffered string at <I>Keyword</I>. </P>

<P>Note that NDIS does not validate values that a driver reads from the registry. The caller of <B>NdisReadConfiguration</B> must therefore not make any assumptions about such values and must validate each value read from the registry. If the caller determines that a value is out of bounds, it should use a default value instead.</P>

<P>For more information about setup and installation scripts, see <A HREF="JavaScript:hhobj_2.Click()">Device Installation Overview</A>.</P>

<P>Callers of <B>NdisReadConfiguration</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="JavaScript:hhobj_3.Click()">ANSI_STRING</A>, <A HREF="103ndisx_6ynm.htm"><B>NdisAnsiStringToUnicodeString</B></A>, <A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A>, <A HREF="103ndisx_20oi.htm"><B>NdisFreeString</B></A>, <A HREF="103ndisx_2wvm.htm"><B>NdisInitAnsiString</B></A>, <A HREF="103ndisx_9ieq.htm"><B>NdisInitializeString</B></A>, <A HREF="103ndisx_581e.htm"><B>NdisInitUnicodeString</B></A>, <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A>, <A HREF="103ndisx_1e2a.htm"><B>NdisOpenConfigurationKeyByIndex</B></A>, <A HREF="103ndisx_1k6q.htm"><B>NdisOpenConfigurationKeyByName</B></A>, <A HREF="103ndisx_6yr6.htm"><B>NdisOpenProtocolConfiguration</B></A>, <A HREF="103ndisx_5e9f.htm"><B>NdisReadNetworkAddress</B></A>, <A HREF="103ndisx_07zm.htm"><B>NdisUnicodeStringToAnsiString</B></A>, <A HREF="103ndisx_5kaa.htm"><B>NdisWriteConfiguration</B></A>, <A HREF="JavaScript:hhobj_4.Click()">UNICODE_STRING</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisReadConfiguration"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
