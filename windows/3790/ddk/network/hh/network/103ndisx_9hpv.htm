<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCoDeactivateVcComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCoDeactivateVcComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcodeactivatevccomplete_nr"></A>NdisMCoDeactivateVcComplete</H1>

<P><B>NdisMCoDeactivateVcComplete</B> notifies NDIS and the call manager that the miniport driver has finished processing a CM-initiated deactivate-VC request, for which the NIC driver previously returned NDIS_STATUS_PENDING.</P>

<PRE class=syntax><B>VOID 
  NdisMCoDeactivateVcComplete(
    IN NDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>NdisVcHandle</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Specifies the final status of the deactivate-VC operation, which can be NDIS_STATUS_SUCCESS or any NDIS_STATUS_<I>XXX except</I> NDIS_STATUS_PENDING.</DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle identifying the VC. The caller obtained this handle from its per-VC state, designated by the <I>MiniportVcContext</I> passed as an input parameter to its <A HREF="101mini_8ak2.htm"><I>MiniportCoDeactivateVc</I></A> function. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A connection-oriented NIC driver must call <B>NdisMCoDeactivateVcComplete</B> if its <I>MiniportCoDeactivateVc</I> function previously returned NDIS_STATUS_PENDING in response to a request to deactivate the VC identified by the given <I>NdisVcHandle</I>. The call manager, which initiated the VC deactivation with a call to <A HREF="103ndisx_5g4y.htm"><B>NdisCmDeactivateVc</B></A>, cannot notify NDIS or its client whether transfers have been disabled on the VC until the miniport driver calls <B>NdisMCoDeactivateVcComplete</B>. </P>

<P>Before it deactivates a VC, the miniport driver must complete any pending transfers on the VC. That is, the miniport driver must indicate all outstanding receives and transmit all outstanding sends before calling <B>NdisMCoDeactivateVcComplete</B>. </P>

<P>A call to <B>NdisMCoDeactivateVcComplete</B> causes NDIS to call the <A HREF="104tdlow_6ho2.htm"><I>ProtocolCmDeactivateVcComplete</I></A> function of the call manager that originally requested the VC deactivation. Following its call to <B>NdisMCoDeactivateVcComplete</B>, the miniport driver can neither indicate receives nor transmit sends on the VC. </P>

<P>Callers of <B>NdisMCoDeactivateVcComplete</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_8ak2.htm"><I>MiniportCoDeactivateVc</I></A>, <A HREF="103ndisx_3zzm.htm"><B>NdisCmActivateVc</B></A>, <A HREF="103ndisx_5g4y.htm"><B>NdisCmDeactivateVc</B></A>, <A HREF="104tdlow_6ho2.htm"><I>ProtocolCmDeactivateVcComplete</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCoDeactivateVcComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
