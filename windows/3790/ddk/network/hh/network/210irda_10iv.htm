<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Sending and Receiving Packet Arrays</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Sending and Receiving Packet Arrays">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_sending_and_receiving_packet_arrays_ng"></A>Sending and Receiving Packet Arrays</H1>

<P>IrDA miniport drivers should support sending and receiving packet arrays as described in the following. </P>

<P>An IrDA miniport driver should implement a <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> function to transmit an array of packets over the network. IrLAP calls the <A HREF="103ndisx_88s2.htm"><B>NdisSendPackets</B></A> function to send an array of packet descriptors to the underlying IrDA miniport driver. Each of these packet descriptors have associated out-of-band (OOB) information. The IrDA miniport driver can retrieve and use information that is specific to the infrared media from the OOB data block, <A HREF="105nstru_1vqq.htm">NDIS_PACKET_OOB_DATA</A>. </P>

<P>After packets arrive from a remote station, a NIC's transceiver receives those incoming packets and then passes interrupts to NDIS. NDIS, in turn, calls a particular routine to service those interrupts. The IrDA miniport driver for the NIC should implement <A HREF="101mini_38c2.htm"><I>MiniportIsr</I></A> and <A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A> functions to handle interrupts for incoming packets. To indicate packets to the IrDA protocol driver, the IrDA miniport driver sets information that is specific to the infrared media in the OOB data block for each packet and calls the <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> function. </P>

<P>The IrDA miniport driver should use the macros that NDIS provides to set and retrieve OOB data. For more information on OOB data and accessing OOB data, see <A HREF="204trnsf_46w7.htm">Packet Out-Of-Band Data</A>. </P>

<P>The <B>MediaSpecificInformation</B> member of the OOB data block points to a structure of type MEDIA_SPECIFIC_INFORMATION. This structure, in turn, has a <B>ClassInformation</B> member that is a structure of type NDIS_IRDA_PACKET_INFO, which is defined as follows: </P>

<PRE>typedef struct _NDIS_IRDA_PACKET_INFO{
        UINT     ExtraBOFs;
        UINT     MinTurnAroundTime;
} NDIS_IRDA_PACKET_INFO, *PNDIS_IRDA_PACKET_INFO;</PRE>

<P>The <B>ExtraBOFs</B> member specifies the number of extra Beginning of Frame (BOF) flags that is added to the packet for transmission. For more information, see <A HREF="210irda_1lgn.htm">Receiver Synchronization</A>. </P>

<P>The <B>MinTurnAroundTime</B> member specifies the minimum transmission-delay time for the packet. For more information, see <A HREF="210irda_0qnb.htm">Communication Link Turnaround Times</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Sending%20and%20Receiving%20Packet%20Arrays"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
