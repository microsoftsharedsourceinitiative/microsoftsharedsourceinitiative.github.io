<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TDI_ASSOCIATE_ADDRESS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TDI_ASSOCIATE_ADDRESS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdi_associate_address_nr"></A>TDI_ASSOCIATE_ADDRESS</H1>

<P>When a kernel-mode client makes a TDI_ASSOCIATE_ADDRESS request, it asks the underlying TDI transport driver to make an association between a particular open local-node address and an open connection endpoint.</P>

<H4>IRP</H4>

<P>The transport calls <B>IoGetCurrentIrpStackLocation</B> with the given <I>Irp</I> to get a pointer to its own I/O stack location in the IRP, shown in the following list as <B>IrpSp</B>. The pointer to the IRP is shown in the following list as <B>Irp</B>. IRP members relevant to this request include the following:

<DL>
<DT><B>Irp-&gt;IoStatus.Status</B></DT>

<DD>Specifies the final status of the associate-address request. The transport sets this member before it completes the IRP, possibly to one of the following:

<P>STATUS_SUCCESS<BR>
STATUS_CONNECTION_ESTABLISHED<BR>
STATUS_INVALID_CONNECTION<BR>
STATUS_INVALID_HANDLE<BR>
STATUS_INVALID_PARAMETER


<P>The <B>IoStatus.Information</B> member is zero because this request transfers no data. 
</DD>

<DT><B>IrpSp-&gt;MajorFunction</B></DT>

<DD>Specifies IRP_MJ_INTERNAL_DEVICE_CONTROL. The transport can ignore this member if it exports a <B>TdiDispatchInternalDeviceControl</B> routine that handles only TDI_<I>XXX</I> requests. </DD>

<DT><B>IrpSp-&gt;MinorFunction</B></DT>

<DD>Specifies TDI_ASSOCIATE_ADDRESS.</DD>

<DT><B>IrpSp-&gt;FileObject</B></DT>

<DD>Pointer to an open file object representing the connection endpoint to be associated with the address specified at <B>IrpSp-&gt;Parameters</B>. The transport uses the <B>FsContext</B> and, possibly, <B>FsContext2</B> fields to access the state it maintains about the connection. </DD>

<DT><B>IrpSp-&gt;Parameters</B></DT>

<DD>Pointer to a TDI_REQUEST_KERNEL_ASSOCIATE structure, defined as follows:

<PRE>struct _TDI_REQUEST_KERNEL_ASSOCIATE {<B> </B>
    HANDLE  AddressHandle;<B> </B>
} TDI_REQUEST_KERNEL_ASSOCIATE, *PTDI_REQUEST_KERNEL_ASSOCIATE;<B> </B></PRE>


<P>The transport uses the member of this structure as follows:


<DL>
<DT><B>AddressHandle</B></DT>

<DD>Specifies a client-supplied handle to the file object representing the address. 

<P>The transport can call <B>ObReferenceObjectByHandle</B> to convert this handle into a pointer to the file object, which produces a reference to the file object representing the local-node address to be associated with the connection endpoint. The transport uses the <B>FsContext</B> and, possibly, <B>FsContext2</B> fields of this file object to access the state it maintains about this address. 

</DD>
</DL>
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>TdiKrnl.h</I>. Include <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>A kernel-mode client must make an associate-address request before it makes an endpoint-to-endpoint connection to the remote node either with a TDI_LISTEN request, optionally followed by a TDI_ACCEPT request, to the transport driver or with a TDI_CONNECT request to the transport driver. The client can get or set information about the connection with TDI_QUERY_INFORMATION or TDI_SET_INFORMATION requests before making an associate-address request.</P>

<P>After the connection endpoint has been associated with the address, the client can make any other TDI_<I>XXX</I> requests to the transport on the connection with one exception: it cannot make a TDI_ASSOCIATE_ADDRESS request again for the specific endpoint until it makes a successful TDI_DISASSOCIATE_ADDRESS request to the transport.</P>

<P>For example, a client might register one or more ClientEvent(Chained)Receive(Expedited) handlers on the address by submitting one or more TDI_SET_EVENT_HANDLER requests if its subsequent TDI_LISTEN request will be satisfied as soon as a remote-node peer offers a connection. On the other hand, a client that sets up a listen for a delayed-connection acceptance might defer registering receive-event handlers until just before it submits a TDI_ACCEPT for an offered connection. </P>

<P><B>TdiBuildAssociateAddress</B> is the macro a client uses to fill in this IRP.</P>

<H4>See Also</H4>

<P><A HREF="35tdicli_4qnm.htm"><B>ClientEventChainedReceive</B></A>, <A HREF="35tdicli_57n6.htm"><B>ClientEventChainedReceiveExpedited</B></A>, <A HREF="35tdicli_7yeq.htm"><B>ClientEventReceive</B></A>, <A HREF="35tdicli_7jea.htm"><B>ClientEventReceiveExpedited</B></A>, <A HREF="32ioctl_3376.htm"><B>TDI_ACCEPT</B></A>, <A HREF="34bldmac_72ia.htm"><B>TdiBuildAssociateAddress</B></A>, <A HREF="32ioctl_2m42.htm"><B>TDI_CONNECT</B></A>, <A HREF="32ioctl_31ma.htm"><B>TDI_DISASSOCIATE_ADDRESS</B></A>, <A HREF="31tddisp_2sfm.htm"><B>TdiDispatchInternalDeviceControl</B></A>, <A HREF="32ioctl_6jua.htm"><B>TDI_LISTEN</B></A>, <A HREF="32ioctl_508i.htm"><B>TDI_QUERY_INFORMATION</B></A>, <A HREF="32ioctl_4hde.htm"><B>TDI_SET_EVENT_HANDLER</B></A>, <A HREF="32ioctl_23ci.htm"><B>TDI_SET_INFORMATION</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TDI_ASSOCIATE_ADDRESS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
