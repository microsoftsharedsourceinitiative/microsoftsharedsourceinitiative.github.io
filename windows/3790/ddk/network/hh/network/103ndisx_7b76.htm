<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisOpenConfiguration</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisOpenConfiguration">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisopenconfiguration_nr"></A>NdisOpenConfiguration</H1>

<P><B>NdisOpenConfiguration</B> returns a handle for a registry key in which an NDIS NIC driver’s advanced configuration parameters are stored.</P>

<PRE class=syntax><B>VOID
  NdisOpenConfiguration(</B>
    <B>OUT PNDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>OUT PNDIS_HANDLE</B>  <I>ConfigurationHandle</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>WrapperConfigurationContext</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the status of its attempt to open the registry key. Possible return values are:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>NDIS has initialized accessed to the registry key in which the miniport driver's advanced configuration parameters are stored.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>The key could not be opened.</DD>
</DL>
</DD>

<DT><I>ConfigurationHandle</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns a handle to the registry key in which an NDIS NIC driver's advanced configuration parameters are stored. Value entries under this key were provided by the driver’s installation script. </DD>

<DT><I>WrapperConfigurationContext</I></DT>

<DD>Specifies the handle input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>With the handle returned by <B>NdisOpenConfiguration</B>, an NDIS miniport driver can call <A HREF="103ndisx_5ek2.htm"><B>NdisReadConfiguration</B></A> one or more times to extract information about a NIC’s advanced configuration parameters from the registry. A miniport driver can also call <A HREF="103ndisx_5e9f.htm"><B>NdisReadNetworkAddress</B></A> with this handle to retrieve software-configurable network address information that was stored in the registry when its NIC was installed in the current machine. </P>

<P>A miniport driver can call <A HREF="103ndisx_1k6q.htm"><B>NdisOpenConfigurationKeyByName</B></A> or <A HREF="103ndisx_1e2a.htm"><B>NdisOpenConfigurationKeyByIndex</B></A> to open a subkey relative to the key for which <B>NdisOpenConfiguration</B> returned the handle.</P>

<P>A NIC driver should call <A HREF="103ndisx_175e.htm"><B>NdisMSetAttributes</B></A> or <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A> to identify the type of I/O bus on which its NIC is likely to be found before that driver calls any of the bus-type-specific configuration functions. </P>

<P>After a driver has consumed and, possibly, modified the registry configuration information, the driver must call <A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A> to release the handle obtained from <B>NdisOpenConfiguration</B> and to free any temporary storage NDIS allocated in the driver’s calls to <B>NdisReadConfiguration</B>, <B>NdisReadNetworkAddress</B>, and/or <A HREF="103ndisx_5kaa.htm"><B>NdisWriteConfiguration</B></A>. </P>

<P>Callers of <B>NdisOpenConfiguration</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_54ky.htm"><B>NdisCloseConfiguration</B></A>, <A HREF="103ndisx_0sj7.htm"><B>NdisIMRegisterLayeredMiniport</B></A>, <A HREF="103ndisx_81de.htm"><B>NdisMMapIoSpace</B></A>, <A HREF="103ndisx_5uk2.htm"><B>NdisMRegisterInterrupt</B></A>, <A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A>, <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A>, <A HREF="103ndisx_175e.htm"><B>NdisMSetAttributes</B></A>, <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A>, <A HREF="103ndisx_1e2a.htm"><B>NdisOpenConfigurationKeyByIndex</B></A>, <A HREF="103ndisx_1k6q.htm"><B>NdisOpenConfigurationKeyByName</B></A>, <A HREF="103ndisx_6yr6.htm"><B>NdisOpenProtocolConfiguration</B></A>, <A HREF="103ndisx_5ek2.htm"><B>NdisReadConfiguration</B></A>, <A HREF="103ndisx_019v.htm"><B>NdisReadEisaSlotInformation</B></A>, <A HREF="103ndisx_5e9f.htm"><B>NdisReadNetworkAddress</B></A>, <A HREF="103ndisx_3egi.htm"><B>NdisReadPciSlotInformation</B></A>, <A HREF="103ndisx_2cfm.htm"><B>NdisRegisterProtocol</B></A>, <A HREF="103ndisx_5kaa.htm"><B>NdisWriteConfiguration</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisOpenConfiguration"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
