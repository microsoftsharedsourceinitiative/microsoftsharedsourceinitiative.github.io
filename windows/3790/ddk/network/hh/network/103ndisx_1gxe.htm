<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMRegisterDmaChannel</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMRegisterDmaChannel">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismregisterdmachannel_nr"></A>NdisMRegisterDmaChannel</H1>

<P><B>NdisMRegisterDmaChannel</B> claims a system DMA controller channel during initialization for DMA operations on a slave NIC or on an ISA bus-master NIC. </P>

<PRE class=syntax><B>NDIS_STATUS 
  NdisMRegisterDmaChannel(
    OUT PNDIS_HANDLE</B>  <I>MiniportDmaHandle</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN UINT</B>  <I>DmaChannel</I><B>,</B>
    <B>IN BOOLEAN</B>  <I>Dma32BitAddresses</I><B>,</B>
    <B>IN PNDIS_DMA_DESCRIPTION</B>  <I>DmaDescription</I><B>,</B>
    <B>IN ULONG</B>  <I>MaximumLength
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportDmaHandle</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns a handle the miniport driver uses in subsequent calls to the <B>NdisM</B><I>Xxx</I> system DMA functions.</DD>

<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>DmaChannel</I></DT>

<DD>Ignored. Set the DMA channel, if any, at <I>DmaDescription</I>.  </DD>

<DT><I>Dma32BitAddresses</I></DT>

<DD>Specifies TRUE if the NIC has 32 address lines.</DD>

<DT><I>DmaDescription</I></DT>

<DD>Pointer to an NDIS_DMA_DESCRIPTION structure filled in by the caller. This structure is defined as follows: 

<PRE>typedef struct _NDIS_DMA_DESCRIPTION {
    BOOLEAN DemandMode;
    BOOLEAN AutoInitialize;
    BOOLEAN DmaChannelSpecified;
    DMA_WIDTH DmaWidth;
    DMA_SPEED DmaSpeed;
    ULONG DmaPort;
    ULONG DmaChannel;
} NDIS_DMA_DESCRIPTION, *PNDIS_DMA_DESCRIPTION;</PRE>


<P>The driver should initialize this structure with zeros before filling in the following members:


<DL>
<DT><B>DemandMode</B></DT>

<DD>Specifies TRUE if the slave NIC uses the system DMA controller’s demand mode.</DD>

<DT><B>AutoInitialize</B></DT>

<DD>Specifies TRUE if the slave NIC uses the system DMA controller’s autoinitialize mode.</DD>

<DT><B>DmaChannelSpecified</B></DT>

<DD>Specifies TRUE if <B>DmaChannel</B> is set to the bus-relative value of the system DMA controller channel used by the NIC.</DD>

<DT><B>DmaWidth</B></DT>

<DD>Specifies the transfer width for DMA operations, one of <B>Width8Bits</B>, <B>Width16Bits</B>, or <B>Width32Bits</B>.</DD>

<DT><B>DmaSpeed</B></DT>

<DD>Specifies one of <B>Compatible</B>, <B>TypeA</B>, <B>TypeB</B>, or <B>TypeC</B>.</DD>

<DT><B>DmaPort</B></DT>

<DD>This refers to the MCA bus, which is no longer supported. This member must be zero.</DD>

<DT><B>DmaChannel</B></DT>

<DD>Specifies the bus-relative number of the system DMA controller channel used by the NIC.</DD>
</DL>
</DD>

<DT><I>MaximumLength</I></DT>

<DD>Specifies the maximum number of bytes the NIC can transfer in a single DMA operation. If the NIC has unlimited transfer capacity,set this parameter to -1. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>NdisMRegisterDmaChannel</B> can return one of the following status values:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>NDIS claimed the specified DMA channel in the registry for the caller’s NIC and set up necessary resources for subsequentl DMA operations by the miniport driver.</DD>

<DT>NDIS_STATUS_RESOURCE_CONFLICT</DT>

<DD>An attempt to claim the DMA channel in the registry has failed, possibly because another driver has already claimed that channel for its device. <B>NdisMRegisterDmaChannel </B>logs an error if this occurs.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>NDIS could not allocate the system resources it needs to support DMA operations by this NIC driver.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>Either the bus type or bus number is out of range or the driver declared its NIC a bus master on an I/O bus other than ISA. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A driver of a slave-DMA NIC must call <B>NdisMRegisterDmaChannel</B> from its <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function to reserve system resources for subsequent DMA operations and to claim them in the registry. </P>

<P>The driver of an ISA bus-master NIC also must call <B>NdisMRegisterDmaChannel</B> from <I>MiniportInitialize</I> to claim a system DMA controller channel for its NIC in the registry. </P>

<P><I>MiniportInitialize</I> must call <A HREF="103ndisx_175e.htm"><B>NdisMSetAttributes</B></A> or <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A> before calling <B>NdisMRegisterDmaChannel</B>. </P>

<P><I>MiniportInitialize</I> obtained the bus-relative values passed to <B>NdisMRegisterDmaChannel</B> either from the registry or by calling a bus-type-specific <B>Ndis</B><I>Xxx</I> configuration function. </P>

<P>If such a driver cannot allocate the system DMA resources that its device needs, <I>MiniportInitialize</I> should release all resources it already allocated for its NIC and, then, fail initialization for that NIC. </P>

<P>Callers of <B>NdisMRegisterDmaChannel</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_00ky.htm"><B>NdisMCompleteDmaTransfer</B></A>, <A HREF="103ndisx_3nqq.htm"><B>NdisMDeregisterDmaChannel</B></A>, <A HREF="103ndisx_76nm.htm"><B>NdisMPciAssignResources</B></A>, <A HREF="103ndisx_175e.htm"><B>NdisMSetAttributes</B></A>, <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A>, <A HREF="103ndisx_38mq.htm"><B>NdisMSetupDmaTransfer</B></A>, <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A>, <A HREF="103ndisx_019v.htm"><B>NdisReadEisaSlotInformation</B></A>, <A HREF="103ndisx_3egi.htm"><B>NdisReadPciSlotInformation</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMRegisterDmaChannel"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
