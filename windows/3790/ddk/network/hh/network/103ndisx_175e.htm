<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMSetAttributes</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMSetAttributes">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismsetattributes_nr"></A>NdisMSetAttributes</H1>

<P><B>NdisMSetAttributes</B> informs the NDIS library about significant features of the caller’s NIC during initialization. </P>

<PRE class=syntax><B>VOID 
  NdisMSetAttributes(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B><I>
    </I><B>IN NDIS_HANDLE</B>  <I>MiniportAdapterContext</I><B>,</B>
    <B>IN BOOLEAN</B>  <I>BusMaster</I><B>,</B>
    <B>IN NDIS_INTERFACE_TYPE</B>  <I>AdapterType
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the handle input to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>MiniportAdapterContext</I></DT>

<DD>Specifies a handle for a resident context area allocated by <I>MiniportInitialize</I>. </DD>

<DT><I>BusMaster</I></DT>

<DD>Specifies TRUE if the caller’s NIC is a bus-master DMA device.</DD>

<DT><I>AdapterType</I></DT>

<DD>Specifies the I/O bus interface type of the caller’s NIC, which usually is the type of I/O bus on which the NIC is connected, as one of the following:

<DL>
<DT><B>NdisInterfaceInternal</B></DT>

<DD>Specifies a host-specific internal interface.</DD>

<DT><B>NdisInterfaceIsa</B></DT>

<DD>Specifies the ISA interface.</DD>

<DT><B>NdisInterfaceEisa</B></DT>

<DD>Specifies the extended ISA (EISA) interface.</DD>

<DT><B>NdisInterfaceMca</B></DT>

<DD>This refers to the MCA bus, which is no longer supported.</DD>

<DT><B>NdisInterfaceTurboChannel</B></DT>

<DD>Specifies the Turbo Channel interface.</DD>

<DT><B>NdisInterfacePci</B></DT>

<DD>Specifies the Peripheral Component Interconnect (PCI) interface.</DD>

<DT><B>NdisInterfacePcMcia</B></DT>

<DD>Specifies the Personal Computer Memory Card International Association (PC Card) interface.
</DD>
</DL>
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>A <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function must call <B>NdisMSetAttributes</B> or <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A> before calling any other <B>NdisMRegister</B><I>Xxx</I> or <B>Ndis</B><I>Xxx </I>function that depends on the information supplied to <B>NdisMSetAttributes(Ex)</B>. For example, a call to <A HREF="103ndisx_44j6.htm"><B>NdisMAllocateMapRegisters</B></A> will fail if <I>MiniportInitialize</I> has not yet called <B>NdisMSetAttributes</B> with <I>BusMaster</I> set to TRUE or <B>NdisMSetAttributesEx</B> with NDIS_ATTRIBUTE_BUS_MASTER set in the <I>AttributeFlags</I>. </P>

<P>In general, a NIC driver must call <B>NdisMSetAttributes(Ex)</B> before it calls any <B>Ndis</B><I>Xxx</I> function that claims hardware resources in the registry for its NIC, because NDIS must have the <I>BusMaster</I> or <I>AttributeFlags</I> value, respectively, before such a call is made and because the driver usually needs the memory at <I>MiniportAdapterContext</I> to store information for these calls. This restriction implies that a NIC driver’s <I>MiniportInitialize</I> function <I>cannot</I> call the following <B>Ndis</B><I>Xxx</I> before it calls <B>NdisMSetAttributes(Ex)</B>:

<UL>
	<LI><A HREF="103ndisx_76nm.htm"><B>NdisMPciAssignResources</B></A> </LI>

	<LI><B>NdisMAllocateMapRegisters</B> and <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A> </LI>

	<LI><A HREF="103ndisx_81de.htm"><B>NdisMMapIoSpace</B></A> and, consequently, the <B>Ndis..Register</B><I>Xxx</I> functions </LI>

	<LI><A HREF="103ndisx_1gxe.htm"><B>NdisMRegisterDmaChannel</B></A> </LI>

	<LI><A HREF="103ndisx_5uk2.htm"><B>NdisMRegisterInterrupt</B></A> </LI>

	<LI><A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A> and, consequently, the <B>NdisRaw..Port</B><I>Xxx</I> functions </LI>
</UL>

<P>However, before calling <B>NdisMSetAttributes(Ex)</B>, a NIC driver can call the <B>Ndis..Configuration</B> functions to retrieve configuration information installed in the registry and the <B>NdisImmediate</B><I>Xxx</I>, such as <A HREF="103ndisx_5lgy.htm"><B>NdisImmediateReadPciSlotInformation</B></A> or <A HREF="103ndisx_873m.htm"><B>NdisImmediateReadSharedMemory</B></A>, as well as the <B>NdisImmediate..Port</B><I>Xxx</I> functions. <I>MiniportInitialize</I> also can call the bus-type-specific <B>NdisRead</B><I>Xxx</I> functions, such as <B>NdisReadPciSlotInformation</B>, as long as the installed registry entry for the driver’s interface type matches the bus-type-specific <B>NdisRead</B><I>Xxx</I> <I>MiniportInitialize</I> calls. </P>

<P>The <I>MiniportAdapterContext</I> handle supplied to <B>NdisMSetAttributes(Ex)</B> becomes an input parameter to all <I>MiniportXxx</I> functions that were registered, along with <I>MiniportInitialize</I>, in the call to <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A>. Usually, this handle is a pointer to resident memory, allocated by <I>MiniportInitialize</I>, in which the driver maintains NIC-specific run-time state. </P>

<P>Intermediate drivers must call <B>NdisMSetAttributesEx</B>, rather than <B>NdisMSetAttributes</B>. NIC drivers can call either of these functions, but <B>NdisMSetAttributesEx</B> allows a miniport driver to adjust the intervals at which its <A HREF="101mini_2zua.htm"><I>MiniportCheckForHang</I></A> and <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A> functions are called. </P>

<P>Callers of <B>NdisMSetAttributes</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_2zua.htm"><I>MiniportCheckForHang</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_5hiq.htm"><I>MiniportReset</I></A>, <A HREF="103ndisx_4m42.htm"><B>NdisAllocateMemoryWithTag</B></A>, <A HREF="103ndisx_5lgy.htm"><B>NdisImmediateReadPciSlotInformation</B></A>, <A HREF="103ndisx_0msy.htm"><B>NdisImmediateReadPortUchar</B></A>, <A HREF="103ndisx_3joy.htm"><B>NdisImmediateReadPortUlong</B></A>, <A HREF="103ndisx_6e0i.htm"><B>NdisImmediateReadPortUshort</B></A>, <A HREF="103ndisx_873m.htm"><B>NdisImmediateReadSharedMemory</B></A>, <A HREF="103ndisx_0sj7.htm"><B>NdisIMRegisterLayeredMiniport</B></A>, <A HREF="103ndisx_44j6.htm"><B>NdisMAllocateMapRegisters</B></A>, <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A>, <A HREF="103ndisx_81de.htm"><B>NdisMMapIoSpace</B></A>, <A HREF="103ndisx_76nm.htm"><B>NdisMPciAssignResources</B></A>, <A HREF="103ndisx_1gxe.htm"><B>NdisMRegisterDmaChannel</B></A>, <A HREF="103ndisx_5uk2.htm"><B>NdisMRegisterInterrupt</B></A>, <A HREF="103ndisx_76k2.htm"><B>NdisMRegisterIoPortRange</B></A>, <A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A>, <A HREF="103ndisx_1pmb.htm"><B>NdisMSetAttributesEx</B></A>, <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A>, <A HREF="103ndisx_019v.htm"><B>NdisReadEisaSlotInformation</B></A>, <A HREF="103ndisx_73aq.htm"><B>NdisReadEisaSlotInformationEx</B></A>, <A HREF="103ndisx_3egi.htm"><B>NdisReadPciSlotInformation</B></A>, <A HREF="103ndisx_18mq.htm"><B>NdisWritePciSlotInformation</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMSetAttributes"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
