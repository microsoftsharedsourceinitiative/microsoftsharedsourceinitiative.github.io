<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TDI Transport Driver Routines</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TDI Transport Driver Routines">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdi_transport_driver_routines_ng"></A>TDI Transport Driver Routines</H1>

<P>Every TDI-compliant transport driver is a standard intermediate driver that must export a number of entry points called by the I/O Manager. </P>

<P>Some of a TDI transport’s standard driver routines initialize and unload the driver itself. Others are standard Dispatch routines that the I/O Manager calls when TDI clients make calls to system support routines, such as <B>ZwCreateFile</B> and <B>IoCallDriver</B>. </P>

<P>Like other kernel-mode drivers, a TDI transport’s <B>DriverEntry</B> routine sets up one or more driver-supplied Dispatch routines to handle various types of I/O requests passed in as IRPs. A TDI driver can export a single Dispatch routine to handle all incoming IRPs or a separate Dispatch<I>Xxx</I> routine to handle each IRP_MJ_<I>XXX</I> the driver must support. General requirements for Dispatch routines are discussed in detail in the Kernel-mode Driver Design Guide. For more information about TDI-specific requirements for dispatch routines, see <A HREF="304tovw_136v.htm">TDI Routines, Macros, and Callbacks </A> and the Network Driver Reference. </P>

<P>As a TDI transport completes an operation requested by its client, the I/O Manager calls any client-supplied IoCompletion routine that the client set in the IRP before that client submitted it to the underlying transport. </P>

<P>In addition, such a transport driver must call the TDI client at preregistered entry points within the TDI client’s code when specific network events occur. These client-supplied event handlers also summarized in <A HREF="304tovw_136v.htm">TDI Routines, Macros, and Callbacks</A> and are described in the Network Driver Reference.</P>

<P>At its lower edge, a TDI driver that is monolithic must export a set of Protocol<I>Xxx</I> functions to be called by the NDIS library on behalf of underlying NDIS intermediate or NIC drivers. These NDIS driver lower-edge functions are described earlier in this guide and in a function-specific manner in the Network Driver Reference. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TDI%20Transport%20Driver%20Routines"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
