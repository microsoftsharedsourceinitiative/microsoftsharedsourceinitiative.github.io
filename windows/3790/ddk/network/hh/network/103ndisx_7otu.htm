<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisDprAllocatePacket</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisDprAllocatePacket">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisdprallocatepacket_nr"></A>NdisDprAllocatePacket</H1>

<P><B>NdisDprAllocatePacket</B> allocates and initializes a packet descriptor when the caller is running at IRQL = DISPATCH_LEVEL. </P>

<PRE class=syntax><B>VOID</B>
<B>  NdisDprAllocatePacket(</B>
    <B>OUT PNDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>OUT PNDIS_PACKET</B>  <B>*</B><I>Packet</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>PoolHandle</I>
    <B>);</B> </PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the final status of the request, which can be one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The caller can use the packet descriptor returned at <I>Packet</I>. </DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>The free list for the packet pool currently has no available entries The variable at <I>Packet</I> is set to NULL. </DD>
</DL>
</DD>

<DT><I>Packet</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns a pointer to the allocated packet descriptor.</DD>

<DT><I>PoolHandle</I></DT>

<DD>Specifies the handle returned by a preceding call to <A HREF="103ndisx_6t82.htm"><B>NdisAllocatePacketPool</B></A>. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisDprAllocatePacket</B> runs slightly faster than <A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A> because NDIS can acquire the spin lock it uses to synchronize access to the packet pool without having to raise IRQL. </P>

<P>The caller of <B>NdisDprAllocatePacket</B> must eventually free the allocated packet descriptor by calling <A HREF="103ndisx_9ucz.htm"><B>NdisDprFreePacket</B></A> or <A HREF="103ndisx_47le.htm"><B>NdisFreePacket</B></A>.</P>

<P>A caller of <B>NdisDprAllocatePacket</B> <I>must</I> be running at IRQL = DISPATCH_LEVEL. Otherwise, the driver should call <B>NdisAllocatePacket</B>. </P>

<H4>See Also</H4>

<P><A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A>, <A HREF="103ndisx_6t82.htm"><B>NdisAllocatePacketPool</B></A>, <A HREF="103ndisx_3zhu.htm"><B>NdisDprAllocatePacketNonInterlocked</B></A>, <A HREF="103ndisx_9ucz.htm"><B>NdisDprFreePacket</B></A>, <A HREF="103ndisx_47le.htm"><B>NdisFreePacket</B></A>, <A HREF="103ndisx_7uya.htm"><B>NdisReleaseSpinLock</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisDprAllocatePacket"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
