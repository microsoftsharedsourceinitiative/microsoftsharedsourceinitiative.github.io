<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Initializing the NDIS Library and Registering the Miniport Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Initializing the NDIS Library and Registering the Miniport Driver">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driverentry_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_initializing_the_ndis_library_and_registering_the_miniport_driver_ng"></A>Initializing the NDIS Library and Registering the Miniport Driver</H2>

<P>When a miniport driver is loaded, the operating system creates a driver object for the miniport driver and calls the <A HREF="JavaScript:hhobj_1.Click()"><B>DriverEntry</B></A> function of that driver. Within the context of its <B>DriverEntry</B> function, the miniport driver calls:

<UL>
	<LI><A HREF="103ndisx_244y.htm"><B>NdisMInitializeWrapper</B></A>, with the address of the driver object and the associated registry path to the driver-specific information </LI>

	<LI><A HREF="103ndisx_6tte.htm"><B>NdisMRegisterMiniport</B></A>, to register itself with NDIS, indicating which NDIS version it is compatible with and supplying the entry points of its upper-edge (<I>MiniportXxx</I>) functions. The NDIS Library saves these entry points for use in subsequent calls to the miniport driver.</LI>
</UL>

<P>If the call to <B>NdisMRegisterMiniport</B> or <A HREF="103ndisx_0sj7.htm"><B>NdisIMRegisterLayeredMiniport</B></A> does not return NDIS_STATUS_SUCCESS: 

<UL>
	<LI><B>DriverEntry</B> returns the value returned by <B>NdisMRegisterMiniport</B> or <B>NdisIMRegisterLayeredMiniport</B>.</LI>

	<LI><B>DriverEntry</B> calls <A HREF="103ndisx_7mgi.htm"><B>NdisTerminateWrapper</B></A>, which causes NDIS to clean up the resources it allocated when the miniport driver called <B>NdisMInitializeWrapper</B>.</LI>
</UL>

<P>For a detailed description of the <B>DriverEntry</B> function, see <A HREF="203entry_5l5z.htm">NDIS Miniport Driver DriverEntry Function</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Initializing%20the%20NDIS%20Library%20and%20Registering%20the%20Miniport%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
