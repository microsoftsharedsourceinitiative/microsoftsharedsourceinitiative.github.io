<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS WAN Debug Extensions For NT-Based Operating Systems</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS WAN Debug Extensions For NT-Based Operating Systems">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_wan_debug_extensions_for_nt_based_operating_systems_ng"></A>NDIS WAN Debug Extensions For NT-Based Operating Systems</H1>

<P>For NT-based operating systems, you can use a checked version of the NDISWAN intermediate driver (<I>Ndiswan.sys</I>) plus debugging variables in NDISWAN to debug various WAN miniport drivers. You can enable NDISWAN debug tracing by setting values in the registry. When you set up NDISWAN debug tracing, you are actually enabling one or more levels of <B>DbgPrint</B> statements within NDISWAN, which, in most cases, provides enough information to successfully debug most WAN miniport driver problems. </P>

<P class=note><B>Note</B>&nbsp;&nbsp;By enabling the trace levels within NDISWAN, you could adversely affect timing and performance parameters, which could cause or contribute to additional failures.</P>

<P>You can enable different levels of debug tracing in various NDISWAN components by adding the following entries and values to the <B>HKLM\System\CurrentControlSet\Services\NdisWan\Parameters</B> key in the registry:</P>

<PRE>REG_DWORD DebugIdentifier
REG_DWORD DebugLevel </PRE>

<P>The following indicates acceptable values to set for <B>DebugLevel</B> and <B>DebugIdentifier</B>:

<DL>
<DT><B>DebugLevel</B></DT>

<DD>Selects the level or amount of debug tracing in NDISWAN components that are selected with the <B>DebugIdentifier</B> value. The following values specify levels that you can select: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=26%>Level</TH>
<TH align=left width=59%>Description</TH>
<TH align=left width=15%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=26%>DBG_DEATH</TD>
<TD width=59%>Fatal errors, which can cause the operating system to crash.</TD>
<TD width=15%>1</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>DBG_CRITICAL_ERROR</TD>
<TD width=59%>Critical errors.</TD>
<TD width=15%>2</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>DBG_FAILURE</TD>
<TD width=59%>Failures.</TD>
<TD width=15%>4</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>DBG_INFO</TD>
<TD width=59%>Information.</TD>
<TD width=15%>6</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>DBG_TRACE</TD>
<TD width=59%>Trace.</TD>
<TD width=15%>8</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>DBG_VERBOSE</TD>
<TD width=59%>Verbose trace information.</TD>
<TD width=15%>10</TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>DebugIdentifier</B></DT>

<DD>Selects various NDISWAN components to debug. The following values specify the NDISWAN components that you can select: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=29%>Component</TH>
<TH align=left width=49%>Description</TH>
<TH align=left width=22%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_INIT</TD>
<TD width=49%>Handles adapter initialization.</TD>
<TD width=22%>0x00000001</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_MINIPORT</TD>
<TD width=49%>Handles adapter operations.</TD>
<TD width=22%>0x00000002</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_PROTOCOL</TD>
<TD width=49%>Handles protocol operations.</TD>
<TD width=22%>0x00000004</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_SEND</TD>
<TD width=49%>Handles sending data over the network.</TD>
<TD width=22%>0x00000008</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_RECEIVE</TD>
<TD width=49%>Handles receiving data from the network.</TD>
<TD width=22%>0x00000010</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_IO</TD>
<TD width=49%>Handles input and output operations.</TD>
<TD width=22%>0x00000020</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_MEMORY</TD>
<TD width=49%>Handles memory management.</TD>
<TD width=22%>0x00000040</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_VJ</TD>
<TD width=49%>Handles virtual connections.</TD>
<TD width=22%>0x00000080</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_TAPI</TD>
<TD width=49%>Handles TAPI operations.</TD>
<TD width=22%>0x00000100</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_CCP</TD>
<TD width=49%>Handles operations for Compression Control Protocol (CCP).</TD>
<TD width=22%>0x00000200</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_LOOPBACK</TD>
<TD width=49%>Handles loopback operations. </TD>
<TD width=22%>0x00000400</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_MULTILINK_RECV</TD>
<TD width=49%>Handles receiving on multiple links.</TD>
<TD width=22%>0x00000800</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_MULTILINK_SEND</TD>
<TD width=49%>Handles sending on multiple links.</TD>
<TD width=22%>0x00001000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_SEND_VJ</TD>
<TD width=49%>Handles sending on virtual connections.</TD>
<TD width=22%>0x00002000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_RECV_VJ</TD>
<TD width=49%>Handles receiving on virtual connections.</TD>
<TD width=22%>0x00004000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_CL</TD>
<TD width=49%>Handles operations for connection-oriented clients (CL).</TD>
<TD width=22%>0x00008000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_CM</TD>
<TD width=49%>Handles call manager (CM) operations.</TD>
<TD width=22%>0x00010000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_INDICATE</TD>
<TD width=49%>Handles indicating data up the stack.</TD>
<TD width=22%>0x00020000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_BACP</TD>
<TD width=49%>Handles operations for Bandwidth Allocation Control Protocol (BACP).</TD>
<TD width=22%>0x00040000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_REQUEST</TD>
<TD width=49%>Handles requests.</TD>
<TD width=22%>0x00080000</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>DBG_ALL</TD>
<TD width=49%>Handles all NDISWAN components.</TD>
<TD width=22%>0xFFFFFFFF</TD>
</TR>
</TABLE><BR>



<P>You can select more than one NDISWAN component. If more than one component is selected, OR the data values together. 
</DD>
</DL>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS%20WAN%20Debug%20Extensions%20For%20NT-Based%20Operating%20Systems"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
