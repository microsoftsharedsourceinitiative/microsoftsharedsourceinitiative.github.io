<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCompleteDmaTransfer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCompleteDmaTransfer">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcompletedmatransfer_nr"></A>NdisMCompleteDmaTransfer</H1>

<P><B>NdisMCompleteDmaTransfer</B> indicates that a system DMA transfer operation has completed. It resets the system DMA controller in preparation for further DMA transfers.</P>

<PRE class=syntax><B>VOID 
  NdisMCompleteDmaTransfer(
    OUT PNDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>MiniportDmaHandle</I><B>,</B>
    <B>IN PNDIS_BUFFER</B>  <I>Buffer</I><B>,</B>
    <B>IN ULONG</B>  <I>Offset</I><B>,</B>
    <B>IN ULONG</B>  <I>Length</I><B>,</B>
    <B>IN BOOLEAN</B>  <I>WriteToDevice
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Pointer to a caller-supplied variable in which this function returns the final status of the DMA transfer, which can be one of the following:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The data has been transferred and flushed to host memory or to the device to maintain data integrity.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>The DMA controller was released but the data transfer might be incoherent. </DD>
</DL>
</DD>

<DT><I>MiniportDmaHandle</I></DT>

<DD>Specifies the handle returned when <I>MiniportInitialize</I> called <A HREF="103ndisx_1gxe.htm"><B>NdisMRegisterDmaChannel</B></A>.</DD>

<DT><I>Buffer</I></DT>

<DD>Pointer to the buffer descriptor previously passed to <A HREF="103ndisx_38mq.htm"><B>NdisMSetupDmaTransfer</B></A>.</DD>

<DT><I>Offset </I></DT>

<DD>Specifies the byte offset at which the transfer began. This value also was passed to <B>NdisMSetupDmaTransfer</B>.</DD>

<DT><I>Length</I></DT>

<DD>Specifies the length in bytes of the transfer. This value also was passed to <B>NdisMSetupDmaTransfer</B>.</DD>

<DT><I>WriteToDevice</I></DT>

<DD>Specifies TRUE if the transfer was from the host to the NIC, as, for example, a send operation.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisMCompleteDmaTransfer</B> must be called with <I>WriteToDevice</I> set to TRUE before the transferred data is considered present in the NIC’s memory. <B>NdisMCompleteDmaTransfer</B> must be called with <I>WriteToDevice</I> set to FALSE before the transferred data can be read from host memory.</P>

<P>Callers of <B>NdisMCompleteDmaTransfer</B> run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="103ndisx_3nqq.htm"><B>NdisMDeregisterDmaChannel</B></A>, <A HREF="103ndisx_1gxe.htm"><B>NdisMRegisterDmaChannel</B></A>, <A HREF="103ndisx_38mq.htm"><B>NdisMSetupDmaTransfer</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCompleteDmaTransfer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
