<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Winsock Sections</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Winsock Sections">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_winsock_sections_ng"></A>Winsock Sections</H2>

<P>An INF file for a <B>NetTrans</B> component that provides a Winsock interface must specify this Winsock dependency. Such an INF file must contain a <I>Winsock-install</I> section. To create a Winsockinstall section, add the .Winsock extension to the <I>DDInstall</I> section name for the protocol. For example, if the <I>DDInstall</I> section for a protocol is named <I>Ipx</I>, the <I>Winsock-install</I> section for that protocol must be named Ipx.Winsock.</P>

<P>A Winsock install section must contain an <B>AddSock</B> directive. The <B>AddSock</B> directive specifies a vendor-named section that contains values to be added to the component's <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\<BR>
</B><I>TransportDriverName</I><B>\Params\Winsock</B> key.</P>

<P>The vendor-named section referenced by the <B>AddSock</B> directive must contain the following required values:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=34%>Value Name</TH>
<TH align=left width=66%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=34%>TransportService</TD>
<TD width=66%>A REG_SZ value that specifies the service name of the protocol. This must be the same as the <B>Ndi\Service</B> value for the protocol. For more information, see <A HREF="501install_60rr.htm">Adding Service-Related Values to the Ndi Key</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>HelperDllName</TD>
<TD width=66%>A REG_EXPAND_SZ value that specifies the path to the Windows Sockets helper (WSH) DLL for the protocol. For more information, see <A HREF="306sock_9zs7.htm">WSH DLL Function Summary</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MaxSockAddrLength</TD>
<TD width=66%>A REG_DWORD value that specifies the largest valid SOCKADDR size, in bytes, for the WSH DLL</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MinSockAddrLength</TD>
<TD width=66%>A REG_DWORD value that specifies the smallest valid SOCKADDR size, in bytes, for the WSH DLL</TD>
</TR>
</TABLE><BR>

<P>If an optional <B>ProviderId</B> for a name space provider is specified, the following values must also be specified:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=34%>Value Name</TH>
<TH align=left width=66%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=34%>ProviderId</TD>
<TD width=66%>A REG_SZ value that specifies the Globally Unique Identifier (GUID) that identifies the name space provider. The GUID is used as a key to all subsequent references to the name space provider. Obtain the GUID by running the <I>uuidgen.exe</I> utility. For more information about this utility, see the Platform SDK.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>LibraryPath</TD>
<TD width=66%>A REG_EXPAND_SZ value that specifies the complete path to the name space provider DLL.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>DisplayString</TD>
<TD width=66%>A localizable string that specifies the name displayed for the name space provider in the user interface.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>SupportedNameSpace</TD>
<TD width=66%>A REG_DWORD value which specifies the name space that is supported by the namespace provider. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>Version</TD>
<TD width=66%>An optional REG_DWORD value that specifies the version number of the name space provider. If this value is not specified, the default value (1) is used for the version number.</TD>
</TR>
</TABLE><BR>

<P>The following name space values can be assigned to SupportedNameSpace and are defined in <I>Winsock2.h</I>:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=69%>Namespace</TH>
<TH align=left width=31%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_ALL</TD>
<TD width=31%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_SAP</TD>
<TD width=31%>1</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_NDS</TD>
<TD width=31%>2</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_PEER_BROWSE</TD>
<TD width=31%>3</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_TCPIP_LOCAL</TD>
<TD width=31%>10</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_TCPIP_HOSTS</TD>
<TD width=31%>11</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_DNS</TD>
<TD width=31%>12</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_NETBT</TD>
<TD width=31%>13</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_WINS</TD>
<TD width=31%>14</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_NBP</TD>
<TD width=31%>20</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_MS</TD>
<TD width=31%>30</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_STDA</TD>
<TD width=31%>31</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_CAIRO</TD>
<TD width=31%>32</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_X500</TD>
<TD width=31%>40</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_NIS</TD>
<TD width=31%>41</TD>
</TR>

<TR VALIGN="top">
<TD width=69%>NS_WRQ</TD>
<TD width=31%>50</TD>
</TR>
</TABLE><BR>

<P>For more information about name space providers, see the Platform SDK documentation.</P>

<P>The following example shows Winsock sections for an IPX protocol:</P>

<PRE>[Ipx.Winsock]
AddSock = Install.IpxWinsock
 
[Install.IpxWinsock]
TransportService = nwlinkipx
HelperDllName = "%%SystemRoot%%\System32\wshisn.dll"
MaxSockAddrLength = 0x10
MinSockAddrLength = 0xe
ProviderId = "<I>GUID</I>"
LibraryPath = "%SystemRoot%\\System32\\nwprovau.dll"
DisplayString = %NwlnkIpx_Desc%
SupportedNameSpace = 1
Version = 2</PRE>

<P>An INF file can remove a Winsock dependency for a protocol by including a <I>Winsock-remove</I> section. To create a <I>Winsock-remove</I> section, add the .Winsock extension to the <I>Remove</I> section name for the protocol. For example, if the <I>Remove</I> section for a protocol is named Ipx.Remove, the <I>Winsock-remove</I> section for the protocol must be named Ipx.Remove.Winsock.</P>

<P>The <I>Winsock-remove</I> section contains a <B>DelSock</B> directive that specifies an INF-writer-named section. The INF-writer-named section must specify the transport service to remove. If a <B>ProviderId</B> was previously registered for the protocol, the vendor-named section must also specify the <B>ProviderId</B> to remove.</P>

<P>The following example shows two sections that remove the Winsock dependency for an IPX protocol:</P>

<PRE>[Ipx.Remove.Winsock]
DelSock = Remove.IpxWinsock
 
[Remove.IpxWinsock]
TransportService = nwlinkipx
ProviderId = "<I>GUID</I>"</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Winsock%20Sections"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
