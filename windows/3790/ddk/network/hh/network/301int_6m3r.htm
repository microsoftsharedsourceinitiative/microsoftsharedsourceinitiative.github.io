<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS Filter Intermediate Drivers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS Filter Intermediate Drivers">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_ndis_filter_intermediate_drivers_ng"></A>NDIS Filter Intermediate Drivers</H2>

<P>An NDIS filter intermediate driver exposes one virtual miniport for each underlying miniport driver that is bound to the intermediate driver's lower (protocol) edge.</P>

<P>Protocol drivers located above the intermediate driver bind to a virtual miniport that is exposed by the intermediate driver, as if the virtual miniport were a miniport driver controlling a physical adapter. When the virtual miniport receives requests and data packets, the intermediate driver forwards them down to the associated NDIS miniport driver. The filter intermediate driver can modify packets before sending them to, and after receiving them from, the NDIS miniport driver below. For example, the filter intermediate driver can encrypt and compress outgoing data in packets, and decrypt and decompress incoming data in packets. </P>

<P>The following figure illustrates the one-to-one relationship between the virtual miniports of the filter intermediate driver and the miniport driver for the underlying device.</P>

<P><IMG SRC="images/intfilter.gif" ALT="" BORDER=0></P>

<P><B>NDIS Filter Intermediate Driver Configuration</B></P>

<P>When a filter intermediate driver is initialized it inserts itself into all existing protocol-to-miniport bindings, as appropriate to the media type associated with the driver. For information about assigning the media type for a filter intermediate driver, see <A HREF="301int_546f.htm">Filter Intermediate Driver Installation</A>.</P>

<P>Filter intermediate driver virtual miniport bindings are not displayed in the Windows user interface. This allows the filter intermediate driver to operate transparently from the user perspective.</P>

<P>The following are examples of filter intermediate drivers:

<UL>
	<LI>The Windows QoS Packet Scheduler is a filter intermediate driver that is provided with Windows&nbsp;2000 and later versions of the operating system. The packet scheduler enforces quality-of-service parameters for network data flows.</LI>

	<LI>The PassThru sample intermediate driver demonstrates the basic concepts of an NDIS filter intermediate driver. PassThru passes on information without modifying it. This driver exposes a virtual miniport at its upper edge for each binding to an underlying miniport.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS%20Filter%20Intermediate%20Drivers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
