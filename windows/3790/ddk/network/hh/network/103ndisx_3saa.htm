<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMCmDispatchIncomingCloseCall</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMCmDispatchIncomingCloseCall">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismcmdispatchincomingclosecall_nr"></A>NdisMCmDispatchIncomingCloseCall</H1>

<P><B>NdisMCmDispatchIncomingCloseCall</B> tells a client to tear down an active or offered call, usually because the MCM driver has received a request from the network to close the connection.</P>

<PRE class=syntax><B>VOID
  NdisMCmDispatchIncomingCloseCall(
    IN NDIS_STATUS</B>  <I>CloseStatus</I><B>,
    IN NDIS_HANDLE</B>  <I>NdisVcHandle</I><B>,</B>
    <B>IN PVOID</B>  <I>Buffer</I>  <B>OPTIONAL,</B>
    <B>IN UINT</B>  <I>Size
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>CloseStatus</I></DT>

<DD>Specifies a caller-determined NDIS_STATUS_<I>XXX</I>, indicating the reason for the disconnect request. During normal network operations, an MCM driver passes NDIS_STATUS_SUCCESS to indicate that it has received a request, initiated by the remote party, to close an active call.</DD>

<DT><I>NdisVcHandle</I></DT>

<DD>Specifies the handle to the VC of the call being disconnected. This handle was supplied by NDIS when the VC was originally created, whether by the MCM driver with <A HREF="103ndisx_1fci.htm"><B>NdisMCmCreateVc</B></A> or as an input parameter to its <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A> function. </DD>

<DT><I>Buffer</I></DT>

<DD>Pointer to a caller-allocated resident buffer containing additional protocol-specific disconnect data, if any. Depending on the underlying medium, this pointer can be NULL. For example, this parameter is NULL on ATM networks.</DD>

<DT><I>Size</I></DT>

<DD>Specifies the size in bytes of the buffer, zero if <I>Buffer</I> is NULL. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>In the course of normal network operations, an MCM driver calls <B>NdisMCmDispatchIncomingCloseCall</B> with the <I>CloseStatus</I> set to NDIS_STATUS_SUCCESS because the corresponding client on the remote node has called <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>. </P>

<P>However, an MCM driver also can call <B>NdisMCmDispatchIncomingCloseCall</B> if either of the following occur:

<UL>
	<LI>The MCM driver has notified a client of an incoming call offer. When the miniport driver's <A HREF="104tdlow_2h2q.htm"><I>ProtocolCmIncomingCallComplete</I></A> function is called with the client's acceptance, it validates the input call parameters, which that client has modified. <I>ProtocolCmIncomingCallComplete</I> determines that the client is proposing unsupportable call parameters for the connection, so it calls <B>NdisMCmDispatchIncomingCloseCall</B>. </LI>

	<LI>Abormal network conditions force the MCM driver to tear down active calls. For example, if the MCM driver is notified when any link on the connection between this client and the remote party to the connection goes down, the miniport driver would call <B>NdisCmDispatchIncomingCloseCall</B> to prevent the client from attempting (or expecting) further data transfers on such a broken connection. </LI>
</UL>

<P>After the client calls <B>NdisClCloseCall</B> thereby causing the deactivation of the VC, the original creator of the VC is responsible for destroying the VC. Either the client calls <A HREF="103ndisx_920i.htm"><B>NdisCoDeleteVc</B></A>, which causes NDIS to call the MCM driver's <A HREF="104tdlow_7ks2.htm"><I>ProtocolCoDeleteVc</I></A> function, or the MCM driver calls <B>NdisMCmDeleteVc</B> after calling <A HREF="103ndisx_1nqq.htm"><B>NdisMCmDeactivateVc</B></A> and releasing any additional resources it had associated with the VC that it created. </P>

<P>A call to <B>NdisMCmDispatchIncomingCloseCall</B> causes NDIS to call the client’s <A HREF="104tdlow_3nqq.htm"><I>ProtocolClIncomingCloseCall</I></A> function. </P>

<P>Only connection-oriented miniport drivers that provide call-management support can call <B>NdisMCmDispatchIncomingCall</B>. Stand-alone call managers, which register themselves with NDIS as protocols, call <B>NdisCmDispatchIncomingCloseCall</B> instead. </P>

<P>Callers of <B>NdisMCmDispatchIncomingCloseCall</B> can be running at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A>, <A HREF="103ndisx_8twy.htm"><B>NdisMCmDispatchIncomingDropParty</B></A>, <A HREF="103ndisx_1nqq.htm"><B>NdisMCmDeactivateVc</B></A>, <A HREF="103ndisx_6qur.htm"><B>NdisMCmDeleteVc</B></A>, <A HREF="103ndisx_5zoy.htm"><B>NdisMCmDispatchIncomingCall</B></A>, <A HREF="104tdlow_3nqq.htm"><I>ProtocolClIncomingCloseCall</I></A>, <A HREF="104tdlow_7ks2.htm"><I>ProtocolCoDeleteVc</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMCmDispatchIncomingCloseCall"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
