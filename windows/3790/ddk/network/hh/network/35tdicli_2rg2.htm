<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ClientEventDisconnect</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ClientEventDisconnect">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_clienteventdisconnect_nr"></A>ClientEventDisconnect</H1>

<P>The ClientEventDisconnect routine is an event handler that the underlying TDI transport calls in response to an incoming disconnection notification from a remote node. </P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>ClientEventDisconnect(
</B>    <B>IN PVOID</B>  <I>TdiEventContext</I><B>,
</B>    <B>IN CONNECTION_CONTEXT</B>  <I>ConnectionContext</I><B>,
</B>    <B>IN LONG</B>  <I>DisconnectDataLength</I><B>,
</B>    <B>IN PVOID</B>  <I>DisconnectData</I><B>,
</B>    <B>IN LONG</B>  <I>DisconnectInformationLength</I><B>,
</B>    <B>IN PVOID</B>  <I>DisconnectInformation</I><B>,
</B>    <B>IN ULONG</B>  <I>DisconnectFlags
    </I><B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>TdiEventContext</I></DT>

<DD>Pointer to the client-supplied context provided in the IRP that was set up with <B>TdiBuildSetEventHandler</B> when ClientEventDisconnect was registered with the underlying transport.</DD>

<DT><I>ConnectionContext</I></DT>

<DD>Pointer to the client's context area for this connection endpoint. The client previously supplied this value to its underlying transport when its ClientEventConnect handler accepted a connection offer from the remote-node peer and/or when it opened the connection endpoint with <B>ZwCreateFile</B>. </DD>

<DT><I>DisconnectDataLength</I></DT>

<DD>Specifies the size in bytes of the buffer at <I>DisconnectData</I>. Zero indicates that no disconnect data was transmitted from the remote node.</DD>

<DT><I>DisconnectData</I></DT>

<DD>Pointer to a buffer containing disconnect data received from the remote node by the underlying transport. This pointer is NULL if <I>DisconnectDataLength</I> is zero. </DD>

<DT><I>DisconnectInformationLength</I></DT>

<DD>Specifies the size in bytes of the buffer at <I>DisconnectInformation</I>. Zero indicates that no additional disconnect information was transmitted from the remote node. </DD>

<DT><I>DisconnectInformation</I></DT>

<DD>Pointer to a buffer containing any additional transport-specific disconnect information. This pointer is NULL if <I>DisconnectInformationLength</I> is zero.</DD>

<DT><I>DisconnectFlags</I></DT>

<DD>Specifies the nature of the disconnection operation as zero or as one of the following flags:

<DL>
<DT>TDI_DISCONNECT_ABORT</DT>

<DD>The transport is closing the endpoint-to-endpoint connection immediately without completing any pending operations on the connection. In effect, this flag is equivalent to a <I>DisconnectFlags</I> of zero. </DD>

<DT>TDI_DISCONNECT_RELEASE</DT>

<DD>The transport is engaged in a controlled disconnect operation with the remote node. 
</DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<P>ClientEventDisconnect can return STATUS_SUCCESS. </P>

<H4>Comments</H4>

<P>A call to ClientEventDisconnect notifies the local-node client that its remote-node peer is closing their established endpoint-to-endpoint connection. Depending on the input <I>DisconnectFlags</I>, the disconnect can be either controlled or uncontrolled. ClientEventDisconnect is the last event handler the TDI driver calls on an endpoint-to-endpoint connection.</P>

<P>If TDI_DISCONNECT_RELEASE is set in the <I>DisconnectFlags</I>, both transports are coordinating a controlled disconnection. (For more information, see <A HREF="32ioctl_4hgy.htm">TDI_DISCONNECT</A>.) </P>

<P>A call to ClientEventDisconnect notifies the local-node client that endpoint-to-endpoint activity has ceased or is ceasing on the connection endpoint opened by that client. However, the connection endpoint is still valid after the endpoint-to-endpoint connection has been broken. The local-node client can reuse its open connection endpoint in a subsequent operation after ClientEventDisconnect returns control.</P>

<P>ClientEventDisconnect must be capable of carrying out its operations at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="34bldmac_4eeq.htm"><B>TdiBuildDisconnect</B></A>, <A HREF="34bldmac_6sxe.htm"><B>TdiBuildSetEventHandler</B></A>, <A HREF="32ioctl_4hgy.htm"><B>TDI_DISCONNECT</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ClientEventDisconnect"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
