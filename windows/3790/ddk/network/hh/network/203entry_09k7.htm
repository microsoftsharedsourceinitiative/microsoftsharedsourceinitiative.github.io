<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS Miniport Driver Initialization</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS Miniport Driver Initialization">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_miniport_driver_initialization_ng"></A>NDIS Miniport Driver Initialization</H1>

<P>When a miniport driver's <B>DriverEntry </B>function returns, NDIS calls the miniport driver's <I>MiniportInitialize</I> function once for each NIC managed by the miniport driver.</P>

<P>If a new NIC is plugged into the system, that miniport driver’s <I>MiniportInitialize</I> function will be called to initialize the newly installed device. Consequently, a <I>MiniportInitialize</I> function and any functions it calls, all of which run at IRQL PASSIVE_LEVEL, can be specified as pageable. Code is specified as pageable by using the <A HREF="103ndisx_5svm.htm">NDIS_PAGEABLE_FUNCTION</A> macro. Initialization code cannot be specified with the NDIS_INIT_FUNCTION macro, because code marked this way is no longer mapped once the initial system boot is complete. Only the <B>DriverEntry</B> function and any functions called only from <B>DriverEntry</B> can be passed to the NDIS_INIT_FUNCTION macro.</P>

<P>The initialization function is declared as follows:</P>

<PRE class=syntax><B>NDIS_STATUS
</B>  <B>MiniportInitialize</B> (
    <B>OUT PNDIS_STATUS</B>  <I>OpenErrorStatus</I><B>,</B>
    <B>OUT PUINT  </B><I>SelectedMediumIndex</I><B>,</B>
    <B>IN PNDIS_MEDIUM  </B><I>MediumArray</I><B>,</B>
    <B>IN UINT  </B><I>MediumArraySize</I><B>,</B>
    <B>IN NDIS_HANDLE  </B><I>MiniportAdapterHandle</I><B>,</B>
    <B>IN NDIS_HANDLE  </B><I>ConfigurationHandle</I>
    )<B>;</B></PRE>

<P>The following arguments are passed to <I>MiniportInitialize</I>.

<UL>
	<LI>An array of <B>NdisMedium</B><I>Xxx</I> at <I>MediumArray</I>. The miniport driver must choose the medium it supports or prefers and must return the index of that medium in <I>SelectedMediumIndex</I>. If the miniport driver does not find a medium it can support in <I>MediumArray</I>, it must return a failure status of NDIS_STATUS_UNSUPPORTED_MEDIA.</LI>

	<LI>A handle, <I>MiniportAdapterHandle</I>, that NDIS uses to refer to the miniport driver. The miniport driver must retain this handle so that it can pass it in subsequent calls to NDIS—for instance, in such calls as <A HREF="103ndisx_4fea.htm"><B>NdisMRegisterAdapterShutdownHandler</B></A> and <A HREF="103ndisx_87aq.htm"><B>NdisMInitializeTimer</B></A>.</LI>

	<LI>A configuration handle that identifies the registry key containing NIC-specific information (the advanced parameters) associated with this miniport driver. The miniport driver must retain and pass this handle to <A HREF="103ndisx_7b76.htm"><B>NdisOpenConfiguration</B></A>. For information on parameter values written to the registry by network INF files, see <A HREF="501install_7qef.htm">Add-registry-sections</A>.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS%20Miniport%20Driver%20Initialization"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
