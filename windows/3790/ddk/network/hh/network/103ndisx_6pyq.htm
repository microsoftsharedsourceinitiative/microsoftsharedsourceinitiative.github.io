<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS_PACKET_EXTENSION_FROM_PACKET</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS_PACKET_EXTENSION_FROM_PACKET">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_packet_extension_from_packet_nr"></A>NDIS_PACKET_EXTENSION_FROM_PACKET</H1>

<P>NDIS_PACKET_EXTENSION_FROM_PACKET returns a pointer to the <A HREF="105nstru_9oqa.htm">NDIS_PACKET_EXTENSION</A> structure associated with a packet descriptor.</P>

<PRE class=syntax><B>PNDIS_PACKET_EXTENSION
</B>  <B>NDIS_PACKET_EXTENSION_FROM_PACKET(</B>
    <B>IN PNDIS_PACKET</B>  <I>Packet</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Packet</I></DT>

<DD>Pointer to a packet descriptor.
</DD>
</DL>

<H4>Return Value</H4>

<P>NDIS_PACKET_EXTENSION_FROM_PACKET returns a pointer to the NDIS_PACKET_EXTENSION structure associated with the given packet descriptor, or it returns NULL if there is no per-packet information for the packet.</P>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>The <A HREF="105nstru_9oqa.htm">NDIS_PACKET_EXTENSION</A> structure contains an array of PVOIDS, each of which either points to or contains a specific type of per-packet information. After obtaining the pointer to the NDIS_PACKET_EXTENSION structure, the driver can use the appropriate array index to access a particular type of per-packet information.</P>

<P>A protocol or miniport driver should call this macro when it needs to read and/or write more than one type of per-packet information associated with a packet descriptor. If the driver needs to access just one type of per-packet information, it should call the <A HREF="103ndisx_0bjm.htm">NDIS_PER_PACKET_INFO_FROM_PACKET</A> macro.</P>

<P>After obtaining the pointer to the NDIS_PACKET_EXTENSION structure returned by NDIS_PACKET_EXTENSION_FROM_PACKET, a driver can use one of the following array indexes to access a particular type of per-packet information:

<DL>
<DT><B>TcpIpChecksumPacketInfo</B></DT>

<DD>Indexes an <A HREF="105nstru_3i7m.htm">NDIS_TCP_IP_CHECKSUM_PACKET_INFO</A> structure (not a pointer to the structure). This structure specifies per-packet information for checksum operations offloaded to a miniport driver.</DD>

<DT><B>IpSecPacketInfo</B></DT>

<DD>Indexes a pointer to an <A HREF="105nstru_2tbm.htm">NDIS_IPSEC_PACKET_INFO</A> structure. This structure specifies per-packet information for IP Security operations offloaded to a miniport driver.</DD>

<DT><B>TcpLargeSendPacketInfo</B></DT>

<DD>Indexes a ULONG value (not a pointer to the ULONG value). Before passing a large TCP packet to a miniport driver for segmentation, the TCP/IP transport writes this value with the maximum segment size (MSS), which is the current maximum transmission unit (MTU). Before completing the send of a large TCP packet that it has segmented into smaller packets, a miniport driver writes this value with the total number of user data bytes that it sent in the packets segmented from the large TCP packet.</DD>

<DT><B>ClassificationHandlePacketInfo</B></DT>

<DD>This is reserved.</DD>

<DT><B>ScatterGatherListPacketInfo</B></DT>

<DD>Indexes a pointer to a <A HREF="105nstru_5t9u.htm">SCATTER_GATHER_LIST</A> structure, which specifies the mapped logical address ranges of buffers containing DMA data for a packet. A miniport driver that reserves system resources for DMA operations by calling <A HREF="103ndisx_48aa.htm"><B>NdisMInitializeScatterGatherDma</B></A> supplies the obtained logical address ranges to its NIC so that the NIC can perform a DMA transfer.</DD>

<DT><B>Ieee8021QInfo</B></DT>

<DD>Indexes the <B>Value</B> member of an NDIS_PACKET_8021Q_INFO structure, which specifies 802.1p priority and VLAN identifier information. 802.1p priority information is used to establish packet priority in shared-media 802 networks. VLAN identifier information identifies the VLAN to which a packet belongs. <BR>
For more information, see <A HREF="204_802p_84mf.htm">802.1Q Packet Information</A>.</DD>

<DT><B>OriginalPacketInfo</B></DT>

<DD>Indexes a pointer to a <A HREF="105nstru_6jn6.htm">NDIS_PACKET</A> structure. This structure specifies a packet descriptor that contains original information that was previously received over the network and indicated up by the lowest-level driver in a stack of NDIS drivers. Each driver in the layered stack can access the out-of-band (OOB) data block that is associated with the packet that is received from the network without requiring that the packet be copied to each layer. 
</DD>
</DL>

<P>Callers of this macro can be running at any IRQL.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_48aa.htm"><B>NdisMInitializeScatterGatherDma</B></A>, <A HREF="105nstru_45bm.htm">NDIS_PACKET_8021Q_INFO</A>, <A HREF="105nstru_9oqa.htm">NDIS_PACKET_EXTENSION</A>, <A HREF="103ndisx_0bjm.htm">NDIS_PER_PACKET_INFO_FROM_PACKET</A>, <A HREF="105nstru_2tbm.htm">NDIS_IPSEC_PACKET_INFO</A>, <A HREF="105nstru_3i7m.htm">NDIS_TCP_IP_CHECKSUM_PACKET_INFO</A>, <A HREF="105nstru_5t9u.htm">SCATTER_GATHER_LIST</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS_PACKET_EXTENSION_FROM_PACKET"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
