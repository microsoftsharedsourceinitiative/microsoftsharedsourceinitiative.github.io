<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CoNDIS WAN is Less Complex</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="CoNDIS WAN is Less Complex">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_condis_wan_is_less_complex_ng"></A>CoNDIS WAN Is Less Complex</H2>

<P>CoNDIS defines objects that correspond to each of the logical entities that are involved in a connection. These entities include address families (AFs), virtual connections (VCs), service access points (SAPs), and parties.</P>

<P>In the CoNDIS environment, the system handles many of the complex TAPI requirements. Therefore, a CoNDIS WAN miniport driver or MCM does not have to handle as many TAPI OIDs as an NDIS WAN miniport driver. In addition, the CoNDIS WAN miniport driver or MCM is not required to handle the following status indications: NDIS_STATUS_TAPI_INDICATION, NDIS_STATUS_WAN_LINE_UP, and NDIS_STATUS_WAN_LINE_DOWN. </P>

<P>The separation of the call manager and miniport driver functions enables the implementation of two simple drivers. The simplified drivers should be easier to maintain and debug than one large and complex driver.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: CoNDIS%20WAN%20is%20Less%20Complex"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
