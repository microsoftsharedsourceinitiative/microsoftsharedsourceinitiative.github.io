<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMGetDeviceProperty</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMGetDeviceProperty">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_object_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_handling_irps_kg">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_cm_partial_resource_list_kr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_plug_and_play_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismgetdeviceproperty_nr"></A>NdisMGetDeviceProperty</H1>

<P><B>NdisMGetDeviceProperty</B> retrieves device objects required to set up communication with a miniport driver through a bus driver.</P>

<PRE class=syntax><B>VOID 
  NdisMGetDeviceProperty(
    IN NDIS_HANDLE</B>  <I>MiniportAdapterHandle</I><B>,</B>
    <B>IN OUT PDEVICE_OBJECT</B>  <B>*</B><I>PhysicalDeviceObject</I>  <B>OPTIONAL,</B>
    <B>IN OUT PDEVICE_OBJECT</B>  <B>*</B><I>FunctionalDeviceObject</I>  <B>OPTIONAL,</B>
    <B>IN OUT PDEVICE_OBJECT</B>  <B>*</B><I>NextDeviceObject</I>  <B>OPTIONAL,</B>
    <B>IN OUT PCM_RESOURCE_LIST</B>  <B>*</B><I>AllocatedResources</I>  <B>OPTIONAL,</B>
    <B>IN OUT PCM_RESOURCE_LIST</B>  <B>*</B><I>AllocatedResourcesTranslated </I> <B>OPTIONAL</B>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterHandle</I></DT>

<DD>Specifies the NDIS handle that identifies the miniport driver's NIC. This handle was originally passed to <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>.</DD>

<DT><I>PhysicalDeviceObject</I></DT>

<DD>Pointer to a caller-allocated buffer. The buffer receives a pointer to a <A HREF="JavaScript:hhobj_1.Click()"><B>DEVICE_OBJECT</B></A> structure that represents the physical device for the miniport driver. This pointer is optional.</DD>

<DT><I>FunctionalDeviceObject</I></DT>

<DD>Pointer to a caller-allocated buffer. The buffer receives a pointer to a <B>DEVICE_OBJECT</B> structure. <B>DEVICE_OBJECT</B> represents the functional device object that NDIS creates for the physical device. This pointer is optional. </DD>

<DT><I>NextDeviceObject</I></DT>

<DD>Pointer to a caller-allocated buffer. The buffer receives a pointer to a <B>DEVICE_OBJECT</B> structure that represents the next device object. This next device object is preceded in the chain by the functional device object that belongs to the miniport driver. NDIS creates this functional device object for the physical device. For example, the next device object could be the object that is associated with a bus driver or HAL This pointer is optional. </DD>

<DT><I>AllocatedResources</I></DT>

<DD>Pointer to a caller-allocated buffer thatreceives a pointer to a <B>CM_RESOURCE_LIST</B> structure. <B>CM_RESOURCE_LIST </B>describes a list of hardware resources that the PnP Manager assigns to the physical device. This list contains the resources in raw form, that is, not translated by HAL. This pointer is optional.</DD>

<DT><I>AllocatedResourcesTranslated</I></DT>

<DD>Pointer to a caller-allocated buffer that receives a pointer to a <B>CM_RESOURCE_LIST</B> structure. <B>CM_RESOURCE_LIST</B> describes a list of hardware resources that the PnP Manager assigns to the physical device. This list contains the resources in translated form, that is, translated by HAL. This pointer is optional. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>Miniport drivers must retrieve specific information to set up their communications. Miniport drivers for miniport instances that communicate through bus drivers use <B>NdisMGetDeviceProperty</B> to retrieve this information. For example, miniport driver instances that attach to Universal Serial Bus (USB) or IEEE 1394 buses require miniport drivers that expose a standard NDIS miniport driver interface at their upper edge, and use the class interface for the particular bus at their lower edge. To use the USB or 1394 class interface, a miniport driver creates and submits I/O Request Packets (IRPs). The miniport driver uses the physical and next-device objects that <B>NdisMGetDeviceProperty</B> retrieves to submit IRPs to the class interface for a particular bus. To locate more information on creating and submitting IRPs to bus drivers, see <A HREF="JavaScript:hhobj_2.Click()">Handling IRPs</A>. </P>

<P>Pointers to <B>DEVICE_OBJECT</B> for the physical, functional, and next device objects that <B>NdisMGetDeviceProperty</B> retrieves are simply handles that are opaque to the miniport driver.</P>

<P>Typically, miniport drivers call the <A HREF="103ndisx_8hrm.htm"><B>NdisMQueryAdapterResources</B></A> function and pass a pointer to an <B>NDIS_RESOURCE_LIST</B> structure to obtain a list of hardware resources for their NICs. The <B>NDIS_RESOURCE_LIST</B> structure is equivalent to the <A HREF="JavaScript:hhobj_3.Click()"><B>CM_PARTIAL_RESOURCE_LIST</B></A> structure on Windows&nbsp;2000 and later platforms. Alternatively, miniport drivers can call <B>NdisMGetDeviceProperty</B> to retrieve pointers to "raw" or "translated" resources. Raw resources have not been translated by HAL; translated resources have been. To locate more information on raw and translated resources, see <A HREF="JavaScript:hhobj_4.Click()">Plug and Play</A>. </P>

<P>Note that if a Microsoft® Windows 95/98/Me miniport driver requests a pointer to either raw or translated resources, NDIS sets the <I>AllocatedResources</I> and <I>AllocatedResourcesTranslated</I> parameters to NULL.</P>

<P>Callers of <B>NdisMGetDeviceProperty</B> run at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_8hrm.htm"><B>NdisMQueryAdapterResources</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMGetDeviceProperty"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
