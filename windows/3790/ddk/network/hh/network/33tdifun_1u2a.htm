<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TdiDeregisterDeviceObject</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TdiDeregisterDeviceObject">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tdideregisterdeviceobject_nr"></A>TdiDeregisterDeviceObject</H1>

<P>The <B>TdiDeregisterDeviceObject</B> function is the reciprocal of <B>TdiRegisterDeviceObject</B>. It removes a transport-created device object, previously registered with TDI, as a valid target for clients' network I/O requests.</P>

<PRE class=syntax><B>NTSTATUS</B>
  <B>TdiDeregisterDeviceObject(</B>
    <B>IN HANDLE</B>  <I>DevRegistrationHandle</I>
    <B>);</B></PRE>

<H4>Parameter</H4>

<DL>
<DT><I>DevRegistrationHandle</I></DT>

<DD>Specifies the handle returned by a preceding call to <B>TdiRegisterDeviceObject</B>. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>TdiDeregisterDeviceObject</B> returns STATUS_SUCCESS if the registration was released and all bound clients were notified. Otherwise, it can return STATUS_INSUFFICIENT_RESOURCES. (Because the availability of system resources is dynamic, a subsequent call from the same transport can succeed.) </P>

<H4>Headers</H4>

<P>Declared in <I>TdiKrnl.h</I>. Include <I>TdiKrnl.h</I>.</P>

<H4>Comments</H4>

<P>A transport driver calls <B>TdiDeregisterDeviceObject</B> as a consequence of an NDIS call to the <I>ProtocolUnbindAdapter</I> function at the bottom of the transport stack. Such a call to <I>ProtocolUnbindAdapter</I> indicates that an underlying NIC to which the transport is bound is being removed or disabled. Consequently, the TDI transport driver will destroy a device object that it previously created for its binding to that NIC. </P>

<P>If the transport previously registered this device object with TDI, it must call <B>TdiDeregisterDeviceObject</B> before it deletes its device object from the system. <I>Before</I> it deregisters its device object, the transport also must make one or more calls to <B>TdiDeregisterNetAddress</B> with each network address that it currently has registered with TDI on the binding. That is, the transport calls <B>TdiDeregisterDeviceObject</B> just after it has torn down its binding to the NIC. </P>

<P><B>TdiDeregisterDeviceObject</B> notifies the calling transport's clients that the transport's device object is no longer a valid target for those clients' I/O requests. When this call occurs, TDI calls the ClientPnPBindingChange routines of those clients that registered themselves with <B>TdiRegisterPnPHandlers</B> to receive these notifications with the input <I>PnPOpcode</I> argument TDI_PNP_OP_DEL. </P>

<P>If <B>TdiDeregisterDeviceObject</B> returns STATUS_INSUFFICIENT_RESOURCES, the transport should fail any subsequent incoming client requests directed to its still registered device object. When convenient, the transport should call <B>TdiDeregisterDeviceObject</B> again because a temporary shortage of available system memory might have caused its original call to fail.</P>

<P>Callers of <B>TdiDeregisterDeviceObject</B> must be running at IRQL &lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="35tdicli_3k36.htm"><B>ClientPnPBindingChange</B></A>, <A HREF="104tdlow_1l6a.htm"><B>ProtocolUnbindAdapter</B></A>, <A HREF="33tdifun_6ovm.htm"><B>TdiDeregisterNetAddress</B></A>, <A HREF="33tdifun_2d0y.htm"><B>TdiRegisterDeviceObject</B></A>, <A HREF="33tdifun_5boy.htm"><B>TdiRegisterPnPHandlers</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TdiDeregisterDeviceObject"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
