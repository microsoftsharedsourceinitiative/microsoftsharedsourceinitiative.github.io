<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Deleting a VC</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Deleting a VC">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_deleting_a_vc_ng"></A>Deleting a VC</H3>

<P>Only the connection-oriented client, call manager, or MCM driver that initiated the creation of a virtual circuit (VC) can initiate the deletion of that VC. A client therefore deletes a VC that it previously created for an outgoing call, a call manager or MCM driver deletes a VC that it previously created for an incoming call over the network, and a call manager deletes a VC that it previously created for exchanging signaling messages over the network. (An MCM driver does not call NDIS to delete a VC that it created for exchanging signaling messages. The MCM driver deletes such a VC with an internal operation that is opaque to NDIS.)</P>

<P>A connection-oriented client or call manager initiates the deletion of a VC with <A HREF="103ndisx_920i.htm"><B>NdisCoDeleteVc</B></A>.</P>

<P>The following figure shows a client of a call manager initiating the deletion of a VC.</P>

<P><IMG SRC="images/cm_09.gif" ALT="" BORDER=0></P>

<P><B>Connection-Oriented Client Initiates VC Deletion Through a Call Manager</B></P>

<P>The following figure shows a client of an MCM driver initiating the deletion of a VC.</P>

<P><IMG SRC="images/fig1_09.gif" ALT="" BORDER=0></P>

<P><B>Client Initiates VC Deletion Through an MCM Driver</B></P>

<P>The following figure shows a call manager initiating the deletion of a VC.</P>

<P><IMG SRC="images/cm_10.gif" ALT="" BORDER=0></P>

<P><B>Call Manager Initates VC Deletion</B></P>

<P>When a client or call manager calls <B>NdisCoDeleteVc</B> or when an MCM driver calls <B>NdisMCmDeleteVC</B>, there must be no outstanding calls on the given VC and that VC must already have been deactivated (see <A HREF="401condis_3dyf.htm">Deactivating a VC </A>). To meet these requirements implies that the following conditions hold:

<UL>
	<LI>The client has already called <A HREF="103ndisx_7rsi.htm"><B>NdisClCloseCall</B></A> with the given <I>NdisVcHandle</I> and its close-call request has completed successfully (see <A HREF="401condis_3i07.htm">Client-Initiated Request to Close a Call</A>). </LI>

	<LI>The call manager has already called <A HREF="103ndisx_5g4y.htm"><B>NdisCmDeactivateVc</B></A> or the MCM driver has already called <A HREF="103ndisx_1nqq.htm"><B>NdisMCmDeactivateVc</B></A> with the given <I>NdisVcHandle</I> and the deactivation request has completed successfully (see <A HREF="401condis_0xk7.htm">Incoming Request to Close a Call</A>).</LI>
</UL>

<P>A client's or call manager's call to <B>NdisCoDeleteVc</B> causes NDIS to call both the underlying NIC driver's <A HREF="101mini_30c2.htm"><I>MiniportCoDeleteVc</I></A> function and the <A HREF="104tdlow_7ks2.htm"><I>ProtocolCoDeleteVc</I></A> function of the client or call manager with which the caller shares the <I>NdisVcHandle</I> (see the three previous figures). </P>

<P><I>MiniportCoDeleteVc</I> frees any resources allocated for the VC, as well as the miniport driver's context for the VC. <I>ProtocolCoDeleteVc</I> releases any resources that the client or call manager used to perform operations on and track state for the VC. Both <I>MiniportCoDeleteVc</I> and <I>ProtocolCoDeleteVc</I> are synchronous functions that cannot return NDIS_STATUS_PENDING.</P>

<P>An MCM driver initiates the deletion of a VC with <A HREF="103ndisx_6qur.htm"><B>NdisMCmDeleteVc</B></A> (see the following figure).</P>

<P><IMG SRC="images/fig1_10.gif" ALT="" BORDER=0></P>

<P><B>MCM Driver Initates VC Deletion</B></P>

<P>An MCM driver's call to <B>NdisMCmDeleteVc</B> causes NDIS to call the <A HREF="104tdlow_7ks2.htm"><I>ProtocolCoDeleteVc</I></A> function of the client with which the MCM driver shared the <I>NdisVcHandle</I>.</P>

<P>When <B>NdisCoDeleteVc</B> or <B>NdisMCmDeleteVc</B> returns control, the <I>NdisVcHandle</I> is no longer valid.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Deleting%20a%20VC"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
