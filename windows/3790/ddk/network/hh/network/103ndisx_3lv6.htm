<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisMSleep</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisMSleep">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndismsleep_nr"></A>NdisMSleep</H1>

<P><B>NdisMSleep</B> delays execution of the caller for a given interval in microseconds.</P>

<PRE class=syntax><B>VOID</B>
<B>  NdisMSleep(</B>
    <B>IN ULONG</B>  <I>MicrosecondsToSleep</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MicrosecondsToSleep</I></DT>

<DD>Specifies the number of microseconds to delay. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>For the given <I>MicrosecondsToSleep</I>, the caller’s thread of execution is put into a wait state, thereby allowing other threads to get work done on the current processor. When the given interval expires, the caller of <B>NdisMSleep</B> resumes execution. </P>

<P>An NDIS driver should always call <B>NdisMSleep</B> in preference to <A HREF="103ndisx_0xo2.htm"><B>NdisStallExecution</B></A> unless the driver is running at IRQL &gt;= DISPATCH_LEVEL. <B>NdisMSleep</B> can accept a larger delay interval than <B>NdisStallExecution</B>, which should <I>never</I> be called with an interval greater than 50 microseconds. </P>

<P>NIC drivers can call <B>NdisMSleep</B> from their <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> and, possibly, <A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A><I> </I>functions when either function must wait for state changes to occur in the NIC before that function continues its operations. </P>

<P>Both <B>NdisMSleep</B> and <B>NdisStallExecution</B> allow a NIC driver to specify a delay consistently and independently of the clock speed of the host CPU. Neither function involves a timer object used by <A HREF="103ndisx_8wdu.htm"><B>NdisSetTimer</B></A><B> </B>or <B>NdisSetPeriodicTimer</B>. The resolution of the host system clock varies, so very short delays can take slightly longer than the caller of <B>NdisMSleep</B> or <B>NdisStallExecution</B> specified.</P>

<P>Callers of <B>NdisMSleep</B> run at IRQL &lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_6stu.htm"><I>MiniportHalt</I></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="103ndisx_6lbm.htm"><B>NdisMSetTimer</B></A>, <A HREF="103ndisx_4lte.htm"><B>NdisMSetPeriodicTimer</B></A>, <A HREF="103ndisx_0xo2.htm"><B>NdisStallExecution</B></A>, <A HREF="103ndisx_7uyb.htm"><B>NdisWaitEvent</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisMSleep"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
