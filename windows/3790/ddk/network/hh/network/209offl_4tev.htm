<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Traversing NATs and NAPTs with UDP-Encapsulated ESP Packets</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Traversing NATs and NAPTs with UDP-Encapsulated ESP Packets">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_traversing_nats_and_napts_with_udp_encapsulated_esp_packets_ng"></A>Traversing NATs and NAPTs with UDP-Encapsulated ESP Packets</H3>

<P>Network address translators (NATs) and network address port translators (NAPTs) convert multiple private network addresses into one routeable IP public address and vice versa, thereby allowing many systems to share a single IP address. In this way, NATs and NAPTs help to alleviate the shortage of routeable IPv4 addresses.</P>

<P>However, NATs and NAPTs can cause problems with Internet Protocol security (IPSec). Because NATs and NAPTs modify the IP header of a packet, they cause AH-protected packets to fail checksum validation. NAPTs, which modify TCP and UDP ports, cannot modify the ports in the encrypted TCP header of an ESP-protected packet. </P>

<P>UDP encapsulation solves this problem. In practice, UDP encapsulation is used only on ESP packets. A NAT or NAPT can modify the unencrypted IP and UDP headers of a UDP-encapsulated ESP packet without breaking ESP authentication and without being stymied by ESP encryption. For a detailed description of the UDP encapsulation of ESP packets, see <a href="http://go.microsoft.com/fwlink/?LinkId=9856&clcid=0x409" target="_blank"><I>IPsec over NAT Justification for UDP Encapsulation</I></A>.</P>

<P>Microsoft supports UDP encapsulation of ESP packets on port 4500. After IKE peers initiate negotiation on port 500, detect support for NAT-traversal, and detect a NAT or NAPT along the path, they can negotiate to "float" IKE and UDP-ESP traffic to port 4500. For more information on this negotiation, see <a href="http://go.microsoft.com/fwlink/?LinkId=9857&clcid=0x409" target="_blank"><I>Negotiation of NAT-Traversal in the IKE</I></A>.</P>

<P>Floating to port 4500 for NAT traversal provides the following benefits:

<UL>
	<LI>It bypasses "IPSec-aware" NATs or NAPTs that break UDP-ESP encapsulation on port 500.</LI>

	<LI>It improves performance. The UDP encapsulation of ESP data packets is more efficient on port 4500 than on port 500. For more information, see <A HREF="209offl_84mf.htm">UDP-ESP Encapsulation Types</A>.</LI>
</UL>

<P>To support UDP-ESP encapsulation, a miniport driver and/or its NIC must:

<UL>
	<LI>Be able to process ESP packets in the receive path, as described in <A HREF="209offl_1m93.htm">Offloading IPSec Tasks in the Receive Path</A>.</LI>

	<LI>Maintain a list of parser entries. A parser entry contains information that the miniport's NIC requires to parse incoming UDP-ESP packets on one or more security associations (SAs). For more information on parser entries, see <A HREF="209offl_4wh3.htm">UDP-ESP SAs and Parser Entries</A>.</LI>

	<LI>Maintain a list of SAs that the transport has offloaded to the NIC.</LI>

	<LI>Support the following OIDs:
<UL>
	<LI><A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A> </LI>

	<LI><A HREF="216offload_7aeq.htm">OID_TCP_TASK_IPSEC_ADD_UDPESP_SA</A> </LI>

	<LI><A HREF="216offload_6j5e.htm">OID_TCP_TASK_IPSEC_DELETE_UDPESP_SA</A> </LI>
</UL>
</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Traversing%20NATs%20and%20NAPTs%20with%20UDP-Encapsulated%20ESP%20Packets"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
