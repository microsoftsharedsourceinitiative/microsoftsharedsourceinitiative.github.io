<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS_TASK_TCP_IP_CHECKSUM</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS_TASK_TCP_IP_CHECKSUM">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_task_tcp_ip_checksum_nr"></A>NDIS_TASK_TCP_IP_CHECKSUM</H1>

<P>When supplied by a miniport driver in response to a query of <A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>, the NDIS_TASK_TCP_IP_CHECKSUM structure specifies the miniport driver's NIC's capabilities for calculating IP, TCP, and/or UDP checksums for send packets and validating such checksums for receive packets. When passed to a miniport driver in a set of OID_TCP_TASK_OFFLOAD, the structure specifies the checksum capabilities that the TCP/IP transport is enabling for the NIC.</P>

<PRE class=syntax>typedef struct _NDIS_TASK_TCP_IP_CHECKSUM
{
  struct
  {
    ULONG    IpOptionsSupported:1;
    ULONG    TcpOptionsSupported:1;
    ULONG    TcpChecksum:1;
    ULONG    UdpChecksum:1;
    ULONG    IpChecksum:1;
  } V4Transmit;
 
  struct
  {
    ULONG    IpOptionsSupported:1;
    ULONG    TcpOptionsSupported:1;
    ULONG    TcpChecksum:1;
    ULONG    UdpChecksum:1;
    ULONG    IpChecksum:1;
  } V4Receive;
 
  struct
  {
    ULONG    IpOptionsSupported:1;
    ULONG    TcpOptionsSupported:1;
    ULONG    TcpChecksum:1;
    ULONG    UdpChecksum:1;
  } V6Transmit;
 
  struct
  {
    ULONG    IpOptionsSupported:1;
    ULONG    TcpOptionsSupported:1;
    ULONG    TcpChecksum:1;
    ULONG    UdpChecksum:1;
  } V6Receive;
} NDIS_TASK_TCP_IP_CHECKSUM, *PNDIS_TASK_TCP_IP_CHECKSUM;</PRE>

<H4>Members</H4>

<DL>
<DT><B>V4Transmit</B></DT>

<DT><B>IpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate an IP checksum for an IPv4 send packet that contains IP options.</DD>

<DT><B>TcpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a TCP checksum for an IPv4 send packet that contains TCP options.</DD>

<DT><B>TcpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a TCP checksum for an IPv4 send packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>UdpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a UDP checksum for an IPv4 send packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>IpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate an IP checksum for an IPv4 send packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>V4Receive</B></DT>

<DT><B>IpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate an IP checksum for an IPv4 receive packet that contains IP options.</DD>

<DT><B>TcpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a TCP checksum for an IPv4 receive packet that contains TCP options.</DD>

<DT><B>TcpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate the TCP checksum for an IPv4 receive packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>UdpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate an IPv4 receive packet's UDP checksum. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>IpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate an IP checksum for an  IPv4 receive packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>V6Transmit</B></DT>

<DT><B>IpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate an IP checksum for an IPv6 send packet that contains IP options.</DD>

<DT><B>TcpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a TCP checksum for an IPv6 send packet that contains TCP options.</DD>

<DT><B>TcpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a TCP checksum for an IPv6 send packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>UdpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a UDP checksum for an IPv6 send packet. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>V6Receive</B></DT>

<DT><B>IpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate IP checksum(s) for an IPv6 receive packet whose IP header(s) contains IP options.</DD>

<DT><B>TcpOptionsSupported</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can calculate a checksum for an IPv6 receive packet whose TCP header contains TCP options.</DD>

<DT><B>TcpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate an IPv6 receive packet's TCP checksum. Set by the TCP/IP transport to enable this capability.</DD>

<DT><B>UdpChecksum</B></DT>

<DD>Set by a miniport driver to indicate that its NIC can validate a UDP checksum for an IPv6 receive packet. Set by the TCP/IP transport to enable this capability.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ndis.h</I>. Include <I>ndis.h</I>.</P>

<H4>Comments</H4>

<P>In response to a query of <A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>, a miniport driver returns in the <I>InformationBuffer</I> an <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A> structure followed immediately by one or more chained <A HREF="105nstru_3f5e.htm">NDIS_TASK_OFFLOAD</A> structures. Each NDIS_TASK_OFFLOAD structure specifies a task-offload capability supported by the miniport driver's NIC. </P>

<P>When the <B>Task</B> member of the NDIS_TASK_OFFLOAD structure specifies <B>TcpIpChecksumNdisTask</B>, the <B>TaskBuffer</B> of the NDIS_TASK_OFFLOAD structure contains an NDIS_TASK_TCP_IP_CHECKSUM structure.</P>

<P>When returned by a miniport driver in response to the TCP/IP transport's query of OID_TCP_TASK_OFFLOAD, the NDIS_TASK_TCP_IP_CHECKSUM structure specifies the miniport driver's capabilities for performing checksum tasks on both send and receive packets. When passed to a miniport driver by the TCP/IP transport's set of OID_TCP_TASK_OFFLOAD, the NDIS_TASK_TCP_IP_CHECKSUM structure specifies the checksum capabilities that the transport is enabling.</P>

<P>The NDIS_TASK_TCP_IP_CHECKSUM structure allows a miniport driver to indicate UDP checksum capabilities. The initial release of Windows®&nbsp;2000 does not support UDP checksum offloads; however, future service packs and update releases of Windows&nbsp;2000 may support UDP checksum offloads.</P>

<P>The NDIS_TASK_TCP_IP_CHECKSUM structure also allows a miniport driver to indicate checksum capabilities for IPv6 packets. The TCP/IP transport in the initial release of Windows&nbsp;2000, however, can process only IPv4 packets and therefore does not enable any IPv6 checksum capabilities reported by a miniport driver. Future versions of the TCP/IP transport may support the processing of IPv6 packets.</P>

<H4>See Also</H4>

<P><A HREF="216offload_0acy.htm">OID_TCP_TASK_OFFLOAD</A>, <A HREF="105nstru_3f5e.htm">NDIS_TASK_OFFLOAD</A>, <A HREF="105nstru_7c36.htm">NDIS_TASK_OFFLOAD_HEADER</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS_TASK_TCP_IP_CHECKSUM"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
