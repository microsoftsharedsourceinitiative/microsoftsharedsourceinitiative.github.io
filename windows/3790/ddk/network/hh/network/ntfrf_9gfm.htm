<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>INetCfgComponentSetup::ReadAnswerFile</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="INetCfgComponentSetup::ReadAnswerFile">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_inetcfgcomponentsetup_readanswerfile_nr"></A>INetCfgComponentSetup::ReadAnswerFile</H1>

<P>The <B>ReadAnswerFile</B> method directs the notify object of the network component to open a specific file for unattended setup and retrieve the parameters required to configure the network component.</P>

<PRE class=syntax><B>HRESULT
  ReadAnswerFile(</B>
    <B>IN LPCWSTR  </B><I>pszwAnswerFile</I><B>,</B><I>  </I>
    <B>IN LPCWSTR  </B><I>pszwAnswerSections  </I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pszwAnswerFile</I></DT>

<DD>Pointer to a constant null-terminated string of 16-bit Unicode characters containing the full path and name of the file for unattended setup to open. </DD>

<DT><I>pszwAnswerSections</I></DT>

<DD>Pointer to a constant null-terminated string of 16-bit Unicode characters containing a comma-separated list of section names in the file for unattended setup, and used to retrieve parameters for the network component.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns zero (S_OK) if successful; otherwise, returns NETCFG_* codes that are defined in <I>Netcfgx.h</I>.</P>

<H4>Headers</H4>

<P>Defined in <I>Netcfgn.h</I>. Include <I>Netcfgn.h</I>.</P>

<H4>Comments</H4>

<P>To open and retrieve information from a file for unattended setup, <B>ReadAnswerFile</B> uses the Setup API. For more information on the Setup API, see the Platform SDK. </P>

<P>To open the file for unattended setup and retrieve a handle to the file, <B>ReadAnswerFile</B> calls the <B>SetupOpenInfFile</B> function of the Setup API and passes the name of the file. To retrieve parameter information stored in a section of the file, <B>ReadAnswerFile</B> calls the <B>SetupGetLineText</B> function of the Setup API and passes the file handle, section name, and key of the required parameter. The <B>ReadAnswerFile</B> method stores the retrieved parameter information in data members of its notify object. After <B>ReadAnswerFile</B> retrieves and stores all the parameters required to configure the network component, it calls the <B>SetupCloseInfFile</B> function of the Setup API to close the file.</P>

<P><B>ReadAnswerFile</B> should not set values in the registry. Only the <A HREF="ntfrf_5jle.htm"><B>INetCfgComponentControl::ApplyRegistryChanges</B></A> method should make changes to the registry.</P>

<H4>See Also</H4>

<P><A HREF="ntfrf_5jle.htm"><B>INetCfgComponentControl::ApplyRegistryChanges</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: INetCfgComponentSetup::ReadAnswerFile"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
