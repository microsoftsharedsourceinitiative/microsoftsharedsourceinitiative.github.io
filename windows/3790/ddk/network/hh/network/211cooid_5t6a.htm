<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>General Statistics for Connection-Oriented Miniport Drivers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="General Statistics for Connection-Oriented Miniport Drivers">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_XMIT_PDUS_OK">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_RCV_PDUS_OK">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_XMIT_PDUS_ERROR">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_RCV_PDUS_ERROR">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_RCV_PDUS_NO_BUFFER">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_RCV_CRC_ERROR">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_RANSMIT_QUEUE_LENGTH">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_BYTES_XMIT">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_BYTES_RCV">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_BYTES_XMIT_OUTSTANDING">
<META NAME="MS-HKWD" CONTENT="OID_GEN_CO_NETCARD_LOAD">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_general_statistics_for_connection_oriented_miniport_drivers_nr"></A>General Statistics for Connection-Oriented Miniport Drivers</H2>

<P>The following chart summarizes the OIDs used to get or set the general statistics for connection-oriented miniport drivers and NICs.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=15%>Length</TH>
<TH align=left width=8%>Q</TH>
<TH align=left width=5%>S</TH>
<TH align=left width=72%>Name</TH>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>M</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_xmit_pdus_ok_nr">OID_GEN_CO_XMIT_PDUS_OK</A>  <BR>
PDUs transmitted without errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>M</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_rcv_pdus_ok_nr">OID_GEN_CO_RCV_PDUS_OK</A>  <BR>
PDUs received without errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>M</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_xmit_pdus_error_nr">OID_GEN_CO_XMIT_PDUS_ERROR</A>  <BR>
PDUs not transmitted or transmitted with errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>M</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_rcv_pdus_error_nr">OID_GEN_CO_RCV_PDUS_ERROR</A>  <BR>
PDUs received with errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>M</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_rcv_pdus_no_buffer_nr">OID_GEN_CO_RCV_PDUS_NO_BUFFER</A>  <BR>
PDUs missed, no buffers</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>O</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_rcv_crc_error_nr">OID_GEN_CO_RCV_CRC_ERROR</A>  <BR>
PDUs received with circular redundancy check (CRC) errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>O</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_transmit_queue_length_nr">OID_GEN_CO_TRANSMIT_QUEUE_LENGTH</A><BR>
Length of transmit queue</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>O</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_bytes_xmit_nr">OID_GEN_CO_BYTES_XMIT</A>  <BR>
Bytes transmitted without errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>O</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_bytes_rcv_nr">OID_GEN_CO_BYTES_RCV</A>  <BR>
Bytes received without errors</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>O</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_bytes_xmit_outstanding_nr">OID_GEN_CO_BYTES_XMIT_OUTSTANDING</A>  <BR>
Bytes awaiting transmission</TD>
</TR>

<TR VALIGN="top">
<TD width=15%>4 or 8</TD>
<TD width=8%>O</TD>
<TD width=5%>&nbsp;</TD>
<TD width=72%><A HREF="#ddk_oid_gen_co_netcard_load_nr">OID_GEN_CO_NETCARD_LOAD</A><BR>
The transmit load on a NIC</TD>
</TR>
</TABLE><BR>

<H4>Miniport Driver Support for 64-bit Counters</H4>

<P>All one-Gbps and faster connection-oriented miniport drivers must support 64-bit counters for the following statistics OIDs. All 100Mbps and faster connection-oriented miiniport drivers should support 64-bit counters for the following statistics OIDs:</P>

<P class=indent1>OID_GEN_CO_XMIT_PDUS_OK</P>

<P class=indent1>OID_GEN_CO_RCV_PDUS_OK</P>

<P class=indent1>OID_GEN_CO_BYTES_XMIT</P>

<P class=indent1>OID_GEN_CO_BYTES_RCV</P>

<P>Such miniport drivers can also support 64-bit counters for other statistics OIDs, such as OIDs that indicate transmit or receive errors.</P>

<P>System support for 64-bit counters is available in Windows XP and later OS versions.</P>



<H3><A NAME="ddk_oid_gen_co_xmit_pdus_ok_nr"></A>OID_GEN_CO_XMIT_PDUS_OK</H3>

<P>The number of PDUs transmitted without errors.</P>



<H3><A NAME="ddk_oid_gen_co_rcv_pdus_ok_nr"></A>OID_GEN_CO_RCV_PDUS_OK</H3>

<P>The number of PDUs the NIC received without errors and indicated to bound protocols.</P>



<H3><A NAME="ddk_oid_gen_co_xmit_pdus_error_nr"></A>OID_GEN_CO_XMIT_PDUS_ERROR</H3>

<P>The number of PDUs a NIC failed to transmit.</P>



<H3><A NAME="ddk_oid_gen_co_rcv_pdus_error_nr"></A>OID_GEN_CO_RCV_PDUS_ERROR</H3>

<P>The number of PDUs that a NIC received but did not indicate to bound protocols due to errors.</P>



<H3><A NAME="ddk_oid_gen_co_rcv_pdus_no_buffer_nr"></A>OID_GEN_CO_RCV_PDUS_NO_BUFFER</H3>

<P>The number of PDUs that the NIC could not receive because of a lack of NIC receive buffer space. Instead of providing the exact number, some NICs provide only the number of times that they have missed at least one PDU because of such a problem.</P>



<H3><A NAME="ddk_oid_gen_co_rcv_crc_error_nr"></A>OID_GEN_CO_RCV_CRC_ERROR</H3>

<P>The number of PDUs received with cyclic redundancy check (CRC) errors.</P>



<H3><A NAME="ddk_oid_gen_co_transmit_queue_length_nr"></A>OID_GEN_CO_TRANSMIT_QUEUE_LENGTH</H3>

<P>The number of PDUs currently queued for transmission, whether on the NIC or in a driver-internal queue. The number returned is always the total number of PDUs currently queued, which can include unsubmitted send requests queued in the NDIS library.</P>



<H3><A NAME="ddk_oid_gen_co_bytes_xmit_nr"></A>OID_GEN_CO_BYTES_XMIT</H3>

<P>The number of bytes in PDUs transmitted without errors.</P>



<H3><A NAME="ddk_oid_gen_co_bytes_rcv_nr"></A>OID_GEN_CO_BYTES_RCV</H3>

<P>The number of bytes in PDUs received without errors.</P>



<H3><A NAME="ddk_oid_gen_co_bytes_xmit_outstanding_nr"></A>OID_GEN_CO_BYTES_XMIT_OUTSTANDING</H3>

<P>The number of bytes in PDUs that are queued for transmission.</P>



<H3><A NAME="ddk_oid_gen_co_netcard_load_nr"></A>OID_GEN_CO_NETCARD_LOAD</H3>

<P>The OID_GEN_CO_NETCARD_LOAD OID returns the relative load on the transmit system of a connection-oriented miniport driver. The miniport driver derives this number by calculating the difference between the amount of data delivered for transmission from protocols and the amount of data actually sent, as indicated by the packets returned to protocols with <A HREF="103ndisx_5t2q.htm"><B>NdisMCoSendComplete</B></A>. The result is the amount of outstanding transmit data in the miniport driver at any time.</P>

<P>Because this statistic changes at a very high frequency, the miniport driver port should filter it. The simplest filtering method is to maintain a running average of samples of the outstanding transmit data. For example, each time <A HREF="101mini_0ycy.htm"><I>MiniportCoSendPackets</I></A><B> </B>is called, the miniport driver could add the submitted packet size to a miniport driver-defined variable called <I>OutstandingBytes</I>. Each time the miniport driver calls <A HREF="103ndisx_5t2q.htm"><B>NdisMCoSendComplete</B></A>, the miniport driver would then subtract the returned packet size from <I>OutstandingBytes. </I>The miniport driver must also maintain a running average, which is the value that the miniport driver should return in response to the OID_GEN_CO_NETCARD_LOAD query.<I> </I>This variable, which could be called <I>RunningAverage,</I> must be updated on each <I>MiniportCoSendPackets</I>, as follows:</P>

<PRE>RunningAverage = [(RunningAverage * C) + (OutstandingBytes * 
(128 - C))]/128</PRE>

<P>In this case, 1 &lt; <I>C </I>&lt; 128. Larger values of <I>C</I> produce smoother filtering.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: General%20Statistics%20for%20Connection-Oriented%20Miniport%20Drivers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
