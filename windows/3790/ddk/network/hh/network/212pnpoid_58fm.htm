<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_PNP_ENABLE_WAKE_UP</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_PNP_ENABLE_WAKE_UP">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_pnp_enable_wake_up_nr"></A>OID_PNP_ENABLE_WAKE_UP</H1>

<P>The OID_PNP_ENABLE_WAKE_UP OID specifies which wake-up capabilities a miniport driver should enable in its NIC. This OID can also be queried to determine which wake-up capabilities are enabled for a NIC.</P>

<P>The <I>InformationBuffer</I> contains the following flags, which can be bit-wise ORed together to enable a combination of wake-up events:

<DL>
<DT>NDIS_PNP_WAKE_UP_MAGIC_PACKET</DT>

<DD>When set, specifies that the miniport driver should enable the NIC to signal a wake-up event on receipt of a Magic Packet. (A Magic Packet is a packet that contains 16 contiguous copies of the receiving NIC's Ethernet address.) When cleared, specifies that the miniport driver should disable the NIC from signaling such a wake-up event.</DD>

<DT>NDIS_PNP_WAKE_UP_PATTERN_MATCH</DT>

<DD>When set, specifies that the miniport driver should enable the NIC to signal a wake-up event on receipt of a packet that contains a pattern specified by the protocol with <A HREF="212pnpoid_8lwy.htm">OID_PNP_ADD_WAKE_UP_PATTERN</A>. When cleared, specifies that the miniport driver should disable the NIC from signaling such a wake-up event.</DD>

<DT>NDIS_PNP_WAKE_UP_LINK_CHANGE</DT>

<DD>Reserved. NDIS ignores this flag. 
</DD>
</DL>

<P>After querying a miniport driver's wake-up capabilities with an OID_PNP_CAPABILITIES request, a protocol driver can use OID_PNP_ENABLE_WAKE_UP to enable one or more of the NIC's wake-up capabilities. A protocol driver can also query this OID to determine which wake-up capabilities are enabled for a NIC.</P>

<P>NDIS does not immediately enable the wake-up capabilities specified by a protocol. Instead, NDIS keeps track of the wake-up capabilities enabled by the protocol and, just before the miniport transitions to a low-power state, sends an OID_PNP_ENABLE_WAKE_UP to the miniport to enable the appropriate wake-up events.</P>

<P>Before the miniport transitions to a low-power state (that is, before NDIS sends the miniport driver an OID_PNP_SET_POWER request), NDIS sends the miniport an OID_PNP_ENABLE_WAKE_UP request to enable the appropriate wake-up capabilities. </P>

<P>The miniport driver must take the appropriate device-dependent steps to enable or disable wake-up events on the NIC.</P>

<P>An intermediate driver whose upper edge receives this OID request must always propagate the request to the underlying miniport driver by calling <B>Ndis(Co)Request</B>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_PNP_ENABLE_WAKE_UP"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
