<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>File Objects Represent Transport Addresses</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="File Objects Represent Transport Addresses">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_file_objects_represent_transport_addresses_ng"></A>File Objects Represent Transport Addresses</H2>

<P>TDI supports both <I>unreliable connectionless</I> and <I>reliable connection-oriented</I> data transfers. </P>

<P>Unreliable connectionless data can be sent to one or a group of processes that have opened a particular transport address on a remote node. When sending unreliable connectionless data, as <I>datagrams</I>, the sender need only identify the target remote-node address for the process or group of processes for them to receive each such datagram. </P>

<P>Reliable connection-oriented data transfers can be sent between two processes if an <I>endpoint-to-endpoint connection</I> (also called a <I>virtual circuit</I>) has been established between them. An endpoint-to-endpoint connection is a one-to-one association between two, and only two, processes. To establish such a connection, one process must identify the process with which it wants to establish the connection. Each such process must have opened a transport address and a connection endpoint on its respective network node and associated its connection endpoint with the open transport address. For more information about connection endpoints, see <A HREF="303tdi_72sn.htm">File Objects Represent Connection Endpoints</A>. </P>

<P>The TDI entity used to identify a specific process, or a specific group of processes is one or more open process-specific file objects that represent a particular transport address. Such a file object contains transport-supplied pointers to driver-maintained state that identifies the specific process and the node on which that process resides. The state that a "routable" transport, such as TCP/IP, Mcsxns, AppleTalk and NWLink, maintains about such an address also contains information that identifies the network (or subnet) on which the node resides. </P>

<P>Certain TDI-defined transport address types accommodate explicit or implicit indications of whether the address identifies a single process (unique address), or can identify a group of processes (group address). In the case of a group address, the TDI-defined address can contain information that identifies the specific processes, that is, the node on which the process resides, and the network (or subnet) on which the node resides.</P>

<P>A number of address types are supported by TDI. The following describes the format and usage of three commonly used TDI address types:

<DL>
<DT><B>TDI_ADDRESS_NETBIOS</B></DT>

<DD>The NetBIOS-type address consists of a standard 16-character NetBIOS name, and a member that indicates if the name is registered (or to be registered) as a <I>unique</I> name (indicating that the name identifies a <I>single</I> process), or as a <I>group</I> name (indicating that the name can identify a <I>group </I>of processes). 

<P>Because the transport driver ensures that a unique name is in use by only one process on the network at a time, such a name not only identifies the process, it also implicitly identifies the node on which that process resides. 


<P>If the registered name is a group name, it can be an address available to many processes on many stations. Thus a group name identifies all processes that registered the name as well as the nodes on which those processes reside.
</DD>

<DT><B>TDI_ADDRESS_IP</B></DT>

<DD>The IP-type address consists of a port number and a standard Internet Protocol (IP) address. Because TCP/IP allows the same port number to be registered by processes on many nodes, the IP address is required to uniquely identify the node and the port number is required to uniquely identify the process on that node.

<P>For connectionless data transfer (using the TCP/IP UDP protocol), the same port number can be registered by many processes on the same station. In addition, certain IP addresses can be used by more than one node. Data sent to a TDI address that consists of this type of port number and IP address will be received by all nodes to which the IP address applies; on those nodes, the data will be passed to all processes that have registered the specified (UDP) port number.
</DD>

<DT><B>TDI_ADDRESS_IPX</B></DT>

<DD>The IPX-type address consists of a four-byte network number, a six-byte node number, and a two-byte port number. Because IPX allows the same port number to be registered by processes on many nodes, an IPX address is required to uniquely identify the network and the node, while the port number can be used to uniquely identify the process on that node.
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: File%20Objects%20Represent%20Transport%20Addresses"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
