<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS_SET_PACKET_STATUS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS_SET_PACKET_STATUS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_set_packet_status_nr"></A>NDIS_SET_PACKET_STATUS</H1>

<P>NDIS_SET_PACKET_STATUS sets the <B>Status</B> value in the out-of-band data block associated with a given packet descriptor just before a driver calls <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> or before a driver’s <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> function returns control. </P>

<PRE class=syntax><B>NDIS_SET_PACKET_STATUS(</B>
<B>  IN PNDIS_PACKET</B>  <I>Packet</I><B>,</B>
    <B>IN NDIS_STATUS</B>  <I>Status</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Packet</I></DT>

<DD>Pointer to a packet descriptor either allocated by the caller for a receive indication or by a protocol for a send.</DD>

<DT><I>Status</I></DT>

<DD>Specifies the status to be set.

<P>For packet descriptors used in receive indications, the value can be either of the following:


<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>The driver is relinquising ownership of the packet about to be indicated with <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> until the packet descriptor is returned to its <A HREF="101mini_81ki.htm"><I>MiniportReturnPacket</I></A> function.

<P>Protocols that receive the indication can use the packet descriptor, along with all buffers mapped by buffer descriptors chained to the packet descriptor and any out-of-band information supplied with the packet, to copy the indicated net packet data, possibly forwarding the processed copy to interested clients. 
</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>The driver is retaining ownership of the packet about to be indicated with <B>NdisMIndicateReceivePacket</B> and of all subsequent packets in the packet array. All these packets will be indicated, one at a time, to the <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A> functions of bound protocols. 

<P>Setting this status forces bound protocols to return ownership of each such packet descriptor, of any medium-specific buffer in the out-of-band data block for each packet descriptor, and of the memory mapped by each packet descriptor’s respective chained buffer descriptors to the indicating driver more quickly. The protocols must wait for a call to their <A HREF="104tdlow_5i7m.htm"><I>ProtocolReceiveComplete</I></A> functions to begin postprocessing the data they copied from the indication and forwarding the processed data to their clients. 


<P>An indicating driver can set this status if it is running low on packet pool or buffer pool. An indicating NIC driver usually sets this status if it is running low on NIC receive buffers due to high network traffic. A bus-master DMA NIC driver might call <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A> in these circumstances to get additional NIC receive buffer space. 


<P>NDIS assumes that, if this status is set for a packet in an indicated array, it is set for all subsequent packets in that array. Consequently, an indicating driver need not set the status for subsequent packet descriptors in an array after it sets this status in the out-of-band data block for one packet descriptor. 
</DD>
</DL>


<P>For packet descriptors used in sends, <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> can set one of the following values:


<DL>
<DT>NDIS_STATUS_PENDING</DT>

<DD>The driver will complete the requested send operation asynchronously.

<P>After <I>MiniportSendPackets</I> returns control, the driver will call <A HREF="103ndisx_2kxe.htm"><B>NdisMSendComplete</B></A> with a final completion status for the given packet descriptor, which NDIS propagates to the <A HREF="104tdlow_6qr6.htm"><I>ProtocolSendComplete</I></A> function of the driver that allocated the resources specified by the packet descriptor and initiated the send.  
</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>The driver cannot process all sends specified in a given packet array due to current resource constraints.

<P>NDIS assumes that the <B>Status</B> member for all subsequent packet descriptors in the array given to <I>MiniportSendPackets</I> is set to the same value. NDIS queues these packet descriptors internally in the same order for resubmission to <I>MiniportSendPackets</I> when the driver calls <A HREF="103ndisx_58c2.htm"><B>NdisMSendResourcesAvailable</B></A> or <B>NdisMSendComplete</B>, whichever call occurs first. NDIS reflects this miniport driver-set status value to protocols as NDIS_STATUS_PENDING. 
</DD>

<DT>NDIS_STATUS_<I>XXX</I></DT>

<DD><I>MiniportSendPackets</I> is completing a given send request before it returns control.

<P>Whether such a send packet is completed with NDIS_STATUS_SUCCESS or a driver-determined error status, <I>MiniportSendPackets</I> must set the <B>Status</B> member for the given packet descriptor so that NDIS can reflect this status back to the protocol that initiated the send when NDIS calls <I>ProtocolSendComplete</I> with the returned packet descriptor. 

</DD>
</DL>
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>Only drivers that indicate receives with <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> to bound protocols and/or drivers that have <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> functions use the NDIS_SET_PACKET_STATUS macro. </P>

<P>After such an underlying driver has set the <B>Status</B> for some number of packet descriptors in an array and called <B>NdisMIndicateReceivePacket</B> with the array of pointers to those packet descriptors, it must use the NDIS_GET_PACKET_STATUS macro when <B>NdisMIndicateReceivePacket</B> returns control. The returned <B>Status</B> in the <A HREF="105nstru_1vqq.htm">NDIS_PACKET_OOB_DATA</A> block associated with each packet descriptor that the driver indicated with NDIS_STATUS_SUCCESS determines what the indicating driver does next, as follows:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>If this is set on return from a miniport’s call to <B>NdisMIndicateReceivePacket</B>, the miniport driver regains ownership of the following:

<UL>
	<LI>The packet descriptor</LI>

	<LI>The associated out-of-band data block associated with the packet descriptor and of any media-specific information buffer specified in this block</LI>

	<LI>All buffers mapped by buffer descriptors chained to the packet descriptor </LI>
</UL>


<P>The driver can prepare these descriptors, the out-of-band block, and media-specific information buffer, if any, for reuse in subsequent receive indications immediately. 
</DD>

<DT>NDIS_STATUS_PENDING</DT>

<DD>If this is set on return from <B>NdisMIndicateReceivePacket</B>, protocols retain ownership of the packet descriptor, of its associated out-of-band data block and of any buffer specified in this block, and of all buffers mapped by buffer descriptors chained to the packet descriptor until the packet descriptor is returned to the indicating driver’s <A HREF="101mini_81ki.htm"><I>MiniportReturnPacket</I></A> function. However, protocols are given read-only access to these miniport driver-allocated resources.
</DD>
</DL>

<P>When the <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A> function sets the <B>Status</B> for an incoming send packet to anything other than NDIS_STATUS_PENDING or NDIS_STATUS_RESOURCES, it completes the packet and relinquishes ownership to all resources specified by the associated packet descriptor. NDIS returns the packet descriptor to the <A HREF="104tdlow_6qr6.htm"><I>ProtocolSendComplete</I></A> function of the allocating driver and propagates the miniport driver-set status value as an input parameter to <I>ProtocolSendComplete</I>. Otherwise, the underlying driver will call <A HREF="103ndisx_2kxe.htm"><B>NdisMSendComplete</B></A> with the packet descriptor and final status when the asynchronous send operation is done. </P>

<P>Protocol drivers should <I>never</I> test the <B>Status</B> value in an associated out-of-band data block on return from <A HREF="103ndisx_88s2.htm"><B>NdisSendPackets</B></A> or <A HREF="103ndisx_7jw2.htm"><B>NdisSend</B></A>. NDIS or the underlying driver retains ownership of the packet descriptor, of the associated out-of-band block and any buffers specified in this block, and of all buffers mapped by buffer descriptors chained to the packet descriptor until the <I>ProtocolSendComplete</I> function is called with the packet descriptor. </P>

<P>Callers of NDIS_SET_PACKET_STATUS run at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_81ki.htm"><I>MiniportReturnPacket</I></A>, <A HREF="101mini_19bm.htm"><I>MiniportSendPackets</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="103ndisx_7d6a.htm"><B>NdisAllocatePacket</B></A>, <A HREF="103ndisx_05bm.htm">NDIS_GET_PACKET_STATUS</A>, <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A>, <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A>, <A HREF="103ndisx_2kxe.htm"><B>NdisMSendComplete</B></A>, <A HREF="103ndisx_43qq.htm">NDIS_OOB_DATA_FROM_PACKET</A>, <A HREF="105nstru_1vqq.htm">NDIS_PACKET_OOB_DATA</A>, <A HREF="103ndisx_7jw2.htm"><B>NdisSend</B></A>, <A HREF="103ndisx_88s2.htm"><B>NdisSendPackets</B></A>, <A HREF="103ndisx_5w8j.htm">NDIS_SET_PACKET_HEADER_SIZE</A>, <A HREF="103ndisx_6rxu.htm">NDIS_SET_PACKET_MEDIA_SPECIFIC_INFO</A>, <A HREF="103ndisx_3nxu.htm">NDIS_SET_PACKET_TIME_RECEIVED</A>, <A HREF="103ndisx_2u42.htm">NDIS_SET_PACKET_TIME_SENT</A>, <A HREF="104tdlow_6qr6.htm"><I>ProtocolSendComplete</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS_SET_PACKET_STATUS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
