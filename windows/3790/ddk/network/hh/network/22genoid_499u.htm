<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_GEN_MAC_OPTIONS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_GEN_MAC_OPTIONS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_gen_mac_options_nr"></A>OID_GEN_MAC_OPTIONS</H1>

<P>The OID_GEN_MAC_OPTIONS OID specifies a bitmask that defines optional properties of the underlying driver or its NIC. A protocol that initiates this query can determine which of the flags the underlying driver sets, and can optionally take advantage of them. </P>

<P>The following flags are currently defined:

<DL>
<DT>NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA</DT>

<DD>The protocol driver is free to access indicated data by any means. Some fast-copy functions have trouble accessing on-board device memory. NIC drivers that indicate data out of mapped device memory should <I>never</I> set this flag. If a NIC driver does set this flag, it relaxes the restriction on fast-copy functions. </DD>

<DT>NDIS_MAC_OPTION_RECEIVE_SERIALIZED</DT>

<DD>The NIC driver indicates packets in a serial manner. That is, such a driver does not enter a new receive indication until the previous receive and any associated calls to the driver's <I>MiniportTransferData</I> function, if any, have been completed.</DD>

<DT>NDIS_MAC_OPTION_TRANSFERS_NOT_PEND</DT>

<DD>The NIC driver never returns NDIS_STATUS_PENDING from its <I>MiniportTransferData</I> function. The call succeeds or fails immediately in all cases.

<P>A miniport driver that indicates receive operations with the <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A> function has no <I>MiniportTransferData</I> function. Such a driver should set this flag. 
</DD>

<DT>NDIS_MAC_OPTION_NO_LOOPBACK</DT>

<DD>The NIC has no internal loopback support so NDIS will manage loopbacks on behalf of this driver. A miniport driver cannot provide its own software loopback as efficiently as NDIS, so every miniport driver should set this flag unless its NIC has hardware loopback support. WAN miniport drivers must set this flag. </DD>

<DT>NDIS_MAC_OPTION_FULL_DUPLEX</DT>

<DD>The NIC driver supports full-duplex transmits and indications on SMP platforms. NDIS serializes calls to the <I>MiniportSend(Packets)</I> function of such a driver separately from its serialized calls to other Miniport<I>Xxx</I> functions. A driver that reports its medium type as <B>NdisMediumWan</B> cannot set this flag, and WAN miniport drivers cannot be full-duplex drivers. </DD>

<DT>NDIS_MAC_OPTION_8021P_PRIORITY</DT>

<DD>The NIC and its driver support 802.1p packet priority. For more information, see <A HREF="204_802p_6kiv.htm">Packet Priority</A>. Packet-priority values are received in NDIS_PACKET structures from higher-layer drivers. The appropriate information is generated in the MAC headers of packets and transmitted over the network. In addition, this NIC and its driver support extracting the appropriate information from the MAC headers of packets received from the network. This information is forwarded in NDIS_PACKET structures to higher-layer drivers.</DD>

<DT>NDIS_MAC_OPTION_8021Q_VLAN</DT>

<DD>The NIC driver can assign and remove VLAN identifier (ID) marking in the MAC headers of packets. The driver maintains a configured VLAN ID for each NIC that the driver handles. The driver filters out incoming packets that do not belong to the VLAN to which a NIC is associated and marks outgoing packets with the VLAN ID. During the driver's <I>MiniportInitialize</I> routine for a particular NIC, the driver initially sets the NIC's VLAN ID to zero. The driver's <I>MiniportInitialize</I> routine then reads the following configuration parameter from the registry, and, if the parameter is present, sets the NIC's VLAN ID to the parameter's value.

<PRE>VlanId, REG_DWORD</PRE>

</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_GEN_MAC_OPTIONS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
