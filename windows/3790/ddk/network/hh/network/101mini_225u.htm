<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MiniportAllocateComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MiniportAllocateComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_miniportallocatecomplete_nr"></A>MiniportAllocateComplete</H1>

<P>The<I> MiniportAllocateComplete</I> function is an optional function, supplied by drivers of bus-master DMA NICs that call <B>NdisMAllocateSharedMemoryAsync</B>.  </P>

<PRE class=syntax><B>VOID</B>
  <B>MiniportAllocateComplete(</B>
    <B>IN</B> <B>NDIS_HANDLE</B>  <I>MiniportAdapterContext</I><B>,</B>
    <B>IN</B> <B>PVOID</B>  <I>VirtualAddress</I><B>,</B>
    <B>IN</B> <B>PNDIS_PHYSICAL_ADDRESS</B>  <I>PhysicalAddress</I><B>,
    IN</B> <B>ULONG</B>  <I>Length</I><B>,
    IN</B> <B>PVOID</B>  <I>Context</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MiniportAdapterContext</I></DT>

<DD>Specifies the handle to a miniport driver-allocated context area in which the driver maintains per-NIC state, set up by <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>. </DD>

<DT><I>VirtualAddress</I></DT>

<DD>Specifies the base virtual address of the shared memory allocated by a preceding call to <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A> or NULL if the allocation attempt failed. </DD>

<DT><I>PhysicalAddress</I></DT>

<DD>Specifies the base physical address, suitable for use by the NIC, mapped to <I>VirtualAddress</I>.</DD>

<DT><I>Length</I></DT>

<DD>Specifies the number of bytes allocated by the preceding call to <B>NdisMAllocateSharedMemoryAsync</B>.</DD>

<DT><I>Context</I></DT>

<DD>Pointer to a driver-determined context passed in the preceding call to <B>NdisMAllocateSharedMemoryAsync</B>.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h.</I></P>

<H4>Comments</H4>

<P>Drivers of bus-master DMA NICs are most likely to achieve significant performance gains by supporting multipacket receive indications. Such a driver supplies a <I>MiniportAllocateComplete</I> function so it can call <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A> when it is running low on shared memory for receive buffers due to high network traffic. </P>

<P><B>NdisMAllocateSharedMemoryAsync</B> allocates memory that is shareable between the driver, which uses virtual addresses, and its bus-master DMA NIC, which uses the corresponding physical addresses. <B>NdisMAllocateSharedMemoryAsync</B> calls <I>MiniportAllocateComplete</I> whether its allocation attempt succeeds or fails. </P>

<P>A call to <B>NdisMAllocateSharedMemoryAsync</B> can occur at IRQL &lt;= DISPATCH_LEVEL, possibly from the driver’s <A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A> or <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A> function as it indicates incoming receives to bound protocols with <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A>. Such a driver also must have a <A HREF="101mini_81ki.htm"><I>MiniportReturnPacket</I></A><I> </I>function. </P>

<P><I>MiniportAllocateComplete</I> should test the value of <I>VirtualAddress</I> to determine whether the call to <B>NdisMAllocateSharedMemoryAsync</B> succeeded. If the call succeeded, <I>VirtualAddress</I> is non-NULL. If the call failed, <I>VirtualAddress</I> is NULL.</P>

<P>If the call to <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A> succeeded, <I>MiniportAllocateComplete</I> can set up additional receive buffers in the newly allocated shared memory block. If this call allocated cached memory, <I>MiniportAllocateComplete</I> should align each new receive buffer on a cache-line boundary. <I>MiniportAllocateComplete</I> must allocate the buffer descriptors that map these new receive buffers from buffer pool. Such a miniport driver can continue making multipacket receive indications, which NDIS forwards to the <A HREF="104tdlow_5i7n.htm"><I>ProtocolReceivePacket</I></A> function(s) of bound protocol(s) that export this function or as individual packets to the <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A> functions of other bound protocols. </P>

<P>If the call to <B>NdisMAllocateSharedMemoryAsync</B> failed, <I>MiniportAllocateComplete</I> should set a state variable in the <I>MiniportAdapterContext</I> area to indicate that the driver must set NDIS_STATUS_RESOURCES in the <B>Status</B> member of the out-of-band block for the packets it subsequently indicates. This status causes NDIS to call the <I>ProtocolReceive</I> function(s) of bound protocol(s) with each packet for which the miniport driver set NDIS_STATUS_RESOURCES, so protocol driver(s) release the miniport driver-allocated packets with chained receive buffers individually as they are indicated, rather than holding on to packets until the protocol(s) have processed all indicated data. When the receive buffer space in the miniport’s existing shared memory area is replenished, the driver can reset its state variable and resume indicating packet arrays with NDIS_STATUS_SUCCESS. </P>

<P><I>MiniportAllocateComplete</I> runs at IRQL = DISPATCH_LEVEL. </P>

<H4>See Also </H4>

<P><A HREF="101mini_7s36.htm"><I>MiniportHandleInterrupt</I></A>, <A HREF="101mini_81ki.htm"><I>MiniportReturnPacket</I></A>, <A HREF="101mini_81v6.htm"><I>MiniportTimer</I></A>, <A HREF="103ndisx_39pu.htm"><B>NdisAllocateBuffer</B></A>, <A HREF="103ndisx_1ywi.htm"><B>NdisMAllocateSharedMemory</B></A>, <A HREF="103ndisx_3fg2.htm"><B>NdisMAllocateSharedMemoryAsync</B></A>, <A HREF="103ndisx_5uuq.htm"><B>NdisMIndicateReceivePacket</B></A>, <A HREF="105nstru_1vqq.htm">NDIS_PACKET_OOB_DATA</A>, <A HREF="104tdlow_62k2.htm"><I>ProtocolReceive</I></A>, <A HREF="104tdlow_5i7n.htm"><I>ProtocolReceivePacket</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MiniportAllocateComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
