<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MiniportXxx Functions</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MiniportXxx Functions">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_miniportxxx_functions_ng"></A><I>MiniportXxx</I> Functions</H2>

<P>The typical miniport driver uses a small number of functions to communicate through NDIS with the upper layers and hardware. The complete list of upper-edge (<I>MiniportXxx</I>) functions that NDIS can call to communicate with a miniport driver, whether on its own behalf or on the behalf of protocol drivers, is provided in <A HREF="202mini_9js7.htm">Miniport Driver Upper Edge Functions</A>; not all of these functions are required. For information about which functions are optional, which are required, and why, see <A HREF="203entry_0vl3.htm">Registering <I>MiniportXxx</I> Functions</A>.</P>

<P>NDIS miniport drivers and upper-layer drivers use the NDIS Library (<I>ndis.sys</I>) to communicate with each other through calls to <B>Ndis</B><I>Xxx</I> functions. A summary of the <B>Ndis</B><I>Xxx</I> functions and macros that a miniport driver can call is provided in <A HREF="202mini_5xwn.htm">NDIS Functions Called by Miniport Drivers</A>. </P>

<P>Many miniport driver functions can operate either synchronously or asynchronously. The asynchronous functions have <B>Ndis</B><I>Xxx</I><B>…Complete</B> functions that must be called when an operation is finished. For example, if a protocol driver calls <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>to query miniport driver information, the miniport driver's <I>MiniportQueryInformation</I> function can pend the reset operation by returning NDIS_STATUS_PENDING. Eventually, the <I>MiniportReset</I> function must call <A HREF="103ndisx_4ktu.htm"><B>NdisMQueryInformationComplete</B></A> to indicate the final status of the query request. For more information about asynchronous <I>MiniportXxx</I> functions and the corresponding completion functions, see <A HREF="202mini_06w7.htm">Overview of Miniport Driver Operations and Functions</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MiniportXxx%20Functions"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
