<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Setting and Querying Information</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Setting and Querying Information">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_setting_and_querying_information_ng"></A>Setting and Querying Information</H1>

<P>The following figure shows how a TDI client can make queries about the features of its underlying transport or request its underlying transport to set its state data to client-specified values. </P>

<P><IMG SRC="images/426-08.gif" ALT="" BORDER=0></P>

<P><B>Setting and Querying Information in the Transport</B></P>

<P>A TDI client can query certain transport driver information, such as connection-status information, activity on a particular transport address, transport-specific limits on datagram size and number, driver statistics, and internal send/receive buffer sizes if the transport buffers data internally. A client also can set some state information in the underlying transport, although it cannot override the underlying transport-determined values for certain size limits by issuing set-information requests. </P>

<P>If a client wants to query information concerning an open transport address or a connection endpoint, it submits a <A HREF="32ioctl_508i.htm">TDI_QUERY_INFORMATION</A> request, set up with <A HREF="34bldmac_3f5e.htm"><B>TdiBuildQueryInformation</B></A>, to the underlying transport. When it uses this macro, the client passes pointers to the file object that represents the address or connection endpoint and to a client-supplied buffer in which the transport returns the requested information.</P>

<P>To set transport information, the client issues a <A HREF="32ioctl_23ci.htm">TDI_SET_INFORMATION</A> request, set up with <A HREF="34bldmac_0s1e.htm"><B>TdiBuildSetInformation</B></A>. </P>

<P>For each of these operations, the client also passes a system-defined TDI_QUERY_<I>XXX</I> value as the <I>QType</I> or <I>SType</I> parameter to the <B>TdiBuild..Information</B> macros to discriminate among the types of information that can be queried and set. </P>

<P>To query or set information that does not specifically concern an address or a connection endpoint, a client first must open a control channel in the TDI driver before submitting its query/set-information requests. For example, a client querying information about the underlying transport's broadcast address for connectionless-data transmission or the transport's current statistics uses a control channel.</P>

<P>To open a control channel, the client calls <B>ZwCreateFile</B> with a NULL <I>EaBuffer</I> pointer. The client's call to <B>ZwCreateFile</B> causes the I/O Manager to create a client-process-specific file object to represent the control channel and to call its underlying transport’s <A HREF="31tddisp_6foy.htm"><I>TdiDispatchCreate</I></A> routine with an IRP containing the client-supplied parameters to <B>ZwCreateFile</B>. <I>TdiDispatchCreate</I> notes the absence of EA information, and the transport sets up internal state for the open control channel and for this client if the call succeeds. </P>

<P>As an alternative for opening a file object that represents a control channel, the client can call <B>IoGetDeviceObjectPointer</B>, which returns pointers to the named device object and corresponding file object. </P>

<P>After its successful call to <B>ZwCreateFile</B> returns a file handle to the client and the client has obtained a pointer to the file object with <B>ObReferenceObjectByHandle</B>, it is ready to make certain types of TDI_QUERY_INFORMATION or TDI_QUERY_SET_INFORMATION IOCTL requests to its underlying transport. </P>

<P>When its query- and/or set-information operations are complete, the client must close the open control channel by passing the file handle that was returned by <B>ZwCreateFile</B> to <B>ZwClose</B> or passing the file object pointer that was returned by <B>IoGetDeviceObjectPointer</B> to <B>ObDereferenceObject</B>, as described later in <A HREF="305toper_8bfr.htm">Closing a Transport Address or Control Channel</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Setting%20and%20Querying%20Information"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
