<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NdisInitializeListHead</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NdisInitializeListHead">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndisinitializelisthead_nr"></A>NdisInitializeListHead</H1>

<P><B>NdisInitializeListHead</B> initializes a doubly linked, driver-maintained queue. </P>

<PRE class=syntax><B>VOID</B>
<B>  NdisInitializeListHead(</B>
    <B>IN PLIST_ENTRY</B>  <I>ListHead</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ListHead</I></DT>

<DD>Pointer to driver-allocated nonpaged storage for the head of the interlocked queue or list. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P><B>NdisInitializeListHead</B> can be called from a <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A> function or from a protocol driver’s <B>DriverEntry</B> function if the driver queues requests internally. However, miniport drivers seldom set up internal queues because the NDIS library serializes requests and packets sent to miniport drivers. </P>

<P>Any NDIS driver that maintains an internal queue is responsible for synchronizing driver functions’ accesses to queued entries. The <B>NdisInterlocked..List</B> functions ensure that only one driver function can access queued entries at any given moment, even if the driver is running on a multiprocessor machine, because the queue is protected by a caller-supplied spin lock. </P>

<P>For an interlocked queue, the driver also must provide nonpaged storage for a spin lock. It must initialize the spin lock with <A HREF="103ndisx_7mk2.htm"><B>NdisAllocateSpinLock</B></A> before passing a pointer to that spin lock to any of the <B>NdisInterlocked..List</B> functions. </P>

<P>Callers of <B>NdisInitializeListHead</B> usually run at IRQL = PASSIVE_LEVEL, because this function is commonly called at initialization. </P>

<H4>See Also</H4>

<P><A HREF="104tdlow_9raq.htm"><B>DriverEntry of NDIS Protocol Drivers</B></A>, <A HREF="101mini_9jzm.htm"><I>MiniportInitialize</I></A>, <A HREF="103ndisx_7mk2.htm"><B>NdisAllocateSpinLock</B></A>, <A HREF="103ndisx_9pte.htm"><B>NdisInterlockedInsertHeadList</B></A>, <A HREF="103ndisx_7j02.htm"><B>NdisInterlockedInsertTailList</B></A>, <A HREF="103ndisx_02cy.htm"><B>NdisInterlockedRemoveHeadList</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NdisInitializeListHead"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
