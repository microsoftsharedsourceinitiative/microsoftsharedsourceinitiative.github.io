<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProtocolCmIncomingCallComplete</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProtocolCmIncomingCallComplete">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_protocolcmincomingcallcomplete_nr"></A>ProtocolCmIncomingCallComplete</H1>

<P>The <I>ProtocolCmIncomingCallComplete</I> function is required. When NDIS calls this function, <I>ProtocolCmIncomingCallComplete</I> indicates to the call manager that the connection-oriented client has finished processing of an incoming call offer that the call manager previously dispatched through <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>.</P>

<PRE class=syntax><B>VOID 
</B>  <B>ProtocolCmIncomingCallComplete(
</B>    <B>IN NDIS_STATUS</B>  <I>Status</I><B>,</B>
    <B>IN NDIS_HANDLE</B>  <I>CallMgrVcContext</I><B>,</B>
    <B>IN PCO_CALL_PARAMETERS</B>  <I>CallParameters</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Status</I></DT>

<DD>Indicates the final status of the operation to dispatch an incoming call to a connection-oriented client.</DD>

<DT><I>CallMgrVcContext</I></DT>

<DD>Specifies the handle to a call manager-allocated context area in which the call manager maintains its per-VC state. The call manager supplied this handle from its <A HREF="104tdlow_299u.htm"><I>ProtocolCoCreateVc</I></A> function.</DD>

<DT><I>CallParameters</I></DT>

<DD>Pointer to the call parameters as specified by the call manager in the call to <A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>. The signaling protocol determines which call parameters, if any, the call manager can change.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>Ndis.h</I>. Include <I>Ndis.h</I>.</P>

<H4>Comments</H4>

<P>When the connection-oriented client has completed processing of an incoming connection offer that the call manager dispatched to it, this routine will be called if <B>NdisCmDispatchIncomingCall</B> returned NDIS_STATUS_PENDING. The final status of the incoming call is found in <I>Status. </I>Possible values for <I>Status</I> include, but are not limited to:

<DL>
<DT>NDIS_STATUS_SUCCESS</DT>

<DD>Indicates that the call manager has accepted the incoming call.</DD>

<DT>NDIS_STATUS_FAILURE</DT>

<DD>Indicates that either the address family or the SAP that the call dispatched for is currently in the process of closing.</DD>

<DT>NDIS_STATUS_RESOURCES</DT>

<DD>Indicates that the incoming call was not accepted because the connection-oriented client was unable to dynamically allocate resources required for it to process the call.</DD>

<DT>NDIS_STATUS_INVALID_DATA</DT>

<DD>Indicates that the connection-oriented client rejected the call because the call parameters specified were invalid.
</DD>
</DL>

<P>If the client accepts the incoming call, the call manager should send signaling message(s) to indicate to the calling entity that the call has been accepted. If the client does not accept the call, the call manager should send signaling message(s) to indicate that the call has been rejected.</P>

<P><I>ProtocolCmIncomingCallComplete</I> must be written so that is can be run at IRQL = DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="103ndisx_2v76.htm"><B>NdisCmDispatchIncomingCall</B></A>, <A HREF="104tdlow_8a9e.htm"><I>ProtocolClIncomingCall</I></A>, <A HREF="104tdlow_3kky.htm"><I>ProtocolCmRegisterSap</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProtocolCmIncomingCallComplete"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
