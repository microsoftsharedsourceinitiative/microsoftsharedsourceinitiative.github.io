<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Responding to Queries and Sets of Miniport Driver Information</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Responding to Queries and Sets of Miniport Driver Information">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_responding_to_queries_and_sets_of_miniport_driver_information_ng"></A>Responding to Queries and Sets of Miniport Driver Information</H2>

<P>To query a connectionless miniport driver’s capabilities or statistics information, NDIS calls the miniport driver’s <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> function. NDIS can call this function on its own behalf or on the behalf of upper layers. To query a connection-oriented miniport driver, NDIS calls the miniport driver's <A HREF="101mini_0pgy.htm"><I>MiniportCoRequest</I></A> function. The <I>MiniportQueryInformation</I> or <I>MiniportCoRequest</I> function obtains the information and returns it to NDIS.</P>

<P>To set information maintained by a connectionless miniport driver, NDIS calls the miniport driver’s <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A> function, which sets the specified object identifier and returns the status of the operation to NDIS. To set object identifiers (OIDs) maintained by a connection-oriented miniport driver, NDIS calls the miniport driver's <I>MiniportCoRequest</I> function.</P>

<P>Miniport driver query and set functions are potentially asynchronous. If they complete synchronously, they return immediately with a status code other than NDIS_STATUS_PENDING. If they complete asynchronously, the function returns NDIS_STATUS_PENDING. To complete a query or set asynchronously, a connectionless miniport driver respectively calls <A HREF="103ndisx_4ktu.htm"><B>NdisMQueryInformationComplete</B></A> or <A HREF="103ndisx_3alu.htm"><B>NdisMSetInformationComplete</B></A>. A connection-oriented miniport driver calls <A HREF="103ndisx_0kmq.htm"><B>NdisMCoRequestComplete</B></A> to complete a query or set asynchronously.</P>

<P>The NDIS Library guarantees that the miniport driver will never have more than one outstanding query or set request, so there is no need for the miniport driver to queue requests. </P>

<P>NDIS does not, however, guarantee the validity of OID-specific values passed to a miniport driver in a set request. The driver itself must therefore validate such values. If the driver determines that a value to be set is out of bounds, it should fail the set request.</P>

<P>For more information on querying and setting connectionless miniport drivers, see <A HREF="205mpinfo_96nb.htm">Obtaining and Setting Miniport Driver Information</A>. For information on specific OIDs, see <A HREF="22genoid_1m2a.htm">General Objects</A><I>.</I></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Responding%20to%20Queries%20and%20Sets%20of%20Miniport%20Driver%20Information"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
