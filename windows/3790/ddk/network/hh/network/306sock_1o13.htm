<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Windows Sockets Helper DLL Architecture</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Windows Sockets Helper DLL Architecture">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_windows_sockets_helper_dll_architecture_ng"></A>Windows Sockets Helper DLL Architecture</H1>

<P>Windows Socket Helper (WSH) DLLs are user-mode components provided by transport driver writers to facilitate the usage of Windows Sockets with their transports. The following figure shows an overview of this architecture. </P>

<P><IMG SRC="images/306_01.gif" ALT="" BORDER=0></P>

<P><B>Windows Sockets Helper DLL architecture</B></P>

<P>Windows&nbsp;2000 and later versions provide a dynamic-link library, <I>msafd.dll</I>, which is a sockets service provider. When a transport driver is installed in the system and it installs a transport-specific WSH DLL, network setup will automatically configure <I>msafd.dll</I> to be the service provider for that WSH DLL. When an application makes a call to a Windows Sockets function, such as <B>WSASocket</B>, MSAFD as the service provider will resolve the call and make a call to the appropriate WSH DLL for assistance as necessary.</P>

<P>Some Windows Sockets functions require no assistance from any WSH DLL. For example, sending or receiving data does not require the WSH DLL as the connections have already been established. In cases such as these, MSAFD can communicate directly with the transport by calling Win32® functions.</P>

<P>However, for function calls that rely on transport-specific features or where the implementation can vary from transport to transport, the transport-specific WSH DLL will be used to resolve these ambiguities. For example, <B>WSAJoinLeaf</B> adds a socket to an established multipoint session. Each transport implements the addition of new connections to a multipoint session differently. Consequently, MSAFD calls the appropriate WSH DLL to support the sockets interface according to the transport-specific implementation. To support application calls to <B>WSAJoinLeaf</B>, MSAFD calls the WSH DLL's <B>WSHJoinLeaf</B> function to validate the options requested and calls the transport with the appropriate information to add a new socket to a multipoint session.</P>

<P>If a transport supports the new features of Windows Sockets 2, including multipoint session sockets, socket grouping, and logical representations of socket addresses, the corresponding WSH DLL must export the Windows Sockets 2 functions, summarized later in <A HREF="306sock_9zs7.htm">WSH DLL Function Summary</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Windows%20Sockets%20Helper%20DLL%20Architecture"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
