<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>INetCfgComponent::GetBindName</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="INetCfgComponent::GetBindName">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_inetcfgcomponent_getbindname_nr"></A>INetCfgComponent::GetBindName</H1>

<P>The <B>GetBindName</B> method retrieves the description of a network component that the network configuration subsystem uses for binding operations.</P>

<PRE class=syntax><B>HRESULT
  GetBindName(</B>
    <B>OUT LPWSTR  *</B><I>ppszwBindName  </I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ppszwBindName</I></DT>

<DD>Pointer to a buffer that receives a constant null-terminated string of 16-bit Unicode characters containing the description of a network component used for binding operations. 
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns zero (S_OK) if successful; otherwise, returns NETCFG_* codes that are defined in <I>Netcfgx.h</I>. If the returned pointer points to NULL, <B>GetBindName</B> returns E_POINTER.</P>

<H4>Headers</H4>

<P>Defined in <I>Netcfgx.h</I>. Include <I>Netcfgx.h</I>.</P>

<H4>Comments</H4>

<P>After notify objects call <B>GetBindName</B> to retrieve the description of a network component used for binding operations, <B>GetBindName</B> allocates the memory required to store the string containing the description. After notify objects finish with the description, they must call the COM <B>CoTaskMemFree</B> function to release the memory. For more information on <B>CoTaskMemFree</B>, see the Platform SDK.</P>

<P>A notify object can call the following methods to retrieve and traverse bindings in search of a network component with a specific bind name:

<UL>
	<LI><B>QueryInterface</B> method of <B>INetCfgComponent</B> to obtain a pointer to <A HREF="ntfrf_5sz6.htm"><B>INetCfgComponentBindings</B></A> </LI>

	<LI><A HREF="ntfrf_7q7m.htm"><B>INetCfgComponentBindings::EnumBindingPaths</B></A> </LI>

	<LI>Methods of the <A HREF="ntfrf_9ilu.htm"><B>IEnumNetCfgBindingPath</B></A> interface that enumerate the <A HREF="ntfrf_3p0y.htm"><B>INetCfgBindingPath</B></A> interfaces </LI>

	<LI><A HREF="ntfrf_5vqq.htm"><B>INetCfgBindingPath::EnumBindingInterfaces</B></A> </LI>

	<LI>Methods of the <A HREF="ntfrf_43n6.htm"><B>IEnumNetCfgBindingInterface</B></A> interface that enumerate the <A HREF="ntfrf_48aa.htm"><B>INetCfgBindingInterface</B></A> interfaces </LI>

	<LI><A HREF="ntfrf_6gky.htm"><B>INetCfgBindingInterface::GetUpperComponent</B></A> and <A HREF="ntfrf_0nzm.htm"><B>INetCfgBindingInterface::GetLowerComponent</B></A> </LI>

	<LI><B>GetBindName</B> to retrieve the component's bind name </LI>
</UL>

<P>Strings that contain descriptions of network components used for binding operations can include "tcpip", "netbios", and "ndiswanipout."</P>

<H4>See Also</H4>

<P><A HREF="ntfrf_43n6.htm"><B>IEnumNetCfgBindingInterface</B></A>, <A HREF="ntfrf_9ilu.htm"><B>IEnumNetCfgBindingPath</B></A>, <A HREF="ntfrf_48aa.htm"><B>INetCfgBindingInterface</B></A>, <A HREF="ntfrf_0nzm.htm"><B>INetCfgBindingInterface::GetLowerComponent</B></A>, <A HREF="ntfrf_6gky.htm"><B>INetCfgBindingInterface::GetUpperComponent</B></A>, <A HREF="ntfrf_3p0y.htm"><B>INetCfgBindingPath</B></A>, <A HREF="ntfrf_5vqq.htm"><B>INetCfgBindingPath::EnumBindingInterfaces</B></A>, <A HREF="ntfrf_7q7m.htm"><B>INetCfgComponentBindings::EnumBindingPaths</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: INetCfgComponent::GetBindName"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
