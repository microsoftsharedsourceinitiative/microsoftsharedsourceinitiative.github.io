<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Intermediate Driver Query and Set Operations</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Intermediate Driver Query and Set Operations">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_intermediate_driver_query_and_set_operations_ng"></A>Intermediate Driver Query and Set Operations</H2>

<P>After it has successfully bound to an underlying miniport driver and initialized its virtual miniports, an intermediate driver queries the operating characteristics of the underlying miniport driver and sets its own internal state. If appropriate, the intermediate driver also negotiates such parameters as lookahead buffer size for the binding with the underlying miniport driver. An intermediate driver with a connectionless lower edge accomplishes this by calling <A HREF="103ndisx_0u42.htm"><B>NdisRequest</B></A>. An intermediate driver with a connection-oriented lower edge accomplishes this by calling <A HREF="103ndisx_8xde.htm"><B>NdisCoRequest</B></A>.</P>

<P>An intermediate driver can also receive query and set requests from higher level drivers through its <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> and <A HREF="101mini_7ng2.htm"><I>MiniportSetInformation</I></A> functions, respectively. The driver can either respond to those requests or pass them down to the underlying driver. How an intermediate driver responds to queries and sets depends on the implementation.</P>

<P class=note><B>Note</B>&nbsp;&nbsp;The behavior of intermediate drivers can also be affected by the power state of the virtual miniport and the underlying miniport driver. To learn more about the effects of the power state on query and set operations, see <A HREF="301int_82jr.htm">Handling a Set Power Request</A>.</P>

<P>The Network Driver Reference contains information about all the general, connection-oriented, nonmedia-specific OIDs and about required media-specific OIDs of interest to intermediate driver developers. </P>

<P>The following topics provide additional information about issuing and responding to quries and sets in an intermediate driver: </P>

<P class=indent1><A HREF="301int_0puv.htm">Issuing Set and Query Requests from an Intermediate Driver</A></P>

<P class=indent1><A HREF="301int_2hgn.htm">Responding to Sets and Queries in an Intermediate Driver</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Intermediate%20Driver%20Query%20and%20Set%20Operations"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
