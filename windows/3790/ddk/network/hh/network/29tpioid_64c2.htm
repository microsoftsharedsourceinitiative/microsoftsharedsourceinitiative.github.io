<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OID_TAPI_GET_DEV_CAPS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="OID_TAPI_GET_DEV_CAPS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_oid_tapi_get_dev_caps_nr"></A>OID_TAPI_GET_DEV_CAPS</H1>

<P>The OID_TAPI_GET_DEV_CAPS OID requests the miniport driver to return the telephony capabilities of a specified line device. The returned information is valid for all addresses on the given line device. </P>

<P>Support for this request is mandatory. </P>

<P>This request uses an NDIS_TAPI_GET_DEV_CAPS structure, defined as follows:</P>

<PRE class=syntax>typedef struct _NDIS_TAPI_GET_DEV_CAPS { 
  IN ULONG  ulRequestID; 
  IN ULONG  ulDeviceID; 
  IN ULONG  ulExtVersion; 
  OUT LINE_DEV_CAPS  LineDevCaps; 
} NDIS_TAPI_GET_DEV_CAPS, *PNDIS_TAPI_GET_DEV_CAPS; </PRE>

<P>The members of this structure contain the following information:

<DL>
<DT><B>ulRequestID</B></DT>

<DD>Reserved.</DD>

<DT><B>ulDeviceID</B></DT>

<DD>Specifies the link or data channel to be queried. This was set up in a preceding <A HREF="29tpioid_5rsi.htm">OID_TAPI_GET_ID</A> request. </DD>

<DT><B>ulExtVersion</B></DT>

<DD>Specifies the negotiated extension version number, if any. 

<P>The value has already been negotiated for this device through the <A HREF="29tpioid_54du.htm">OID_TAPI_NEGOTIATE_EXT_VERSION</A> request. The value of this member is not validated when this request is made.
</DD>

<DT><B>LineDevCaps</B></DT>

<DD>Specifies the virtual address of a variable-size structure of type LINE_DEV_CAPS. For more information, see <I>ndistapi.h</I>. 

<P>The NIC driver fills this structure with line device capabilities information to complete this request successfully.


<P>The structure at <B>LineDevCaps </B>has at least <B>sizeof(</B>LINE_DEV_CAPS<B>)</B> bytes reserved.


<P>The supplied provider information in the <B>dwProviderInfoOffset</B> member of LINE_DEV_CAPS must have the following format:


<P class=indent1><I>MediaName</I><B>\0</B><I>ProviderName</I><B>\0</B> <BR>
where <BR>
<I>MediaName</I> is ISDN, SW56, FrameRelay, and so forth, as appropriate <BR>
and <BR>
<I>ProviderName</I> is the name of the manufacturer of the device and the unique name of the device, if any. </P>


<P class=indent1>For example, the driver of an ISDN device from SomeIHV Inc. would set the <B>dwProviderInfoOffset</B> member with a pointer to the string "ISDN\0SomeIHV\0"</P>

</DD>
</DL>

<P>The <A HREF="101mini_2vw2.htm"><I>MiniportQueryInformation</I></A> function can return one of the following:</P>

<P class=indent1>NDIS_STATUS_SUCCESS<BR>
NDIS_STATUS_PENDING<BR>
NDIS_STATUS_TAPI_NODRIVER<BR>
NDIS_STATUS_TAPI_RESOURCEUNAVAIL<BR>
NDIS_STATUS_FAILURE</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: OID_TAPI_GET_DEV_CAPS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
