<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS_TCP_IP_CHECKSUM_PACKET_INFO</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS_TCP_IP_CHECKSUM_PACKET_INFO">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ndis_tcp_ip_checksum_packet_info_nr"></A>NDIS_TCP_IP_CHECKSUM_PACKET_INFO</H1>

<P>The NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure specifies information used in offloading checksum tasks from the TCP/IP transport to a NIC. The NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure is part of the per-packet information (extended out-of-band data) associated with a packet descriptor.</P>

<PRE class=syntax>typedef struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO
{
  union
  {
    struct
    {   
      ULONG    NdisPacketChecksumV4:1;
      ULONG    NdisPacketChecksumV6:1;
      ULONG    NdisPacketTcpChecksum:1;
      ULONG    NdisPacketUdpChecksum:1;
      ULONG    NdisPacketIpChecksum:1;
      } Transmit;
 
    struct
    {
      ULONG   NdisPacketTcpChecksumFailed:1;
      ULONG   NdisPacketUdpChecksumFailed:1;
      ULONG   NdisPacketIpChecksumFailed:1;
      ULONG   NdisPacketTcpChecksumSucceeded:1;
      ULONG   NdisPacketUdpChecksumSucceeded:1;
      ULONG   NdisPacketIpChecksumSucceeded:1;
      ULONG   NdisPacketLoopback:1;
      } Receive;
 
  ULONG    Value;
  };
} NDIS_TCP_IP_CHECKSUM_PACKET_INFO, *PNDIS_TCP_IP_CHECKSUM_PACKET_INFO;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Transmit</B></DT>

<DD></DD>

<DT><B>NdisPacketChecksumV4</B></DT>

<DD>Set by the TCP/IP transport to indicate that the send packet contains IPv4 addresses. If the transport does not set <B>NdisPacketChecksumV4</B>, the miniport driver should not perform checksum tasks on the packet.</DD>

<DT><B>NdisPacketChecksumV6</B></DT>

<DD>Set by the TCP/IP transport to indicate that the send packet contains IPv6 addresses. Because the TCP/IP transport in the initial release of Windows&nbsp;2000 is incapable of processing IPv6 packets, it never sets <B>NdisPacketChecksumV6</B>. Future versions of the TCP/IP transport, however, may support the processing of IPv6 packets.</DD>

<DT><B>NdisPacketTcpChecksum</B></DT>

<DD>Set by the TCP/IP transport to indicate that that the NIC should calculate the packet's TCP checksum.</DD>

<DT><B>NdisPacketUdpChecksum</B></DT>

<DD>Set by the TCP/IP transport to indicate that that the NIC should calculate the packet's UDP checksum.</DD>

<DT><B>NdisPacketIpChecksum</B></DT>

<DD>Set by the TCP/IP transport to indicate that that the NIC should calculate the IP checksum for the first IP header in the packet. If the packet contains both a tunnel IP header and a transport IP header, the NIC should calculate the checksum for the tunnel IP header. The TCP/IP transport calculates the checksum for the transport IP header of such a packet.</DD>

<DT> </DT>

<DT><B>Receive</B></DT>

<DT> </DT>

<DT><B>NdisPacketTcpChecksumFailed</B></DT>

<DD>Set by the miniport driver to indicate that the TCP checksum calculated by its NIC did not match the checksum in the receive packet's TCP header.</DD>

<DT><B>NdisPacketUdpChecksumFailed</B></DT>

<DD>Set by the miniport driver to indicate that that the UDP checksum calculated by its NIC did not match the checksum in the receive packet's UDP header. The initial release of Windows&nbsp;2000 does not support UDP checksum offloads; however, future service packs and update releases of Windows&nbsp;2000 may support UDP checksum offloads.</DD>

<DT><B>NdisPacketIpChecksumFailed</B></DT>

<DD>Set by the miniport driver to indicate that the IP checksum calculated by its NIC did not match the checksum in the receive packet's first IP header. If the receive packet contains both a tunnel IP header and a transport IP header, the NIC validates only the checksum for the tunnel IP header. The TCP/IP transport validates the checksum for the transport IP header of such a packet.</DD>

<DT><B>NdisPacketTcpChecksumSucceeded</B></DT>

<DD>Set by the miniport driver to indicate that the TCP checksum calculated by its NIC matched the checksum in the receive packet's TCP header.</DD>

<DT><B>NdisPacketUdpChecksumSucceeded</B></DT>

<DD>Set by the miniport driver to indicate that the UDP checksum calculated by its NIC matched the checksum in the receive packet's UDP header.</DD>

<DT><B>NdisPacketIpChecksumSucceeded</B></DT>

<DD>Set by the miniport driver to indicate that the IP checksum calculated by its NIC matched the checksum in the receive packet's first IP header. If the receive packet contains both a tunnel IP header and a transport IP header, the NIC validates only the checksum for the tunnel IP header. The TCP/IP transport validates the checksum for the transport IP header of such a packet.</DD>

<DT><B>NdisPacketLoopback</B></DT>

<DD>NDIS uses this bit. The miniport driver must not examine or set this bit; the miniport driver should just ignore this bit.</DD>

<DT><B>Value</B></DT>

<DD>Checksum value </DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ndis.h</I>. Include <I>ndis.h</I>.</P>

<H4>Comments</H4>

<P>The NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure specifies information used in offloading checksum tasks from the TCP/IP transport to a NIC. The NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure is part of the per-packet information (extended out-of-band data) associated with a packet descriptor.</P>

<P>Before the TCP/IP transport passes to the miniport driver a packet on which the miniport driver will perform checksum tasks, the TCP/IP transport updates the NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure associated with the packet descriptor. Specifically, the TCP/IP transport sets the <B>NdisPacketChecksumV4</B> flag to indicate that the send packet contains IPv4 addresses. If the TCP/IP transport does not set this flag, the miniport driver should not perform checksum tasks on the packet. If the TCP/IP transport sets <B>NdisPacketChecksumV4</B> flag, it also sets <B>NdisPacketTcpChecksum</B> and/or <B>NdisPacketIpChecksum</B> to indicate which checksums the miniport driver should calculate for the packet.</P>

<P>Before indicating up a receive packet on which it performs checksum tasks, a miniport driver sets the appropriate <B>NdisPacke<I>Xxx</I>ChecksumFailed</B> and/or <B>NdisPacket<I>Xxx</I>ChecksumSucceeded</B> flags in the NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure. </P>

<P>To obtain the NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure, a driver should call the <A HREF="103ndisx_0bjm.htm">NDIS_PER_PACKET_INFO_FROM_PACKET</A> macro with an <I>InfoType</I> of <B>TcpIpCheckSumPacketInfo</B>. Alternatively, a driver can call the NDIS_PACKET_EXTENSION_FROM_PACKET macro to obtain a pointer to the NDIS_PACKET_EXTENSION structure associated with a given packet descriptor. The miniport driver can then use the <B>TcpIpCheckSumPacketInfo</B> array index to obtain the NDIS_TCP_IP_CHECKSUM_PACKET_INFO structure.</P>

<H4>See Also</H4>

<P><A HREF="105nstru_9oqa.htm">NDIS_PACKET_EXTENSION</A>, <A HREF="103ndisx_6pyq.htm">NDIS_PACKET_EXTENSION_FROM_PACKET</A>, <A HREF="103ndisx_0bjm.htm">NDIS_PER_PACKET_INFO_FROM_PACKET</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS_TCP_IP_CHECKSUM_PACKET_INFO"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
