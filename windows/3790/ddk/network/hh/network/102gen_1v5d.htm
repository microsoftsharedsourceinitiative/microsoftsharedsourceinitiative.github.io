<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NDIS Miniport Drivers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NDIS Miniport Drivers">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Network&nbsp;Devices&nbsp;and&nbsp;Protocols:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_ndis_miniport_drivers_ng1"></A>NDIS Miniport Drivers</H2>

<P>A NDIS miniport driver (also called a miniport driver) has two basic functions:

<UL>
	<LI>Managing a network interface card (NIC), including sending and receiving data through the NIC</LI>

	<LI>Interfacing with higher-level drivers, such as intermediate drivers and transport protocol drivers</LI>
</UL>

<P>A miniport driver communicates with its NIC and with higher-level drivers through the NDIS library. The NDIS library exports a full set of functions (<B>Ndis</B><I>Xxx</I> functions) that encapsulate all the operating system functions that a miniport driver needs to call. The miniport driver, in turn, must export a set of entry points (Miniport<I>Xxx</I> functions) that NDIS calls for its own purposes or on behalf of higher-level drivers to access the miniport driver. </P>

<P>Send and receive operations illustrate the interaction of miniport drivers with NDIS and with higher-level drivers:

<UL>
	<LI>When a transport driver has a packet to transmit, it calls an <B>Ndis</B><I>Xxx</I> function exported by the NDIS library. NDIS then passes the packet to the miniport driver by calling the appropriate Miniport<I>Xxx</I> function exported by the miniport driver. The miniport driver then forwards the packet to the NIC for transmission by calling the appropriate <B>Ndis</B><I>Xxx</I> functions. </LI>

	<LI>When a NIC receives a packet addressed to the NIC, it can post a hardware interrupt that is handled by NDIS or the NIC’s miniport driver. NDIS notifies the NIC’s miniport driver by calling the appropriate Miniport<I>Xxx</I> function. The miniport driver sets up the transfer of data from the NIC and then indicates the presence of the received packet to bound higher-level drivers by calling the appropriate <B>Ndis</B><I>Xxx</I> function.</LI>
</UL>

<P>NDIS supports miniport drivers for both connectionless environments and connection-oriented environments.</P>

<P>Connectionless miniport drivers control NICs for connectionless network media, such as Ethernet, FDDI, and Token Ring. Connectionless miniport drivers are further divided into the following subtypes:

<UL>
	<LI>Serialized drivers that rely on NDIS to serialize calls to their Miniport<I>Xxx</I> functions and to manage their send queues. </LI>

	<LI>Deserialized drivers that serialize the operation of their own Miniport<I>Xxx</I> functions and that queue internally all incoming send packets. This results in significantly better full-duplex performance, provided that the driver's critical sections (code which only a single thread at a time can execute) are kept small.</LI>
</UL>

<P>Connection-oriented miniport drivers control NICs for connection-oriented network media, such as ATM and ISDN. Connection-oriented miniport drivers are always deserialized — they always serialize the operation of their own Miniport<I>Xxx</I> functions and queue internally all incoming send packets.</P>

<P>An NDIS miniport driver can have a non-NDIS lower edge (see the following figure). </P>

<P><IMG SRC="images/nonndslo.gif" ALT="" BORDER=0></P>

<P><B>NDIS Mininiport with Non-NDIS Lower Edge</B></P>

<P>Through its non-NDIS lower edge, a miniport driver uses the class interface for a bus such as the Universal Serial Bus (USB) or IEEE 1394 (firewire) to control a device on the bus. The miniport driver communicates with the device by sending I/O request packets (IRPs) either to the bus or directly to remote devices that are attached to the bus. At it’s upper edge, the miniport driver exposes a standard NDIS miniport driver interface, which enables the miniport driver to communicate with overlying NDIS drivers.</P>

<P>NDIS also supports Wide Area Network (WAN) extensions for miniport drivers that manage WAN NICs. For more information on the WAN network environment, see <A HREF="102gen_1njb.htm">Environment for WAN Network Drivers</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NDIS%20Miniport%20Drivers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
