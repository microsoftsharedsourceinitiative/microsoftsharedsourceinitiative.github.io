<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Precedence</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrfprecedence"></A>Precedence</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>PREfast detects a variety of precedence errors. </P>

<P>The following warnings are reported in this category:

<UL type="disc">
	<LI><A HREF="vcgrf235-non-zeroconstantexpressionisalwaystrue.htm">235 - (<I>&lt;non-zero constant&gt;</I> || <I>&lt;expression&gt;</I>) is always TRUE.</A></li>

	<LI><A HREF="vcgrf236-expressionnon-zeroconstantisalwaystrue.htm">236 - (<I>&lt;expression&gt;</I> || <I>&lt;non-zero constant&gt;</I>) is always TRUE.</A></li>

	<LI><A HREF="vcgrf237-zeroexpressionisalwaysfalse.htm">237 - (<I>&lt;zero&gt;</I> &amp;&amp; <I>&lt;expression&gt;</I>) is always FALSE.</A></li>

	<LI><A HREF="vcgrf239-non-zeroconstantexpressionalwaysevaluatestobooleanresultofexpression.htm">239 - (<I>&lt;non-zero constant&gt;</I> &amp;&amp; <I>&lt;expression&gt;</I>) always evaluates to Boolean result of <I>&lt;expression&gt;</I>.</A></li>

	<LI><A HREF="vcgrf240-expressionnon-zeroconstantalwaysevaluatestobooleanresultofexpression.htm">240 - (<I>&lt;expression&gt;</I> &amp;&amp; <I>&lt;non-zero constant&gt;</I>) always evaluates to Boolean result of <I>&lt;expression&gt;</I>.</A></li>

	<LI><A HREF="vcgrf241-valuereturnedfromfinally-blockoverridesvaluereturnedfromitscorrespondingtry-block.htm">241 - Value returned from the finally-block overrides the value returned from its corresponding try-block.</A></li>

	<LI><A HREF="vcgrf242jumpoutofthistry-blockforceslocalunwind.htm">242 &#0150; A jump out of this try-block forces local unwind.</A></li>

	<LI><A HREF="vcgrf243-returnfromfinally-blockhaltsglobalunwind.htm">243 - Return from a finally-block halts global unwind.</A></li>

	<LI><A HREF="vcgrf244-localdeclarationofvariablehidesglobaldeclaration.htm">244 - Local declaration of <I>&lt;variable&gt;</I> hides global declaration.</A></li>

	<LI><A HREF="vcgrf245-for-initdeclarationofvariablehidesglobaldeclaration.htm">245 - For-init declaration of <I>&lt;variable&gt;</I> hides global declaration.</A></li>

	<LI><A HREF="vcgrf246-localdeclarationofvariablehidesdeclarationofsamenameinouterscope.htm">246 - Local declaration of <I>&lt;variable&gt;</I> hides declaration of same name in outer scope.</A></li>

	<LI><A HREF="vcgrf247-for-initdeclarationofvariablehidesdeclarationofsamenameinouterscope.htm">247 - For-init declaration of <I>&lt;variable&gt;</I> hides declaration of same name in outer scope.</A></li>

	<LI><A HREF="vcgrf248-settingsecurity_descriptorsdacltonullwillresultinunprotectedobject.htm">248 - Setting a SECURITY_DESCRIPTOR's DACL to NULL will result in an unprotected object.</A></li>

	<LI><A HREF="vcgrf249-callingkernelfunctionwithoutmem_releaseflagfreesmemorybutnotaddressdescriptorsvads.htm">249 - Calling <I>&lt;kernel function&gt;</I> without the MEM_RELEASE flag frees memory but not the address descriptors (VADs).</A></li>

	<LI><A HREF="vcgrf250-callinglfunctionwithoutmem_releaseflagfreesmemorybutnotaddressdescriptorsvads.htm">250 - Callingl <I>&lt;function&gt;</I> without the MEM_RELEASE flag frees memory but not the address descriptors (VADs).</A></li>

	<LI><A HREF="vcgrf251-initializecriticalsectionindicatesfailurebyraisingasynchronousexception.htm">251 - InitializeCriticalSection indicates failure by raising an asynchronous exception.</A></li>

	<LI><A HREF="vcgrf252-untaggedpoolallocation.htm">252 - Untagged pool allocation.</A></li>

	<LI><A HREF="vcgrf253-mmsecurevirtualmemorylocksvadsnotpages.htm">253 - MmSecureVirtualMemory locks VADs not pages.</A></li>

	<LI><A HREF="vcgrf255-_allocaindicatesfailurebyraisingstackoverflowexception.htm">255 - _alloca indicates failure by raising a stack overflow exception.</A></li>

	<LI><A HREF="vcgrf257-_allocausedinprohibitedlocation.htm">257 - _alloca used in prohibited location.</A></li>

	<LI><A HREF="vcgrf258-usingterminatethreaddoesnotallowproperthreadcleanup.htm">258 - Using TerminateThread does not allow proper thread clean up.</A></li>

	<LI><A HREF="vcgrf259-labeledcodeisunreachable.htm">259 - Labeled code is unreachable.</A></li>

	<LI><A HREF="vcgrf260-sizeofsizeofisalmostalwayswrong.htm">260 - Sizeof * Sizeof is almost always wrong.</A></li>

	<LI><A HREF="vcgrf261-mustsucceedpoolallocationsareforbidden.htm">261 - MustSucceed pool allocations are forbidden.</A></li>

	<LI><A HREF="vcgrf262-thisfunctionusesconstantbytesofstack.htm">262 - This function uses <I>&lt;constant&gt;</I> bytes of stack.</A></li>

	<LI><A HREF="vcgrf263-using_allocainloop.htm">263 - Using _alloca in a loop.</A></li>

	<LI><A HREF="vcgrf281-incorrectorderofoperators.htm">281 - Incorrect order of operators.</A></li>

	<LI><A HREF="vcgrf282-incorrectoperator.htm">282 - Incorrect operator.</A></li>

	<LI><A HREF="vcgrf285-non-zeroconstantnon-zeroconstantisalwaystrue.htm">285 - (&lt;non-zero constant&gt; || &lt;non-zero constant&gt;) is always TRUE.</A></li>

	<LI><A HREF="vcgrf286-non-zeroconstantexpressionisalwaystrue.htm">286 - (<I>&lt;non-zero constant&gt;</I> || <I>&lt;expression&gt;</I>) is always TRUE.</A></li>

	<LI><A HREF="vcgrf287redundantcode.htm">287 &#0150; Redundant code.</A></li>

	<LI><A HREF="vcgrf288incorrectoperator.htm">288 &#0150; Incorrect operator.</A></li>

	<LI><A HREF="vcgrf289incorrectoperator.htm">289 &#0150; Incorrect operator.</A></li>

	<LI><A HREF="vcgrf290bitwiseoperationonlogicalresult.htm">290 &#0150; Bitwise operation on logical result.</A></li>

	<LI><A HREF="vcgrf291bitwiseoperationonlogicalresult.htm">291 &#0150; Bitwise operation on logical result.</A></li>

	<LI><A HREF="vcgrf297arithmeticoverflow.htm">297 &#0150; Arithmetic overflow.</A></li>

	<LI><A HREF="vcgrf308leakingmemory.htm">308 &#0150; Leaking memory.</A></li>

	<LI><A HREF="vcgrf310illegalconstantinexceptionfilter.htm">310 &#0150; Illegal constant in exception filter.</A></li>

	<LI><A HREF="vcgrf312possibleinfiniteloop.htm">312 &#0150; Possible infinite loop.</A></li>

	<LI><A HREF="vcgrf313incorrectoperator.htm">313 &#0150; Incorrect operator.</A></li>

	<LI><A HREF="vcgrf314incorrectorderofoperations.htm">314 &#0150; Incorrect order of operations.</A></li>

	<LI><A HREF="vcgrf315incorrectorderofoperations.htm">315 &#0150; Incorrect order of operations.</A></li>

	<LI><A HREF="vcgrf316incorrectoperator.htm">316 &#0150; Incorrect operator.</A></li>

	<LI><A HREF="vcgrf317incorrectoperator.htm">317 &#0150; Incorrect operator.</A></li>

	<LI><A HREF="vcgrf318degenerate_try_except.htm">318 &#0150; Degenerate _try/_except.</A></li>

	<LI><A HREF="vcgrf319deadcode.htm">319 &#0150; Dead code.</A></li>

	<LI><A HREF="vcgrf331invalidparameter.htm">331 &#0150; Invalid parameter.</A></li>

	<LI><A HREF="vcgrf332invalidparameter.htm">332 &#0150; Invalid parameter.</A></li>

	<LI><A HREF="vcgrf333invalidparameter.htm">333 &#0150; Invalid parameter.</A></li>

	<LI><A HREF="vcgrf334sizeofoperatorappliedtoexpressionwithoperatormayyieldunexpectedresults.htm">334 &#0150; The sizeof operator applied to an expression with an operator may yield unexpected results.</A></li>

	<LI><A HREF="vcgrf99101internalerror.htm">99101 &#0150; Internal error.</A></li>
</UL>

<H4 class="dtH4">See Also</H4>

<P><A HREF="vcgrfwarningsbycategory.htm">Warnings by Category</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
