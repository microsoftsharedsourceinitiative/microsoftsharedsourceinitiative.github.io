<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>283 - Allocation/free mismatch.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf283-allocationfreemismatch"></A>283 - Allocation/free mismatch.</H1>

<H1 class="dtH1">Additional Information: <I>&lt;variable&gt;</I> is allocated with array new [], deleted with scalar delete (see allocation at <I>&lt;location&gt;</I>).</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning appears only in C++ code and indicates that the calling function has inconsistently allocated memory with the array <B>new []</B> operator but freed it with the scalar <B>delete</B> operator. This is undefined behavior according to the C++ standard; however, when using default global operators, it behaves correctly with the Microsoft Visual C++ 6.0 and Visual C++&nbsp;.NET 2002 implementations. In addition to the inherent risk involved in relying on undefined behavior, if global (or class-specific) <B>operator new</B> and <B>operator delete </B>are not compatible with <B>operator new[]</B> and <B>operator delete[]</B>, unexpected results can occur.</P>

<P>The exact ramifications of this defect are difficult to predict. It can result in leaks, memory corruptions, and crashes (in situations where operators have been overridden). In most cases, the mismatch may be unimportant, depending on the implementation of the compiler and its libraries. PREfast cannot distinguish between these situations.</P>

<P>If memory is allocated with array <B>new []</B>, it should typically be freed with array <B>delete[]</B>.</P>

<P>In situations where the underlying object in the array is a class type, there is an additional complication: the destructors for the individual objects are not called. In this case, warning 278 is reported instead. </P>

<P>This message is often reported on character or wide-character arrays.</P>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<PRE class="code">char *str = new char[arraySize];

delete str;</PRE>

<P><B>Corrected Source</B></P>

<PRE class="code">char *str = new char[arraySize];

delete[] str;</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
