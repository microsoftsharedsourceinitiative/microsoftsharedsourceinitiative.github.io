<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>57 - Buffer overrun due to number of characters/number of bytes mismatch in call to &lt;function&gt;.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf57-bufferoverrunduetonumberofcharactersnumberofbytesmismatchincalltofunction"></A>57 - Buffer overrun due to number of characters/number of bytes mismatch in call to &lt;function&gt;.</H1>

<H1 class="dtH1">Recommended Fix: Parameter should be '(sizeof <I>&lt;variable&gt;</I>)/(sizeof <I>&lt;variable&gt;</I>[0])'.</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning indicates that a function that expects the number of characters is being passed the number of bytes instead. With wide (Unicode) characters, the values are different. This defect can result in an exploitable buffer overrun or crash.</P>

<P>PREfast reports this warning only for a set of functions that are known to take a character count rather than a byte count, so this warning is extremely accurate. In situations where PREfast is using a heuristic to determine whether a character count is required, it reports a warning 209 instead, which is potentially less accurate.</P>

<P>A common cause of this defect is using <B>sizeof</B> on a character array. The <B>sizeof</B> operator always computes the number of bytes; for ANSI characters, this is the same as the number of characters, but for Unicode characters, it is twice the number of characters.</P>

<P>It is typically safe to compute the number of elements in an array by dividing the size of the array by the size of each individual element.</P>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<PRE class="code">TCHAR buff[128];

(void)LoadString(hInst,
                 uID,
                 buff,
                 sizeof buff); // Wrong in Unicode case</PRE>

<P><B>Corrected Source</B></P>

<PRE class="code">TCHAR buff[128];

(void)LoadString(hInst,
                 uID,
                 buff,
                 (sizeof buff)/(sizeof buff[0]);</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
