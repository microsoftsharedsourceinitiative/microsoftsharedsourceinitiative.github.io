<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>268 - Incorrect order of operations.</TITLE>
<META Name="InChm" Content="True">
<META name="rtfFileName" content="prefast.rtf">
<!--CSS_START-->
<SCRIPT SRC="../scripts/dtuelink.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>PREfast&nbsp;User&nbsp;Guide</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vcgrf268-incorrectorderofoperations"></A>268 - Incorrect order of operations.</H1>

<H1 class="dtH1">Additional Information: (<I>&lt;type1&gt;</I>) (<I>&lt;type2&gt;</I>) x+y.</H1>

<H1 class="dtH1">Recommended Fix: Probable misparenthesization of (<I>&lt;type1&gt;</I>) ((<I>&lt;type2&gt;</I>) x+y).</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><!-- Topic Status -->
<P>This warning indicates that a complex cast expression that may involve a precedence problem when performing pointer arithmetic. Since casts group more closely than binary operators, the result may not be what the programmer intended.</P>

<P>In some cases, this defect may result in incorrect behavior or a program crash.</P>

<P>In an expression such as:</P>

<PRE class="code">(char *)p + offset</PRE>

<P>the offset is interpreted as an offset in characters; however, an expression such as: </P>

<PRE class="code">(int *)(char *)p + offset</PRE>

<P>is equivalent to: </P>

<PRE class="code">((int *)(char *)p) + offset</PRE>

<P>and so the offset is interpreted as an offset in integers. In other words, it is equivalent to:</P>

<PRE class="code">(int *)((char *)p + offset * sizeof(int))</PRE>

<P>which is not likely to be what is intended.</P>

<P>Depending on the relative sizes of the two types, this can lead to a buffer overrun. </P>

<H4 class="dtH4">Example</H4>

<P><B>Defective Source</B></P>

<PRE class="code">int *ptr = (int *)(char *)p + offset_in_bytes;</PRE>

<P><B>Corrected Source</B></P>

<PRE class="code">int *ptr = (int *)((char *)p + offset_in_bytes);</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p><MSHelp:link keywords="vxmscCopyright" TABINDEX="0">&copy; Microsoft Corporation. All rights reserved.</MSHelp:link></p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
