<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP Logging</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Driver Verifier options, IRP Logging">
<META NAME="MS-HKWD" CONTENT="IRP Logging">
<META NAME="MS-HKWD" CONTENT="DC2WMIParser tool">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Driver&nbsp;Development&nbsp;Tools:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_irp_logging_tools"></A>IRP Logging</H3>

<P>The IRP Logging feature of Driver Verifier monitors a driver's use of IRPs and makes a record of IRP usage. This record is stored as WMI information.</P>

<P>The Windows DDK includes the tool DC2WMIParser (<I>dc2wmiparser.exe</I>) that can convert this WMI record to a text file.</P>

<P>In text format, the log can be read or edited. It can also be used to customize the Active Control Test feature of <A HREF="dc2_8bxv.htm">Device Path Exerciser</A>.</P>

<P><I>This Driver Verifier option is only available in Windows Server&nbsp;2003 and later.</I></P>

<H4>The WMI Record</H4>

<P>The WMI record will not include more than twenty IRPs for each device. Once the twenty-first IRP is recorded, the first IRP record is replaced. So if the record lists twenty IRPs, these are always the most recent twenty, but there is no way to know which of these is the most recent one.</P>

<P>Since the WMI record is stored in memory, it will be erased when the computer is rebooted. Therefore, use DC2WMIParser to save this information to a file.</P>

<P>If you use the <B>/t</B> option, DC2WMIParser will run continuously for the specified duration. In this situation, the record can include more than twenty IRPs per device (up to twenty IRPs in each sampling period).</P>

<H4>Activating This Option</H4>

<P>The IRP Logging option can be activated by using the <I>verifier.exe</I> command line. It cannot be activated through the Driver Verifier Manager graphical interface. See <A HREF="dv_5q43.htm">Selecting Driver Verifier Options</A> for details.</P>

<H4>DC2WMIParser</H4>

<P>DC2WMIParser is a tool that collects the WMI IRP records created by Driver Verifier and converts this log to a text file.</P>

<P>The DC2WMIParser syntax is as follows:</P>

<PRE class=syntax><B>dc2wmiparser</B> [<B>/f</B> <I>File</I>] [<B>/t</B> <I>Time</I>]</PRE>

<P>The parameters have the following meanings:

<DL>
<DT><B>/f</B> <I>File</I></DT>

<DD>Specifies the full path and filename of the log file to be written. Relative paths will be taken relative to the current directory. If this is omitted, the file name <I>dc2verifier.act</I> in the current directory will be used.</DD>

<DT><B>/t</B> <I>Time</I></DT>

<DD>Specifies the length of time, in minutes, that DC2WMIParser will continue to run. If <I>Time</I> equals zero, DC2WMIParser will record all the WMI IRP information that has already been stored by Driver Verifier and then exit. If <I>Time</I> is set to a positive value, DC2WMIParser will continue to run for the specified length of time, storing new information as it arrives. The default is zero.
</DD>
</DL>

<P>This log can be read directly by the Device Path Exerciser tool.</P>

<H4>Format of DC2WMIParser Log Files</H4>

<P>The file generated by DC2WMIParser is an ASCII text file. The format of this file is simple. You may find it useful to edit this file before using the Active Control Test feature of Device Path Exerciser.</P>

<P>The first line of this file contains a decimal number that represents the number of devices logged in the file.</P>

<P>After the first line, the file is divided into sections; each section describes one device.</P>

<P>For each device the format is:

<UL>
	<LI><I>On a single line:</I>  The device name.</LI>

	<LI><I>On a single line:</I>  A decimal number specifying how many device types and functions are targeted to this device.</LI>

	<LI><I>On one line for each device type and function:</I>  Three hexadecimal numbers, separated by commas. These represent the device type, and the lowest and highest functions that were recorded in this record.</LI>

	<LI><I>In one group of lines for each device type and function:</I> 
<UL>
	<LI>A single line with a decimal number specifying the count of IOCTLs for the current device type.</LI>

	<LI>One line for each IOCTL. Each of these lines contains six hexadecimal numbers separated by commas. These specify the device type, the function, the method, the access, the length of the input buffer, and the length of the output buffer.</LI>
</UL>
</LI>
</UL>

<P>Here is a sample DC2WMIParser log file. In an actual file there will not be any spaces, comments, or blank lines, but these have been added to this example to make it more clear.</P>

<PRE>2           <I>There are two devices described by this log file.</I>

<I>The first device begins here:</I>

  DP(1)0x7e00-0x21dbda400+3   <I>Device name of the first device</I>
  2                           <I>Number of device type IOCTLs targeted at this device</I>

    7,12,12                     <I>First targeted device: device type 7, low function 12, high function 12</I>
    2d,420,420                  <I>Second targeted device: device type 2d, low function 420, high function 420</I>

    1                           <I>Number of IOCTLs for first targeted  device (type 7)</I>
      7,12,0,0,90,0               <I>Device type 7, function 12, method 0, access 0, inbuflen 90, outbuflen 0</I>
    1                           <I>Number of IOCTLs for second targeted device (type 2d)</I>
      2d,420,0,0,c,0              <I>Device type 2d, function 420, method 0, access 0, inbuflen c, outbuflen 0</I>

<I>The second device begins here:</I>

  DP(1)0x7e00-0x21dbda400+2   <I>Device name of the second device</I>
  2                           <I>Number of device type IOCTLs targeted at this device</I>

    7,12,12                     <I>First targeted device: device type 7, low function 12, high function 12</I>
    2d,420,420                  <I>Second targeted device: device type 2d, low function 420, high function 420</I>


    1                           <I>Number of IOCTLs for first targeted  device (type 7)</I>
      7,12,0,0,90,0               <I>Device type 7, function 12, method 0, access 0, inbuflen 90, outbuflen 0</I>
    1                           <I>Number of IOCTLs for second targeted device (type 2d)</I>
      2d,420,0,0,c,0              <I>Device type 2d, function 420, method 0, access 0, inbuflen c, outbuflen 0</I>
</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP%20Logging"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
