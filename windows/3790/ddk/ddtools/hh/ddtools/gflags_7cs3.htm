<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GFlags Commands</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="GFlags Commands">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Driver&nbsp;Development&nbsp;Tools:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_gflags_commands_tools"></A>GFlags Commands</H2>

<P>To use GFlags, type the following commands at the command line. </P>

<P>You can use the Gflags commands and the <A HREF="gflags_7h0z.htm"><B>Global Flags</B> dialog box</A> interchangeably.</P>

<H4>Syntax</H4>

<PRE class=syntax><B>gflags</B> [<B>/r</B> [<I>Flag</I> [<I>Flag</I>...]] | <B>/k</B> [<I>Flag</I> [<I>Flag</I>...]] | <B>/i</B> <I>ImageFile</I> [<I>Flag</I> [<I>Flag</I>...]] | <B>/i</B> <I>ImageFile</I> <B>/tracedb</B> <I>SizeInMB</I> | <B>/?</B>]</PRE>

<PRE class=syntax><B>gflags /p </B>[<B>/disable</B> <I>ImageFile</I>] [<B>/?</B>]</PRE>

<PRE class=syntax><B>gflags /p</B> <B>/enable</B> <I>ImageFile</I> [ <B>/full</B> [<B>/backwards</B>] | <B>/random</B> <I>Probability</I> | <B>/size</B> <I>SizeStart</I> <I>SizeEnd</I> | <B>/address</B> <I>AddressStart</I> <I>AddressEnd</I> | <B>/dlls</B> <I>DLL</I> [<I>DLL</I>...] ] 
[<B>/debug</B> | <B>/kdebug</B>] [<B>/unaligned</B>] [<B>/notraces</B>] [<B>/fault</B> <I>Rate</I> [<I>TimeOut</I>]] [<B>/leaks</B>] [<B>/protect</B>] [<B>/no_sync</B>] [<B>/no_lock_checks</B>] 
</PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Flag</I> </DT>

<DD>Specifies a three-letter abbreviation (<I>FlagAbbr</I>) or hexadecimal value (<I>FlagHex</I>) that represents a debugging feature. The abbreviations and hexadecimal values are listed in the <A HREF="gflags_72b7.htm">GFlags Flag Table</A>.

<P>Use one of the following flag formats:


<TABLE>

<TR VALIGN="top">
<TH align=left width=24%>Format</TH>
<TH align=left width=76%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=24%>{<B>+</B> | <B>-</B>}<I>FlagAbbr</I></TD>
<TD width=76%>Sets (+) or clears (-) the flag represented by the flag abbreviation. Without a plus (+) or minus (-) symbol, the command has no effect.</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>[<B>+</B> | <B>-</B>]<I>FlagHex</I></TD>
<TD width=76%>Adds (+) or subtracts (-) the hexadecimal value of a flag. A flag is set when its value is included in the sum. Add (+) is the default. Enter a hexadecimal value (without 0x) that represents a single flag or enter the sum of hexadecimal values for multiple flags.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>ImageFile</I> </DT>

<DD>Specifies the name of an executable file, including the file name extension (for example, <I>notepad.exe</I> or <I>mydll.dll</I>). </DD>

<DT><B>/r</B></DT>

<DD>Registry. Displays or changes system-wide debugging flags stored in the registry. These settings take effect when you restart Windows and remain effective until you change them. 

<P>With no additional parameters, <B>gflags /r</B> displays the system-wide flags set in the registry.
</DD>

<DT><B>/k</B></DT>

<DD>Kernel-mode settings. Displays or changes system-wide debugging flags for this session. These settings are effective immediately, but are lost when Windows shuts down. The settings affect processes started after this command completes. 

<P>With no additional parameters, <B>gflags /k</B> displays system-wide flags set for the current session.
</DD>

<DT><B>/i</B></DT>

<DD>Image file settings. Displays or changes debugging flags for a particular process. These settings are stored in the registry. They are effective for all new instances of this process and they remain effective until you change them. 

<P>With no additional parameters, <B>gflags /i <I>ImageFile</I></B> displays the flags set for the specified process.
</DD>

<DT><B>/tracedb</B> <I>SizeInMB</I></DT>

<DD>Sets the maximum size of the user-mode stack trace database for the process. To use this parameter, the <A HREF="gflags_7u5v.htm#ddk_create_user_mode_stack_trace_database_tools"><I>Create user mode stack trace database</I></A> (ust) flag must be set for the process. 

<P><I>SizeInMB</I> is a whole number representing the number of megabytes in decimal units. The default value is the minimum size, 8 MB; there is no maximum size. To revert to the default size, set <I>SizeInMB</I> to&nbsp;0.
</DD>

<DT><B>/p</B> </DT>

<DD>Sets page heap verification options for a process. With no additional parameters, <B>gflags /p</B> displays a list of image files for which page heap verification is enabled. 

<P>Page heap verification monitors dynamic heap memory operations, including allocate operations and free operations, and causes a debugger break when it detects a heap error.



<P class=note><B>Note</B>&nbsp;&nbsp;The page heap features in GFlags only monitor heap memory allocations that use the standard Windows heap manager functions (<B>HeapAlloc</B>, <B>GlobalAlloc</B>, <B>LocalAlloc</B>, <B>malloc</B>, <B>new</B>, <B>new[]</B>, or their corresponding deallocation functions), or those that use custom operations that call the standard heap manager functions. 


<P class=note>To determine whether full or standard page heap verification is enabled for a program, at the command line, type <B>gflags /p</B>. In the resulting display, <B>traces</B> indicates that standard page heap verification is enabled for the program and <B>full traces</B> indicates that full page heap verification is enabled for the program.

</DD>

<DT><B>/disable</B> <I>ImageFile</I> </DT>

<DD>Turns off page heap verification (standard or full) for the specified image file. 

<P>This command is equivalent to turning off the <A HREF="gflags_7u5v.htm#ddk_enable_page_heap_tools"><I>Enable page heap</I></A> (hpa) flag for a process (<B>gflags /i <I>ImageFile</I> -hpa</B>). You can use the commands interchangeably.
</DD>

<DT><B>/enable</B> <I>ImageFile</I> </DT>

<DD>Turns on page heap verification for the specified image file. 

<P>By default, the <B>/enable</B> parameter turns on <I>standard</I> page heap verification for the image file. To enable <I>full</I> page heap verification for the image file, add the <B>/full</B> parameter to the command or use the <B>/i</B> parameter with the <B>+hpa</B> flag.


<P>The <B>/enable</B> parameter sets the <A HREF="gflags_7u5v.htm#ddk_enable_page_heap_tools"><I>Enable page heap</I></A> (hpa) flag for the image file in the registry. However, the <B>/enable</B> parameter turns on <I>standard</I> heap verification for the image file by default, unlike the <B>/i</B> parameter with the <B>+hpa</B> flag, which turns on <I>full</I> heap verification for an image file.


<P><I>Standard</I> page heap verification places random patterns at the end of an allocation and examines the patterns when a heap block is freed. <I>Full</I> page heap verification places a zone of reserved virtual memory at the end of each allocation.
</DD>

<DT><B>/full</B> </DT>

<DD>Turns on full page heap verification for the process. Full page heap verification places a zone of reserved virtual memory at the end of each allocation.

<P>Using this parameter is equivalent to turning on the <A HREF="gflags_7u5v.htm#ddk_enable_page_heap_tools"><I>Enable page heap</I></A> (hpa) flag for a process (<B>gflags /i <I>ImageFile</I> +hpa</B>). You can use the commands interchangeably.



<P class=note><B>Caution</B>&nbsp;&nbsp;Full page heap verification can consume system memory quickly. To enable full page heap verification for memory-intensive processes, use the <B>/size</B> or <B>/dlls</B> parameter. 

</DD>

<DT><B>/backwards</B> </DT>

<DD>Places the zone of reserved virtual memory at the beginning of an allocation, rather than at the end. As a result, the debugger traps overruns at the beginning of the buffer, instead of those at the end of the buffer. Valid only with the <B>/full</B> parameter. </DD>

<DT><B>/random</B> <I>Probability</I> </DT>

<DD>Chooses full or standard page heap verification for each allocation, based on the specified probability.

<P><I>Probability</I> is a decimal integer from 0 through 100 representing the probability of full page heap verification. A probability of 100 is the same as using the <B>/full</B> parameter. A probability of 0 is the same as using standard page heap verification.
</DD>

<DT><B>/size</B> <I>SizeStart</I> <I>SizeEnd</I> </DT>

<DD>Enables full page heap verification for allocations within the specified size range and enables standard page heap verification for all other allocations by the process. 

<P><I>SizeStart</I> and <I>SizeEnd</I> are decimal integers. The default is standard page heap verification for all allocations. 
</DD>

<DT><B>/address</B> <I>AddressStart</I> <I>AddressEnd</I></DT>

<DD>Enables full page heap verification for memory allocated while a return address in the specified address range is on the run-time call stack. It enables standard page heap verification for all other allocations by the process. To use this feature, specify a range that includes the addresses of all functions that call the function with the suspect allocation. The address of the calling function will be on the call stack when the suspect allocation occurs. 

<P><I>AddressStart</I> and <I>AddressEnd</I> specify the address range searched in allocation stack traces. The addresses are specified in hexadecimal format, such as, 0xAABBCCDD.



<P class=note><B>Note</B>&nbsp;&nbsp;The <B>/address</B> parameter is valid only on <I>x</I>86 architectures. It is not reliable and is rarely used.

</DD>

<DT><B>/dlls</B> <I>DLL</I>[<B>,</B> <I>DLL</I>...] </DT>

<DD>Enables full page heap verification for allocations requested by the specified DLLs and standard page heap verification for all other allocations by the process. 

<P><I>DLL</I> is the name of a binary file, including its file name extension. The specified file must be a function library that the process loads during execution.
</DD>

<DT><B>/debug</B> </DT>

<DD>Automatically launches the process specified by the <B>/enable</B> parameter under the NTSD debugger with the command line <B>ntsd -g -G -x</B> and with page heap enabled. 

<P>For details on NTSD, see <A HREF="dbgblurb_25bn.htm">Debugging Tools for NT-Based Operating Systems</A>. 


<P>This option is useful for programs that are difficult to start from a command prompt and those that are started by other processes.



<P class=note><B>Note</B>&nbsp;&nbsp;When using the <B>/debug</B> or <B>/kdebug</B> parameters, use the <B>/p /disable</B> parameters to turn off the page heap functions (not the <B>/i -hpa</B> parameters). Otherwise, entries read by the debugger are not deleted from the registry. 

</DD>

<DT><B>/kdebug</B> </DT>

<DD>Automatically launches the process specified by the <B>/enable</B> parameter under the NTSD debugger with the command line <B>ntsd -g -G -x</B>, with page heap enabled, and with control of NTSD redirected to the kernel debugger.

<P>For details on NTSD as well as the kernel debuggers KD and WinDbg, see <A HREF="dbgblurb_25bn.htm">Debugging Tools for NT-Based Operating Systems</A>. 



<P class=note><B>Note</B>&nbsp;&nbsp;When using the <B>/debug</B> or <B>/kdebug</B> parameters, use the <B>/p /disable</B> parameters to turn off the page heap functions (not the <B>/i -hpa</B> parameters). Otherwise, entries read by the debugger are not deleted from the registry. 

</DD>

<DT><B>/unaligned</B> </DT>

<DD>Aligns the end of each allocation at an end-of-page boundary, even if doing so means that the starting address is not aligned on an 8-byte block. By default, the heap manager guarantees that the starting address of an allocation is aligned on an 8-byte block.

<P>This option is used to detect off-by-one-byte errors. When this parameter is used with the <B>/full</B> parameter, the zone of reserved virtual memory begins just after the last byte of the allocation and an immediate fault occurs when a process tries to read or write even one byte beyond the allocation.
</DD>

<DT><B>/decommit</B> </DT>

<DD>This option is no longer valid. It is accepted, but ignored.

<P>The PageHeap program (<I>pageheap.exe</I>) included in Windows&nbsp;2000, and earlier systems, implemented full page heap verification by placing an inaccessible page after an allocation. In that tool, the <B>/decommit</B> parameter substituted a zone of reserved virtual memory for the inaccessible page. In this version of GFlags, a zone of reserved virtual memory is always used to implement full page heap verification.
</DD>

<DT><B>/notraces</B> </DT>

<DD>Specifies that run-time stack traces are not saved. 

<P>This option improves performance slightly, but it makes debugging much more difficult. This parameter is valid, but its use is not recommended.
</DD>

<DT><B>/fault</B> </DT>

<DD>Forces the program's memory allocations to fail at the specified rate and after the specified time-out.

<P>This parameter inserts heap allocation errors into the image file being tested (a practice known as "fault injection") so that some memory allocations fail, as might occur when the program runs in low memory conditions. This test helps to detect errors in handling allocation failure, such as failing to release resources.
</DD>

<DT><I>Rate </I></DT>

<DD>Specifies is a decimal integer from 1 (.01%) through 10000 (100%) representing the probability that an allocation will fail. The default is 100 (1%).</DD>

<DT><I>TimeOut</I> </DT>

<DD>Determines the length (in seconds) of the interval between the the start of the program and the start of the fault injection routines. The default is 5 (five seconds).</DD>

<DT><B>/leaks</B> </DT>

<DD>Checks for heap leaks when a process ends. 


<P class=note><B>Caution</B>&nbsp;&nbsp;The <B>/leaks</B> parameter disables full page heap. When <B>/leaks</B> is used, the <B>/full</B> parameter and parameters that modify the <B>/full</B> parameter, such as <B>/backwards</B>, are ignored, and GFlags performs standard page heap verification with a leak check. 

</DD>

<DT><B>/protect</B> </DT>

<DD>Protects heap internal structures. This test is used to detect random heap corruptions. It can make execution significantly slower. </DD>

<DT><B>/no_sync</B> </DT>

<DD>Checks for unsynchronized access. This parameter causes a break if it detects that a heap created with the HEAP_NO_SERIALIZE flag is accessed by different threads. 

<P>Do not use this flag to debug a program that includes a customized heap manager. Functions that synchronize heap access cause the page heap verifier to report synchronization faults that do not exist.
</DD>

<DT><B>/no_lock_checks</B> </DT>

<DD>Disables the critical section verifier. </DD>

<DT><B>/?</B> </DT>

<DD>Displays help for GFlags. With <B>/p</B>, <B>/?</B> displays help for the page heap verification options in GFlags. 
</DD>
</DL>

<H4>Comments</H4>

<P>Typing <B>gflags</B> without parameters opens the <B>Global Flags</B> dialog box. </P>

<P>Typing <B>gflags /p</B> without additional parameters displays a list of programs that have page heap verification enabled. </P>

<P>To clear all flags, set <I>Flag</I> to <B>-FFFFFFFF</B>. (Setting <I>Flag</I> to 0 adds zero to the current flag value. It does not clear all flags.) </P>

<P>When you set <I>Flag</I> for an image file to <B>FFFFFFFF</B>, Windows clears all flags and deletes the GlobalFlag entry in the registry subkey for the image file. The subkey remains. </P>

<P>The <B>/full</B>, <B>/random</B>, <B>/size</B>, <B>/address</B>, and <B>/dlls</B> parameters for the page heap <B>/enable</B> operation determine which allocations are subject to page heap verification and the verification method used. You can use only one of these parameters in each command. The default is standard page heap verification of all allocations of the process. The remaining parameters set options for page heap verification. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: GFlags%20Commands"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
