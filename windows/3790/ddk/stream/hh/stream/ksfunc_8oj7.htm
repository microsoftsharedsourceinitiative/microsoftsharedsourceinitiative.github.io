<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsCancelRoutine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsCancelRoutine">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_kscancelroutine_ks"></A>KsCancelRoutine</H3>

<P>The <B>KsCancelRoutine</B> function performs standard IRP cancel functionality: it removes the entry and then cancels and completes the request. The function is defined as a PDRIVER_CANCEL routine. It is the default function used for <B>KsAddIrpToCancelableQueue</B> if none is provided. </P>

<PRE class=syntax><B>KSDDKAPI VOID NTAPI
  KsCancelRoutine(</B>
    <B>IN PDEVICE_OBJECT</B>  <I>DeviceObject</I><B>,</B>
    <B>IN PIRP</B>  <I>Irp</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceObject</I></DT>

<DD>Specifies the device object that owns the IRP.</DD>

<DT><I>Irp</I></DT>

<DD>Specifies the IRP being canceled.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>This function would typically be called by the I/O subsystem on canceling an IRP but can be called directly in response to an KSMETHOD_STREAM_PRESENTATION Set request. As with any typical cancel routine, this function expects the I/O cancel spin lock to have been acquired upon entering the function.</P>

<P>Note that this routine expects the KSQUEUE_SPINLOCK_IRP_STORAGE(Irp) to point to the list access spinlock as provided in <B>KsAddIrpToCancelableQueue</B>.</P>

<P><B>KsCancelRoutine</B> can be used to do the preliminary list removal processing, without actually completing the IRP. If the Irp-&gt;IoStatus.Status is set to STATUS_CANCELLED on entering this function, then the IRP will not be completed. Otherwise, the status will be set to STATUS_CANCELLED and the IRP will be completed. This <B>KsCancelRoutine</B> can be used within a cancel routine to do the initial list and spinlock manipulation and return to the driver's completion routine to do specific processing and final IRP completion.</P>

<H4>See Also</H4>

<P><A HREF="ksfunc_6zlf.htm"><B>KsAddIrpToCancelableQueue</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsCancelRoutine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
