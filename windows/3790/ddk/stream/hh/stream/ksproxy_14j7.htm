<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IKsClockPropertySet::KsGetState</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IKsClockPropertySet::KsGetState">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iksclockpropertyset_ksgetstate_ks"></A>IKsClockPropertySet::KsGetState</H1>

<P>The <B>KsGetState</B> method retrieves the streaming state of a pin from the underlying clock.</P>

<PRE class=syntax><B>HRESULT
  KsGetState(
  </B>  <B>OUT KSSTATE </B> <B>*</B><I>State
</I><B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>State</I> </DT>

<DD>Pointer to a variable that receives a value that specifies the streaming state of a pin. This value can be one of the following values from the <A HREF="ks-struct_1ooj.htm">KSSTATE</A> enumeration:

<TABLE>

<TR VALIGN="top">
<TH align=left width=33%>Value</TH>
<TH align=left width=67%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=33%>KSSTATE_STOP</TD>
<TD width=67%>The streaming of data to or from the pin is stopped. Represents the initial state of the pin with the least resource usage and the most latency to obtain a KSSTATE_RUN state. </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>KSSTATE_ACQUIRE</TD>
<TD width=67%>Represents the state at which allocators are negotiated and resources acquired, though no data may be buffered in this state.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>KSSTATE_PAUSE</TD>
<TD width=67%>The clock is waiting and is prepared to instantly change to the KSSTATE_RUN state. Represents the mode of most resource usage and least latency to a Run state, without actually being in a KSSTATE_RUN state. Data can be buffered in this state. If the state of the pin is queried and that state is currently paused, the pin can return an error of STATUS_NO_DATA_DETECTED to indicate that this pin does not perform queuing of data when in a paused state.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>KSSTATE_RUN</TD>
<TD width=67%>The pin is streaming data. That is, the pin consumes or produces stream data.</TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<H4>Return Value</H4>

<P>Returns NOERROR if successful; otherwise, returns an error code.</P>

<H4>Headers</H4>

<P>Declared in <I>ksproxy.h</I>. Include <I>ksproxy.h</I>. </P>

<H4>Comments</H4>

<P>The state of the pin gives gross motor control for pins. Fine motor control is done on a class-by-class basis with custom properties. For instance, in order to make an external laser disc player spin up, you could set a custom Mode property specific to that class. Setting this property may also change the state of the device, though not necessarily, depending on the effect of the mode.</P>

<P>A filter itself can support this state property so that applications can set the entire filter’s state. Otherwise, each pin must have its state set. When the state of a pin transitions from KSSTATE_STOP, each connection that forwards IRPs must recalculate stack depth.</P>

<P>The proxy uses the KSPROPERTY_CLOCK_STATE property to retrieve the streaming state of a pin. </P>

<H4>See Also</H4>

<P>KSPROPERTY_CLOCK_STATE </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IKsClockPropertySet::KsGetState"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
