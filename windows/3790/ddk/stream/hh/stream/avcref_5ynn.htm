<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>AV/C Intersect Handler</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="AV/C Intersect Handler">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_av_c_intersect_handler_ks"></A>AV/C Intersect Handler</H1>

<P>The AV/C intersect handler determines if the data ranges are compatible. This is a user-defined function based on the following prototype:</P>

<PRE class=syntax>typedef
NTSTATUS
(*PFNAVCINTERSECTHANDLER)(
    IN PVOID Context,
    IN ULONG PinId,
    IN PKSDATARANGE CallerDataRange,
    IN PKSDATARANGE DescriptorDataRange,
    IN ULONG DataBufferSize,
    OUT PVOID Data OPTIONAL,
    OUT PULONG ReportedDataSize
    );</PRE>

<H4>Parameters</H4>

<DL>
<DT><B>Context</B></DT>

<DD>An optional value expected by the intersect handler. This value is either provided by the subunit driver (if the subunit driver provides the intersect handler), or by the lower driver providing the intersect handler.</DD>

<DT><B>PinId</B></DT>

<DD>Specifies the offset (or ID) of the pin for which the intersection is being done.</DD>

<DT><B>CallerDataRange</B></DT>

<DD>The first of two data ranges being compared.</DD>

<DT><B>DescriptorDataRange</B></DT>

<DD>The second of two data ranges being compared.</DD>

<DT><B>DataBufferSize</B></DT>

<DD>The size of the buffer passed by the <B>Data</B> member. If this is nonzero, then the intersect handler should attempt to return the data format resulting from a matching pair of data ranges. If this is zero, then the intersect handler should provide the required buffer size in <B>ReportedDataSize</B>, and return STATUS_BUFFER_OVERFLOW.</DD>

<DT><B>Data</B></DT>

<DD>An optional buffer to receive the data format resulting from a matching pair of data ranges. This member is ignored if <B>DataBufferSize </B>is zero.</DD>

<DT><B>ReportedDataSize</B></DT>

<DD>The actual size of the resulting data format. If <B>DataBufferSize</B> was zero, then this contains the required size of the buffer, but no format is returned.</DD>
</DL>

<H4>Return Value</H4>

<P>The intersect handler should return STATUS_SUCCESS if the data ranges are compatible, and there was enough buffer space to return the resulting format.</P>

<P>Possible error return values include:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=45%>Error Status</TH>
<TH align=left width=55%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=45%>STATUS_NO_MATCH</TD>
<TD width=55%>The data ranges are not compatible.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>STATUS_INTERNAL_ERROR</TD>
<TD width=55%>There was an unexpected format size mismatch.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>STATUS_BUFFER_OVERFLOW</TD>
<TD width=55%>The intersect handler is returning the required buffer size through the <B>ReportedDataSize</B> member.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>STATUS_BUFFER_TOO_SMALL</TD>
<TD width=55%>The intersect handler was not provided with a buffer large enough to hold the resulting format. The intersect handler must be called again with the <B>DataBufferSize</B> set to zero to determine the required buffer size.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>STATUS_INSUFFICIENT_RESOURCES</TD>
<TD width=55%>An internal buffer allocation failed.</TD>
</TR>
</TABLE><BR>

<H4>Headers</H4>

<P>Declared in <I>avc.h</I>. Include <I>avc.h</I>.</P>

<H4>Comments</H4>

<P>The AV/C intersect handler is user-defined, based on the function prototype above.</P>

<P>The handler is used in conjunction with the AVC_FUNCTION_GET_PIN_DESCRIPTOR function code. The purpose of the handler  is to match identical pin data formats and return them to the caller.</P>

<H4>See Also</H4>

<P><A HREF="avcref_0qer.htm">AVC_PIN_DESCRIPTOR</A>, <A HREF="avcref_7kc3.htm">AVC_FUNCTION_GET_PIN_DESCRIPTOR</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: AV%2FC%20Intersect%20Handler"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
