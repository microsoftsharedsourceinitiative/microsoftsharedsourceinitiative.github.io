<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsCreateDefaultAllocatorEx</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsCreateDefaultAllocatorEx">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_kscreatedefaultallocatorex_ks"></A>KsCreateDefaultAllocatorEx</H3>

<P>Creates a default allocator that uses the specified memory pool and associates the <I>IoGetCurrentIrpStackLocation(pIrp)-&gt;FileObject</I> with this allocator using an internal dispatch table (<B>KSDISPATCH_TABLE</B>).</P>

<PRE class=syntax><B>KSDDKAPI NTSTATUS NTAPI
  KsCreateDefaultAllocatorEx(
  </B>  <B>IN PIRP </B><I>Irp</I><B>,</B>
<B>    IN PVOID </B><I>InitializeContext</I><B> OPTIONAL,</B>
<B>    IN PFNKSDEFAULTALLOCATE </B><I>DefaultAllocate</I><B> OPTIONAL,</B>
<B>    IN PFNKSDEFAULTFREE </B><I>DefaultFree</I><B> OPTIONAL,</B>
<B>    IN PFNKSINITIALIZEALLOCATOR </B><I>InitializeAllocator</I><B> OPTIONAL,</B>
<B>    IN PFNKSDELETEALLOCATOR </B><I>DeleteAllocator</I><B> OPTIONAL   </B> <B>); </B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Irp</I></DT>

<DD>Contains the IRP with the allocator create request being handled.</DD>

<DT><I>InitializeContext</I><B> </B></DT>

<DD>Optionally contains a context to use with an external allocator. This is only used as the initialization context to the optional InitializeAllocator callback when creating an allocator context. The parameter is not otherwised used. If an external allocator is not provided, this parameter must be set to NULL.</DD>

<DT><I>DefaultAllocate</I><B> </B></DT>

<DD>Optionally contains an external allocate function that is used in place of the default pool allocation. If this is NULL, default allocation is used.</DD>

<DT><I>DefaultFree</I><B> </B></DT>

<DD>Optionally contains an external free function that is used in place of the default pool allocation. If an external allocator is not provided, this parameter must be set to NULL.</DD>

<DT><I>InitializeAllocator</I><B> </B></DT>

<DD>Optionally contains an external allocator initialization function to which the InitializeContext parameter is passed. This function is expected to return an allocator context based on the allocator framing. If an external allocator is not provided, this parameter must be set to NULL.</DD>

<DT><I>DeleteAllocator</I><B> </B></DT>

<DD>Optionally contains an external allocator delete function that is used for external allocators.  If an external allocator is not provided, this parameter must be set to NULL.
</DD>
</DL>

<H4>Return Value</H4>

<P>Returns STATUS_SUCCESS, else an error on default allocator creation failure. Does not complete the IRP or set the status in the IRP.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>Before calling this routine, the <B>KSCREATE_ITEM_IRP_STORAGE(Irp)</B> macro should return a pointer to the <A HREF="ks-struct_3lpv.htm">KSOBJECT_CREATE_ITEM</A> structure that is the create item for this allocator. <B>KsCreateDefaultAllocatorEx</B> sets <B>FsContext</B> to point to the return value of this macro. As such, <B>FsContext</B> can later be used for security descriptor queries or changes.</P>

<P>You can find <B>KSCREATE_ITEM_IRP_STORAGE(Irp)</B> and related macros in <I>ks.h</I>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsCreateDefaultAllocatorEx"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
