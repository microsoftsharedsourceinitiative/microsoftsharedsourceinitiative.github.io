<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KSAUDIO_CHANNEL_CONFIG</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KSAUDIO_CHANNEL_CONFIG">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ksaudio_channel_config_ks"></A>KSAUDIO_CHANNEL_CONFIG</H1>

<P>The KSAUDIO_CHANNEL_CONFIG structure specifies the configuration of channels within the data format of an audio stream.</P>

<PRE class=syntax>typedef struct
{
  LONG  ActiveSpeakerPositions;
} KSAUDIO_CHANNEL_CONFIG, *PKSAUDIO_CHANNEL_CONFIG;</PRE>

<H4>Members</H4>

<DL>
<DT><B>ActiveSpeakerPositions</B></DT>

<DD>Specifies both the number of channels and the assignment of those channels to speaker positions. This member is a bit mask in which each bit within the mask corresponds to a particular speaker position. If a mask bit is set, this means that the audio stream contains a channel that is assigned to the speaker position that the mask bit represents. The number of channels in the stream is obtained by counting the ones in the bit mask. See the following <B>Comments</B> section.</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ksmedia.h</I>. Include <I>ksmedia.h</I>.</P>

<H4>Comments</H4>

<P>This structure is used to <I>set</I> or <I>get</I> the data value for the <A HREF="aud-prop_4aib.htm">KSPROPERTY_AUDIO_CHANNEL_CONFIG</A> property.</P>

<P>The following table shows the flag bits that are defined for the <B>ActiveSpeakerPositions</B> member.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=72%>Speaker Position</TH>
<TH align=left width=28%>Flag Bit</TH>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_FRONT_LEFT</TD>
<TD width=28%>0x1</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_FRONT_RIGHT</TD>
<TD width=28%>0x2</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_FRONT_CENTER</TD>
<TD width=28%>0x4</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_LOW_FREQUENCY</TD>
<TD width=28%>0x8</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_BACK_LEFT</TD>
<TD width=28%>0x10</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_BACK_RIGHT</TD>
<TD width=28%>0x20</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_FRONT_LEFT_OF_CENTER</TD>
<TD width=28%>0x40</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_FRONT_RIGHT_OF_CENTER</TD>
<TD width=28%>0x80</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_BACK_CENTER</TD>
<TD width=28%>0x100</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_SIDE_LEFT</TD>
<TD width=28%>0x200</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_SIDE_RIGHT</TD>
<TD width=28%>0x400</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_CENTER</TD>
<TD width=28%>0x800</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_FRONT_LEFT</TD>
<TD width=28%>0x1000</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_FRONT_CENTER</TD>
<TD width=28%>0x2000</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_FRONT_RIGHT</TD>
<TD width=28%>0x4000</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_BACK_LEFT</TD>
<TD width=28%>0x8000</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_BACK_CENTER</TD>
<TD width=28%>0x10000</TD>
</TR>

<TR VALIGN="top">
<TD width=72%>SPEAKER_TOP_BACK_RIGHT</TD>
<TD width=28%>0x20000</TD>
</TR>
</TABLE><BR>

<P>Each audio data format contains channels for one or more of the preceding speaker positions. The number of channels simply equals the number of nonzero flag bits in the <B>ActiveSpeakerPositions</B> member.</P>

<P>The relative positions of the channels within each block of audio data always follow the same relative ordering as the flag bits in the preceding table. For example, if <B>ActiveSpeakerPositions</B> contains the value 0x00000033, the format defines four audio channels that are assigned for playback to the front-left, front-right, back-left, and back-right speakers, respectively. The channel data should be interleaved in that order within each block. (This is the KSAUDIO_SPEAKER_QUAD configuration that appears in the second table below.)</P>

<P>The following table shows the speaker configurations that are defined for DVD.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=52%>Configuration</TH>
<TH align=left width=48%>Speaker Position</TH>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_GROUND_FRONT_LEFT</TD>
<TD width=48%>SPEAKER_FRONT_LEFT</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_GROUND_FRONT_CENTER</TD>
<TD width=48%>SPEAKER_FRONT_CENTER</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_GROUND_FRONT_RIGHT</TD>
<TD width=48%>SPEAKER_FRONT_RIGHT</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_GROUND_REAR_LEFT</TD>
<TD width=48%>SPEAKER_BACK_LEFT</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_GROUND_REAR_RIGHT</TD>
<TD width=48%>SPEAKER_BACK_RIGHT</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_TOP_MIDDLE</TD>
<TD width=48%>SPEAKER_TOP_CENTER</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_SUPER_WOOFER</TD>
<TD width=48%>SPEAKER_LOW_FREQUENCY</TD>
</TR>
</TABLE><BR>

<P>The following table shows the speaker configurations that are defined for DirectSound.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=52%>Configuration</TH>
<TH align=left width=48%>Speaker Positions</TH>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_DIRECTOUT</TD>
<TD width=48%>0 (no speakers)</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_MONO</TD>
<TD width=48%>(SPEAKER_FRONT_CENTER)</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_STEREO</TD>
<TD width=48%>(SPEAKER_FRONT_LEFT&nbsp;| SPEAKER_FRONT_RIGHT)</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_QUAD</TD>
<TD width=48%>(SPEAKER_FRONT_LEFT&nbsp;| SPEAKER_FRONT_RIGHT&nbsp;| SPEAKER_BACK_LEFT&nbsp;| SPEAKER_BACK_RIGHT)</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_SURROUND</TD>
<TD width=48%>(SPEAKER_FRONT_LEFT&nbsp;| SPEAKER_FRONT_RIGHT&nbsp;| SPEAKER_FRONT_CENTER&nbsp;| SPEAKER_BACK_CENTER)</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_5POINT1</TD>
<TD width=48%>(SPEAKER_FRONT_LEFT&nbsp;| SPEAKER_FRONT_RIGHT&nbsp;| SPEAKER_FRONT_CENTER&nbsp;| SPEAKER_LOW_FREQUENCY&nbsp;| SPEAKER_BACK_LEFT&nbsp;| SPEAKER_BACK_RIGHT)</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>KSAUDIO_SPEAKER_7POINT1</TD>
<TD width=48%>(SPEAKER_FRONT_LEFT&nbsp;| SPEAKER_FRONT_RIGHT&nbsp;| SPEAKER_FRONT_CENTER&nbsp;| SPEAKER_LOW_FREQUENCY&nbsp;| SPEAKER_BACK_LEFT&nbsp;| SPEAKER_BACK_RIGHT&nbsp;| SPEAKER_FRONT_LEFT_OF_CENTER&nbsp;| SPEAKER_FRONT_RIGHT_OF_CENTER)</TD>
</TR>
</TABLE><BR>

<P>In the preceding table, the constant KSAUDIO_SPEAKER_DIRECTOUT has a value of zero, which means that no speaker positions are assigned to the channels in the multichannel stream. For example, channel zero might represent percussion, channel 1 might represent trumpet, channel 2 might represent voice, and so on. In this configuration, the channels in the input stream are output directly to the hardware without modification and without being interpreted as speaker positions. For more information, see <A HREF="pcdesign_29bb.htm">DSSPEAKER_DIRECTOUT Speaker Configuration</A>.</P>

<H4>Example</H4>

<P>The speaker configuration for a 5.1-channel format is defined by the constant KSAUDIO_SPEAKER_5POINT1 in the preceding table. The geometric layout of the speakers is shown in the following figure, which shows the positions of the front-left, front-right, front-center, back-left, and back-right speakers. The  figure omits the low-frequency speaker because it is nondirectional.</P>

<P>&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="images/spkrposn.gif" ALT="" BORDER=0></P>

<P><B>A 5.1-Channel Speaker Configuration (Low-Frequency Speaker Not Shown)</B></P>

<P>For this example, the ordering of the six channels within each block of audio data is as follows:

<OL>
	<LI>SPEAKER_FRONT_LEFT</LI>

	<LI>SPEAKER_FRONT_RIGHT</LI>

	<LI>SPEAKER_FRONT_CENTER</LI>

	<LI>SPEAKER_LOW_FREQUENCY</LI>

	<LI>SPEAKER_BACK_LEFT</LI>

	<LI>SPEAKER_BACK_RIGHT</LI>
</OL>

<P>Assuming a PCM format with a 16-bit sample size, each block of audio data occupies 12 bytes, which are ordered as shown in the following figure.</P>

<P><IMG SRC="images/6chnstrm.gif" ALT="" BORDER=0></P>

<P><B>Ordering of Bytes for the 5.1-Channel Example</B></P>

<H4>See Also</H4>

<P><A HREF="aud-prop_4aib.htm">KSPROPERTY_AUDIO_CHANNEL_CONFIG</A>, <A HREF="aud-prop_7wz7.htm">WAVEFORMATEXTENSIBLE</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KSAUDIO_CHANNEL_CONFIG"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
