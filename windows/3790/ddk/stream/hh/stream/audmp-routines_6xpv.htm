<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IMiniportWavePciStream::SetState</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IMiniportWavePciStream::SetState">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iminiportwavepcistream_setstate_ks"></A>IMiniportWavePciStream::SetState</H1>

<P>The <B>SetState</B> method changes the state of the stream transport.</P>

<PRE class=syntax><B>NTSTATUS
  SetState(
    IN KSSTATE  </B><I>State</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>State</I></DT>

<DD>Specifies the new state of the stream. This parameter is a <A HREF="ks-struct_1ooj.htm">KSSTATE</A> enumeration value. See the following <B>Comments</B> section.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>SetState</B> returns STATUS_SUCCESS if the call was successful. Otherwise, the method returns an appropriate error code.</P>

<H4>Headers</H4>

<P>Declared in <I>portcls.h</I>. Include <I>portcls.h</I>.</P>

<H4>Comments</H4>

<P>For an audio filter graph, the four <A HREF="ks-struct_1ooj.htm">KSSTATE</A> enumeration values are interpreted as follows:

<UL>
	<LI>KSSTATE_RUN 
<P>Data transport in the current audio filter graph is running and functioning as normal.
</LI>

	<LI>KSSTATE_ACQUIRE 
<P>This is a transitional state that helps to manage the transition between KSSTATE_RUN and KSSTATE_STOP.
</LI>

	<LI>KSSTATE_PAUSE 
<P>This is a transitional state that helps to manage the transition between KSSTATE_RUN and KSSTATE_STOP. 
</LI>

	<LI>KSSTATE_STOP 
<P>Data transport is stopped in the current audio filter graph.
</LI>
</UL>

<P>For most miniports, KSSTATE_ACQUIRE and KSSTATE_PAUSE are indistinguishable.</P>

<P>Transitions always occur in one of the following two sequences:

<UL>
	<LI>STOP -&gt; ACQUIRE -&gt; PAUSE -&gt; RUN</LI>

	<LI>RUN -&gt; PAUSE -&gt; ACQUIRE -&gt; STOP</LI>
</UL>

<P>The <A HREF="audmp-routines_0g1f.htm"><B>IMiniportWavePci::NewStream</B></A> method sets the initial state of the stream to KSSTATE_STOP.</P>

<P>The <B>SetState</B> method is called at IRQL PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="ks-struct_1ooj.htm">KSSTATE</A>, <A HREF="ks-prop_7vhv.htm">KSPROPERTY_CONNECTION_STATE</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IMiniportWavePciStream::SetState"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
