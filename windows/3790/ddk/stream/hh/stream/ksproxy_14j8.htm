<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IKsInterfaceHandler</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IKsInterfaceHandler">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_iksinterfacehandler_ks"></A>IKsInterfaceHandler</H2>

<P>The <B>IKsInterfaceHandler</B> interface provides methods that marshal samples into the kernel based on the <A HREF="ks-struct_9ctv.htm">KSPIN_INTERFACE</A> structure specified for the established connection. </P>

<P>The IID for this interface is IID_IKsInterfaceHandler.</P>

<H4>When to Implement</H4>

<P>The methods of this interface must be implemented so that the proxy can create an instance of the interface handler and can let clients use the handler to marshal samples into the kernel based on the KSPIN_INTERFACE specified for the established connection. This interface is required for interface handlers.</P>

<H4>When to Use</H4>

<P>Clients call the methods of this interface to marshal samples into the kernel based on the KSPIN_INTERFACE specified for the established connection. </P>

<H4>Methods  </H4>

<P>The following methods are listed in Vtable order.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=40%>IUnknown method</TH>
<TH align=left width=60%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=40%><B>QueryInterface</B></TD>
<TD width=60%>Returns pointers to supported interfaces.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>AddRef</B></TD>
<TD width=60%>Increments reference count.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>Release</B></TD>
<TD width=60%>Decrements reference count.</TD>
</TR>
</TABLE><BR>

<TABLE>

<TR VALIGN="top">
<TH align=left width=40%>IKsInterfaceHandler method</TH>
<TH align=left width=60%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=40%><A HREF="ksproxy_32yb.htm"><B>KsSetPin</B></A></TD>
<TD width=60%>Informs an interface handler about the pin with which to communicate when passing data.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%><A HREF="ksproxy_122b.htm"><B>KsProcessMediaSamples</B></A></TD>
<TD width=60%>Queries for the extended header size if a data handler is specified. </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><A HREF="ksproxy_3oab.htm"><B>KsCompleteIo</B></A></TD>
<TD width=60%>Cleans up extended headers and releases media samples. </TD>
</TR>
</TABLE><BR>

<H4>Comments</H4>

<P>In order to keep the proxy neutral with regard to the interface used to stream data, interface handlers are loaded to translate DirectShow media samples to and from a kernel-level driver. An interface handler implements the methods of the <B>IKsInterfaceHandler</B> interface to perform preprocessing and postprocessing on all media samples and to signal the completion of input and output (I/O).</P>

<P>Each interface handler can marshal media samples using its own method. The standard interface handler that KS proxy implements uses IOCTL_KS_WRITE_STREAM for the receive operation and IOCTL_KS_READ_STREAM for the send operation, but a custom interface handler can use some other method.</P>

<P>When a pin is connected, the proxy uses the GUID in the <B>Set</B> member of the KSPIN_INTERFACE structure to determine what interface handler to load. The interface handler is registered as a COM server under that GUID class. The interface handler must handle all variations of the interface within the interface set. Bridge pins are not expected to stream data, and interface handlers are not loaded for them.</P>

<P>On an interface handler create request through <B>CoCreateInstance</B>, the server is always presented an outer <B>IUnknown</B> with which to create the COM object. This <B>IUnknown</B> is an interface on the pin object that is loading this interface handler. The <B>IUnknown</B> interface pointer can be used to query information or interfaces, such as the <B>IKsControl</B> interface, from the pin, although the kernel-mode pin may not have been created at the time the interface handler is loaded. No reference should be left on the outer object through acquiring any interfaces, as it will result in a circular reference count. Using the interfaces without a reference count is acceptable, because the outer object owns the handler and, by definition, is destroyed when the outer object’s reference count reaches zero.</P>

<P>For more information on <B>CoCreateInstance</B>, see the Platform SDK documentation.</P>

<H4>See Also</H4>

<P><A HREF="ksproxy_4h0z.htm"><B>IKsControl</B></A>, <A HREF="ks-struct_9ctv.htm">KSPIN_INTERFACE</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IKsInterfaceHandler"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
