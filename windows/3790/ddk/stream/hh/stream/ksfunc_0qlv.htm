<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsMethodHandlerWithAllocator</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsMethodHandlerWithAllocator">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_ksmethodhandlerwithallocator_ks"></A>KsMethodHandlerWithAllocator</H3>

<P>The <B>KsMethodHandlerWithAllocator</B> functions performs the same handling as <B>KsMethodHandler</B>, with the same restrictions, but allows an optional allocator callback to be used to provide a buffer for the parameters. If used, the filter may need to free the buffer in some nonconventional manner. Note that the IRP_BUFFERED_IO and IRP_DEALLOCATE_BUFFER flags are not set when using a custom allocator.</P>

<PRE class=syntax><B>KSDDKAPI NTSTATUS NTAPI
  KsMethodHandlerWithAllocator(
    IN PIRP  </B><I>Irp</I><B>,
    IN ULONG  </B><I>MethodSetsCount</I><B>,
    IN PKSMETHOD_SET  </B><I>MethodSet</I><B>,
    IN PFNKSALLOCATOR  </B><I>Allocator</I><B>  OPTIONAL,
    IN ULONG  </B><I>MethodItemSize </I><B> OPTIONAL,
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Irp</I></DT>

<DD>Specifies the IRP with the method request being handled.</DD>

<DT><I>MethodSetsCount</I></DT>

<DD>Indicates the number of method set structures being passed.</DD>

<DT><I>MethodSet</I></DT>

<DD>Specifies the pointer to the list of method set information.</DD>

<DT><I>Allocator</I></DT>

<DD>Optionally points to an allocation function that will be used to allocate memory to store the method parameters.</DD>

<DT><I>MethodItemSize</I></DT>

<DD>Optionally contains the size of each <B>KSMETHOD_ITEM</B> structure in each list of methods. The method item may be extended in order to store private information. If this parameter is zero, the structure size is assumed to be normal. If it is greater than or equal to a method item structure, the <B>KSMETHOD_ITEM_IRP_STORAGE</B> macro can be used to return a pointer to the method item so the custom data can be retrieved.</DD>
</DL>

<H4>Return Value</H4>

<P>The <B>KsMethodHandler</B> function returns STATUS_SUCCESS if successful, or an error specific to the method being handled if unsuccessful. The function always sets the IO_STATUS_BLOCK.Information field of the PIRP.IoStatus element within the IRP to zero because of an internal error, or the element is set by a method handler. The function does not set the IO_STATUS_BLOCK.Status field nor complete the IRP.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsMethodHandlerWithAllocator"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
