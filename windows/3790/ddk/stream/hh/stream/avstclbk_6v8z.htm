<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>AVStrMiniPinSetDeviceState</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="AVStrMiniPinSetDeviceState">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_avstrminipinsetdevicestate_ks"></A>AVStrMiniPinSetDeviceState</H1>

<P>An AVStream minidriver's <I>AVStrMiniPinSetDeviceState</I> routine is called when the state of a <A HREF="avstruct_5s4z.htm">KSPIN</A> structure is changed due to the arrival of a connection state property ‘set’ IOCTL.  Typically, this will be provided by minidrivers that need to change the state of hardware.</P>

<PRE class=syntax><B>NTSTATUS
  AVStrMiniPinSetDeviceState(
    IN PKSPIN  </B><I>Pin</I><B>,</B>
<B>    IN KSSTATE  </B><I>ToState</I><B>,</B>
<B>    IN KSSTATE  </B><I>FromState</I><B>);</B>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Pin</I></DT>

<DD>Pointer to the <A HREF="avstruct_5s4z.htm">KSPIN</A> structure for which state is changing.</DD>

<DT><I>ToState</I></DT>

<DD>The target <A HREF="ks-struct_1ooj.htm">KSSTATE</A> after receipt of the IOCTL.</DD>

<DT><I>FromState</I></DT>

<DD>The previous <A HREF="ks-struct_1ooj.htm">KSSTATE</A>.
</DD>
</DL>

<H4>Return Value</H4>

<P>Return STATUS_SUCCESS or the error code that was returned from the attempt to set the state. Do not return STATUS_PENDING. The filter control mutex is held during this function. See <A HREF="avconcep_6qsn.htm">Filter Control Mutex in AVStream</A>.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>This routine is available in Windows XP and DirectX 8.0 and later.</P>

<P>The minidriver specifies this routine's address in the <B>SetDeviceState</B> member of its <A HREF="avstruct_4u9f.htm">KSPIN_DISPATCH</A> structure.</P>

<P>Minidrivers will not receive a stop upon initial connection of the pin.</P>

<P>Pins that use the standard transport mechanism (standard interface/standard medium or an explicit use of KSPIN_FLAG_USE_STANDARD_TRANSPORT in <A HREF="avstruct_1fw3.htm">KSPIN_DESCRIPTOR_EX</A>) receive filtered state changes through the owning pipe through this routine. This means that no transition will be more than a single step. In other words, KSSTATE_STOP transitions to KSSTATE_ACQUIRE, KSSTATE_ACQUIRE transitions to KSSTATE_PAUSE, and so on. In addition, state changes received in this routine represent the state of the pipe as a whole, not the individual state of the pin as reported in the <B>DeviceState</B> member of the KSPIN structure.</P>

<P>Pins that do not use the standard transport mechanism (non-standard interface, non-standard medium, or an explicit use of KSPIN_FLAG_DO_NOT_USE_STANDARD_TRANSPORT in <A HREF="avstruct_1fw3.htm">KSPIN_DESCRIPTOR_EX</A>) receive non-filtered state changes through this routine. As such, non-standard transport pins must be prepared to deal with state changes that jump more than a single step. As an example, consider a jump from KSSTATE_RUN to KSSTATE_STOP without an intervening KSSTATE_PAUSE. In addition, the state reported to this routine will be identical to the state reported in the <B>DeviceState</B> member of the relevant KSPIN structure.</P>

<P>This routine is optional.</P>

<H4>See Also</H4>

<P><A HREF="avstruct_4u9f.htm">KSPIN_DISPATCH</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: AVStrMiniPinSetDeviceState"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
