<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Streaming Minidrivers">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_start_device_dr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_stop_device_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_streaming_minidrivers_ksg"></A>Streaming Minidrivers</H1>

<P class=note><B>Note</B>&nbsp;&nbsp;This section details the outdated <I>Stream.sys</I> class driver. With the release of Microsoft® Windows® XP, Microsoft supports <I>Stream.sys</I> only on an existing basis. As of this release, Microsoft recommends that vendors consider developing new video or audio/video multimedia drivers using the AVStream class driver model. See details in the <A HREF="avsover_02w7.htm">AVStream Overview</A>. If developing an audio-only driver, you should write an audio miniport driver under the Microsoft-provided <I>Portcls.sys</I> class driver. For details, see <A HREF="pcdesign_5gkn.htm">Audio Miniport Drivers</A>.</P>

<P>Vendors can support video-only or audio/video devices by providing a minidriver that runs under the Microsoft-provided <I>Stream.sys</I> class driver. In this documentation, vendor-provided minidrivers under <I>Stream.sys</I> are referred to as <I>streaming minidrivers</I>.</P>

<P>For instance, video capture devices and DVD players can be supported with streaming minidrivers. For technology-specific information, see <A HREF="vidcapds_7zc7.htm">Video Capture Minidrivers</A> and <A HREF="dvd-design_7kx3.htm">DVD Decoder Minidrivers</A>.</P>

<P>Streaming minidrivers support kernel streaming semantics. To use this document, driver developers should be familiar with basic kernel streaming concepts, as explained in <A HREF="ks-overview_9vdz.htm">Kernel Streaming</A>.</P>

<P>The stream class driver is designed to make writing hardware drivers for streaming devices simpler by handling many of the aspects of interacting with the operating system.

<UL>
	<LI>The minidriver can allow the stream class driver to handle synchronization on its behalf. For example, the stream class driver can optionally serialize I/O requests for the minidriver. Allowing the class driver to handle synchronization makes the minidriver multiprocessor-safe but nonreentrant. This is suitable for low-end to medium-end hardware. </LI>

	<LI>The class driver automatically synchronizes file operations. For example, the opening of a stream and a device are correctly serialized without the minidriver using mutexes, semaphores, or events.</LI>

	<LI>The class driver abstracts the implementation of kernel streaming semantics from the minidriver.</LI>

	<LI>The class driver handles all interaction with the PnP Manager. For example:
<UL>
	<LI>The class driver creates the functional device object on the minidriver's behalf.</LI>

	<LI>The class driver manages resource configuration (such as translating port addresses, translating and mapping memory ranges, and connecting interrupts).</LI>

	<LI>The class driver handles PnP IRPs, such as <A HREF="JavaScript:hhobj_1.Click()">IRP_MN_START_DEVICE</A>, or <A HREF="JavaScript:hhobj_2.Click()">IRP_MN_STOP_DEVICE</A>.</LI>
</UL>
</LI>

	<LI>All low-level buffer management is handled by the class driver:
<UL>
	<LI>Allocating DMA adapter object, if necessary.</LI>

	<LI>Mapping buffers and building scatter/gather lists for DMA.</LI>

	<LI>Locking and flushing buffers correctly for both DMA and PIO.</LI>
</UL>
</LI>

	<LI>All IOCTL parameter validation is performed by the class driver.</LI>

	<LI>All requests are timed by the class driver with a watchdog timer. </LI>

	<LI>The minidriver does not create a device object, but shares the class driver’s device object as necessary. This saves system resources.</LI>

	<LI>Only one device object is created per adapter. Multiple subdevices (called <I>streams</I>) supported by the adapter are represented by kernel streaming pins.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: "> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
