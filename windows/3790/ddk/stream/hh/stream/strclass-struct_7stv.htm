<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HW_STREAM_INFORMATION</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="HW_STREAM_INFORMATION">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_hw_stream_information_ks"></A>HW_STREAM_INFORMATION</H1>

<P>The HW_STREAM_INFORMATION structure describes the kernel streaming semantics supported by individual streams, as part of an <A HREF="strclass-struct_1yur.htm">HW_STREAM_DESCRIPTOR</A> structure.</P>

<PRE class=syntax>typedef struct _HW_STREAM_INFORMATION {
    ULONG  NumberOfPossibleInstances;
    KSPIN_DATAFLOW  DataFlow;
    BOOLEAN  DataAccessible;
    ULONG  NumberOfFormatArrayEntries;
    PKSDATARANGE*  StreamFormatsArray;
    PVOID  ClassReserved[4];
    ULONG  NumStreamPropArrayEntries;
    PKSPROPERTY_SET  StreamPropertiesArray;
    ULONG  NumStreamEventArrayEntries;
    PKSEVENT_SET  StreamEventsArray;
    GUID*  Category;
    GUID*  Name;
    ULONG  MediumsCount;
    const KSPIN_MEDIUM*  Mediums;
    BOOLEAN  BridgeStream;
    ULONG  Reserved[2];    
} HW_STREAM_INFORMATION, *PHW_STREAM_INFORMATION;</PRE>

<H4>Members</H4>

<DL>
<DT><B>NumberOfPossibleInstances</B></DT>

<DD>Specifies the number of possible instances of this stream that can be opened.</DD>

<DT><B>DataFlow</B></DT>

<DD>The direction that data can travel on this stream. For unidirectional data flow, <B>DataFlow</B> has the value KSPIN_DATAFLOW_IN or KSPIN_DATAFLOW_OUT.</DD>

<DT><B>DataAccessible</B></DT>

<DD>Specifies TRUE if the stream data is accessible to the class driver. </DD>

<DT><B>NumberOfFormatArrayEntries</B></DT>

<DD>The number of entries in the array that begins at the address in the <B>StreamFormatsArray</B> member.</DD>

<DT><B>StreamFormatsArray</B></DT>

<DD>Pointer to the beginning of the array of data ranges that this stream supports. (The name of this member is deceptive. This member points to an array of <A HREF="ks-struct_065v.htm">KSDATARANGE</A> structures, not KSDATAFORMAT structures.)</DD>

<DT><B>ClassReserved[4]</B></DT>

<DD>Reserved for use by the class driver. Do not use.</DD>

<DT><B>NumStreamPropArrayEntries</B></DT>

<DD>The number of entries in the array that begins at the address in the <B>StreamPropertiesArray</B> member.</DD>

<DT><B>StreamPropertiesArray</B></DT>

<DD>Pointer to the beginning of the array of property sets supported by this stream.</DD>

<DT><B>NumStreamEventArrayEntries</B></DT>

<DD>The number of entries in the array that begins at the address in the <B>StreamEventsArray</B> field.</DD>

<DT><B>StreamEventsArray</B></DT>

<DD>Pointer to the beginning of the array of event sets supported by this stream.</DD>

<DT><B>Category</B></DT>

<DD>Specifies the GUID of the pin category.</DD>

<DT><B>Name</B></DT>

<DD>Specifies the GUID of the localized Unicode string name for the pin type, stored in the Registry.</DD>

<DT><B>MediumsCount</B></DT>

<DD>The number of entries in the array that begins at the address in the <B>Mediums</B> field.</DD>

<DT><B>Mediums</B></DT>

<DD>Pointer to the beginning of the array of <A HREF="ks-struct_735f.htm">KSPIN_MEDIUM</A> structures supported by this stream. If the minidriver does not specify a medium, the class driver uses the KSMEDIUMSETID_STANDARD, KSMEDIUM_TYPE_ANYINSTANCE medium as the default.</DD>

<DT><B>BridgeStream</B></DT>

<DD>If TRUE, the communications type of this stream's underlying pin type is KSPIN_COMMUNICATION_BRIDGE. Otherwise, the default communications type of a stream is KSPIN_COMMUNICATION_SINK.

<P>Most minidrivers will set this member to FALSE. See KSPROPERTY_PIN_COMMUNICATIONS for a description of communication types.
</DD>

<DT><B>Reserved[2]</B></DT>

<DD>Reserved for system use. Do not use.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>strmini.h</I>. Include <I>strmini.h</I>.</P>

<H4>Comments</H4>

<P>The class driver uses the elements of HW_STREAM_INFORMATION to handle the <A HREF="ks-prop_1kmr.htm">KSPROPSETID_Pin</A> property requests. The index within the <A HREF="strclass-struct_1yur.htm">HW_STREAM_DESCRIPTOR</A> structure serves as the pin type ID number.</P>

<P>Note that the class driver does not use this data to handle the <A HREF="ks-prop_7gdv.htm">KSPROPERTY_PIN_DATAINTERSECTION</A> property. See <A HREF="strclass-struct_23lf.htm">STREAM_DATA_INTERSECT_INFO</A> for a description of how the class driver handles this property.</P>

<H4>See Also</H4>

<P><A HREF="strclass-struct_1yur.htm">HW_STREAM_DESCRIPTOR</A>, <A HREF="strclass-struct_3wz7.htm">HW_STREAM_HEADER</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: HW_STREAM_INFORMATION"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
