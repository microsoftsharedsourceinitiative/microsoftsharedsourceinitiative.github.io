<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Implementing the IPowerNotify Interface</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Implementing the IPowerNotify Interface">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_implementing_the_ipowernotify_interface_ksg"></A>Implementing the IPowerNotify Interface</H3>

<P>If your driver's <A HREF="audmp-routines_5d83.htm">miniport</A> or <A HREF="audmp-routines_3gz7.htm">miniport-stream</A> objects need to know about power-state changes, they can support the <A HREF="audmp-routines_32k3.htm"><B>IPowerNotify</B></A> interface in their <B>QueryInterface</B> methods and receive notification from the PortCls system driver as power changes occur.</P>

<P>When the power state changes, PortCls calls the <A HREF="audmp-routines_3s4z.htm"><B>IPowerNotify::PowerChangeNotify</B></A> method to individually notify each miniport and miniport-stream object that supports the <B>IPowerNotify</B> interface. During the <B>PowerChangeNotify</B> call, a miniport object should cache the new device power state. During the <B>CAdapterCommon::Init</B> call (see the implementation in the <I>msvad</I> sample adapter in the DDK, for example), the miniport driver should set its cached power state to the initial value <B>PowerDeviceD0</B>.</P>

<P>Before calling <B>PowerChangeState</B> to power down, PortCls calls <B>IPowerNotify::PowerChangeNotify</B> to give the miniport driver an opportunity to save any necessary device context. This context might include the hardware-register values that embody the current filter topology and mixer-line settings, for example. After calling <B>PowerChangeState</B> to power up, PortCls calls <B>PowerChangeNotify</B> so that the miniport driver can restore the saved context.</P>

<P>When powering down, PortCls pauses any active audio data streams before calling <B>PowerChangeNotify</B>. When powering up, PortCls calls <B>PowerChangeNotify</B> before restarting any paused audio data streams.</P>

<P>Your miniport and miniport-stream object classes can inherit from the <B>IPowerNotify</B> interface and support this interface in their <B>NonDelegatingQueryInterface</B> method. You can use the IMP_IPowerNotify definition from the <I>portcls.h </I>header file to add the function declaration for the <B>PowerChangeNotify</B> method to the class definition for your driver's miniport and stream objects.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Implementing%20the%20IPowerNotify%20Interface"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
