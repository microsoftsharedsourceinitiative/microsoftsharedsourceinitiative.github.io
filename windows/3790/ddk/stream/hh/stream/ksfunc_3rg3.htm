<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsSetMajorFunctionHandler</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsSetMajorFunctionHandler">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_kssetmajorfunctionhandler_ks"></A>KsSetMajorFunctionHandler</H3>

<P>The <B>KsSetMajorFunctionHandler</B> function sets the handler for a specified major function to use the internal dispatching. It routes through a KSDISPATCH_TABLE contained in the opaque object header to be the first element within a structure pointed to by an <B>FsContext</B> within a file object. The dispatching assumes the table and <B>FsContext</B> structure are initialized by the device using <B>KsAllocateObjectHeader</B>.</P>

<PRE class=syntax><B>KSDDKAPI NTSTATUS NTAPI
  KsSetMajorFunctionHandler(</B>
    <B>IN PDRIVER_OBJECT </B> <I>DriverObject</I><B>,</B>
    <B>IN ULONG </B> <I>MajorFunction</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DriverObject</I></DT>

<DD>Specifies the driver object whose major function is to be handled.</DD>

<DT><I>MajorFunction</I></DT>

<DD>Specifies the major function identifier to be handled. This sets the major function pointer in the driver object to an internal function that then dispatches to the <B>KSDISPATCH_TABLE</B> function. The pointer to this table is assumed to be the first element in a structure pointed to by <B>FsContext</B> in the file object of the specific IRP being dispatched. The valid major function identifiers are as listed.

<TABLE>

<TR VALIGN="top">
<TH align=left width=45%>Identifier</TH>
<TH align=left width=55%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_CREATE </TD>
<TD width=55%>Create IRP. In this instance, a create request could be used for either creating a new instance of a filter, or for creating some object such as a pin under a filter or a clock under a pin. This assumes that the first element in the driver object’s extent contains a <B>KSDEVICE_HEADER </B>structure that is used to find the type of object to create, based on the name passed. If a parent file object is specified, then that object’s KSDISPATCH_TABLE.ChildCreateHandlerTable in the <B>FsContext</B> is looked at to determine what handler to use for the create, or use the device object’s table.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_CLOSE </TD>
<TD width=55%> Close IRP.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_DEVICE_CONTROL&nbsp;</TD>
<TD width=55%> Device control IRP.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_READ </TD>
<TD width=55%> Read IRP.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_WRITE </TD>
<TD width=55%> Write IRP.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_FLUSH_BUFFERS </TD>
<TD width=55%> Flush IRP.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_QUERY_SECURITY </TD>
<TD width=55%> Query security information.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>IRP_MJ_SET_SECURITY </TD>
<TD width=55%> Set security information.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>KSDISPATCH_FASTIO </TD>
<TD width=55%>This flag may be added to the MajorFunction identifier in order to specify that the entry refers to the fast I/O dispatch table, rather than the typical major function entry. This is valid only with IRP_MJ_READ, IRP_MJ_WRITE or IRP_MJ_DEVICE_CONTROL. The driver is responsible for creating the DriverObject-&gt;FastIoDispatch table. As with normal dispatching, if a handler is set for the driver object, all file objects must handle that fast I/O, even if the entry just points to DispatchFastIoDeviceControlFailure or a similar function.</TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<H4>Return Value</H4>

<P>Returns STATUS_SUCCESS if the MajorFunction identifier is valid.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>If a major function handler is set for a driver object, all file objects must handle that major function, even if the entry just points to <B>KsDispatchInvalidDeviceRequest</B>.</P>

<PRE>KSDISPATCH_FASTIO</PRE>

<P>This flag may be used to specify that the fast I/O entry should be set rather than the IRP-based entry.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsSetMajorFunctionHandler"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
