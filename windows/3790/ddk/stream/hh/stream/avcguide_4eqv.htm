<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Allocating and Initializing an IRB</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Allocating and Initializing an IRB">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_allocating_and_initializing_an_irb_ksg"></A>Allocating and Initializing an IRB</H2>

<P>The IRB is a block of data describing the operation to perform. Each function supported by <I>avc.sys</I> is associated with a specific IRB structure. The memory for the IRB must be allocated from nonpaged pool. Just as with IRP allocation, there is a potential for pool fragmentation. This fragmentation problem can be avoided by using a zone buffer or, preferably, a lookaside list for IRB storage management. Once the memory has been allocated, fill in the parameters for the function according to its associated structure definition.</P>

<P>Following is a code sample showing how the AVC_COMMAND_IRB might be allocated and initialized for an AV/C control command consisting of a single operand byte:</P>

<PRE>    #include &lt;avc.h&gt;
    …
    PAVC_COMMAND_IRB  AvcIrb;
    …
    AvcIrb = ExAllocatePoolWithTag(NonPagedPool, sizeof(AVC_COMMAND_IRB), 'C/VA');
    …
    RtlZeroMemory(AvcIrb, sizeof(AVC_COMMAND_IRB));

#ifdef __cplusplus
    AvcIrb-&gt;Common.Function = AVC_FUNCTION_COMMAND;
#else
    AvcIrb-&gt;Function = AVC_FUNCTION_COMMAND;
#endif
    /*++ Do this to override the default timeout and retry values
    AvcIrb-&gt;TimeoutFlag = 1;
    AvcIrb-&gt;RetryFlag = 1;
    AvcIrb-&gt;Timeout.Quadpart = DEFAULT_AVC_TIMEOUT * 5;
    AvcIrb-&gt;Retries = 1;
    --*/
    AvcIrb-&gt;CommandType = AVC_CTYPE_CONTROL;
    AvcIrb-&gt;Opcode = Opcode;
    AvcIrb-&gt;OperandLength = 1;
    AvcIrb-&gt;Operand[0] = Operand;</PRE>

<P>For the list of available functions and their associated structure definitions, see <A HREF="avcref_1goj.htm">AV/C Protocol Driver Function Codes</A>, <A HREF="avcref_51v7.htm">AV/C Structures</A> and <A HREF="avcref_7w6r.htm">AV/C Enumerations</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Allocating%20and%20Initializing%20an%20IRB"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
