<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KS_ANALOGVIDEOINFO</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KS_ANALOGVIDEOINFO">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ks_analogvideoinfo_ks"></A>KS_ANALOGVIDEOINFO</H1>

<P>The KS_ANALOGVIDEOINFO structure describes an analog video stream.</P>

<PRE class=syntax>typedef struct tagKS_AnalogVideoInfo {
    RECT            rcSource;
    RECT            rcTarget;
    DWORD           dwActiveWidth;
    DWORD           dwActiveHeight;
    REFERENCE_TIME  AvgTimePerFrame;
} KS_ANALOGVIDEOINFO, *PKS_ANALOGVIDEOINFO;</PRE>

<H4>Members</H4>

<DL>
<DT><B>rcSource</B></DT>

<DD>Specifies a rectangle that selects the portion of the active video signal to use. Specifying valid values for this member effectively defines a clipping rectangle.</DD>

<DT><B>rcTarget</B></DT>

<DD>Specifies a rectangle that indicates what part of the target buffer should be used.</DD>

<DT><B>dwActiveWidth</B></DT>

<DD>Specifies the width active incoming video signal. For example, this value might be set to 720 (ITUR-601 active samples per line).</DD>

<DT><B>dwActiveHeight</B></DT>

<DD>Specifies the height of the active incoming video signal. For example, this value might be set to 480.</DD>

<DT><B>AvgTimePerFrame</B></DT>

<DD>Specifies the average time per frame in 100-nanosecond units.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ksmedia.h</I>. Include <I>ksmedia.h</I>.</P>

<H4>Comments</H4>

<P>A source filter can request that the sink filter take only a section of the video by providing values that effectively define a clipping rectangle in the <B>rcSource</B> member. However, if the sink filter does not check for the clipping rectangle on connection, the sink filter simply renders all of the video, effectively ignoring any clipping information passed from the source filter to the sink filter.</P>

<P>Ideally, a sink filter checks <B>rcSource</B> and if the sink filter does not support image extraction and the rectangle is <I>not</I> empty, then it rejects the connection. A filter should use the Win32 function <B>SetRectEmpty</B> to reset a rectangle to all zeroes (and <B>IsRectEmpty</B> to later check the rectangle).</P>

<P>The <B>rcTarget</B> member specifies the destination rectangle for the video. Most source filters set this member to all zeroes. A downstream filter can request that the video be placed in a particular area of the buffers it supplies. In this case, it calls the Win32 function <B>QueryAccept</B> with a nonempty target.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KS_ANALOGVIDEOINFO"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
