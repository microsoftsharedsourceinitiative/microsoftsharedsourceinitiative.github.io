<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EventHandler</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EventHandler">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_eventhandler_ks"></A>EventHandler</H1>

<P>An <I>EventHandler </I>routine processes event requests.</P>

<PRE class=syntax><B>typedef
NTSTATUS 
  (*PCPFNEVENT_HANDLER)
    IN PPCEVENT_REQUEST  </B><I>EventRequest</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>EventRequest</I></DT>

<DD>Pointer to an initialized <A HREF="audpc-struct_2kkz.htm">PCEVENT_REQUEST</A> structure</DD>
</DL>

<H4>Return Value</H4>

<P>The event handler returns STATUS_SUCCESS if the call was successful. Otherwise, it returns an appropriate error code.</P>

<H4>Headers</H4>

<P>Declared in <I>portcls.h</I>. Include <I>portcls.h</I>.</P>

<H4>Comments</H4>

<P>Each event that a miniport driver exposes is associated with an event handler. The purpose of the event handler is to process event requests from the port driver and its clients. The <I>EventRequest</I> structure passed as an input parameter to the handler contains information indicating the filter, pin, and node information necessary to determine the target of the event request. This is the same information that is provided with property requests.</P>

<P>The miniport driver exposes its event handlers through its <A HREF="audmp-routines_5k1f.htm"><B>IMiniport::GetDescription</B></A> method. This method outputs a descriptor structure (see <A HREF="audpc-struct_0otv.htm">PCFILTER_DESCRIPTOR</A>) that defines the filter that the miniport driver and its associated port driver implement together. This structure contains a pointer to the miniport driver's automation table (see <A HREF="audpc-struct_3nlf.htm">PCAUTOMATION_TABLE</A>), which in turn contains a pointer to an array of the miniport driver's events. Each array element is a <A HREF="audpc-struct_3j1v.htm">PCEVENT_ITEM</A> structure and contains a PCPFNEVENT_HANDLER function pointer to the handler for the event.</P>

<H4>See Also</H4>

<P><A HREF="audmp-routines_3w37.htm"><B>IPortEvents::AddEventToEventList</B></A>, <A HREF="audmp-routines_5e7n.htm"><B>IPortEvents::GenerateEventList</B></A>, <A HREF="audpc-struct_2kkz.htm">PCEVENT_REQUEST</A>, <A HREF="audmp-routines_5k1f.htm"><B>IMiniport::GetDescription</B></A>, <A HREF="audpc-struct_0otv.htm">PCFILTER_DESCRIPTOR</A>, <A HREF="audpc-struct_3nlf.htm">PCAUTOMATION_TABLE</A>, <A HREF="audpc-struct_3j1v.htm">PCEVENT_ITEM</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EventHandler"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
