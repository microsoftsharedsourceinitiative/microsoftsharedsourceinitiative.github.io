<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Properties of Audio Filters, Pins, and Nodes</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Properties of Audio Filters and Pins and Nodes">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_properties_of_audio_filters_pins_and_nodes_ksg"></A>Properties of Audio Filters, Pins, and Nodes</H3>

<P>Clients of a WDM audio driver can send <I>get</I>- and <I>set</I>-property requests (KSPROPERTY_TYPE_GET and KSPROPERTY_TYPE_SET) to the filters and pins that the driver has instantiated. For information about sending IOCTL_KS_PROPERTY requests to filters and pins, see <A HREF="ks-overview_1uhz.htm">KS Properties</A>.</P>

<P>WDM audio drivers support the four types of properties that are shown in the table below.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=43%>Property Type </TH>
<TH align=left width=57%>Target of Property Request</TH>
</TR>

<TR VALIGN="top">
<TD width=43%>Filter property</TD>
<TD width=57%>Filter instance</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>Pin property</TD>
<TD width=57%>Pin instance</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>Filter node property</TD>
<TD width=57%>Filter instance + node ID</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>Pin node property</TD>
<TD width=57%>Pin instance + node ID</TD>
</TR>
</TABLE><BR>

<P>A <I>filter property </I>represents a capability or control-state setting that belongs to a filter instance. A <I>set</I>-property request for a filter property is sent to a particular filter instance and affects the state of that filter as a whole.</P>

<P>A <I>pin property </I>represents a capability or control-state setting that belongs to an individual pin (or equivalently, a data stream) instance on a filter. In general, a <I>set</I>-property request to a pin affects only the state of the target pin, not the filter as a whole. However, this rule is occasionally broken. For example, when the <A HREF="aud-prop_4aib.htm">KSPROPERTY_AUDIO_CHANNEL_CONFIG</A> property is set on one pin instance, it affects the channel configuration for the entire filter. </P>

<P>When sending a filter property request, the target filter is specified by its instance handle (see <A HREF="aud-design_4u93.htm">Filter Factories</A>). Similarly, when sending a pin property request, the target pin is specified by its instance handle (see <A HREF="aud-design_7ixz.htm">Pin Factories</A>). Either type of request contains a <A HREF="ks-struct_6jlf.htm">KSPROPERTY</A> structure that specifies the following:

<UL>
	<LI>A GUID that identifies the property set.</LI>

	<LI>An index that identifies a property within the specified property set.</LI>

	<LI>A flag that indicates the type of property request.</LI>
</UL>

<P>Related properties are gathered together to form a property set. A particular property is specified by its property set and by an index that identifies its position within that set.</P>

<P>Nodes can also have properties. A <I>node property </I>request contains a <A HREF="aud-prop_5n3n.htm">KSNODEPROPERTY</A> structure, which combines a KSPROPERTY structure and a node ID.</P>

<P>A <I>filter node property </I>is a property of a node in a filter. A filter node property request specifies the target node with both a filter handle and a node ID. Similarly, a <I>pin node property </I>is a property of a node on a pin. That is, the node lies on a data path that begins or ends on a particular pin. A pin node property request specifies the target node with both a pin handle a node ID. </P>

<P>A filter can contain two or more nodes that have the same node ID. For example, in the case of a filter that performs mixing, the mixer inputs might all be instances of a sink pin from the same pin factory, and all of the pin instances can have volume nodes (see <A HREF="aud-prop_9eb7.htm">KSNODETYPE_VOLUME</A>) that share the same node ID. A node on a particular data path is specified by the combination of a node ID and a pin instance handle.</P>

<P>A pin node property belongs to a node that is associated with a particular pin instance. In the case of a filter that contains a SUM or MUX node (see <A HREF="aud-prop_8isz.htm">KSNODETYPE_SUM</A> and <A HREF="aud-prop_68tv.htm">KSNODETYPE_MUX</A>), the following rules apply:

<UL>
	<LI>If the property belongs to a node that lies downstream from a sink (input) pin and upstream from the SUM or MUX node, the property request is sent to the sink pin.</LI>

	<LI>If the property belongs to a node that lies downstream from a SUM or MUX node and upstream from a source (output) pin, the property request is sent to the source pin. (Also, a property request for a SUM or MUX node is sent to the source pin.)</LI>
</UL>

<P>With these conventions, a particular node on a particular data path can be identified uniquely.</P>

<P>In contrast, a filter node property represents the default value for a node property. When instantiating a pin, the driver sets the properties for the pin's nodes to their default values. A filter node <I>set</I>-property request changes the default value that is used for the specified property and node ID. The request has no effect on pins that have already been instantiated. It affects only future pin instantiations.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Properties%20of%20Audio%20Filters,%20Pins,%20and%20Nodes"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
