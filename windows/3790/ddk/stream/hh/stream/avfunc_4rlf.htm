<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsStreamPointerAdvance</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsStreamPointerAdvance">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ksstreampointeradvance_ks"></A>KsStreamPointerAdvance</H1>

<P>The<B> KsStreamPointerAdvance </B>function<B> </B>advances a stream pointer to the next data frame.</P>

<PRE class=syntax><B>NTSTATUS
  KsStreamPointerAdvance(
    IN PKSSTREAM_POINTER  </B><I>StreamPointer</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>StreamPointer</I></DT>

<DD>Pointer to a <A HREF="avstruct_9hyr.htm">KSSTREAM_POINTER</A> structure representing the stream pointer to advance to reference the next available data frame.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>KsStreamPointerAdvance </B>returns STATUS_SUCCESS to indicate a successful advancement. It returns an error code otherwise. STATUS_DEVICE_NOT_READY is the most often returned error code and often indicates that locking the stream pointer after advancement failed. In other words, <I>StreamPointer</I> references the last frame in the queue.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>This function is available in Windows&nbsp;XP and DirectX&nbsp;8.0 and later.</P>

<P>If <I>StreamPointer</I> is locked at call-time, AVStream unlocks it before advancing it. Once advanced, the stream pointer is placed back into its original state (locked or unlocked) on the new frame.</P>

<P>An attempt to advance a stream pointer that is unlocked always succeeds and returns STATUS_SUCCESS. Since the stream pointer is not locked, there is no way to determine if the stream pointer references actual data. The minidriver must attempt a lock to determine if the newly advanced stream pointer references a data frame or not.</P>

<P>Also see <A HREF="avsover_0dgn.htm">Stream Pointers</A>.</P>

<P><B>KsStreamPointerAdvance </B>must be called at IRQL &lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="avfunc_7ohf.htm"><B>KsStreamPointerLock</B></A>,<B> <A HREF="avfunc_9pgz.htm">KsStreamPointerUnlock</A></B>, <A HREF="avfunc_5sc3.htm"><B>KsStreamPointerAdvanceOffsets</B></A>, <A HREF="avfunc_8qsz.htm"><B>KsStreamPointerAdvanceOffsetsAndUnlock</B></A>, <A HREF="avstruct_9hyr.htm">KSSTREAM_POINTER</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsStreamPointerAdvance"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
