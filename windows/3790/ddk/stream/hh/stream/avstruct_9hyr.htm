<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KSSTREAM_POINTER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KSSTREAM_POINTER">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ksstream_pointer_ks"></A>KSSTREAM_POINTER</H1>

<P>The KSSTREAM_POINTER structure is the basic AVStream pointer into a stream.</P>

<PRE class=syntax>typedef struct {
  PVOID  Context;
  PKSPIN  Pin;
  PKSSTREAM_HEADER  StreamHeader;
  PKSSTREAM_POINTER_OFFSET  Offset;
  KSSTREAM_POINTER_OFFSET  OffsetIn;
  KSSTREAM_POINTER_OFFSET  OffsetOut;
} KSSTREAM_POINTER, *PKSSTREAM_POINTER;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Context</B></DT>

<DD>Pointer to client-requested context information. The leading edge and trailing edge stream pointers have this member set to NULL. Cloned stream pointers can specify that they wish to have context information via the mechanism described in <A HREF="avfunc_8t6b.htm"><B>KsStreamPointerClone</B></A>. </DD>

<DT><B>Pin</B></DT>

<DD>Pointer to the <A HREF="avstruct_5s4z.htm">KSPIN</A> structure to which this stream pointer belongs.</DD>

<DT><B>StreamHeader</B></DT>

<DD>Pointer to the stream header object for the data frame that this stream pointer currently points to. See <A HREF="ks-struct_7l4j.htm">KSSTREAM_HEADER</A> for more information.</DD>

<DT><B>Offset</B></DT>

<DD>Pointer to a structure of type <A HREF="avstruct_7b1v.htm">KSSTREAM_POINTER_OFFSET</A>. Points to either <B>OffsetIn</B> or <B>OffsetOut</B> depending on whether the pin to which this stream pointer belongs is an input pin or output pin.</DD>

<DT><B>OffsetIn</B></DT>

<DD>Specifies a structure of type <A HREF="avstruct_7b1v.htm">KSSTREAM_POINTER_OFFSET</A> describing the data currently pointed to by the stream pointer.</DD>

<DT><B>OffsetOut</B></DT>

<DD>Specifies a structure of type <A HREF="avstruct_7b1v.htm">KSSTREAM_POINTER_OFFSET</A>. Use this member to output data on an output pin.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>This structure is available in Windows XP and later operating systems and in DirectX 8.0 and later versions.</P>

<P>A queue object for a stream has at least one hard-defined stream pointer: the leading-edge stream pointer. This pointer normally points to the newest unprocessed data frame in the queue. Queues for pins that specify KSPIN_FLAG_DISTINCT_TRAILING_EDGE in the relevant <A HREF="avstruct_1fw3.htm">KSPIN_DESCRIPTOR_EX</A> also have a trailing-edge stream pointer. For more information, see <A HREF="avsover_3h2f.htm">Leading and Trailing Edge Stream Pointers</A>.</P>

<P>The queue can have any number of stream pointers associated with it; these can be created with the <A HREF="avfunc_8t6b.htm"><B>KsStreamPointerClone</B></A> function. Stream pointers place references on the frames they point to. Also, any data frame in the window between the leading edge stream pointer and the trailing edge stream pointer has a reference on it as a result of being in that window. As long as a data frame has more than one reference on it, it is guaranteed to leave the queue and be completed.</P>

<P>Stream pointers can be in one of two states: unlocked and locked. An unlocked stream pointer is not guaranteed to actually reference an existing data frame within the queue. In order to access the data that you believe the pointer points at, it must be locked. Further, data frames pointed to by an unlocked stream pointer can be cancelled; the client can receive notification of cancellation through the mechanism described in <B>KsStreamPointerClone</B>. Locked stream pointers are guaranteed to reference data in the queue. Data frames pointed to by locked stream pointers cannot be cancelled. For more information, see <A HREF="avsover_6nqf.htm">Locking and Unlocking Stream Pointers</A>.</P>

<P>When a minidriver is finished with a particular stream pointer, it should call <A HREF="avfunc_4awj.htm"><B>KsStreamPointerDelete</B></A> to delete the pointer and release a reference on the pointed-to frame. The leading-edge and trailing-edge stream pointers cannot be deleted. Unlock these stream pointers when they are not in use.</P>

<P>For more general conceptual information on stream pointers, see <A HREF="avsover_0dgn.htm">Stream Pointers</A>.</P>

<H4>See Also</H4>

<P><A HREF="ks-struct_7l4j.htm">KSSTREAM_HEADER</A>, <A HREF="avstruct_7b1v.htm">KSSTREAM_POINTER_OFFSET</A>, <A HREF="avfunc_8t6b.htm"><B>KsStreamPointerClone</B></A><B>, <A HREF="avfunc_4awj.htm">KsStreamPointerDelete</A>, <A HREF="avfunc_7ohf.htm">KsStreamPointerLock</A>, <A HREF="avfunc_9pgz.htm">KsStreamPointerUnlock</A>, <A HREF="avfunc_4rlf.htm">KsStreamPointerAdvance</A>, <A HREF="avfunc_5sc3.htm">KsStreamPointerAdvanceOffsets</A>, <A HREF="avfunc_8qsz.htm">KsStreamPointerAdvanceOffsetsAndUnlock</A></B></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KSSTREAM_POINTER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
