<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KsPinGetTrailingEdgeStreamPointer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KsPinGetTrailingEdgeStreamPointer">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_kspingettrailingedgestreampointer_ks"></A>KsPinGetTrailingEdgeStreamPointer</H1>

<P>The<B> KsPinGetTrailingEdgeStreamPointer</B> function acquires the trailing edge stream pointer for the queue associated with the specified pin.</P>

<PRE class=syntax><B>PKSSTREAM_POINTER
  KsPinGetTrailingEdgeStreamPointer(
    IN PKSPIN  </B><I>Pin</I>,
<B>    IN KSSTREAM_POINTER_STATE  </B><I>State</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Pin</I></DT>

<DD>Pointer to the <A HREF="avstruct_5s4z.htm">KSPIN</A> for whose queue to return the trailing edge stream pointer.</DD>

<DT><I>State</I></DT>

<DD>Specifies the state in which to acquire the trailing edge stream pointer. Can be one of the following:

<DL>
<DT>KSSTREAM_POINTER_STATE_UNLOCKED</DT>

<DD>Acquire the leading edge stream pointer regardless of whether it references a data frame or not. 

<P>No attempts can be made to access any data associated with the pointer until the pointer is locked. Also note that frames associated with an unlocked stream pointer can be cancelled.
</DD>

<DT>KSSTREAM_POINTER_STATE_LOCKED</DT>

<DD>Acquire and lock the leading edge stream pointer. If no data frame is associated with the stream pointer, return NULL. If a non-null pointer is returned, it is a locked stream pointer and has a data frame associated with it. Frames associated with a locked stream pointer <B>cannot</B> be cancelled. </DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<P><B>KsPinGetTrailingEdgeStreamPointer</B> returns either a pointer to a <A HREF="avstruct_9hyr.htm">KSSTREAM_POINTER</A> structure representing the trailing edge stream pointer or NULL. A return value of NULL can indicate that there is no trailing edge for the queue associated with the pin. In this case, the pin descriptor probably does not specify that the pin should have a distinct trailing edge. Alternatively, NULL can indicate that there is no queue associated with the pin. In this case, the pin in question does not use the standard transport mechanism. A return value of NULL can also indicate that an attempt to lock the trailing edge failed. In other words, there is no data frame currently associated with the leading edge.</P>

<H4>Headers</H4>

<P>Declared in <I>ks.h</I>. Include <I>ks.h</I>.</P>

<H4>Comments</H4>

<P>This function is available in Windows&nbsp;XP and DirectX&nbsp;8.0 and later.</P>

<P>The trailing edge stream pointer is a special pointer into the data stream that exists if and only if the pin descriptor for the pin specifies a distinct trailing edge. If this pointer exists, it points to the oldest data in the queue unless specifically advanced by a <B>KsStreamPointerAdvance* </B>or a <A HREF="avfunc_9pgz.htm"><B>KsStreamPointerUnlock</B></A> call. Older data can exist in the queue also if cloned stream pointers exist for frames older than the one pointed to by the trailing edge.</P>

<P>Data frames that reside in the window between the leading edge stream pointer and the trailing edge stream pointer have at least one reference count and thus will not leave the queue and be completed until they exit the window as a result of the advancement of the trailing edge. Note that frames between the leading edge and trailing edge are <B>not</B> locked by default and therefore can be cancelled.</P>

<P><B>KsPinGetTrailingEdgeStreamPointer</B> is mostly of use in pin-centric filters. For more information, see <A HREF="avsover_4krr.htm">Pin-Centric Processing</A> and <A HREF="avsover_702v.htm">Filter-Centric Processing</A>.</P>

<P><B>KsPinGetTrailingEdgeStreamPointer</B> will not work unless the pin descriptor for the pin specifies that the queue is to have a distinct trailing edge by setting the KSPIN_FLAG_DISTINCT_TRAILING_EDGE flag.</P>

<P><B>KsPinGetTrailingEdgeStreamPointer </B>must be called at IRQL &lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="avfunc_7cj7.htm"><B>KsPinGetLeadingEdgeStreamPointer</B></A>, <A HREF="avfunc_7ohf.htm"><B>KsStreamPointerLock</B></A>, <A HREF="avfunc_9pgz.htm"><B>KsStreamPointerUnlock</B></A>, <A HREF="avfunc_4rlf.htm"><B>KsStreamPointerAdvance</B></A>, <A HREF="avfunc_8qsz.htm"><B>KsStreamPointerAdvanceOffsetsAndUnlock</B></A>, <A HREF="avfunc_8t6b.htm"><B>KsStreamPointerClone</B></A>, <A HREF="avfunc_4awj.htm"><B>KsStreamPointerDelete</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KsPinGetTrailingEdgeStreamPointer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
