<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Implementing the IAdapterPowerManagement Interface</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Implementing the IAdapterPowerManagement Interface">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_starting_a_device_kg">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_devicestate_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_implementing_the_iadapterpowermanagement_interface_ksg"></A>Implementing the IAdapterPowerManagement Interface</H3>

<P>When implementing the <A HREF="audmp-routines_4243.htm"><B>IAdapterPowerManagement</B></A> interface for your driver, refer to the implementation of the <B>CAdapterCommon</B> class in the sample audio drivers in the DDK. This class handles device interrupts and performs other functions that are common to all audio adapter drivers. Your adapter's <B>CAdapterCommon</B> class should inherit from the <B>IAdapterPowerManagement</B> interface and support this interface in its <B>NonDelegatingQueryInterface</B> method. (For details on nondelegating interfaces, see the description of the <B>INonDelegatingUnknown</B> interface in the MSDN library.)</P>

<P>You can use the IMP_IAdapterPowerManagement definition from the <I>portcls.h </I>header file to add the function declarations for the <B>IAdapterPowerManagement</B> methods <B>PowerChangeState</B>, <B>QueryPowerChangeState</B>, and <B>QueryDeviceCapabilities</B> to your driver's <B>CAdapterCommon</B> class definition.</P>

<P>During the PortCls system driver's call to an adapter's device-startup routine (see <A HREF="JavaScript:hhobj_1.Click()">Starting a Device</A>), the adapter should register its <B>IAdapterPowerManagement</B> interface with PortCls by calling <A HREF="audpc-routines_3whf.htm"><B>PcRegisterAdapterPowerManagement</B></A>. For a code example, see the <B>StartDevice</B> function in the <I>sb16</I> sample adapter driver in the DDK. The first parameter that is passed to the <B>PcRegisterAdapterPowerManagement</B> call is an <B>IUnknown</B> pointer to the adapter driver's <B>CAdapterCommon</B> object. PortCls queries this object for its <B>IAdapterPowerManagement</B> interface.</P>

<P>When PortCls calls the adapter driver's <A HREF="audmp-routines_65rn.htm"><B>IAdapterPowerManagement::PowerChangeState</B></A> method to change the device's power state, the adapter driver should cache the device's new power state in the adapter's <B>CAdapterCommon</B> object. During the <B>CAdapterCommon::Init</B> call (see the implementation in the DDK's sample adapter drivers), the driver should set the initial power state to <B>PowerDeviceD0</B> (described in <A HREF="JavaScript:hhobj_2.Click()">DeviceState</A>) before returning from a successful initialization. The driver should write to the hardware only if it is known to be in an appropriate power state. In the <I>sb16</I> sample driver in the DDK, for example, the driver writes to the hardware only in the <B>PowerDeviceD0</B> state.</P>

<P>Before powering down in response to a <B>PowerChangeState</B> call, the adapter driver should place the audio outputs in a state that prevents speaker noise when the power switches off. The shutdown process might include ramping the DAC outputs to zero, turning off the DACs, and muting the MIDI lines, for example.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Implementing%20the%20IAdapterPowerManagement%20Interface"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
