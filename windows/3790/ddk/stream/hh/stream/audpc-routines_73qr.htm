<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>PcRegisterIoTimeout</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="PcRegisterIoTimeout">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_object_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_object_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Streaming&nbsp;Devices&nbsp;(Video&nbsp;and&nbsp;Audio):&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_pcregisteriotimeout_ks"></A>PcRegisterIoTimeout</H1>

<P>The <B>PcRegisterIoTimeout</B> function registers a driver-supplied I/O-timer callback routine for a specified device object. Once registered, the port-class driver calls the timer callback approximately once per second for as long as the device remains active.</P>

<PRE class=syntax><B>PORTCLASSAPI NTSTATUS NTAPI
  PcRegisterIoTimeout(
    IN PDEVICE_OBJECT  </B><I>pDeviceObject</I><B>,</B>
<B>    IN PIO_TIMER_ROUTINE  </B><I>pTimerRoutine</I><B>,</B>
<B>    IN PVOID  </B><I>pContext</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pDeviceObject</I></DT>

<DD>Pointer to a device object representing a device on which I/O operations can time out. This parameter must point to a system structure of type <A HREF="JavaScript:hhobj_1.Click()">DEVICE_OBJECT</A>. When calling the I/O-timer callback routine, the port class driver passes this pointer as the first of two call parameters. See the following <B>Comments</B> section.</DD>

<DT><I>pTimerRoutine</I></DT>

<DD>Pointer to the driver-supplied I/O-timer callback routine. See the following <B>Comments</B> section.</DD>

<DT><I>pContext</I></DT>

<DD>Pointer to the driver-specific context. When calling the I/O-timer callback routine, the port class driver passes this pointer as the second of two call parameters. See the following <B>Comments</B> section.</DD>
</DL>

<H4>Return Value</H4>

<P><B>PcRegisterIoTimeout</B> returns STATUS_SUCCESS if the call was successful. Otherwise, it returns an appropriate error code. The following table shows some of the possible error codes.</P>

<TABLE border=1 frame=box rules=all>

<TR VALIGN="top">
<TH align=left width=56%>Error Status</TH>
<TH align=left width=44%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=56%>STATUS_INSUFFICIENT_RESOURCES</TD>
<TD width=44%>Possibly indicates that a memory allocation failed inside the port-class driver.</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>STATUS_UNSUCCESSFUL</TD>
<TD width=44%>Possibly indicates that a timer callback with the same combination of device object, I/O-timer callback routine, and context is already registered.</TD>
</TR>
</TABLE><BR>

<H4>Headers</H4>

<P>Declared in <I>portcls.h</I>. Include <I>portcls.h</I>.</P>

<H4>Comments</H4>

<P>An adapter driver calls the <B>PcRegisterIoTimeout</B> function to enable a low-resolution watchdog timer. Drivers use this function primarily to monitor devices that have no means to generate an event themselves if they fail to complete a previously initiated I/O operation within some maximum time interval.</P>

<P>After the driver calls <B>PcRegisterIoTimeout</B>, the port-class driver calls the driver’s I/O-timer callback routine approximately once per second for as long as the device remains active. (The device is activated by an IRP_MN_START_DEVICE request and deactivated by an IRP_MN_STOP_DEVICE request.)</P>

<P>The driver can disable the timer by calling <A HREF="audpc-routines_0beb.htm"><B>PcUnregisterIoTimeout</B></A>.</P>

<P>Only one timer callback with a particular combination of device object, I/O-timer callback routine, and context can be registered at a time.</P>

<P>The meaning of the <I>pContext</I> parameter is determined by the adapter driver, but the driver typically sets this parameter to point to an object such as the miniport, miniport-stream, or adapter object.</P>

<P>The <I>pTimerRoutine </I>parameter is of type PIO_TIMER_ROUTINE, which is defined in <I>ntddk.h </I>to be</P>

<PRE>  VOID
    (*PIO_TIMER_ROUTINE) (
        IN PDEVICE_OBJECT DeviceObject,
        IN PVOID Context
        );</PRE>

<P>When the port-class driver calls the timer routine, it passes the same device-object and context parameters that the adapter driver earlier passed to <B>PcRegisterIoTimeout</B>.</P>

<P><B>PcRegisterIoTimeout</B> must be called at IRQL PASSIVE_LEVEL and must reside in nonpaged memory.</P>

<H4>See Also</H4>

<P><A HREF="audpc-routines_0beb.htm"><B>PcUnregisterIoTimeout</B></A>, <A HREF="JavaScript:hhobj_2.Click()">DEVICE_OBJECT</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: PcRegisterIoTimeout"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
