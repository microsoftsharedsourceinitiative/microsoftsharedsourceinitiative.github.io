<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IWiaMiniDrv::drvInitializeWia</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IWiaMiniDrv::drvInitializeWia">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Still&nbsp;Image&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iwiaminidrv_drvinitializewia_si"></A>IWiaMiniDrv::drvInitializeWia</H1>

<P>The <B>IWiaMiniDrv::drvInitializeWia</B> method initializes the minidriver and builds the driver item tree representing the device.</P>

<PRE class=syntax><B>HRESULT
  drvInitializeWia(
    IN BYTE</B>  <B>*</B><I>pWiasContext</I><B>,</B>
<I>    </I><B>IN LONG</B><I>  lFlags</I><B>,</B>
<I>    </I><B>IN BSTR </B><I> bstrDeviceID</I><B>,</B>
<I>    </I><B>IN BSTR </B><I> bstrRootFullItemName</I><B>,</B>
<I>    </I><B>IN IUnknown</B><I>  *pStiDevice</I><B>,</B>
<I>    </I><B>IN IUnknown</B><I>  *pIUnknownOuter</I><B>,</B>
<I>    </I><B>OUT IWiaDrvItem </B><I> **ppIDrvItemRoot</I><B>,</B>
<I>    </I><B>OUT IUnknown </B><I> **ppIUnknownInner</I><B>,</B>
<I>    </I><B>OUT LONG </B><I> *plDevErrVal</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pWiasContext</I></DT>

<DD>Pointer to a WIA item context.</DD>

<DT><I>lFlags</I></DT>

<DD>Is reserved. Set to zero.</DD>

<DT><I>bstrDeviceID</I></DT>

<DD>Specifies a string containing the device's unique identifier.</DD>

<DT><I>bstrRootFullItemName</I></DT>

<DD>Specifies a string containing the full name of the root item.</DD>

<DT><I>pStiDevice</I></DT>

<DD>Points to an <A HREF="stillimg_77l5.htm"><B>IStiDevice</B> interface</A>.</DD>

<DT><I>pIUnknownOuter</I></DT>

<DD>(Optional) Points to a memory location that can receive the address of an <B>IUnknown</B> interface. </DD>

<DT><I>ppIDrvItemRoot</I></DT>

<DD>Points to a memory location that will receive the address of a <A HREF="drvitem_62ll.htm"><B>IWiaDrvItem</B> interface</A>, the interface of the root item.</DD>

<DT><I>ppIUnknownInner</I></DT>

<DD>(Optional) Points to a memory location that can receive the address of an <B>IUnknown</B> interface. If the minidriver has functionality that is not accessible through the <B>IWiaMiniDrv</B> interface, the vendor can create a separate interface on the minidriver. This parameter provides access to that functionality.</DD>

<DT><I>plDevErrVal</I></DT>

<DD>Points to a memory location that will receive a status code for this method. If this method returns S_OK, the value stored will be zero. Otherwise, a minidriver-specific error code will be stored at the location pointed to by this parameter.
</DD>
</DL>

<H4>Return Value</H4>

<P>On success, the method should return S_OK and clear the device error value pointed to by <I>plDevErrVal</I>. If the method fails, it should return a standard COM error code and place a minidriver-specific error code value in the memory pointed to by <I>plDevErrVal</I>.</P>

<P>The value pointed to by <I>plDevErrVal</I> can be converted to a string by calling <A HREF="minidrv_0n8p.htm"><B>IWiaMiniDrv::drvGetDeviceErrorStr</B></A>.</P>

<H4>Headers</H4>

<P>Declared in <I>wiamindr.h</I>. Include <I>wiamindr.h</I>.</P>

<H4>Comments</H4>

<P>This method should initialize any private structures and create the driver item tree. For detailed information on the steps that minidrivers typically perform in this method, see <A HREF="wia_drv_basic_48bt.htm">Initializing the WIA Minidriver</A> and <A HREF="wia_drv_basic_9fs9.htm">Creating the WIA Driver Item Tree</A>.</P>

<P>The WIA service calls the <B>IWiaMiniDrv::drvInitializeWia</B> method in response to a client's call to <B>CreateDevice</B> (described in the Platform SDK documentation), which means that this method is called once for each new client connection. </P>

<P>For example, if the user right-clicks a WIA scanner icon in <B>My Computer</B>, the shell calls <B>CreateDevice</B>, which generates a call to the minidriver's <B>IWiaMiniDrv::drvInitializeWia</B> method. If the user then runs the WIA <B>Acquisition Wizard</B>, it also calls <B>CreateDevice</B>. Each time that <B>CreateDevice</B> is called, there is a corresponding call to the <B>IWiaMiniDrv::drvInitializeWia</B> method on the minidriver.</P>

<P>This method is available in Windows&nbsp;Me and in Windows&nbsp;XP and later.</P>

<H4>See Also</H4>

<P><A HREF="wiasfncs_49ex.htm"><B>wiasCreateDrvItem</B></A>, <A HREF="drvitem_06y1.htm"><B>IWiaDrvItem::AddItemToFolder</B></A>, <A HREF="minidrv_0n8p.htm"><B>IWiaMiniDrv::drvGetDeviceErrorStr</B></A>, <A HREF="minidrv_0azt.htm"><B>IWiaMiniDrv::drvUnInitializeWia</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IWiaMiniDrv::drvInitializeWia"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
