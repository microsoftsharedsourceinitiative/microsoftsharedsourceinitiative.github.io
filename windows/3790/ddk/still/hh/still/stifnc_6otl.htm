<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IStillImage::StiCreateInstance</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IStillImage::StiCreateInstance">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Still&nbsp;Image&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_istillimage_sticreateinstance_si"></A>IStillImage::StiCreateInstance</H1>

<P>The <B>IStillImage::StiCreateInstance</B> method creates an instance of the COM object that defines the <B>IStillImage</B> interface, and returns a pointer to the interface.</P>

<PRE class=syntax><B>HRESULT
  StiCreateInstance(</B>
    <B>HINSTANCE </B> <I>hinst</I><B>,</B>
    <B>DWORD </B> <I>dwVer</I><B>,</B>
    <B>PSTI</B>  <I>*ppSti</I><B>,</B>
    <B>LPUNKNOWN </B> <I>punkOuter</I><B>
    );</B> </PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hinst</I></DT>

<DD>Caller-supplied instance handle of the calling process. This handle is obtained by calling <B>GetModuleHandle</B>(NULL).</DD>

<DT><I>dwVer</I></DT>

<DD>Caller-supplied STI version number. This value must be STI_VERSION, defined in <I>sti.h</I>.</DD>

<DT><I>ppSti</I></DT>

<DD>Receives a pointer to the <B>IStillImage</B> interface.</DD>

<DT><I>punkOuter</I></DT>

<DD>Optional, caller-supplied pointer to the "controlling unknown" for object aggregation. See the following <B>Comments</B> section.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the operation succeeds, the method returns S_OK. Otherwise, it returns one of the STIERR-prefixed error codes defined in <I>stierr.h</I>.</P>

<H4>Headers</H4>

<P>Declared in <I>sti.h</I>. Include <I>sti.h</I>.</P>

<H4>Comments</H4>

<P>For an application to use the <B>IStillImage</B> interface, it must first call <B>IStillImage::StiCreateInstance</B> to get a pointer to the interface. The pointer received in <I>ppSti</I> is used subsequently when calling <B>IStillImage</B> methods, as illustrated in the following example:</P>

<PRE>PSTI pSti = NULL;
DWORD dwStiTotal = 0;     // total number of STI devices found
PVOID pStiInfo = NULL;    // STI device info buffer
HRESULT hres = StiCreateInstance(GetModuleHandle(NULL), STI_VERSION, &amp;pSti, NULL);
...
hhes = pSti-&gt;GetDeviceList(0, 0, &amp;dwStiTotal, &amp;pStiInfo);</PRE>

<P>If you want to create an aggregate COM object that includes <B>IStillImage</B>, you must supply a pointer to the "controlling unknown" in <I>punkOuter</I>. In most cases you will not be creating an aggregate object, so <I>punkOuter</I> should be NULL. Object aggregation and the controlling unknown are described in the Platform SDK documentation and in the <I>Component Object Model Specification</I>.</P>

<H4>See Also</H4>

<P><A HREF="stifnc_4otm.htm"><B>IStillImage::Release</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IStillImage::StiCreateInstance"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
