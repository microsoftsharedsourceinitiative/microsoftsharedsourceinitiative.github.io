<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Driver Capabilities</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Driver Capabilities">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Still&nbsp;Image&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_driver_capabilities_si"></A>Driver Capabilities</H1>

<P>All WIA minidrivers must define the device’s ability to handle notification events and commands. This section describes these minidriver capabilities.</P>

<P>The WIA minidriver is responsible for building a table listing all the events and commands it supports. The following diagram illustrates the capabilities table built by the WIA minidriver.</P>

<P><IMG SRC="images/wia_capabilitiestable.gif" ALT="" BORDER=0></P>

<P><B>WIA Minidriver Capabilities Table</B></P>

<P>The capabilities table is defined as an array of <A HREF="wiastrct_2o15.htm">WIA_DEV_CAP_DRV</A> structures. It is the minidriver’s responsibility to construct this array, and to return it to the WIA service when the WIA service calls the <A HREF="minidrv_3ctl.htm"><B>IWiaMiniDrv::drvGetCapabilities</B></A> method.</P>

<H4>Defining Supported Events and Commands</H4>

<P>WIA minidrivers must describe to the WIA service the events and commands that the device supports.</P>

<H4>Events</H4>

<P>An event is an action at the device level that must be reported to the driver. For example, a scanner might have a front panel button labeled <B>Scan</B>. When the user presses this button, he or she expects the scanner to begin scanning, or at the very least, that an application initiating the scan will be launched.</P>

<P>WIA supports two types of events:

<UL>
	<LI>Action Event — An action event launches the application that is registered to handle such an event. For example, the Microsoft Scanner and Camera Wizard is a registered handler for the Scan event (other applications can register for this event as well). When a driver sends the scan event, the WIA service launches the Microsoft Scanner and Camera Wizard to handle this event. This type of event is frequently referred to as a <I>persistent event</I>.</LI>

	<LI>Notification Event — A notification event is sent only to applications that are already running and have indicated to the WIA service that they are to receive this event. If the application is not running, it is not launched to handle this event.</LI>
</UL>

<P>It is possible (and common) for an event to be both an action event and a notification event.</P>

<H4>Commands</H4>

<P>A WIA device command is a request sent by the WIA service (on behalf of the imaging application) to the WIA minidriver, instructing the minidriver to perform some action. For example, a WIA camera minidriver may handle the <B>Take Picture</B> command. This command instructs the minidriver to order the digital camera device to take a new picture.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Driver%20Capabilities"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
