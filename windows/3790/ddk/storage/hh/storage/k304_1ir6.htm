<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TapeMiniTapeError</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TapeMiniTapeError">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_tapeminitapeerror_kr"></A>TapeMiniTapeError</H1>

<P><I>TapeMiniTapeError</I> provides device-specific error handling when an SRB is completed with an error status. This routine is optional.</P>

<PRE class=syntax><B>VOID 
  TapeMiniTapeError(
    IN PVOID</B>  <I>MinitapeExtension</I>  <B>OPTIONAL,</B>
<B>    IN PSCSI_REQUEST_BLOCK</B>  <I>Srb</I><B>,</B>
<B>    IN OUT PTAPE_STATUS</B>  <I>TapeStatus</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>MinitapeExtension</I></DT>

<DD>Pointer to the driver-specific minitape extension. This is NULL if the miniclass driver did not request a minitape extension when it initialized.</DD>

<DT><I>Srb</I></DT>

<DD>Pointer to the SRB for the operation that failed.</DD>

<DT><I>TapeStatus</I></DT>

<DD>Pointer to the <A HREF="k306_6cky.htm">TAPE_STATUS</A> set by the tape class driver. The tape miniclass driver can change the TAPE_STATUS or leave it unchanged.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>minitape.h</I>. Include <I>minitape.h</I>. </P>

<H4>Comments</H4>

<P>Most tape miniclass drivers do not provide a <I>TapeMiniTapeError</I> routine because the <A HREF="k306_6cky.htm">TAPE_STATUS</A> codes set by the tape class driver are appropriate.</P>

<P>For some devices, however, a tape miniclass driver can identify a more appropriate error code than the tape class driver. For example, if the tape class driver returns TAPE_STATUS_BUS_RESET, the tape miniclass driver might be able to determine that the real problem is more accurately represented by TAPE_STATUS_NO_MEDIA for some devices.</P>

<P>A tape miniclass driver optionally specifies an entry point for its <I>TapeMiniTapeError</I> routine in the TAPE_INIT_DATA_EX structure it passes to <A HREF="k303_9msy.htm"><B>TapeClassInitialize</B></A> from its <B>DriverEntry</B> routine. For such a miniclass driver, when an error occurs during a read, write, or device-control command, the tape class driver sets an appropriate TAPE_STATUS code and calls the miniclass driver's <I>TapeMiniTapeError</I> routine with the minitape extension, the failed SRB, and the TAPE_STATUS code that would be returned.</P>

<P><I>TapeMiniTapeError</I> determines whether to alter the status provided by the tape class driver based on the input parameters and its knowledge of the device. If the SRB_STATUS_AUTOSENSE_VALID bit is set in <B>Srb-&gt;SrbStatus</B>, then the SRB contains SCSI sense information at <B>SenseInfoBuffer</B>. The length of the buffer is <B>SenseInfoBufferLength</B>. The<B> </B><I>TapeMiniTapeError</I> routine should examine this information along with the <B>SrbStatus</B> and <B>ScsiStatus</B> in the SRB to determine whether or not to change the TAPE_STATUS returned.</P>

<H4>See Also</H4>

<P><A HREF="k304_6t9u.htm"><B>DriverEntry</B> of Tape Miniclass Driver</A>, <A HREF="k306_0hte.htm">SCSI_REQUEST_BLOCK</A>, <A HREF="k306_4rhu.htm">TAPE_INIT_DATA_EX</A>, <A HREF="k303_9msy.htm"><B>TapeClassInitialize</B></A>, <A HREF="k306_6cky.htm">TAPE_STATUS</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TapeMiniTapeError"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
