<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Returning Control from HwScsiFindAdapter</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Returning Control from HwScsiFindAdapter">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_returning_control_from_hwscsifindadapter_kg"></A>Returning Control from HwScsiFindAdapter</H2>

<P>When a legacy miniport driver’s <I>HwScsiFindAdapter</I> routine returns control, <B>ScsiPortInitialize</B> returns to the <B>DriverEntry</B> routine if the call(s) to <I>HwScsiFindAdapter</I> indicated that the miniport driver could not support an HBA. Otherwise, <B>ScsiPortInitialize</B> claims resources in the registry and sets up necessary system resources, such as interrupt and adapter objects, on behalf of the miniport driver. Then, it calls the miniport’s <I>HwScsiInitialize</I> routine, described in <A HREF="02mnport_6qsn.htm">SCSI Miniport Driver's HwScsiInitialize Routine</A>. </P>

<P>When a Plug and Play miniport driver’s <I>HwScsiFindAdapter</I> routine returns control, the Plug and Play Manager is allowed to unload the miniport if the call(s) to <I>HwScsiFindAdapter</I> indicated that the miniport driver could not support an HBA. Otherwise, the port driver connects interrupts (other resources having been claimed and set up before the <I>HwScsiFindAdapter</I> call) and calls the miniport driver’s <I>HwScsiInitialize</I> routine, which initializes the HBA. </P>

<P>Currently, in addition to the values it sets in the PORT_CONFIGURATION_INFORMATION, the port driver also checks the registry for user-set values that disable any or all of the following: 

<UL>
	<LI>Synchronous transfers on the HBA 
<P>The port driver ORs the default <B>SrbFlags</B> that it maintains for the HBA with SRB_FLAGS_DISABLE_SYNCH_TRANSFER. 
</LI>

	<LI>Bus-disconnect operations on the HBA 
<P>The port driver ORs the default <B>SrbFlags</B> with SRB_FLAGS_DISABLE_DISCONNECT. 
</LI>

	<LI>Tagged queuing 
<P>The port driver sets the <B>TaggedQueuing</B> Boolean that it maintains for the HBA to FALSE. 
</LI>

	<LI>Internal queuing of requests on the HBA 
<P>The port driver sets the <B>MultipleRequestPerLu</B> Boolean that it maintains about the HBA to FALSE. 
</LI>
</UL>

<P>Any of the immediately preceding “disable” values  in the registry overrides whatever the <I>HwScsiFindAdapter</I> routine sets in the PORT_CONFIGURATION_INFORMATION buffer. Note that temporarily disabling synchronous transfers, bus-disconnect operations, tagged queuing, and HBA internal request queuing can simplify using a debugger to trace request handling in a miniport driver that is under development. </P>

<P>Note also that the NT-based operating system port driver uses values from the PORT_CONFIGURATION_INFORMATION provided by a miniport’s <I>HwScsiFindAdapter</I> routine or from other sources (such as the registry for a legacy miniport) to fill in the IO_SCSI_CAPABILITIES data for use by storage class drivers, as described in <A HREF="03class_1k13.htm">Storage Class Drivers</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Returning%20Control%20from%20HwScsiFindAdapter"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
