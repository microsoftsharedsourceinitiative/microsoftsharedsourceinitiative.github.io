<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling Power Requests to Storage Peripherals</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Handling Power Requests to Storage Peripherals">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_query_power_dr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_set_power_dr">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_postartnextpowerirp_dr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pocalldriver_dr">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_startio_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_handling_power_requests_to_storage_peripherals_kg"></A>Handling Power Requests to Storage Peripherals</H2>

<P>A storage class driver is responsible for issuing device-specific commands to handle power requests. Most commonly, a storage class driver:

<UL>
	<LI>Blocks I/O to its device in response to a query-power request (IRP_MJ_POWER with <A HREF="JavaScript:hhobj_1.Click()">IRP_MN_QUERY_POWER</A>) if handling such I/O might prevent the driver from succeeding a set-power request in a reasonable amount of time </LI>

	<LI>Sets the power state of its device in response to a set-power request (IRP_MJ_POWER with <A HREF="JavaScript:hhobj_2.Click()">IRP_MN_SET_POWER</A>)</LI>

	<LI>Restarts I/O to its device in response to a set-power request to power up the device</LI>

	<LI>Forwards power requests to the next-lower driver. </LI>
</UL>

<P>Note that a driver must call <A HREF="JavaScript:hhobj_3.Click()"><B>PoStartNextPowerIrp</B></A> and <A HREF="JavaScript:hhobj_4.Click()"><B>PoCallDriver</B></A>, not <B>IoCallDriver</B>, to send power requests.</P>

<P>Unless the storage class driver has a <A HREF="JavaScript:hhobj_5.Click()"><I>StartIo</I></A> routine, it should lock the storage port driver's LU-specific queue (IRP_MJ_SCSI with SRB_FUNCTION_LOCK_QUEUE) before setting the device's power state, to block unsynchronized operations until the power operation (which may involve several steps) is complete. Any SRBs issued to handle the power operation should set SRB_FLAGS_BYPASS_LOCKED_QUEUE to make sure they reach the port driver. After the driver finishes setting the power state, it should unlock the queue (IRP_MJ_SCSI with SRB_FUNCTION_UNLOCK_QUEUE and SRB_FLAGS_BYPASS_LOCKED_QUEUE) so that the port driver can resume sending queued IRPs to the device once it has been powered up.</P>

<P>If a storage class driver has a <I>StartIo</I> routine, that routine handles synchronization so the class driver does not have to explicitly lock and unlock the port driver's LU-specific queue.</P>

<P>A class driver should not attempt to bypass a queue locked by another driver. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20Power%20Requests%20to%20Storage%20Peripherals"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
