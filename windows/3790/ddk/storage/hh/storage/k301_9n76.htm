<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ScsiPortInitialize</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ScsiPortInitialize">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_scsiportinitialize_kr"></A>ScsiPortInitialize</H1>

<P>For a legacy (nonPlug and Play) miniport driver, the <B>ScsiPortInitialize</B> routine sets up the PORT_CONFIGURATION_INFORMATION structure and calls the miniport driver's <A HREF="k302_9vsi.htm"><I>HwScsiFindAdapter</I></A> routine. <B>ScsiPortInitialize</B> also sets up system objects and resources on behalf of miniport drivers. For a Plug and Play miniport driver, <B>ScsiPortInitialize</B> stores the miniport driver's initialization data for future use. </P>

<PRE class=syntax><B>ULONG 
  ScsiPortInitialize(
    IN PVOID</B>  <I>Argument1</I><B>,</B>
<B>    IN PVOID</B>  <I>Argument2</I><B>,</B>
<B>    IN struct _HW_INITIALIZATION_DATA  *</B><I>HwInitializationData</I><B>,</B>
<B>    IN PVOID </B> <I>HwContext</I>  <B>OPTIONAL</B>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Argument1</I></DT>

<DD>Pointer to the driver object that the operating system passed to the miniport driver in the first argument of its <B>DriverEntry</B> routine.</DD>

<DT><I>Argument2</I></DT>

<DD>Pointer to some context information that the operating system passed to the miniport driver in the second argument of its <B>DriverEntry</B>.</DD>

<DT><I>HwInitializationData</I></DT>

<DD>Pointer to the initialization and configuration information supplied by <B>DriverEntry</B>.</DD>

<DT><I>HwContext</I></DT>

<DD>Specifies the address of a context value to be passed to the miniport driver's <A HREF="k302_9vsi.htm"><I>HwScsiFindAdapter</I></A> routine. Only legacy miniport drivers that scan the bus for HBAs rather than receiving configuration information from the port driver can use this parameter to store state between calls to <I>HwScsiFindAdapter</I>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>ScsiPortInitialize</B> returns a status value that is used as the return value from the miniport driver's <B>DriverEntry</B> routine.</P>

<H4>Headers</H4>

<P>Declared in <I>srb.h</I>. Include <I>miniport.h</I> and <I>scsi.h</I>. </P>

<H4>Comments</H4>

<P>Every miniport driver's <B>DriverEntry</B> routine must call <B>ScsiPortInitialize</B> after the miniport driver has first zeroed and then set up the HW_INITIALIZATION_DATA.</P>

<P>If a miniport driver can support HBAs on different types of I/O buses, such as both <B>Isa</B> and <B>MicroChannel</B> type I/O buses, the miniport driver should call <B>ScsiPortInitialize</B> for each supported interface type.</P>

<P>A miniport driver that calls <B>ScsiPortInitialize</B> more than once should check the value returned by <B>ScsiPortInitialize</B> at each call and save the lowest value for all its calls. The <B>DriverEntry</B> routine must return the lowest value when it returns control to the system. Miniport driver writers can make no assumptions about the values returned by <B>ScsiPortInitialize</B>. </P>

<H4>See Also</H4>

<P><A HREF="k302_9yk2.htm"><B>DriverEntry</B></A>, <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA</A>, <A HREF="k302_9vsi.htm"><I>HwScsiFindAdapter</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ScsiPortInitialize"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
