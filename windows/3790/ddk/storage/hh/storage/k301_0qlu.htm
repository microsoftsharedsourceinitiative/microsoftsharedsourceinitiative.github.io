<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>StorPortRegistryRead</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="StorPortRegistryRead">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_storportregistryread_kr"></A>StorPortRegistryRead</H1>

<P>The <B>StorPortRegistryRead</B> routine reads the registry data for the indicated device and value. </P>

<PRE class=syntax><B>BOOLEAN
StorPortRegistryRead (
</B>  <B>IN PVOID</B>  <I>HwDeviceExtension</I>,
  <B>IN PUCHAR</B>  <I>ValueName</I>,
  <B>IN ULONG</B>  <I>Global</I>,
  <B>IN ULONG</B>  <I>Type</I>,
  <B>IN PUCHAR</B>  <I>Buffer</I>,
  <B>IN PULONG</B>  <I>BufferLength</I>
  <B>)</B>;</PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the hardware device extension. This is a per-HBA storage area that the port driver allocates and initializes on behalf of the miniport driver. Miniport drivers usually store HBA-specific information in this extension, such as the state of the HBA and the HBA's mapped access ranges. This area is available to the miniport driver in the <B>DeviceExtension-&gt;HwDeviceExtension</B> member of the HBA's device object immediately after the miniport driver calls <A HREF="k301_2wqa.htm"><B>StorPortInitialize</B></A>. The port driver frees this memory when it removes the device. </DD>

<DT><I>ValueName</I></DT>

<DD>Pointer to a UCHAR that specifies the registry value name whose content is to be read. </DD>

<DT><I>Global</I></DT>

<DD>Indicates whether this operation is adapter specific or relates to all adapters. </DD>

<DT><I>Buffer</I></DT>

<DD>Pointer to the buffer where the retrieved registry information is to be reported. </DD>

<DT><I>BufferLength</I></DT>

<DD>Pointer to a ULONG that contains the size, in bytes, of the registry data returned. </DD>

<DT></DT>
</DL>

<H4>Return Value</H4>

<P>This routine returns a Boolean value of TRUE if the data pointed to by <I>ValueName</I> is successfully converted into ASCII and copied into the buffer. This routine returns FALSE in the event of an error. </P>

<H4>Headers</H4>

<P>Declared in <I>storport.h</I>. Include <I>storport.h</I>. </P>

<H4>Comments</H4>

<P>If the routine returns FALSE with an error of BUFFER_TOO_SMALL, the <I>BufferLength</I> parameter reflects the buffer size that should be used. If the routine returns FALSE with another error, BufferLength is set to zero.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: StorPortRegistryRead"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
