<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SCSI_REQUEST_BLOCK</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SCSI_REQUEST_BLOCK">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_exfreepool_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_exinterlockedfreetozone_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_scsi_request_block_kr"></A>SCSI_REQUEST_BLOCK</H1>

<PRE class=syntax>typedef struct _SCSI_REQUEST_BLOCK { 
  USHORT  Length; 
  UCHAR  Function; 
  UCHAR  SrbStatus; 
  UCHAR  ScsiStatus; 
  UCHAR  PathId; 
  UCHAR  TargetId; 
  UCHAR  Lun; 
  UCHAR  QueueTag; 
  UCHAR  QueueAction; 
  UCHAR  CdbLength; 
  UCHAR  SenseInfoBufferLength; 
  ULONG  SrbFlags; 
  ULONG  DataTransferLength; 
  ULONG  TimeOutValue; 
  PVOID  DataBuffer; 
  PVOID  SenseInfoBuffer; 
  struct _SCSI_REQUEST_BLOCK  *NextSrb; 
  PVOID  OriginalRequest; 
  PVOID  SrbExtension; 
  union {
      ULONG  InternalStatus;
      ULONG  QueueSortKey;
  }; 
  UCHAR  Cdb[16]; 
} SCSI_REQUEST_BLOCK, *PSCSI_REQUEST_BLOCK; </PRE>

<H4>Members</H4>

<DL>
<DT><B>Length</B></DT>

<DD>Specifies the size in bytes of this structure.</DD>

<DT><B>Function</B></DT>

<DD>Specifies the operation to be performed, which can be one of the following values:

<TABLE>

<TR VALIGN="top">
<TH align=left width=18%>Operation</TH>
<TH align=left width=82%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_EXECUTE_SCSI</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>A SCSI device I/O request should be executed on the target logical unit.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_ABORT_COMMAND</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>A SCSIMESS_ABORT message should be sent to cancel the request pointed to by the <B>NextSrb</B> member. If this is a tagged-queue request, a SCSIMESS_ABORT_WITH_TAG message should be used instead. If the indicated request has been completed, this request should be completed normally. Only the SRB <B>Function</B>, <B>PathId</B>, <B>TargetId</B>, <B>Lun</B>, and <B>NextSrb</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_RESET_DEVICE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The SCSI target controller should be reset using the SCSIMESS_BUS_DEVICE_RESET message. The miniport driver should complete any active requests for the target controller. Only the SRB <B>Function</B>, <B>TargetId,</B> and <B>PathId</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_LOGICAL_UNIT_RESET</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The logical unit should be reset, if possible. The HBA miniport driver should complete any active requests for the logical unit. Only the <B>Function</B>, <B>PathId</B>, <B>TargetId</B>, and <B>Lun</B> members of the SRB are valid. Storport supports this type of reset, but SCSI port does not. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_RESET_BUS</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The SCSI bus should be reset using the SCSIMESS_BUS_DEVICE_RESET message. A miniport driver receives this request only if a given request has timed out and a subsequent request to abort the timed-out request also has timed out. Only the SRB <B>Function</B> and <B>PathId</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_TERMINATE_IO</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>A SCSIMESS_TERMINATE_IO_PROCESS message should be sent to cancel the request pointed to by the <B>NextSrb</B> member. If the indicated request has already completed, this request should be completed normally. Only the SRB <B>Function</B>, <B>PathId</B>, <B>TargetId</B>, <B>Lun</B>, and <B>NextSrb</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_RELEASE_RECOVERY</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>A SCSIMESS_RELEASE_RECOVERY message should be sent to the target controller. Only the SRB <B>Function</B>, <B>PathId</B>, <B>TargetId</B>, and <B>Lun</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_RECEIVE_EVENT</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The HBA should be prepared to receive an asynchronous event notification from the addressed target. The SRB <B>DataBuffer</B> member indicates where the data should be placed.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_SHUTDOWN</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The system is being shut down. This request is sent to a miniport driver only if it set <B>CachesData</B> to TRUE in the PORT_CONFIGURATION_INFORMATION for the HBA. Such a miniport driver can receive several of these notifications before all system activity actually stops. However, the last shutdown notification will occur after the last start I/O. Only the SRB <B>Function</B>, <B>PathId</B>, <B>TargetId,</B> and <B>Lun</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_FLUSH</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The miniport should flush any cached data for the target device. This request is sent to the miniport driver only if it set <B>CachesData</B> to TRUE in the PORT_CONFIGURATION_INFORMATION for the HBA. Only the SRB <B>Function</B>, <B>PathId</B>, <B>TargetId,</B> and <B>Lun</B> members are valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_IO_CONTROL</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>The request is an I/O control request, originating in a user-mode application with a dedicated HBA. The SRB <B>DataBuffer</B> points to an SRB_IO_CONTROL header followed by the data area. The value in <B>DataBuffer</B> can be used by the driver, regardless of the value of <B>MapBuffers</B>. Only the SRB <B>Function</B>, <B>SrbFlags</B>, <B>TimeOutValue</B>, <B>DataBuffer</B>, and <B>DataTransferLength</B> members are valid, along with the <B>SrbExtension</B> member if the miniport driver requested SRB extensions when it initialized. If a miniport driver controls an application-dedicated HBA so it supports this request, the miniport should execute the request and notify the OS-specific port driver when the SRB has completed, using the normal mechanism of calls to <A HREF="k301_659u.htm"><B>ScsiPortNotification</B></A> with <B>RequestComplete</B> and <B>NextRequest</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_LOCK_QUEUE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Holds requests queued by the port driver for a particular logical unit, typically while a power request is being processed. Only the SRB <B>Length</B>, <B>Function</B>, <B>SrbFlags</B>, and <B>OriginalRequest</B> members are valid. When the queue is locked, only requests with <B>SrbFlags</B> ORed with SRB_FLAGS_BYPASS_LOCKED_QUEUE will be processed. SCSI miniport drivers do not process SRB_FUNCTION_LOCK_QUEUE requests. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FUNCTION_UNLOCK_QUEUE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Releases the port driver’s queue for a logical unit that was previously locked with SRB_FUNCTION_LOCK_QUEUE. The <B>SrbFlags</B> of the unlock request must be ORed with SRB_FLAGS_BYPASS_LOCKED_QUEUE. Only the SRB <B>Length</B>, <B>Function</B>, <B>SrbFlags</B>, and <B>OriginalRequest</B> members are valid. SCSI miniport drivers do not process SRB_FUNCTION_UNLOCK_QUEUE requests.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>SrbStatus</B></DT>

<DD>Returns the status of the completed request. This member should be set by the miniport driver before it notifies the OS-specific driver that the request has completed by calling <A HREF="k301_659u.htm"><B>ScsiPortNotification</B></A> with <B>RequestComplete</B>. The value of this member can be one of the following:

<TABLE>

<TR VALIGN="top">
<TH align=left width=18%>Status</TH>
<TH align=left width=82%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_PENDING</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request is in progress. The OS-specific port driver initializes <B>SrbStatus</B> to this value. A miniport driver should <I>never</I> set the <B>SrbStatus</B> member to this value.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_SUCCESS</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request was completed successfully.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_ABORTED</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request was aborted as directed by the port driver. A miniport driver sets this status in the <B>NextSrb</B> for a successful SRB_FUNCTION_ABORT_COMMAND request.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_ABORT_FAILED</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates an attempt to abort the request failed. Return this status for an SRB_FUNCTION_ABORT_COMMAND request when the specified request cannot be located.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_ERROR</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request was completed with an error in the SCSI bus status.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_BUSY</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the miniport or target device could not accept the request at this time. The OS-specific port driver will resubmit the request later.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_INTERNAL_ERROR</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates that the SCSI Port driver could not deliver the request to the miniport or target device. In such cases, status is recorded in <B>InternalStatus</B>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_INVALID_REQUEST</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the miniport driver does not support the given request.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_NO_DEVICE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the device did not respond.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_TIMEOUT</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request timed out.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_SELECTION_TIMEOUT</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the SCSI device selection timed out.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_COMMAND_TIMEOUT</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the target did not complete the command within the time limit.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_MESSAGE_REJECTED</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the target rejected a message. This is normally returned only for such message-type requests as SRB_FUNCTION_TERMINATE_IO.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_BUS_RESET</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates a bus reset occurred while this request was being executed.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_PARITY_ERROR</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates a parity error occurred on the SCSI bus and that a retry failed.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_REQUEST_SENSE_FAILED</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request-sense command failed. This is returned only if the HBA performs auto request sense and the miniport driver set <B>AutoRequestSense</B> to TRUE in the PORT_CONFIGURATION_INFORMATION for this HBA.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_NO_HBA</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the HBA does not respond.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_DATA_OVERRUN</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates that a data overrun or underrun error occurred. The miniport also must update the SRB’s <B>DataTransferLength</B> member to indicate how much data actually was transferred if an underrun occurs. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_UNEXPECTED_BUS_FREE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the target disconnected unexpectedly.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_PHASE_SEQUENCE_FAILURE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the HBA detected an illegal phase sequence failure error.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_REQUEST_FLUSHED</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request for status was stopped.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_BAD_FUNCTION</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the SRB <B>Function</B> code is not supported.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_INVALID_PATH_ID</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the <B>PathId</B> specified in the SRB does not exist.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_INVALID_TARGET_ID</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the <B>TargetID</B> value in the SRB is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_INVALID_LUN</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the <B>Lun</B> value in the SRB is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_ERROR_RECOVERY</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the request was completed with an error in the SCSI bus status and that the SCSI INITIATE RECOVERY message was received.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_AUTOSENSE_VALID</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates information returned in the <B>SenseInfoBuffer</B> <I>is</I> valid.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_STATUS_QUEUE_FROZEN</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>A miniport driver should <I>never</I> set the <B>SrbStatus</B> member to this value. The Windows NT port driver can set this value to inform a storage class driver that its queue of requests for a particular peripheral has been frozen. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>ScsiStatus</B></DT>

<DD>Returns the SCSI status that was returned by the HBA or target device. If the status is not SUCCESS, the miniport driver should set the <B>SrbStatus</B> member to SRB_STATUS_ERROR.</DD>

<DT><B>PathId</B></DT>

<DD>Indicates the SCSI port or bus for the request. This value is zero-based.</DD>

<DT><B>TargetId</B></DT>

<DD>Indicates the target controller or device on the bus.</DD>

<DT><B>Lun</B></DT>

<DD>Indicates the logical unit number of the device.</DD>

<DT><B>QueueTag</B></DT>

<DD>Contains the queue-tag value assigned by the OS-specific port driver. If this member is used for tagged queuing, the HBA supports internal queuing of requests to LUs and the miniport driver set <B>TaggedQueueing</B> to TRUE in the PORT_CONFIGURATION_INFORMATION for this HBA.</DD>

<DT><B>QueueAction</B></DT>

<DD>Indicates the tagged-queuing message to be used when the SRB_FLAGS_QUEUE_ACTION_ENABLE flag is set. The value can be one of the following: SRB_SIMPLE_TAG_REQUEST, SRB_HEAD_OF_QUEUE_TAG_REQUEST, or SRB_ORDERED_QUEUE_TAG_REQUEST, as defined according to the SCSI specification.</DD>

<DT><B>CdbLength</B></DT>

<DD>Indicates the size in bytes of the SCSI-2 or later command descriptor block.</DD>

<DT><B>SenseInfoBufferLength</B></DT>

<DD>Indicates the size in bytes of the request-sense buffer.</DD>

<DT><B>SrbFlags</B></DT>

<DD>Indicates various parameters and options about the request. <B>SrbFlags</B> is read-only, except when SRB_FLAGS_UNSPECIFIED_DIRECTION is set and miniport drivers of slave DMA adapters are required to update SRB_FLAGS_DATA_IN or SRB_FLAGS_DATA_OUT. This member can have one or more of the following flags set:

<TABLE>

<TR VALIGN="top">
<TH align=left width=18%>Value</TH>
<TH align=left width=82%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_QUEUE_ACTION_ENABLE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates tagged-queue actions are to be enabled.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_DISABLE_AUTOSENSE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates that request-sense information should not be returned.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_DATA_IN</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates data will be transferred from the device to the system.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_DATA_OUT</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates data will be transferred from the system to the device.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_UNSPECIFIED_DIRECTION</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Defined for backward compatibility with the ASPI/CAM SCSI interfaces, this flag indicates that the transfer direction could be either of the preceding because both of the preceding flags are set. If this flag is set, a miniport driver should determine the transfer direction by examining the data phase for the target on the SCSI bus. If its HBA is a slave DMA device, such a miniport must update SRB_FLAGS_DATA_OUT or SRB_FLAGS_DATA_IN to the correct value before it calls <A HREF="k301_3ho2.htm"><B>ScsiPortIoMapTransfer</B></A>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_NO_DATA_TRANSFER</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates no data transfer with this request. If this is set, the flags SRB_FLAGS_DATA_OUT, SRB_FLAGS_DATA_IN, and SRB_FLAGS_UNSPECIFIED_DIRECTION are clear.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_DISABLE_SYNCH_TRANSFER</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the HBA, if possible, should perform asynchronous I/O for this transfer request. If synchronous I/O was negotiated previously, the HBA must renegotiate for asynchronous I/O before performing the transfer.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_DISABLE_DISCONNECT</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Indicates the HBA should not allow the target to disconnect from the SCSI bus during processing of this request.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_BYPASS_FROZEN_QUEUE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_NO_QUEUE_FREEZE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_IS_ACTIVE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_ALLOCATED_FROM_ZONE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers and is obsolete to new Windows NT class drivers. To a Windows NT legacy class driver, this indicates whether the SRB was allocated from a zone buffer. If this flag is set, the class driver must call <B>ExInterlockedFreeToZone</B> to release the SRB; otherwise, it must call <B>ExFreePool</B>. New class drivers should use lookaside lists rather than zone buffers.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_SGLIST_FROM_POOL</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers. To a Windows NT class driver, this indicates that memory for a scatter/gather list was allocated from nonpaged pool. If this flag is set, the class driver must call <B>ExFreePool</B> to release the memory after the SRB is completed. </TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_BYPASS_LOCKED_QUEUE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers. To the port driver, this flag indicates that the request should be processed whether or not the logical-unit queue is locked. A higher-level driver must set this flag to send an SRB_FUNCTION_UNLOCK_QUEUE request.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>SRB_FLAGS_NO_KEEP_AWAKE</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>&nbsp;</TD>
<TD width=82%>Is irrelevant to miniport drivers. A Windows NT class driver uses this flag to indicate to the port driver to report idle rather than powering up the device to handle this request.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>DataTransferLength</B></DT>

<DD>Indicates the size in bytes of the data buffer. If an underrun occurs, the miniport must update this member to the number of bytes actually transferred.</DD>

<DT><B>TimeOutValue</B></DT>

<DD>Indicates the interval in seconds that the request can execute before the OS-specific port driver might consider it timed out. Miniport drivers are not required to time requests because the port driver already does.</DD>

<DT><B>DataBuffer</B></DT>

<DD>Points to the data buffer. Miniport drivers should not use this value as a data pointer unless the miniport set <B>MapBuffers</B> to TRUE in the PORT_CONFIGURATION_INFORMATION for the HBA. In the case of SRB_FUNCTION_IO_CONTROL requests, however, miniport drivers can use this value as a data pointer regardless of the value of <B>MapBuffers</B>.</DD>

<DT><B>SenseInfoBuffer</B></DT>

<DD>Points to the request-sense buffer. A miniport driver is not required to provide request-sense data after a CHECK CONDITION. </DD>

<DT><B>NextSrb</B></DT>

<DD>Indicates the SCSI_REQUEST_BLOCK to which this request applies. Only a small subset of requests use a second SRB, for example SRB_FUNCTION_ABORT_COMMAND.</DD>

<DT><B>OriginalRequest</B></DT>

<DD>Points to the IRP for this request. This member is irrelevant to miniport drivers</DD>

<DT><B>SrbExtension</B></DT>

<DD>Points to the Srb extension. A miniport must not use this member if it set <B>SrbExtensionSize</B> to zero in the SCSI_HW_INITIALIZATION_DATA. The memory at <B>SrbExtension</B> is not initialized by the OS-specific port driver, and the miniport-determined data can be accessed directly by the HBA. The corresponding physical address can be obtained by calling <A HREF="k301_9m0i.htm"><B>ScsiPortGetPhysicalAddress</B></A> with the <B>SrbExtension</B> pointer.</DD>

<DT><B>InternalStatus</B></DT>

<DD>Used by the SCSI Port driver, instead of <B>SrbStatus</B>, to report the status of the completed request whenever the request can not be delivered to the miniport driver. In such cases, <B>SrbStatus</B> is set to SRB_STATUS_INTERNAL_ERROR. This member is used exclusively for communication between the SCSI Port and the class driver and should not be used by miniport drivers.</DD>

<DT><B>QueueSortKey</B></DT>

<DD>Specifies the offset from the start of the media or zero, depending on the type of the target device. </DD>

<DT><B>Cdb</B></DT>

<DD>Specifies the SCSI-2 or later command descriptor block to be sent to the target device. 
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>srb.h</I>. Include <I>srb.h</I>. </P>

<H4>Comments</H4>

<P>Windows NT storage class and filter drivers can send SRBs with the following <B>Function</B> values to the system port driver:

<UL>
	<LI>SRB_FUNCTION_CLAIM_DEVICE to indicate that the class driver supports a peripheral identified in the SRB by the <B>PathId</B>, <B>TargetId</B>, and <B>Lun</B> members.</LI>

	<LI>SRB_ATTACH_DEVICE to indicate that a filter driver, layered above a class driver, wants requests for a particular peripheral to be routed first to the filter driver.</LI>

	<LI>SRB_FUNCTION_RELEASE_DEVICE to indicate that a class driver is releasing its claim on a particular peripheral.</LI>

	<LI>SRB_FUNCTION_FLUSH_QUEUE to request cancellation of any requests currently queued in the port driver to a particular peripheral.</LI>

	<LI>SRB_FUNCTION_RELEASE_QUEUE to request that the port driver release a frozen queue of requests to a particular peripheral.</LI>
</UL>

<P>The preceding SRB_FUNCTION_<I>XXX</I>  are never set in SRBs sent to SCSI miniport drivers. SRB_FUNCTION_REMOVE_DEVICE is defined for use in future versions of the system. It, too, is never set in SRBs sent to SCSI miniport drivers. SRB_FUNCTION_WMI_REQUEST is valid only in SCSI_WMI_REQUEST_BLOCK. A storage class or filter driver uses this to send WMI requests to the port driver.</P>

<H4>See Also</H4>

<P><A HREF="JavaScript:hhobj_1.Click()"><B>ExFreePool</B></A>, <A HREF="JavaScript:hhobj_2.Click()"><B>ExInterlockedFreeToZone</B></A>, <A HREF="k306_5s1e.htm">HW_INITIALIZATION_DATA</A>, <A HREF="k306_2h4i.htm">PORT_CONFIGURATION_INFORMATION</A>, <A HREF="k306_5dma.htm">SCSI_WMI_REQUEST_BLOCK</A>, <A HREF="k301_9m0i.htm"><B>ScsiPortGetPhysicalAddress</B></A>, <A HREF="k301_2182.htm"><B>ScsiPortGetSrb</B></A>, <A HREF="k301_3ho2.htm"><B>ScsiPortIoMapTransfer</B></A>, <A HREF="k301_659u.htm"><B>ScsiPortNotification</B></A>, <A HREF="k306_5df6.htm">SRB_IO_CONTROL</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SCSI_REQUEST_BLOCK"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
