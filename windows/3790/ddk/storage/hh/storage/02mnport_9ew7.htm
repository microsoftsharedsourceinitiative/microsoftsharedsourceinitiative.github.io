<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SCSI Miniport Driver's HwScsiTimer Routine</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SCSI Miniport Driver's HwScsiTimer Routine">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_scsi_miniport_drivers_hwscsitimer_routine_kg"></A>SCSI Miniport Driver’s HwScsiTimer Routine</H1>

<P>A miniport driver that does not have an <I>HwScsiInterrupt</I> routine because it manages all HBA I/O operations by polling should have an <I>HwScsiTimer</I> routine. However, miniport drivers with <I>HwScsiInterrupt</I> routines frequently have <I>HwScsiTimer</I> routines as well. </P>

<P>While a miniport driver can call <B>ScsiPortStallExecution</B> to wait for a state change on the HBA, miniport drivers should <I>never</I> call this routine to wait for longer than one millisecond except, possibly, for an operation performed only when a miniport is initializing. <B>ScsiPortStallExecution</B> ties up the processor for the given interval, preventing other code in the system from doing useful work. </P>

<P>Instead of calling <B>ScsiPortStallExecution</B> with large input intervals and wasting many CPU cycles, a miniport driver should have an <I>HwScsiTimer</I> routine. One or more <I>HwScsiTimer</I> routines are particularly useful if the HBA does not generate a completion interrupt for every operation or if any commonly requested operation, such as a bus reset, takes longer than a millisecond. </P>

<P>After the HBA has been programmed for such an operation, the miniport driver calls <B>ScsiPortNotification</B> with the <I>NotificationType</I> <B>RequestTimerCall</B>, a pointer to its HBA-specific device extension containing context about the operation, its <I>HwScsiTimer</I> entry point, and a driver-determined interval. </P>

<P><B>ScsiPortNotification</B> synchronizes calls to the <I>HwScsiTimer</I> routine with those to the <I>HwScsiInterrupt</I> routine so that it cannot execute concurrently while the <I>HwScsiTimer</I> routine is running. </P>

<P><I>HwScsiTimer</I> is called once for each such call to <B>ScsiPortNotification</B>, which can be called from the <I>HwScsiTimer</I> routine itself. However, any call to <B>ScsiPortNotification</B> with the <I>NotificationType</I> <B>RequestTimerCall</B> overrides a preceding call for which the specified interval has not expired. That is, there is only one outstanding request to call a miniport’s <I>HwScsiTimer</I> routine at any given moment. </P>

<P>The interval passed in to <B>ScsiPortNotification</B> is in microseconds, and the minimum overhead for each call to an <I>HwScsiTimer</I> routine is approximately ten microseconds. An input interval of zero cancels the preceding request to call the <I>HwScsiTimer</I> routine, provided it has not been called or dispatched for execution on another processor in a NT-based SMP machine. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SCSI%20Miniport%20Driver's%20HwScsiTimer%20Routine"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
