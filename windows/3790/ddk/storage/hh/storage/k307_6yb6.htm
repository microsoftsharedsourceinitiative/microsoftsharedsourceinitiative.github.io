<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Storage I/O Requests</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Storage I/O Requests">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_major_function_codes_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_close_kr">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_create_kr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_device_control_kr">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_flush_buffers_kr">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_pnp_kr">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_power_kr">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_read_kr">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_shutdown_kr">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_system_control_kr">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_write_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_storage_i_o_requests_kr"></A>Storage I/O Requests</H1>

<P>Any driver that sets up device objects of type FILE_DEVICE_DISK, FILE_DEVICE_CD_ROM, FILE_DEVICE_DVD, FILE_DEVICE_TAPE, or FILE_DEVICE_CHANGER must handle certain major I/O request packets (IRPs) as appropriate for a particular type of device. </P>

<P>A storage class driver can optionally handle IRP_MJ_INTERNAL_DEVICE_CONTROL at the discretion of the driver writer. </P>

<P>The list that follows contains those major IRPs that storage drivers must handle. The list provides a brief description of each major IRP. For more complete descriptions of these IRPs, see <A HREF="JavaScript:hhobj_1.Click()">IRP Major Function Codes</A>.</P>

<UL>
	<LI>IRP_MJ_CLOSE
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - All mass storage drivers must handle this request. For a general description, see <A HREF="JavaScript:hhobj_2.Click()">IRP_MJ_CLOSE</A>.</LI>

	<LI><B>General Description</B> - Returns STATUS_SUCCESS to indicate that the driver has completed the request. </LI>

	<LI><B>When Called</B> - The handle of the file object that represents the target device object has been released. </LI>
</UL>
</LI>

	<LI>IRP_MJ_CREATE
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - All mass storage drivers must handle this request. For a general description, see <A HREF="JavaScript:hhobj_3.Click()">IRP_MJ_CREATE</A>.</LI>

	<LI><B>General Description</B> - Returns STATUS_SUCCESS to indicate that the device or partition exists. For a disk or CD-ROM device, this request opens the device as the target of I/O requests from the caller.</LI>

	<LI><B>When Called</B> - A higher-level driver is attempting to connect or attach one of its device objects to the target device object, or a user-mode process has attempted to open a file stored on the physical device, thereby causing a file system to carry out a mount operation.</LI>
</UL>
</LI>

	<LI>IRP_MJ_DEVICE_CONTROL
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - All mass storage drivers must handle this request. For a general description, see <A HREF="JavaScript:hhobj_4.Click()">IRP_MJ_DEVICE_CONTROL</A>.</LI>

	<LI><B>General Description</B> - Determined by the I/O control code set at <B>Parameters.DeviceIoControl.IoControlCode</B> in the driver's I/O stack location of the IRP.</LI>

	<LI><B>When Called</B> - A Win32 application has called <B>DeviceIoControl</B>, or a higher-level driver has set up such a request.</LI>
</UL>
</LI>

	<LI>IRP_MJ_FLUSH_BUFFERS
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - Drivers of devices with internal caches for data and drivers that maintain internal buffers for data must handle this request. For a general description, see <A HREF="JavaScript:hhobj_5.Click()">IRP_MJ_FLUSH_BUFFERS</A>.</LI>

	<LI><B>General Description</B> - Transfers any data cached in the device or in the driver's internal buffer(s) to system memory or out to the device. If the device or driver supports caching or buffering data, the driver must handle this request.</LI>

	<LI><B>When Called</B> - A file system or DTP application makes this request to ensure data integrity.</LI>
</UL>
</LI>

	<LI>IRP_MJ_PNP
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - Storage drivers that support Plug and Play must handle this request. For a general description, see <A HREF="JavaScript:hhobj_6.Click()">IRP_MJ_PNP</A>.</LI>

	<LI><B>General Description</B> - Determined by the minor function code set in the I/O stack location of the IRP.</LI>

	<LI><B>When Called</B> - The Plug and Play Manager sends this request to initiate a Plug and Play operation such as starting or stopping a device.</LI>
</UL>
</LI>

	<LI>IRP_MJ_POWER
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - Storage drivers that support power management must handle this request. For more information, see <A HREF="JavaScript:hhobj_7.Click()">IRP_MJ_POWER</A>.</LI>
</UL>
</LI>

	<LI>IRP_MJ_READ
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - Disk, CD-ROM, DVD, and tape drivers must handle this request. For a general description, see <A HREF="JavaScript:hhobj_8.Click()">IRP_MJ_READ</A>.</LI>

	<LI><B>General Description</B> - Transfers data from the device to system memory.</LI>

	<LI><B>When Called</B> - A user-mode application that has a handle for an opened file or a handle for the opened file object that represents the device has requested data. This request can also be issued by a  higher-level driver.</LI>
</UL>
</LI>

	<LI>IRP_MJ_SHUTDOWN
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - Disk and tape drivers must handle this request. For a general description, see <A HREF="JavaScript:hhobj_9.Click()">IRP_MJ_SHUTDOWN</A>.</LI>

	<LI><B>General Description</B> - Transfers any data cached in the device or in the driver's internal buffer(s) to system memory or out to the device before the system is shut down. If the device or driver supports caching or buffering data, the driver must handle this request. The <B>Status</B> field of the I/O Status Block is set to STATUS_SUCCESS when the data has been transferred.</LI>

	<LI><B>When Called</B> - The user has decided to shut down the system.</LI>
</UL>
</LI>

	<LI>IRP_MJ_SYSTEM_CONTROL
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - All storage drivers must support this request. For more information, see <A HREF="JavaScript:hhobj_10.Click()">IRP_MJ_SYSTEM_CONTROL</A>.</LI>
</UL>
</LI>

	<LI>IRP_MJ_WRITE
<UL>
	<LI><B>Drivers Required to Handle this IRP</B> - Disk and tape drivers must handle this request. For a general description, see <A HREF="JavaScript:hhobj_11.Click()">IRP_MJ_WRITE</A>.</LI>

	<LI><B>General Description</B> - Transfers data from system memory to the underlying device. The <B>Information</B> field of the I/O Status Block is set to the number of bytes transferred, whatever the <B>Status</B> field's value. Possible values are any of those returned for read requests, STATUS_MEDIA_WRITE_PROTECTED returned by drivers of removable-media devices, and STATUS_NOT_SUPPORTED returns by the system for drivers that have no DispatchWrite routine.</LI>

	<LI><B>Input</B> - Drivers of disk and tape devices generally use direct I/O, so the lowest-level driver transfers data using DMA or PIO from the buffer described by the MDL at <B>Irp-&gt;MdlAddress</B>.</LI>

	<LI><B>When Called</B> - A user-mode application that has a handle for an opened file or a handle for the opened file object that represents the device has requested data be written to the device. This request can also be issued by a higher-level driver. </LI>
</UL>
</LI>
</UL>

<P>Errors returned by these IRPs vary according to the device, the minor IRP number, and in the case of device control IRPs, the IOCTL value. Common errors include the following:</P>

<P>Device Errors</P>

<PRE>STATUS_INVALID_DEVICE_REQUEST
STATUS_NO_SUCH_DEVICE
STATUS_IO_TIMEOUT
STATUS_DEVICE_NOT_CONNECTED 
STATUS_IO_DEVICE_ERROR 
STATUS_DEVICE_NOT_READY 
STATUS_DEVICE_BUSY 
</PRE>

<P>Sector/Data Errors</P>

<PRE>STATUS_DEVICE_DATA_ERROR
STATUS_CRC_ERROR 
</PRE>

<P>and, by drivers of removable-media devices:</P>

<PRE>STATUS_NO_MEDIA_IN_DEVICE
STATUS_VERIFY_REQUIRED</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Storage%20I%2FO%20Requests"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
