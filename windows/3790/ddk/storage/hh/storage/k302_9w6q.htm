<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>HwScsiEnableInterruptsCallback</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="HwScsiEnableInterruptsCallback">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_hwscsienableinterruptscallback_kr"></A><I>HwScsiEnableInterruptsCallback</I></H1>

<P><I>HwScsiEnableInterruptsCallback</I> is called after a miniport’s <I>HwScsiInterrupt</I> routine disables interrupts on the HBA and calls <B>ScsiPortNotification </B>with the <I>NotificationType</I> <B>CallEnableInterrupts</B>. Miniport drivers of HBAs that require interrupt processing that takes more than 50 microseconds in the ISR should have a pair of <I>HwScsi..InterruptsCallback</I> routines.</P>

<PRE class=syntax><B>BOOLEAN 
  HwScsiEnableInterruptsCallback(
    IN PVOID </B> <I>DeviceExtension</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceExtension</I></DT>

<DD>Points to the miniport driver’s per-HBA storage area.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>HwScsiEnableInterruptsCallback</I> returns TRUE.</P>

<H4>Headers</H4>

<P>Include <I>miniport.h</I> and <I>scsi.h</I>. </P>

<H4>Comments</H4>

<P>All system interrupts are enabled when the <I>HwScsiEnableInterruptsCallback</I> routine gets control, except for interrupts from the HBA. Because the miniport’s <I>HwScsiInterrupt</I> routine disables interrupts on the HBA before it calls <B>ScsiPortNotification</B>, the <I>HwScsiEnableInterruptsCallback</I> routine should be optimized to run as quickly as possible.</P>

<P><I>HwScsiEnableInterruptsCallback</I> is responsible for completing the interrupt-driven I/O processing deferred by the <I>HwScsiInterrupt</I> routine, using the information it saved in the <I>DeviceExtension</I>. That is, <I>HwScsiEnableInterruptsCallback</I> completes the request that caused the interrupt to occur.</P>

<P>Then, <I>HwScsiEnableInterruptsCallback</I> calls <B>ScsiPortNotification</B> again with the <I>NotificationType</I> <B>CallDisableInterrupts</B> before it returns control.</P>

<P>For more information on the <I>HwScsiEnableInterruptsCallback</I> routine, see <A HREF="02mnport_35t3.htm">SCSI Miniport Driver’s HwScsiEnableInterruptsCallback Routine</A>.</P>

<H4>See Also</H4>

<P><A HREF="k302_2lki.htm"><I>HwScsiDisableInterruptsCallback</I></A>, <A HREF="k302_3wvm.htm"><I>HwScsiInterrupt</I></A>, <A HREF="k301_659u.htm"><B>ScsiPortNotification</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: HwScsiEnableInterruptsCallback"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
