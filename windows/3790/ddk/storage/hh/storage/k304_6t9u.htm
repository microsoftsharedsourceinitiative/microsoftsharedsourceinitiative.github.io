<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DriverEntry of Tape Miniclass Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DriverEntry of Tape Miniclass Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_driverentry_of_tape_miniclass_driver_kr"></A>DriverEntry of Tape Miniclass Driver</H1>

<P><B>DriverEntry</B> initializes a tape miniclass driver. This routine is required.</P>

<PRE class=syntax><B>ULONG 
  DriverEntry(
    IN PVOID </B> <I>Argument1</I><B>,</B>
<B>    IN PVOID </B> <I>Argument2</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Argument1</I></DT>

<DD>Pointer to a driver context that a tape miniclass driver passes to <A HREF="k303_9msy.htm"><B>TapeClassInitialize</B></A>. The format of the context information is OS-specific and must not be interpreted by portable tape miniclass drivers.</DD>

<DT><I>Argument2</I></DT>

<DD>Pointer to a second context structure that a tape miniclass driver passes to <B>TapeClassInitialize</B>. The format of the context information is OS-specific and must not be interpreted by portable tape miniclass drivers.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>DriverEntry</B> returns the value returned by its call to <B>TapeClassInitialize</B>.</P>

<H4>Headers</H4>

<P>Include <I>minitape.h</I>. </P>

<H4>Comments</H4>

<P><B>DriverEntry</B> is the initial entry point for a tape miniclass driver.</P>

<P>Since <B>TapeClassInitialize</B> performs most of the required driver initialization, the primary task of a tape miniclass driver's <B>DriverEntry</B> routine is to allocate and fill in a TAPE_INIT_DATA_EX structure with driver-specific constants and entry points.</P>

<P><B>DriverEntry</B> first must call <A HREF="k303_5zua.htm"><B>TapeClassZeroMemory</B></A> to clear the TAPE_INIT_DATA_EX structure. <B>DriverEntry</B> then sets the values and pointers in the structure. </P>

<P><B>DriverEntry</B> calls <B>TapeClassInitialize</B> and passes the address of TAPE_INIT_DATA_EX and the two pointers that were passed to <B>DriverEntry</B> (<I>Argument1</I> and <I>Argument2</I>). <B>TapeClassInitialize</B> completes driver initialization and returns status to the tape miniclass driver’s <B>DriverEntry</B> routine. <B>DriverEntry</B> returns the status that it received from <B>TapeClassInitialize</B>.</P>

<H4>See Also</H4>

<P><A HREF="k306_4rhu.htm">TAPE_INIT_DATA_EX</A>, <A HREF="k303_9msy.htm"><B>TapeClassInitialize</B></A>, <A HREF="k303_5zua.htm"><B>TapeClassZeroMemory</B></A>, <A HREF="k306_6cky.htm">TAPE_STATUS</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DriverEntry%20of%20Tape%20Miniclass%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
