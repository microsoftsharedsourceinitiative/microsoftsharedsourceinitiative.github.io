<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ScsiPortWmiFireAdapterEvent</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ScsiPortWmiFireAdapterEvent">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Storage&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_scsiportwmifireadapterevent_kr"></A>ScsiPortWmiFireAdapterEvent</H1>

<P>The <B>ScsiPortWmiFireAdapterEvent</B> routine sends an event associated with an adapter unit to the port driver for delivery to WMI data consumers that have requested notification of the event.</P>

<PRE class=syntax>VOID
ScsiPortWmiFireAdapterEvent(
  IN PVOID  HwDeviceExtension,
  IN LPGUID  Guid,
  IN ULONG  InstanceIndex,
  IN ULONG  EventDataSize,
  IN PVOID  EventData
  );</PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the hardware device extension. This is a per-HBA storage area that the port driver allocates and initializes on behalf of the miniport driver. Miniport drivers usually store HBA-specific information in this extension, such as the state of the HBA and the HBA's mapped access ranges. This area is available to the miniport driver in the <B>DeviceExtension-&gt;HwDeviceExtension</B> member of the HBA's device object immediately after the miniport driver calls <A HREF="k301_9n76.htm"><B>ScsiPortInitialize</B></A>. The port driver frees this memory when it removes the device. </DD>

<DT><I>Guid</I></DT>

<DD>Pointer to the GUID that represents the event block. </DD>

<DT><I>InstanceIndex</I></DT>

<DD>If the event block has multiple instances, specifies the index of the instance. </DD>

<DT><I>EventDataSize</I></DT>

<DD>Specifies the number of bytes of data at <I>EventData</I>, not including pad bytes at the beginning of the event data buffer. If no data is generated for an event, <I>EventDataSize</I> should be set to zero.</DD>

<DT><I>EventData</I></DT>

<DD>Pointer to a miniport driver-allocated buffer containing data generated by the miniport driver for the event. The buffer must be at least the size of the event data plus 0x40 pad bytes at the beginning of the buffer. </DD>
</DL>

<H4>Return Value</H4>

<P>None.</P>

<H4>Headers</H4>

<P>Declared in <I>srb.h</I>. Include <I>miniport.h</I> and <I>scsi.h</I>. </P>

<H4>Comments</H4>

<P>This routine is a simplied version of the <A HREF="k301_7zqq.htm"><B>ScsiPortWmiFireLogicalUnitEvent</B></A> routine. Whereas, ScsiPortWmiFireLogicalUnitEvent can be used to notify the port driver of events associated with adapters and storage devices, <B>ScsiPortWmiFireAdapterEvent</B> is used to notify the port driver of events associated with adapters only.</P>

<H4>See Also</H4>

<P><A HREF="k301_7zqq.htm"><B>ScsiPortWmiFireLogicalUnitEvent</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ScsiPortWmiFireAdapterEvent"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
