<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>INF AddReg Directive</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="INF AddReg Directive">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_software_key_kg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_hardware_key_kg_gly">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_iocreatedevice_kr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_specifying_device_types_kg">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pdo_dg_gly">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_exclusive_device_kg_gly">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_specifying_exclusive_access_to_device_objects_kg">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_query_device_text_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_inf_addreg_directive_dr"></A>INF AddReg Directive</H1>

<P><B>[</B><I>DDInstall</I><B>]</B> | <BR>
<B>[</B><I>DDInstall</I><B>.HW]</B> | <BR>
<B>[</B><I>DDInstall</I><B>.CoInstallers]</B> | <BR>
<B>[ClassInstall32]</B> | <BR>
<B>[ClassInstall32.ntx86]</B> | <BR>
<B>[ClassInstall32.ntia64]</B> <B><BR>
</B>&nbsp;<BR>
<B>AddReg=</B><I>add</I>-<I>registry</I>-<I>section</I>[<B>,</B> <I>add</I>-<I>registry</I>-<I>section</I>] ...<BR>
&nbsp;<BR>
&nbsp;<BR>
</P>

<P>An <B>AddReg</B> directive references one or more INF-writer-defined sections used to modify or create registry information. Each such add-registry section can have entries to do the following:

<UL>
	<LI>Add new keys, possibly with initial value entries, to the registry.</LI>

	<LI>Add new value entries to existing registry keys.</LI>

	<LI>Modify existing value entries of particular keys in the registry. </LI>
</UL>

<P>An <B>AddReg</B> directive can be specified under any of the sections shown in the formal syntax statement above. This directive also can be specified under any of the following INF-writer-defined sections: 

<UL>
	<LI>A <I>service-install-section</I> or <I>event-log-install</I> section referenced by the <B>AddService</B> directive in a <I>DDInstall</I><B>.Services</B> section</LI>

	<LI>An <I>add-interface-section</I> referenced by the <B>AddInterface</B> directive in a <I>DDInstall</I><B>.Interfaces</B> section </LI>

	<LI>An <I>install-interface-section</I> referenced in an <B>InterfaceInstall32</B> section</LI>
</UL>

<H4>Comments</H4>

<P>Each <I>add-registry-section</I> name must be unique to the INF file, but it can be referenced by <B>AddReg</B> directives in other sections of the same INF. Each section name must follow the general rules for defining section names described in <A HREF="inf-format_7soi.htm">General Syntax Rules for INF Files</A>. For information about how to use the system-defined <B>.nt</B>, <B>.ntx86</B>, and <B>.ntia64</B> extensions, see <A HREF="create-inf_9xpj.htm">Creating INF Files for Multiple Platforms and Operating Systems</A>. </P>

<P>Each named section referenced by an <B>AddReg</B> directive has the following form:</P>

<P><B>[</B><I>add-registry-section</I><B>]<BR>
</B><I>reg-root</I><B>,</B> [<I>subkey</I>]<B>,</B> [<I>value-entry-name</I>]<B>,</B> [<I>flags</I>]<B>,</B> [<I>value</I>]<BR>
<I>reg-root</I><B>,</B> [<I>subkey</I>]<B>,</B> [<I>value-entry-name</I>]<B>,</B> [<I>flags</I>]<B>,</B> [<I>value</I>]<BR>
 ...<BR>
[<B>[</B><I>add-registry-section</I><B>.security]<BR>
"</B><I>security-descriptor-string</I><B>"</B>]<B><BR>
</B></P>

<P>An <I>add-registry-section</I> can have any number of entries, each on a separate line. An INF can also contain one or more optional <I>add-registry-section</I><B>.security</B> sections, each specifying a security descriptor that will be applied to all registry values described within a named <I>add-registry-section</I>.</P>

<H4><I>add-registry-section</I> Entries</H4>

<DL>
<DT><I>reg-root</I></DT>

<DD>Identifies the root of the registry tree for other values supplied in this entry. The value can be one of the following:

<DL>
<DT><B>HKCR</B></DT>

<DD>Abbreviation for <B>HKEY_CLASSES_ROOT</B></DD>

<DT><B>HKCU</B></DT>

<DD>Abbreviation for <B>HKEY_CURRENT_USER</B></DD>

<DT><B>HKLM</B></DT>

<DD>Abbreviation for <B>HKEY_LOCAL_MACHINE</B></DD>

<DT><B>HKU</B></DT>

<DD>Abbreviation for <B>HKEY_USERS</B></DD>

<DT><B>HKR</B></DT>

<DD>Relative root – that is, keys specified using this abbreviation are relative to the registry key associated with the INF section in which this <B>AddReg</B> directive appears, as indicated in the following table.

<TABLE>

<TR VALIGN="top">
<TH align=left width=47%>INF Section Containing AddReg Directive</TH>
<TH align=left width=53%>Registry Key Referenced by HKR</TH>
</TR>

<TR VALIGN="top">
<TD width=47%><A HREF="inf-format_2k8i.htm">INF<I> DDInstall </I>section</A> </TD>
<TD width=53%>The device's <A HREF="JavaScript:hhobj_1.Click()">software key</A> </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><A HREF="inf-format_5k6q.htm">INF<I> DDInstall</I><B>.HW</B> section</A> </TD>
<TD width=53%>The device's <A HREF="JavaScript:hhobj_2.Click()">hardware key</A> </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><A HREF="inf-format_6nle.htm">INF<I> DDInstall</I><B>.Services</B> section</A> </TD>
<TD width=53%>The <B>Services</B> key</TD>
</TR>
</TABLE><BR>



<P>Note that <B>HKR</B> cannot be used in an <I>add-registry-section</I> referenced from an <A HREF="inf-format_33ea.htm">INF <B>DefaultInstall</B> section</A>.

</DD>
</DL>


<P>For more information about driver information stored under the <B>HKEY_LOCAL_MACHINE</B> root, see <A HREF="install-over_6e3r.htm">Driver Information in the Registry</A>.
</DD>

<DT><I>subkey</I></DT>

<DD>This optional value, formed either as a <B>%</B><I>strkey</I><B>%</B> token defined in a <B>Strings</B> section of the INF or as a registry path under the given <I>reg-root</I> (<I>key1</I><B>\</B><I>key2</I><B>\</B><I>key3</I>...), specifies one of the following:

<UL>
	<LI>A new subkey to be added to the registry at the end of the given registry path</LI>

	<LI>An existing subkey in which the additional values specified in this entry will be written (possibly replacing the value of an existing named value entry of the given subkey) </LI>

	<LI>Both a new subkey to be added to the registry together with its initial value entry </LI>
</UL>
</DD>

<DT><I>value-entry-name</I></DT>

<DD>This optional value either names an existing value entry in the given (existing) <I>subkey</I> or creates the name of a new value entry to be added in the specified <I>subkey</I>, whether it already exists or is a new key to be added to the registry. This value can be expressed either as <B>"</B><I>quoted string</I><B>"</B> or as a <B>%</B><I>strkey</I><B>%</B> token that is defined in the INF's <B>Strings</B> section. (If this is omitted for a string-type value, the <I>value-entry-name</I> is the default "unnamed" value entry for this key.) 

<P>The OS supports some system-defined special <I>value-entry-name</I> keywords. See the end of this <B>Comments</B> section for more information.
</DD>

<DT><I>flags</I></DT>

<DD>This optional hexadecimal value, expressed as an ORed bitmask of system-defined low word and high word flag values, defines the data type for a value entry and/or controls the add-registry operation. Bitmask values for each of these flags are as follows:

<DL>
<DT><B>0x00000001</B> (FLG_ADDREG_BINVALUETYPE) </DT>

<DD>The given <I>value</I> is “raw” data. (This value is identical to the FLG_ADDREG_TYPE_BINARY.) </DD>

<DT><B>0x00000002</B> (FLG_ADDREG_NOCLOBBER) </DT>

<DD>Prevent a given <I>value</I> from replacing the value of an existing value entry. </DD>

<DT><B>0x00000004</B> (FLG_ADDREG_DELVAL)</DT>

<DD>Delete the given <I>subkey</I> from the registry, or delete the specified <I>value-entry-name</I> from the specified registry <I>subkey</I>.</DD>

<DT><B>0x00000008</B> (FLG_ADDREG_APPEND)</DT>

<DD>Append a given <I>value</I> to that of an existing named value entry. This flag is valid only if FLG_ADDREG_TYPE_MULTI_SZ is also set. The specified string value is not appended if it already exists.</DD>

<DT><B>0x00000010</B> (FLG_ADDREG_KEYONLY)</DT>

<DD>Create the given <I>subkey</I>, but ignore any supplied <I>value-entry-name</I> and/or <I>value</I>.</DD>

<DT><B>0x00000020</B> (FLG_ADDREG_OVERWRITEONLY)</DT>

<DD>Reset to the supplied <I>value</I> only if the specified <I>value-entry-name</I> already exists in the given <I>subkey</I>.</DD>

<DT><B>0x00001000</B> (FLG_ADDREG_64BITKEY)</DT>

<DD>(<I>Windows XP and later.</I>) Make the specified change in the 64-bit registry. If not specified, the change is made to the native registry.</DD>

<DT><B>0x00002000</B> (FLG_ADDREG_KEYONLY_COMMON) </DT>

<DD>(<I>Windows XP and later.</I>) This is the same as FLG_ADDREG_KEYONLY but also works in a <I>del-registry-section</I> (see <A HREF="inf-format_21de.htm">INF <B>DelReg</B> Directive</A> ).</DD>

<DT><B>0x00004000</B> (FLG_ADDREG_32BITKEY) </DT>

<DD>(<I>Windows XP and later.</I>) Make the specified change in the 32-bit registry. If not specified, the change is made to the native registry.</DD>

<DT><B>0x00000000</B> (FLG_ADDREG_TYPE_SZ)</DT>

<DD>The given value entry and/or <I>value</I> is of type REG_SZ. Note that this is the default type for a specified value entry, so the <I>flags</I> value can be omitted from any <I>reg-root</I><B>=</B> line in an add-registry section that operates on a value entry of this type. </DD>

<DT><B>0x00010000</B> (FLG_ADDREG_TYPE_MULTI_SZ)</DT>

<DD>The given value entry and/or <I>value</I> is of the registry type REG_MULTI_SZ. This specification does not require any NULL terminator for a given string value. </DD>

<DT><B>0x00020000</B> (FLG_ADDREG_TYPE_EXPAND_SZ)</DT>

<DD>The given value entry and/or <I>value</I> is of the registry type REG_EXPAND_SZ.</DD>

<DT><B>0x00010001</B> (FLG_ADDREG_TYPE_DWORD)</DT>

<DD>The given value entry and/or <I>value</I> is of the registry type REG_DWORD.</DD>

<DT><B>0x00020001</B> (FLG_ADDREG_TYPE_NONE)</DT>

<DD>The given value entry and/or <I>value</I> is of the Windows&nbsp;2000 registry type REG_NONE.</DD>
</DL>
</DD>

<DT><I>value</I></DT>

<DD>This optionally specifies a new value for the specified <I>value-entry-name</I> to be added to the given registry key. Such a <I>value</I> can be a "replacement" value for an existing named value entry in an existing key, a value to be appended (<I>flag</I> value <B>0x00010008</B>) to an existing named REG_MULTI_SZ-type value entry in an existing key, a new value entry to be written into an existing key, or the initial value entry for a new <I>subkey</I> to be added to the registry. 

<P>The expression of such a <I>value</I> depends on the registry type specified for the <I>flag</I>, as follows:


<UL>
	<LI>A registry string-type value can be expressed either as a <B>"</B><I>quoted string</I><B>"</B> or as a <B>%</B><I>strkey</I><B>%</B> token defined in a <B>Strings</B> section of the INF file. Such an INF-specified value need not include a NULL terminator at the end of each string.</LI>

	<LI>A registry numerical-type value can be expressed as a hexadecimal (using <B>0x</B> notation) or decimal number. </LI>
</UL>
</DD>

<DT><I>security-descriptor-string</I></DT>

<DD>Specifies a security descriptor, to be applied to all registry entries created by the named <I>add-registry-section</I>. The <I>security-descriptor-string</I> is a string with tokens to indicate the DACL (<B>D:</B>) security component. See Platform SDK documentation for information about the format of security descriptor strings.

<P>If an <I>add-registry-section</I><B>.security</B><I> </I>section is not specified, registry entries inherit the security settings of the parent key. 


<P>If an <I>add-registry-section</I><B>.security</B><I> </I>section is specified, the following ACE's must be included so that installations and upgrades of devices and system service packs can occur:


<P>(A;;GA;;;SY) – Grants all access to the local system.<BR>
(A;;GA;;;BA) – Grants all access to built-in administrators.


<P>Do <I>not</I> specify ACE strings that grant write access to nonprivileged users.


<P>For more information about specifying security descriptors, see <A HREF="secure-install_644n.htm">Creating Secure Device Installations</A>.

</DD>
</DL>

<P>Note that the lower-order bit of the low word in a <I>flag</I> value distinguishes between character and binary data. Consequently, a Windows&nbsp;95 installer interprets all registry data types as either REG_SZ or REG_BINARY.</P>

<P>To represent a number of a registry type other than one of the predefined REG_<I>XXX</I> types, specify a new type number in the high word of the <I>flag</I> ORed with FLG_ADDREG_BINVALUETYPE in its low word. The data for such a <I>value</I> must be specified in binary format as a sequence of bytes separated by commas. For example, to store 16 bytes of data of a new registry data type, such as 0x38, as a value entry, the add-registry section entry would be something like the following:</P>

<PRE>HKR,,MYValue,0x00380001,1,0,2,3,4,5,6,7,8,9,A,B,C,D,E,F</PRE>

<P>This technique can be used to define new registry types for numerical values, but not for values of type REG_EXPAND_SZ, REG_MULTI_SZ, REG_NONE, or REG_SZ. </P>

<H4>Special <I>value-entry-name</I> Keywords</H4>

<P>Special keywords are defined for use in the HKR <B>AddReg</B> entries:</P>

<PRE><B>[ClassInstall32]</B> | <B>[ClassInstall32.nt*]</B> | <B>[</B><I>DDInstall</I><B>.HW]</B>
...
<B>AddReg</B> = <I>Xxx</I>_AddReg
...
<B>[</B><I>Xxx</I>_AddReg<B>]</B>
...
[<B>HKR,,DeviceCharacteristics,0x10001,</B><I>characteristics</I>] 
[<B>HKR,,DeviceType,0x10001,</B><I>device-type</I>] 
[<B>HKR,,Security,,</B><I>security-descriptor-string</I>] 
[<B>HKR,,UpperFilters,0x10000,</B><I>service-name</I>] 
[<B>HKR,,LowerFilters,0x10000,</B><I>service-name</I>] 
[<B>HKR,,Exclusive,0x10001,</B><I>exclusive-device</I>] 


<B>[</B><I>DDInstall</I><B>]</B>
...
<B>AddReg</B> = <I>Yyy</I>_AddReg
...
<B>[</B><I>Yyy</I>_AddReg<B>]</B>
...
[<B>HKR,,EnumPropPages32,,"</B><I>prop-provider</I><B>.dll,</B><I>provider-entry-point</I><B>"</B>]
[<B>HKR,,LocationInformationOverride,,"</B><I>text-string</I><B>"</B>] 
</PRE>

<P>The special keywords are used as follows:

<DL>
<DT><B>DeviceCharacteristics</B></DT>

<DD>A <B>DeviceCharacteristics</B> entry specifies characteristics for the device. The <I>characteristics</I> value is a numeric value that is the result of OR'ing one or more FILE_* file characteristics values, which are defined in <I>wdm.h</I> and <I>ntddk.h.</I> Only the following values can be specified in an INF:

<PRE>#define FILE_REMOVABLE_MEDIA            0x00000001
#define FILE_READ_ONLY_DEVICE           0x00000002
#define FILE_FLOPPY_DISKETTE            0x00000004
#define FILE_WRITE_ONCE_MEDIA           0x00000008
#define FILE_DEVICE_SECURE_OPEN         0x00000100
</PRE>


<P>For a description of these values, see <A HREF="JavaScript:hhobj_3.Click()"><B>IoCreateDevice</B></A>.


<P>The characteristics values specified using a <B>DeviceCharacteristics</B> entry will be OR'ed with those specified in each call to <B>IoCreateDevice</B> that creates a device object on the device stack. The OR operation occurs after all device objects have been added, but before the device is started.


<P>The <I>characteristics</I> value (including a value of zero) overrides any class-wide device characteristics that were specified in the associated class installer INF.
</DD>

<DT><B>DeviceType</B></DT>

<DD>A <B>DeviceType</B> entry specifies a device type for the device. The <I>device-type</I> is the numeric value of a FILE_DEVICE_<I>XXX</I> constant defined in <I>wdm.h</I> or <I>ntddk.h</I>. For more information, see <A HREF="JavaScript:hhobj_4.Click()">Specifying Device Types</A>. The flag value of 0x10001 specifies that the <I>device-type</I> value is a REG_DWORD. 

<P>A class-installer INF should specify the device type that applies to all, or almost all, of the devices in the class. For example, if the devices in the class are of type FILE_DEVICE_CD_ROM, specify a <I>device-type</I> of 0x02. If a device INF specifies a value for <B>DeviceType</B>, it overrides the value set by the class installer, if any. If the class or device INF specifies a <B>DeviceType</B> value, the PnP Manager applies that type to the <A HREF="JavaScript:hhobj_5.Click()">PDO</A> created by the device's bus driver.
</DD>

<DT><B>Security</B></DT>

<DD>A <B>Security</B> entry specifies a security descriptor for the device. The <I>security-descriptor-string</I> is a string with tokens to indicate the DACL (<B>D:</B>) security component. See Platform SDK documentation for information about the format of security descriptor strings. A class-installer INF can specify a security descriptor for a device class. A device INF can specify a security descriptor for an individual device, overriding the security for the class. If the class and/or device INF specifies a <I>security-descriptor-string</I>, the PnP Manager propagates the descriptor to all the device objects for a device, including the FDO, filter DOs, and the PDO.

<P>For more information about specifying security descriptors, see <A HREF="secure-install_644n.htm">Creating Secure Device Installations</A>.
</DD>

<DT><B>UpperFilters</B></DT>

<DD>An <B>UpperFilters</B> entry specifies a PnP upper-filter driver. This entry in a <I>DDInstall</I><B>.HW</B> section defines one or more device-specific upper-filter drivers. In a <B>ClassInstall32</B> section, this entry defines one or more class-wide upper-filter drivers.</DD>

<DT><B>LowerFilters</B></DT>

<DD>A <B>LowerFilters</B> entry specifies a PnP lower-filter driver. This entry in a <I>DDInstall</I><B>.HW</B> section defines one or more device-specific lower-filter drivers. In a <B>ClassInstall32</B> section, this entry defines one or more class-wide lower-filter drivers.</DD>

<DT><B>Exclusive</B></DT>

<DD>An <B>Exclusive</B> entry, if it exists and is set to "1", specifies that the device is an <A HREF="JavaScript:hhobj_6.Click()">exclusive device</A>. Otherwise the device is not treated as exclusive. For more information, see <A HREF="JavaScript:hhobj_7.Click()">Specifying Exclusive Access to Device Objects</A>.</DD>

<DT><B>EnumPropPages32</B></DT>

<DD>An <B>EnumPropPages32 </B>entry specifies the name of a DLL file that is a device-specific property sheet provider. It also specifies the DLL's entry point. </DD>

<DT><B>LocationInformationOverride</B></DT>

<DD>A <B>LocationInformationOverride</B> entry can be used to specify a text string describing a device's physical location. It overrides the <B>LocationInformation</B> string that the device's bus driver supplies in response to an <A HREF="JavaScript:hhobj_8.Click()">IRP_MN_QUERY_DEVICE_TEXT</A> request.</DD>
</DL>

<H4>Example</H4>

<P>An <B>AddReg</B> directive referenced the (SCSI) Miniport_EventLog_AddReg section in this example, under an INF-writer-defined section referenced by the <B>AddService</B> directive in a <I>DDInstall</I><B>.Services</B> section of this INF. </P>

<PRE>[Miniport_EventLog_AddReg]
HKR,,EventMessageFile,0x00020000,"%%SystemRoot%%\System32\IoLogMsg.dll" 
; double quotation marks delimiters in preceding entry prevent truncation 
; if line wraps
 
HKR,,TypesSupported,0x00010001,7 </PRE>

<H4>See Also</H4>

<P><A HREF="inf-format_3omq.htm"><B>AddInterface</B></A>, <A HREF="inf-format_79te.htm"><B>AddService</B></A>, <A HREF="inf-format_4sj6.htm"><B>BitReg</B></A>, <A HREF="inf-format_6p9u.htm"><B>ClassInstall32</B></A>, <A HREF="inf-format_2k8i.htm"><I>DDInstall</I></A>, <A HREF="inf-format_65bm.htm"><I>DDInstall</I><B>.CoInstallers</B></A>, <A HREF="inf-format_5k6q.htm"><I>DDInstall</I><B>.HW</B></A>, <A HREF="inf-format_4eeq.htm"><I>DDInstall</I><B>.Interfaces</B></A>, <A HREF="inf-format_6nle.htm"><I>DDInstall</I><B>.Services</B></A>, <A HREF="inf-format_21de.htm"><B>DelReg</B></A>, <A HREF="inf-format_3o8i.htm"><B>InterfaceInstall32</B></A>, <A HREF="inf-format_3uuq.htm"><B>Strings</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: INF%20AddReg%20Directive"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
