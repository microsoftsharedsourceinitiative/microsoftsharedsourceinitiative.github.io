<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetupDiLoadClassIcon</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SetupDiLoadClassIcon">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_setupdiloadclassicon_dr"></A>SetupDiLoadClassIcon</H1>

<P>The <B>SetupDiLoadClassIcon</B> function loads both the large and mini-icon for the specified class.</P>

<PRE class=syntax><B>WINSETUPAPI BOOL WINAPI</B>
  <B>SetupDiLoadClassIcon(</B>
    <B>IN LPGUID</B>  <I>ClassGuid</I><B>,</B>
    <B>OUT HICON</B>  *<I>LargeIcon</I><B>,  OPTIONAL</B>
    <B>OUT LPINT</B>  <I>MiniIconIndex</I><B>  OPTIONAL</B>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ClassGuid</I></DT>

<DD>Supplies the GUID of the class for which the icon(s) should be loaded.</DD>

<DT><I>LargeIcon</I></DT>

<DD>Supplies a pointer to a variable to receive a handle for the loaded large icon for the specified class. If this parameter is not specified, the large icon is not loaded. When the application is finished using the icon, it must call <B>DestroyIcon</B> (described in the Platform SDK documentation).</DD>

<DT><I>MiniIconIndex</I></DT>

<DD>Supplies a pointer to a variable to receive the index of the mini-icon for the specified class. The mini-icon is stored in the device installer's mini-icon cache.
</DD>
</DL>

<H4>Return Value</H4>

<P>The function returns TRUE if it is successful. Otherwise, it returns FALSE and the logged error can be retrieved by a call to <B>GetLastError</B>.</P>

<H4>Headers</H4>

<P>Declared in <I>setupapi.h</I>. Include <I>setupapi.h</I>. </P>

<H4>Comments</H4>

<P>The icons of the class are either predefined and loaded from the device installer's internal cache, or they are loaded directly from the class installer's executable. This function queries the registry value <B>ICON</B> in the specified class's section. If the <B>ICON</B> value is specified, it indicates which mini-icon to load. </P>

<P>If the <B>ICON</B> value is negative, the absolute value represents a predefined icon in the class's registry. See <A HREF="di-rtns_08ky.htm"><B>SetupDiDrawMiniIcon</B></A> for a list of the predefined mini-icons. </P>

<P>If the <B>ICON</B> value is positive, it represents an icon in the class installer's executable image that will be extracted. The value 1 is reserved. This function also uses the <B>INSTALLER32</B> registry value and then the <B>ENUMPROPPAGES32</B> registry value to determine which executable image to extract the icons from. For more information about these registry values, see <A HREF="inf-format_6p9u.htm">INF <B>ClassInstall32</B> Section</A>.</P>

<H4>See Also</H4>

<P><A HREF="di-rtns_08ky.htm"><B>SetupDiDrawMiniIcon</B></A>, <A HREF="di-rtns_9xpu.htm"><B>SetupDiGetClassBitmapIndex</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SetupDiLoadClassIcon"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
