<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetupDiRemoveDeviceInterface</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SetupDiRemoveDeviceInterface">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_setupdiremovedeviceinterface_dr"></A>SetupDiRemoveDeviceInterface</H1>

<P>The <B>SetupDiRemoveDeviceInterface</B> function removes a registered device interface from the system.</P>

<PRE class=syntax><B>WINSETUPAPI BOOL WINAPI</B>
  <B>SetupDiRemoveDeviceInterface(</B>
    <B>IN HDEVINFO</B>  <I>DeviceInfoSet</I><B>,</B>
    <B>IN OUT PSP_DEVICE_INTERFACE_DATA</B>  <I>DeviceInterfaceData</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceInfoSet</I></DT>

<DD>Pointer to the <A HREF="setup-cls_2h9j.htm">device information set</A> containing the interface and its underlying device. This handle is typically returned by <B>SetupDiGetClassDevs</B>. The device information set must not contain remote elements.</DD>

<DT><I>DeviceInterfaceData</I></DT>

<DD>Pointer to a <A HREF="di-struct_6j8y.htm">SP_DEVICE_INTERFACE_DATA</A> structure that identifies the interface being removed. This information is typically returned by <A HREF="di-rtns_1cky.htm"><B>SetupDiEnumDeviceInterfaces</B></A>.

<P>After the interface is removed, this function sets the SPINT_REMOVED flag in <I>DeviceInterfaceData</I><B>.Flags</B>. It also clears the SPINT_ACTIVE flag, but note that this flag should have already been cleared when this function was called.

</DD>
</DL>

<H4>Return Value</H4>

<P><B>SetupDiRemoveDeviceInterface</B> returns TRUE if the function completed without error. If the function completed with an erorr, it returns FALSE and the error code for the failure can be retrieved by calling <B>GetLastError</B>.</P>

<H4>Headers</H4>

<P>Declared in <I>setupapi.h</I>. Include <I>setupapi.h</I>. </P>

<H4>Comments</H4>

<P>The caller of this function must be a member of the Administrators group.</P>

<P><B>SetupDiRemoveDeviceInterface</B> removes the specified device interface from the system, including deleting the associated registry key. </P>

<P>Call <A HREF="di-rtns_91f6.htm"><B>SetupDiDeleteDeviceInterfaceData</B></A> to delete the interface from a device information list.</P>

<P>A device interface must be disabled to be removed. If the interface is enabled, this function fails and <B>GetLastError</B> returns ERROR_DEVICE_INTERFACE_ACTIVE. Disable an interface using whatever interface-specific mechanism is provided (for example, an IOCTL). If the caller has no way of disabling an interface and the interface must be removed, the caller must stop the underlying device using <A HREF="di-rtns_212q.htm"><B>SetupDiChangeState</B></A>. Stopping the device disables all the interfaces exposed by the device. </P>

<P>The <I>DeviceInfoSet</I> must only contain elements on the local machine.</P>

<H4>See Also</H4>

<P><A HREF="di-rtns_212q.htm"><B>SetupDiChangeState</B></A>, <A HREF="di-rtns_8m42.htm"><B>SetupDiCreateDeviceInterface</B></A>, <A HREF="di-rtns_91f6.htm"><B>SetupDiDeleteDeviceInterfaceData</B></A>, <A HREF="di-rtns_1cky.htm"><B>SetupDiEnumDeviceInterfaces</B></A>, <A HREF="di-rtns_9ks2.htm"><B>SetupDiGetClassDevs</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SetupDiRemoveDeviceInterface"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
