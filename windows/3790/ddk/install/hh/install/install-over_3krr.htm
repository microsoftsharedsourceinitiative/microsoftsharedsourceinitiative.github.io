<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Device Installation Components</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Device Installation Components">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driverentry_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_adddevice_kr">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_start_device_dr">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_query_device_relations_dr">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driverentry_kr">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_adddevice_kr">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_query_capabilities_dr">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_start_device_dr">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_remove_device_dr">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_ioreportdetecteddevice_kr">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_tree_kg">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Device&nbsp;Installation:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_device_installation_components_dg"></A>Device Installation Components</H1>

<P>The following figure shows the software components involved in installing a device.</P>

<P><IMG SRC="images/setupcomp.gif" ALT="" BORDER=0></P>

<P><B>Device Installation Setup Components</B></P>

<P>The shaded boxes in the figure represent components that can be provided by independent hardware vendors (IHV) and original equipment manufacturers (OEM). The other device installation components are supplied by Microsoft.</P>

<P>The following list describes the roles that the various components play in device installation:

<DL>
<DT>Kernel-Mode PnP Manager</DT>

<DD>The kernel-mode PnP Manager notifies the user-mode PnP Manager that a new device is present on the system and needs to be installed. The kernel-mode PnP Manager also calls the <A HREF="JavaScript:hhobj_1.Click()"><B>DriverEntry</B></A> and <A HREF="JavaScript:hhobj_2.Click()"><I>AddDevice</I></A> routines of a device's drivers and sends the <A HREF="JavaScript:hhobj_3.Click()">IRP_MN_START_DEVICE</A> request to start the device. 

<P>The PnP Manager has two parts: one runs in user-mode and the other runs in kernel mode. The kernel-mode PnP Manager reports PnP events to the user-mode PnP Manager, and the user-mode PnP Manager sends control requests to the kernel-mode PnP Manager. 
</DD>

<DT>Drivers</DT>

<DD>PnP drivers perform device-installation operations as directed by the PnP Manager. For example: 

<UL>
	<LI>When the PnP Manager sends the driver an <A HREF="JavaScript:hhobj_4.Click()">IRP_MN_QUERY_DEVICE_RELATIONS</A> request for <B>BusRelations</B>, a PnP bus driver returns a list of its child devices. </LI>

	<LI>The PnP Manager calls each PnP driver's <A HREF="JavaScript:hhobj_5.Click()"><B>DriverEntry</B></A> and <A HREF="JavaScript:hhobj_6.Click()"><I>AddDevice</I></A> routines. </LI>

	<LI>The PnP Manager also sends such additional requests as <A HREF="JavaScript:hhobj_7.Click()">IRP_MN_QUERY_CAPABILITIES</A>, <A HREF="JavaScript:hhobj_8.Click()">IRP_MN_START_DEVICE</A>, and <A HREF="JavaScript:hhobj_9.Click()">IRP_MN_REMOVE_DEVICE</A>. </LI>
</UL>


<P>PnP drivers can also detect non-PnP devices and report them to the PnP Manager using <A HREF="JavaScript:hhobj_10.Click()"><B>IoReportDetectedDevice</B></A>.
</DD>

<DT>User-Mode PnP Manager</DT>

<DD>The user-mode PnP Manager receives device installation requests from the kernel-mode PnP Manager, calls other user-mode Setup components to initiate device-installation tasks, and sends control requests (such as "start the device") to the kernel-mode PnP Manager.

<P>The user-mode PnP Manager and the kernel-mode PnP Manager together maintain the <A HREF="JavaScript:hhobj_11.Click()">device tree</A>.


<P>The user-mode PnP Manager tries to install a device in a trusted process context without requiring user responses to dialog boxes (a <A HREF="install-over_21rb.htm#ddk_server_side_installations_dg">server-side installation</A>). This automatic installation provides a better user experience. If the PnP Manager is unable to complete a trusted installation because, for example, an installer supplies custom Finish pages, the PnP Manager terminates the trusted installation. In this case, when a user with administrative privileges logs in, the PnP Manager restarts the device installation by launching the Found New Hardware wizard in the New Device DLL (a <A HREF="install-over_21rb.htm#ddk_client_side_installations_dg">client-side installation</A>).
</DD>

<DT>Setup API</DT>

<DD>The Setup API includes the <A HREF="setup-ref_1r3m.htm">general Setup functions</A> (<B>Setup</B><I>Xxx</I>) and the <A HREF="di-rtns_85ma.htm">device installation functions</A> (<B>SetupDi</B><I>Xxx</I>). These functions perform many device installation tasks such as searching for INF files, building a potential list of drivers for a device, copying driver files, writing information to the registry, registering device co-installers, and so forth. Most other Setup components call these functions.

<P>The <B>SetupDi</B><I>Xxx</I> functions are also sometimes referred to as the <I>device installer</I>. This term can be confusing, however, because more than one component is involved in installing a device.


<P>For more information, see <A HREF="setup-ref_1r3m.htm">General Setup Functions</A> and <A HREF="di-rtns_85ma.htm">Device Installation Functions</A>. 
</DD>

<DT>CfgMgr API</DT>

<DD>The Configuration Manager API provides basic installation and configuration operations that are not provided by Setup API. The <A HREF="cfgmgrfn_88oi.htm">Configuration Manager Functions</A> perform low-level tasks such as getting the status of a devnode and managing resource descriptors. These functions are primarily called by Setup API but can also be called by other Setup components. </DD>

<DT>Co-installers and Class Installers</DT>

<DD>A class installer performs installation operations that apply to devices in a particular device setup class. For example, the ports class installer is responsible for assigning a COM port name to a device in the ports setup class. If the devices in a particular setup class do not require any special installation operations, a class installer is not required for that setup class.

<P>Microsoft provides class installers for most of the system-defined <A HREF="setup-cls_1wpz.htm">device setup classes</A>. For more information, see <A HREF="class-inst_82cn.htm">Writing a Class Installer</A>. IHVs and OEMs can provide class installers, but they typically provide co-installers. 


<P>A co-installer performs installation operations that are specific to a particular device or to a setup class of devices. For more information, see <A HREF="coinst_5p0n.htm">Writing a Co-installer</A>. 
</DD>

<DT>INF Files and Catalog files</DT>

<DD>INF files and catalog files provide information about devices and drivers to be installed. For more information, see <A HREF="create-inf_4l47.htm">Creating an INF File</A>.</DD>

<DT>Device Manager</DT>

<DD>The Device Manager allows a user to view and manage the devices on a system. For example, a user can view device status and set device properties. If a user requests to update a driver, the Device Manager calls the Hardware Update wizard in the New Device DLL.

<P>For more information, see <A HREF="troubleshoot_7dk7.htm">Using the Device Manager</A>. Also see the Device Manager's online help.
</DD>

<DT>Add Hardware Wizard</DT>

<DD>The Add Hardware Wizard allows a user to add, remove, unplug, and troubleshoot devices.</DD>

<DT>New Device DLL</DT>

<DD>The New Device DLL contains the Found New Hardware wizard, the Hardware Update wizard, and the <A HREF="di-rtns_01ki.htm"><B>UpdateDriverForPlugAndPlayDevices</B></A> function.

<P>The user-mode PnP Manager calls the Found New Hardware wizard to initiate a <A HREF="install-over_21rb.htm#ddk_client_side_installations_dg">client-side installation</A> of a new device in the context of a user with the appropriate privileges. The Device Manager calls the Hardware Update wizard when a user clicks the <B>Update Driver</B> button on a device's Driver property page. The Found New Hardware and Hardware Update wizards call Setup APIs and Configuration Manager APIs to accomplish their tasks.
</DD>

<DT>Custom Device Installation Application</DT>

<DD>An IHV or OEM can provide a custom device installation application. For more information, see <A HREF="custom-install_7n53.htm">Writing a Device Installation Application</A>. 
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Device%20Installation%20Components"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
