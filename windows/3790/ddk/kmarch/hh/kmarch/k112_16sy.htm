<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WMILIB_CONTEXT</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WMILIB_CONTEXT">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wmilib_context_kr"></A>WMILIB_CONTEXT</H1>

<P>The WMILIB_CONTEXT structure provides registration information for a driver's data blocks and event blocks and defines entry points for the driver's WMI library callback routines. </P>

<PRE class=syntax>typedef struct _WMILIB_CONTEXT {
  ULONG  GuidCount;
  PWMIGUIDREGINFO  GuidList;
  PWMI_QUERY_REGINFO  QueryWmiRegInfo;
  PWMI_QUERY_DATABLOCK  QueryWmiDataBlock;
  PWMI_SET_DATABLOCK  SetWmiDataBlock;
  PWMI_SET_DATAITEM  SetWmiDataItem;
  PWMI_EXECUTE_METHOD  ExecuteWmiMethod;
  PWMI_FUNCTION_CONTROL  WmiFunctionControl;
} WMILIB_CONTEXT, *PWMILIB_CONTEXT;</PRE>

<H4>Members</H4>

<DL>
<DT><B>GuidCount</B></DT>

<DD>Specifies the number of blocks registered by the driver.</DD>

<DT><B>GuidList</B></DT>

<DD>Pointer to an array of <B>GuidCount</B> <A HREF="k112_52uq.htm">WMIGUIDREGINFO</A> structures that contain registration information for each block.</DD>

<DT><B>QueryWmiRegInfo</B></DT>

<DD>Pointer to the driver's <A HREF="k903_196a.htm"><I>DpWmiQueryReginfo</I></A> routine, which is a required entry point for drivers that call WMI library support routines.</DD>

<DT><B>QueryWmiDataBlock</B></DT>

<DD>Pointer to the driver's <A HREF="k903_2raq.htm"><I>DpWmiQueryDataBlock</I></A> routine, which is a required entry point for drivers that call WMI library support routines.</DD>

<DT><B>SetWmiDataBlock</B></DT>

<DD>Pointer to the driver's <A HREF="k903_9zqq.htm"><I>DpWmiSetDataBlock</I></A> routine, which is an optional entry point for drivers that call WMI library support routines. If the driver does not implement this routine, it must set this member to NULL. In this case, WMI returns STATUS_WMI_READ_ONLY to the caller in response to any <A HREF="k901_8a7m.htm">IRP_MN_CHANGE_SINGLE_INSTANCE</A> request.</DD>

<DT><B>SetWmiDataItem</B></DT>

<DD>Pointer to the driver's <A HREF="k903_1hv6.htm"><I>DpWmiSetDataItem</I></A> routine, which is an optional entry point for drivers that call WMI library support routines. If the driver does not implement this routine, it must set this member to NULL. In this case, WMI returns STATUS_WMI_READ_ONLY to the caller in response to any <A HREF="k901_9b5e.htm">IRP_MN_CHANGE_SINGLE_ITEM</A> request.</DD>

<DT><B>ExecuteWmiMethod</B></DT>

<DD>Pointer to the driver's <A HREF="k903_26nm.htm"><I>DpWmiExecuteMethod</I></A> routine, which is an optional entry point for drivers that call WMI library support routines. If the driver does not implement this routine, it must set this member to NULL. In this case, WMI returns STATUS_INVALID_DEVICE_REQUEST to the caller in response to any <A HREF="k901_6hf6.htm">IRP_MN_EXECUTE_METHOD</A> request.</DD>

<DT><B>WmiFunctionControl</B></DT>

<DD>Pointer to the driver's <A HREF="k903_11rm.htm"><I>DpWmiFunctionControl</I></A> routine, which is an optional entry point for drivers that call WMI library support routines. If the driver does not implement this routine, it must set this member to NULL. In this case, WMI returns STATUS_SUCCESS to the caller in response to any IRP_MN_ENABLE_<I>XXX</I> or IRP_MN_DISABLE_<I>XXX</I> request.
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>wmilib.h</I>.  Include <I>wmilib.h</I>.</P>

<H4>Comments</H4>

<P>A driver that handles WMI IRPs by calling WMI library support routines stores an initialized WMILIB_CONTEXT structure (or a pointer to such a structure) in its device extension. A driver can use the same WMILIB_CONTEXT structure for multiple device objects if each device object supplies the same set of data blocks. </P>

<P>When the driver receives an IRP_MJ_SYSTEM_CONTROL request, it calls <A HREF="k902_4r3m.htm"><B>WmiSystemControl</B></A> with a pointer to its WMILIB_CONTEXT structure, a pointer to its device object, and a pointer to the IRP. <B>WmiSystemControl</B> determines whether the IRP contains a WMI request and, if so, handles the request by calling the driver's appropriate DpWmiXxx routine.</P>

<P>Memory for this structure can be allocated from paged pool. </P>

<H4>See Also</H4>

<P><A HREF="k903_26nm.htm"><I>DpWmiExecuteMethod</I></A>, <A HREF="k903_11rm.htm"><I>DpWmiFunctionControl</I></A>, <A HREF="k903_196a.htm"><I>DpWmiQueryReginfo</I></A>, <A HREF="k903_2raq.htm"><I>DpWmiQueryDataBlock</I></A>, <A HREF="k903_9zqq.htm"><I>DpWmiSetDataBlock</I></A>, <A HREF="k903_1hv6.htm"><I>DpWmiSetDataItem</I></A>, <A HREF="k112_52uq.htm">WMIGUIDREGINFO</A>, <A HREF="k902_4r3m.htm"><B>WmiSystemControl</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WMILIB_CONTEXT"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
