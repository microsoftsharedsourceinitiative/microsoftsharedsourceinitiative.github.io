<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KeSetBasePriorityThread</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KeSetBasePriorityThread">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_kesetbaseprioritythread_kr"></A>KeSetBasePriorityThread</H1>

<P>The <B>KeSetBasePriorityThread</B> routine sets the run-time priority, relative to the current process, for a given thread.</P>

<PRE class=syntax><B>LONG 
</B>  <B>KeSetBasePriorityThread(</B>
<B>    IN PRKTHREAD</B>  <I>Thread</I><B>,</B>
<B>    IN LONG</B>  <I>Increment</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Thread</I></DT>

<DD>Pointer to a dispatcher object of type KTHREAD.</DD>

<DT><I>Increment</I></DT>

<DD>Specifies the value to be added to the base priority of the process for the <I>Thread</I>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>KeSetBasePriorityThread</B> returns the previous base priority increment of the given thread. The previous base priority increment is defined as the difference between the specified thread’s old base priority and the base priority of the thread’s process.</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h</I>. Include <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>The new base priority is computed by adding the given <I>Increment</I>, which can be a negative value, to the base priority of the specified thread’s process. The resultant value is stored as the base priority of the specified thread.</P>

<P>Drivers that set up device-dedicated threads with variable priority attributes can call this routine to set such a thread's priority relative to the system process in which the thread is created.</P>

<P>The new base priority is restricted to the priority class of the given thread's process. Therefore, the base priority is not allowed to cross over from a variable priority class to a real-time priority class or vice versa.</P>

<P>Callers of <B>KeSetBasePriorityThread</B> must be running at IRQL&nbsp;= PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="k105_8fxu.htm"><B>KeGetCurrentThread</B></A>, <A HREF="k105_1qcy.htm"><B>KeQueryPriorityThread</B></A>, <A HREF="k105_4zoy.htm"><B>KeSetPriorityThread</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KeSetBasePriorityThread"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
