<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>InterlockedCompareExchangePointer</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="InterlockedCompareExchangePointer">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_interlockedcompareexchangepointer_kr"></A>InterlockedCompareExchangePointer</H1>

<P>The <B>InterlockedCompareExchangePointer</B> routine performs an atomic operation that compares the input pointer value pointed to by <I>Destination</I> with the pointer value <I>Comparand</I>.</P>

<PRE class=syntax><B>PVOID
</B>  <B>InterlockedCompareExchangePointer(</B>
    <B>IN OUT PVOID  *</B><I>Destination</I><B>,</B>
    <B>IN PVOID  </B><I>Exchange</I><B>,</B>
    <B>IN PVOID  </B><I>Comparand</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Destination </I></DT>

<DD>Pointer to a PVOID value. If (*<I>Destination</I>) = <I>Comparand</I>, then the routine sets (*<I>Destination</I>) to <I>Exchange</I>.</DD>

<DT><I>Exchange </I></DT>

<DD>Specifies the PVOID value to set (*<I>Destination</I>) to.</DD>

<DT><I>Comparand</I> </DT>

<DD>Specifies the PVOID value to compare with (*<I>Destination</I>).</DD>
</DL>

<H4>Return Value</H4>

<P><B>InterlockedCompareExchangePointer</B> returns the pointer value pointed to by <I>Destination</I>.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>If <I>Comparand</I> is equal to *<I>Destination</I>, then *<I>Destination</I> is set to equal <I>Exchange</I>.  Otherwise, *<I>Destination</I> is unchanged.  </P>

<P><B>InterlockedCompareExchangePointer</B> provides a fast, atomic way to synchronize the testing and updating of a pointer variable that is shared by multiple threads. If the input value pointed to by <I>Destination</I> equals the value of <I>Comparand</I>, the value pointed to by <I>Destination</I> is set to the value of <I>Exchange</I>.</P>

<P><B>InterlockedCompareExchangePointer</B> is designed for speed and, typically, is implemented inline by a compiler. <B>InterlockedCompareExchangePointer</B> is atomic only with respect to other <B>Interlocked</B><I>Xxx</I> calls. It does not use a spin lock and can be safely used on pageable data. </P>

<P>The <B>InterlockedCompareExchangePointer</B> routine is atomic only with respect to other <B>Interlocked</B><I>Xxx</I> calls. </P>

<P>Callers of <B>InterlockedCompareExchangePointer</B> can be running at any IRQL.</P>

<H4>See Also</H4>

<P><A HREF="k102_1mlu.htm"><B>InterlockedCompareExchange</B></A>, <A HREF="k102_0lgy.htm"><B>InterlockedExchange</B></A>, <A HREF="k102_7po2.htm"><B>InterlockedExchangePointer</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: InterlockedCompareExchangePointer"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
