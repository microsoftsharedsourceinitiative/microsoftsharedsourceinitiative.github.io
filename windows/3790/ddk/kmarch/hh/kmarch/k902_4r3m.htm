<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WmiSystemControl</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WmiSystemControl">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wmisystemcontrol_kr"></A>WmiSystemControl</H1>

<P>The <B>WmiSystemControl</B> routine is a dispatch routine for drivers that use WMI library support routines to handle WMI IRPs. </P>

<PRE class=syntax><B>NTSTATUS
</B>  <B>WmiSystemControl(</B>
    <B>IN PWMILIB_CONTEXT</B>  <I>WmiLibInfo</I><B>,</B>
    <B>IN PDEVICE_OBJECT</B>  <I>DeviceObject</I><B>,</B>
    <B>IN PIRP</B>  <I>Irp</I><B>,</B>
    <B>OUT PSYSCTL_IRP_DISPOSITION</B>  <I>IrpDisposition</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>WmiLibInfo</I></DT>

<DD>Points to a WMILIB_CONTEXT structure that contains registration information for a driver's data blocks and event blocks and defines entry points for the driver's WMI library callback routines.</DD>

<DT><I>DeviceObject</I></DT>

<DD>Points to the driver's device object.</DD>

<DT><I>Irp</I></DT>

<DD>Points to the IRP.</DD>

<DT><I>IrpDisposition</I></DT>

<DD>After <B>WmiSystemControl</B> returns, <I>IrpDisposition</I> indicates how the IRP was handled:

<DL>
<DT><B>IrpProcessed</B></DT>

<DD>The IRP was processed and possibly completed. If the driver's <I>DpWmiXxx</I> routine called by <B>WmiSystemControl</B> did not complete the IRP, the driver must call <B>WmiCompleteRequest</B> to complete the IRP after <B>WmiSystemControl</B> returns. </DD>

<DT><B>IrpNotCompleted</B></DT>

<DD>The IRP was processed but not completed, either because WMI detected an error and set up the IRP with an appropriate error code, or processed an <A HREF="k901_4omq.htm">IRP_MN_REGINFO</A> or <A HREF="k901_9d4i.htm">IRP_MN_REGINFO_EX</A> request. The driver must complete the IRP by calling <A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A>.  </DD>

<DT><B>IrpNotWmi</B></DT>

<DD>The IRP is not a WMI request (that is, WMI does not recognize the IRP's minor code). If the driver handles <A HREF="k113_8hwy.htm">IRP_MJ_SYSTEM_CONTROL</A> requests with this IRP_MN_XXX, it should handle the IRP; otherwise the driver should forward the IRP to the next lower driver. </DD>

<DT><B>IrpForward</B></DT>

<DD>The IRP is targeted to another device object (that is, the device object pointer at <B>Parameters.WMI.ProviderId</B> in the IRP does not match the pointer passed by the driver in its call to <B>IoWMIRegistrationControl</B>). The driver must forward the IRP to the next lower driver. 
</DD>
</DL>
</DD>
</DL>

<H4>Return Value</H4>

<P><B>WmiSystemControl</B> returns STATUS_SUCCESS or one of the following error codes:</P>

<P class=indent1>STATUS_INVALID_DEVICE_REQUEST</P>

<P class=indent1>STATUS_WMI_GUID_NOT_FOUND</P>

<P class=indent1>STATUS_WMI_INSTANCE_NOT_FOUND</P>

<H4>Comments</H4>

<P>When a driver receives an IRP_MJ_SYSTEM_CONTROL request with a WMI IRP minor code, it calls <B>WmiSystemControl</B> with a pointer to the driver's WMILIB_CONTEXT structure, a pointer to its device object, and a pointer to the IRP. The WMILIB_CONTEXT structure contains registration information for the driver's data blocks and event blocks and defines entry points for its WMI library callback routines.</P>

<P><B>WmiSystemControl</B> confirms that the IRP is a WMI request and determines whether the block specified by the request is valid for the driver. If so, it processes the IRP by calling the appropriate <I>DpWmiXxx</I> entry point in the driver's WMILIB_CONTEXT structure. WMI is running at IRQL PASSIVE_LEVEL when it calls the driver's <I>DpWmiXxx</I> routine.</P>

<P>Callers of <B>WmiSystemControl</B> must be running at IRQL PASSIVE_LEVEL. </P>

<P>A driver must be running at IRQL PASSIVE_LEVEL when it forwards an IRP_MJ_SYSTEM_CONTROL request to the next-lower driver.</P>

<H4>See Also</H4>

<P><A HREF="k903_26nm.htm">DpWmiExecuteMethod</A>, <A HREF="k903_11rm.htm">DpWmiFunctionControl</A>, <A HREF="k903_2raq.htm">DpWmiQueryDataBlock</A>, <A HREF="k903_196a.htm">DpWmiQueryReginfo</A>, <A HREF="k903_9zqq.htm">DpWmiSetDataBlock</A>, <A HREF="k903_1hv6.htm">DpWmiSetDataItem</A>, <A HREF="k112_16sy.htm">WMILIB_CONTEXT</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WmiSystemControl"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
