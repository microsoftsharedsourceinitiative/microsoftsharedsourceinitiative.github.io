<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoAttachDevice</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoAttachDevice">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioattachdevice_kr"></A>IoAttachDevice</H1>

<P>The <B>IoAttachDevice</B> routine attaches the caller’s device object to a named target device object, so that I/O requests bound for the target device are routed first to the caller.</P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>IoAttachDevice(</B>
<B>    IN PDEVICE_OBJECT</B>  <I>SourceDevice</I><B>,</B>
<B>    IN PUNICODE_STRING</B>  <I>TargetDevice</I><B>,</B>
<B>    OUT PDEVICE_OBJECT</B>  <B>*</B><I>AttachedDevice</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>SourceDevice</I></DT>

<DD>Pointer to the caller-created device object.</DD>

<DT><I>TargetDevice</I></DT>

<DD>Pointer to a buffer containing the name of the device object to which the specified <I>SourceDevice</I> is to be attached.</DD>

<DT><I>AttachedDevice</I></DT>

<DD>Pointer to caller-allocated storage for a pointer. On return, contains a pointer to the target device object if the attachment succeeds.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoAttachDevice</B> can return one of the following NTSTATUS values:</P>

<P class=indent1>STATUS_SUCCESS<BR>
STATUS_INVALID_PARAMETER<BR>
STATUS_OBJECT_TYPE_MISMATCH<BR>
STATUS_OBJECT_NAME_INVALID<BR>
STATUS_INSUFFICIENT_RESOURCES</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P><B>IoAttachDevice</B> establishes layering between drivers so that the same IRPs can be sent to each driver in the chain.</P>

<P>This routine is used by intermediate drivers during initialization. It allows such a driver to attach its own device object to another device in such a way that any requests being made to the original device are given first to the intermediate driver.</P>

<P>The caller can be layered only at the top of an existing chain of layered drivers. <B>IoAttachDevice</B> searches for the highest device object layered over <I>TargetDevice</I> and attaches to that object (that can be the <I>TargetDevice</I>). Therefore, this routine must not be called if a driver that must be higher-level has already layered itself over the target device.</P>

<P>Note that for file system drivers and drivers in the storage stack, <B>IoAttachDevice</B> opens the target device with FILE_READ_ATTRIBUTES and then calls <A HREF="k104_75f7.htm"><B>IoGetRelatedDeviceObject</B></A>. This does not cause a file system to be mounted. Thus, a successful call to <B>IoAttachDevice</B> returns the device object of the storage driver, not that of the file system driver.</P>

<P>This routine sets the <B>AlignmentRequirement</B> in <I>SourceDevice</I> to the value in the next-lower device object and sets the <B>StackSize</B> to the value in the next-lower object plus one.</P>

<P class=note><B>Warning:</B>&nbsp;&nbsp;<I>AttachedDevice</I> must point to a global memory location, such as the driver’s device extension.&nbsp; <B>IoAttachDevice</B> opens the file object for the target device, updates <I>AttachedDevice</I>, performs the attach, and then closes the file object.&nbsp; Thus, the source device receives the <A HREF="k113_6vg2.htm">IRP_MJ_CLEANUP</A> and <A HREF="k113_3naq.htm">IRP_MJ_CLOSE</A> requests for the file object before <B>IoAttachDevice</B> returns.&nbsp; The driver must forward these requests to the target device, and <I>AttachedDevice</I> must be a memory location accessible to the driver’s <A HREF="drvrrtns_2xf6.htm"><I>DispatchCleanup</I></A> and <A HREF="drvrrtns_64du.htm"><I>DispatchClose</I></A> routines.</P>

<P>Callers of <B>IoAttachDevice</B> must be running at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k112_32cy.htm">DEVICE_OBJECT</A>, <A HREF="k104_9tiq.htm"><B>IoAttachDeviceToDeviceStack</B></A>, <A HREF="k104_75f7.htm"><B>IoGetRelatedDeviceObject</B></A>, <A HREF="k104_8piq.htm"><B>IoCreateDevice</B></A>, <A HREF="k104_4s36.htm"><B>IoDetachDevice</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoAttachDevice"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
