<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>BugCheckCallback</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="BugCheckCallback">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_bugcheckcallback_kr"></A><I>BugCheckCallback</I></H1>

<P>The  <I>BugCheckCallback</I> routine is executed whenever the system issues a bug check.</P>

<PRE class=syntax><B>VOID
  </B><I>BugCheckCallback</I><B>(</B>
<B>    IN PVOID </B><I>Buffer</I><B>, </B>
<B>    IN ULONG </B><I>Length</I><B> </B>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Buffer</I></DT>

<DD>Pointer to the buffer that was specified when the callback was registered.</DD>

<DT><I>Length</I></DT>

<DD>Length of the buffer to be specified by the <I>Buffer</I> parameter.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Comments</H4>

<P>Drivers can supply a <I>BugCheckCallback</I> that resets the device to a known state if the system issues a bug check. </P>

<P>Use<A HREF="k105_29wy.htm"> <B>KeRegisterBugCheckCallback</B></A> to register a <I>BugCheckCallback</I> routine. A driver can subsequently remove the callback by using the <A HREF="k105_2d6a.htm"><B>KeDeregisterBugCheckCallback</B></A> routine. If the driver can be unloaded, it must remove any registered callbacks in its <A HREF="drvrrtns_7d82.htm"><I>Unload</I></A> routine.</P>

<P>A <I>BugCheckCallback</I> routine is strongly restricted in the actions it can take.  For more information, see <A HREF="other_1anb.htm">Writing a Bug Check Callback Routine</A>. The routine <I>can</I> safely use the READ_PORT_<I>XXX</I>, READ_REGISTER_<I>XXX</I>, WRITE_PORT_<I>XXX</I>, and WRITE_REGISTER_<I>XXX</I> routines to interact with the device.</P>

<P>Drivers that require more sophisticated interaction with the system as it issues a bug check can instead implement <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A> or <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> routines.</P>

<P>Note that beginning with the Windows&nbsp;XP SP1 and Windows Server 2003 operating systems, <I>BugCheckCallback</I> routines execute after the system crash dump file has already been written. (On earlier operating systems, the routines execute <I>before</I> the crash dump file is written.) Thus, any data that is stored in the buffer specified by the <I>Buffer</I> parameter will not appear in the crash dump file. Drivers that are required to write data to the crash dump file instead implement a <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> routine. (On earlier operating systems, the data written to <I>Buffer</I> does appear in the crash dump file.)</P>

<P><I>BugCheckCallback</I> routines execute at IRQL&nbsp;= HIGH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k105_2d6a.htm"><B>KeDeregisterBugCheckCallback</B></A>, <A HREF="k105_29wy.htm"><B>KeRegisterBugCheckCallback</B></A>, <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A>, <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: BugCheckCallback"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
