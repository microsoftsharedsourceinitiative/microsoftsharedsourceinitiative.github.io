<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Queuing I/O Requests While a Device Is Sleeping</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Queuing I/O Requests While a Device Is Sleeping">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_queuing_i_o_requests_while_a_device_is_sleeping_kg"></A>Queuing I/O Requests While a Device Is Sleeping</H2>

<P>While a device is asleep, its drivers should queue any I/O requests directed to the device. The <A HREF="k104_2w4y.htm"><B>IoAllocateWorkItem</B></A>, <A HREF="k104_6ecy.htm"><B>IoQueueWorkItem</B></A>, and <A HREF="k104_6ek2.htm"><B>IoFreeWorkItem</B></A> support routines provide one way of queuing IRPs for delayed processing. For an example, see the queuing mechanism described for PnP drivers in <A HREF="plugplay_8alj.htm">Holding Incoming IRPs When a Device Is Paused</A>.</P>

<P>A driver can access its device only when the device is in the Working (D0) state. A driver cannot touch any device registers when the device is in a sleep state; the device must first be returned to the Working state.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Queuing%20I%2FO%20Requests%20While%20a%20Device%20Is%20Sleeping"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
