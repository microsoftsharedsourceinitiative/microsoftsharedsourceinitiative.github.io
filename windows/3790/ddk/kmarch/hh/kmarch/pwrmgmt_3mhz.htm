<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoCompletion Routines for Wait/Wake IRPs</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoCompletion Routines for Wait/Wake IRPs">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_iocompletion_routines_for_wait_wake_irps_kg"></A><I>IoCompletion</I> Routines for Wait/Wake IRPs</H3>

<P>The I/O Manager calls a driver's wait/wake<I> <A HREF="drvrrtns_4rsi.htm">IoCompletion</A></I> routine after the next-lower driver in the device stack has completed the wait/wake IRP. Each function and filter (FDO) driver that handles a wait/wake IRP should set an<I> IoCompletion</I> routine for the IRP. </P>

<P>Each function or filter driver sets an<I> IoCompletion</I> routine as it handles the wait/wake IRP on its way down the device stack. The device power policy owner, which sends the IRP, might therefore have an<I> IoCompletion</I> routine in addition to a callback routine. Keep in mind that the callback routine is invoked after the<I> IoCompletion</I> routine and that the two have different requirements. For more information, see <A HREF="pwrmgmt_27fr.htm">Wait/Wake Callback Routines</A>. </P>

<P>The actions required in a wait/wake<I> IoCompletion</I> routine depend on the device and the type of driver. The following are some actions a driver might need to perform in its wait/wake<I> IoCompletion</I> routine:

<OL>
	<LI>Reset any relevant fields in the device extension. For example, when a wait/wake IRP is pending, most drivers set a flag and keep a pointer to the IRP in the device extension.</LI>

	<LI>Reset the <I>Cancel</I> routine, if any, for the IRP by calling <A HREF="k104_6hiq.htm"><B>IoSetCancelRoutine</B></A>, specifying a NULL pointer for the routine.</LI>

	<LI>Call <B>IoCompleteRequest</B>, specifying IO_NO_INCREMENT, to complete the IRP. </LI>
</OL>

<P>As each successive driver completes the IRP, the I/O Manager passes control to the<I> IoCompletion</I> routine of the next-higher driver going back up the stack. </P>

<P>After calling the<I> IoCompletion</I> routines set by drivers as they passed the wait/wake IRP down the device stack, the I/O Manager calls the callback routine passed to <A HREF="portn_55gy.htm"><B>PoRequestPowerIrp</B></A> by the driver that sent the IRP. For further information, see <A HREF="pwrmgmt_27fr.htm">Wait/Wake Callback Routines</A>. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoCompletion%20Routines%20for%20Wait%2FWake%20IRPs"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
