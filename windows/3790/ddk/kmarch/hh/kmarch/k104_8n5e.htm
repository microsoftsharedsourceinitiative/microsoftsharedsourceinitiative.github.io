<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoReleaseRemoveLock</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoReleaseRemoveLock">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioreleaseremovelock_kr"></A>IoReleaseRemoveLock</H1>

<P>The <B>IoReleaseRemoveLock</B> routine releases a remove lock acquired with a previous call to <A HREF="k104_6tde.htm"><B>IoAcquireRemoveLock</B></A>. </P>

<PRE class=syntax><B>VOID
</B>  <B>IoReleaseRemoveLock(</B>
    <B>IN PIO_REMOVE_LOCK </B> <I>RemoveLock</I><B>,</B>
    <B>IN PVOID </B> <I>Tag</I> 
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>RemoveLock</I></DT>

<DD>Pointer to an IO_REMOVE_LOCK structure that the caller passed to a previous call to <B>IoAcquireRemoveLock</B>. </DD>

<DT><I>Tag</I></DT>

<DD>Pointer to a caller-supplied tag that was passed to a previous call to <B>IoAcquireRemoveLock</B>. 

<P>If a driver specified a <I>Tag</I> when it acquired the lock, the driver must specify the same <I>Tag</I> when releasing the lock. If the tags do not match, this routine asserts on a checked build.


<P>If the call to <B>IoAcquireRemoveLock</B> did not specify a <I>Tag</I>, then this parameter is NULL.


<P>The I/O system only uses this parameter on checked builds.

</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h. </I>Include <I>ntddk.h.</I></P>

<H4>Comments</H4>

<P>A driver calls <B>IoReleaseRemoveLock</B> when it has completed the I/O operation for which it called <A HREF="k104_6tde.htm"><B>IoAcquireRemoveLock</B></A>. 

<UL>
	<LI>For I/O operations (including power and PnP IRPs) that set an <I>IoCompletion</I> routine, a driver should call <B>IoReleaseRemoveLock</B> in the <I>IoCompletion</I> routine, after calling <A HREF="k104_1fhu.htm"><B>IoCompleteRequest</B></A>. </LI>

	<LI>For I/O operations that do not set an <I>IoCompletion</I> routine, a driver should call <B>IoReleaseRemoveLock</B> after passing the current IRP to the next-lower driver, but before exiting the dispatch routine.</LI>
</UL>

<P>Each call to <A HREF="k104_6tde.htm"><B>IoAcquireRemoveLock</B></A> must have a corresponding call to <B>IoReleaseRemoveLock</B>. </P>

<P><B>IoReleaseRemoveLock</B> decrements the count of outstanding acquisitions of the remove lock. If the count goes to zero and the driver has received an <A HREF="pnp-irps_4noy.htm">IRP_MN_REMOVE_DEVICE</A> request, <B>IoReleaseRemoveLock</B> sets an internal event. When a driver is ready to delete a device object, it calls a similar routine, <A HREF="k104_5zg2.htm"><B>IoReleaseRemoveLockAndWait</B></A>. The driver makes this call only in its dispatch code for an IRP_MN_REMOVE_DEVICE request. The <B>IoReleaseRemoveLockAndWait</B> routine does not return until <B>IoReleaseRemoveLock</B> sets the event that indicates the acquisition count is zero. After <B>IoReleaseRemoveLockAndWait</B> returns, the driver can safely detach and delete the device object.</P>

<P>Callers of <B>IoReleaseRemoveLock</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<P>For more information, see <A HREF="plugplay_80iv.htm">Using Remove Locks</A>.</P>

<P></P>

<H4>SeeAlso</H4>

<P><A HREF="k104_6tde.htm"><B>IoAcquireRemoveLock</B></A>, <A HREF="k104_814i.htm"><B>IoInitializeRemoveLock</B></A>, <A HREF="k104_5zg2.htm"><B>IoReleaseRemoveLockAndWait</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoReleaseRemoveLock"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
