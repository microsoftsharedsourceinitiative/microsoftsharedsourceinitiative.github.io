<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP_MN_QUERY_STOP_DEVICE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IRP_MN_QUERY_STOP_DEVICE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_irp_mn_query_stop_device_dr"></A>IRP_MN_QUERY_STOP_DEVICE</H1>

<P>All PnP drivers must handle this IRP.</P>

<H4>Major Code</H4>

<P><A HREF="k113_8ur6.htm">IRP_MJ_PNP</A> </P>

<H4>When Sent</H4>

<P>The PnP Manager sends this IRP to query whether a device can be stopped to rebalance resources. </P>

<P>On Windows 98/Me, the PnP Manager also sends this IRP when a device is being disabled. </P>

<P>The PnP Manager sends this IRP at IRQL PASSIVE_LEVEL in the context of a system thread.</P>

<H4>Input</H4>

<P>None</P>

<H4>Output</H4>

<P>None</P>

<H4>I/O Status Block</H4>

<P>A driver sets <B>Irp-&gt;IoStatus.Status</B> to STATUS_SUCCESS or to an appropriate error status. If a driver cannot stop the device, the driver sets <B>Irp-&gt;IoStatus.Status</B> to STATUS_UNSUCCESSFUL.</P>

<P>A bus driver can set <B>Irp-&gt;IoStatus.Status</B> to STATUS_RESOURCE_REQUIREMENTS_CHANGED to indicate success for the IRP but also to request that the PnP Manager requery the resource requirements for the device before sending the stop IRP.</P>

<H4>Operation</H4>

<P>This IRP is handled first by the driver at the top of the device stack and then passed down to each lower driver in the stack.</P>

<P>In response to this IRP, Windows 2000 and later drivers indicate whether it is safe to stop the device for resource rebalancing.</P>

<P>On Windows 98/Me, this IRP is sent not only during resource rebalancing, but also when a device is being disabled. Because a driver cannot distinguish these two situations, it should proceed as if the device were being disabled. If there are any open handles to the device, the driver should fail this IRP. If no handles are open, the driver should proceed as described in <A HREF="plugplay_4jaf.htm">Handling an IRP_MN_QUERY_STOP_DEVICE Request (Windows 98/Me)</A>. </P>

<P>See <A HREF="plugplay_15t3.htm">Plug and Play</A> for detailed information on handling stop IRPs and for general rules for handling all <A HREF="pnp-irps_9bzm.htm">Plug and Play Minor IRPs</A>.</P>

<H4>Sending This IRP</H4>

<P>Reserved for system use. Drivers must not send this IRP.</P>

<H4>See Also</H4>

<P><A HREF="pnp-irps_4tpu.htm">IRP_MN_CANCEL_STOP_DEVICE</A>, <A HREF="pnp-irps_1wmq.htm">IRP_MN_DEVICE_USAGE_NOTIFICATION</A>, <A HREF="pnp-irps_1gqa.htm">IRP_MN_START_DEVICE</A>, <A HREF="pnp-irps_3n5e.htm">IRP_MN_STOP_DEVICE</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP_MN_QUERY_STOP_DEVICE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
