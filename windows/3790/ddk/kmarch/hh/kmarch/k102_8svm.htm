<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExAllocatePoolWithQuotaTag</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ExAllocatePoolWithQuotaTag">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_exallocatepoolwithquotatag_kr"></A>ExAllocatePoolWithQuotaTag</H1>

<P>The <B>ExAllocatePoolWithQuotaTag</B> routine allocates pool memory, charging the quota against the current thread. </P>

<PRE class=syntax><B>PVOID 
</B>  <B>ExAllocatePoolWithQuotaTag(</B>
    <B>IN POOL_TYPE</B>  <I>PoolType</I><B>,</B>
    <B>IN SIZE_T</B>  <I>NumberOfBytes</I><B>,</B>
    <B>IN ULONG</B>  <I>Tag</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>PoolType</I></DT>

<DD>Specifies the type of pool memory to allocate. For a description of the available pool memory types, see <A HREF="k112_00fm.htm">POOL_TYPE</A>.</DD>

<DT><I>NumberOfBytes</I></DT>

<DD>Specifies the number of bytes to allocate.</DD>

<DT><I>Tag</I></DT>

<DD>Specifies the pool tag for the allocated memory. Drivers normally specify the pool tag as a string of up to four characters, delimited by single quotation marks. The string is usually specified in reversed order. The ASCII value of each character in the tag must be between 0 and 127.</DD>
</DL>

<P></P>

<H4>Return Value</H4>

<P><B>ExAllocatePoolWithQuotaTag</B> returns a pointer to the allocated pool.</P>

<P>If the request cannot be satisfied, <B>ExAllocatePoolWithQuotaTag</B> raises an exception.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>This routine is called by highest-level drivers that allocate memory to satisfy a request in the context of the thread that originally made the I/O request. Lower-level drivers call <A HREF="k102_2omq.htm"><B>ExAllocatePoolWithTag</B></A> instead.</P>

<P>If <I>NumberOfBytes</I> &gt;= PAGE_SIZE, a page-aligned buffer is allocated.</P>

<P>Memory requests less than PAGE_SIZE are allocated within a page and do not cross page boundaries. Memory requests less than PAGE_SIZE are not necessarily page-aligned but are aligned on an 8-byte boundary.</P>

<P>The system associates the pool tag with the allocated memory. Programming tools, such as WinDbg, can display the pool tag associated with each allocated buffer. The value of <I>Tag</I> is normally displayed in reversed order. For example, if a caller passes ‘Fred’ as a <I>Tag</I>, it would appear as ‘derF’ if the pool is dumped or when tracking pool usage in the debugger.</P>

<P>The allocated buffer can be freed with either <A HREF="k102_6uuq.htm"><B>ExFreePool</B></A> or <A HREF="k102_865u.htm"><B>ExFreePoolWithTag</B></A>.</P>

<P>The system automatically sets certain standard event objects when the amount of pool (paged or nonpaged) is high or low.  Drivers can wait for these events to tune their pool usage.  For more information, see <A HREF="synchro_6n8n.htm">Standard Event Objects</A>.</P>

<P>Callers of <B>ExAllocatePoolWithQuotaTag</B> must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="k102_2omq.htm"><B>ExAllocatePoolWithTag</B></A>, <A HREF="k102_6uuq.htm"><B>ExFreePool</B></A>, <A HREF="k102_865u.htm"><B>ExFreePoolWithTag</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ExAllocatePoolWithQuotaTag"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
