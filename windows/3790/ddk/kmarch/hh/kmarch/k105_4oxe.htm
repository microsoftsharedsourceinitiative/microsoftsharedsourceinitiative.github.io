<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KeInsertByKeyDeviceQueue</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KeInsertByKeyDeviceQueue">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_keinsertbykeydevicequeue_kr"></A>KeInsertByKeyDeviceQueue</H1>

<P>The <B>KeInsertByKeyDeviceQueue</B> routine acquires the spin lock for the given <I>DeviceQueue</I> and queues an entry according to the given sort-key value if the device queue is set to a busy state.</P>

<PRE class=syntax><B>BOOLEAN 
</B>  <B>KeInsertByKeyDeviceQueue(</B>
<B>    IN PKDEVICE_QUEUE</B>  <I>DeviceQueue</I><B>,</B>
<B>    IN PKDEVICE_QUEUE_ENTRY</B>  <I>DeviceQueueEntry</I><B>,</B>
<B>    IN ULONG</B>  <I>SortKey</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceQueue</I></DT>

<DD>Pointer to a control object of the device queue type for which the caller provides the storage.</DD>

<DT><I>DeviceQueueEntry</I></DT>

<DD>Pointer to the device queue entry to be inserted into the device queue according to the specific key value.</DD>

<DT><I>SortKey</I></DT>

<DD>Specifies the sort-key value that determines the position in the device queue in which to insert the entry.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Return Value</H4>

<P>If the device queue is empty, FALSE is returned, meaning the <I>DeviceQueueEntry</I> is not inserted in the device queue.</P>

<H4>Comments</H4>

<P>The given device queue spin lock is acquired and the state of the device queue is checked. If the device queue is set to a busy state, the IRP specified by the <I>DeviceQueueEntry</I> is inserted into the device queue according to its sort key value and the device queue spin lock is released.</P>

<P>The new entry is positioned in the device queue after any entries in the queue with sort key values less than or equal to its sort key value and preceding any entries with sort key values that are greater.</P>

<P>If <B>KeInsertByKeyDeviceQueue</B> returns FALSE, the caller must begin processing the IRP. A call to <A HREF="k105_36b6.htm"><B>KeInsertDeviceQueue</B></A> or <B>KeInsertByKeyDeviceQueue</B> when the queue is empty causes the device queue to transition from a not busy state to a busy state.</P>

<P>This routine is for code that queues an I/O request to a device driver.</P>

<P>Callers of <B>KeInsertByKeyDeviceQueue</B> must be running at IRQL&nbsp;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k105_09te.htm"><B>KeInitializeDeviceQueue</B></A>, <A HREF="k105_36b6.htm"><B>KeInsertDeviceQueue</B></A>, <A HREF="k105_01iq.htm"><B>KeRemoveDeviceQueue</B></A>, <A HREF="k105_6l9u.htm"><B>KeRemoveEntryDeviceQueue</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KeInsertByKeyDeviceQueue"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
