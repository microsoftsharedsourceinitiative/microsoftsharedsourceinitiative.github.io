<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>When to Check the Driver's I/O Stack Location</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="When to Check the Driver's I/O Stack Location">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_scsi_port_i_o_control_codes_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_when_to_check_the_driver_s_i_o_stack_location_kg"></A>When to Check the Driver's I/O Stack Location</H2>

<P>A major I/O function code is set in the driver’s <A HREF="irps_8lgn.htm">I/O stack location</A> for each incoming IRP.</P>

<P>A driver’s dispatch routine must check the driver's I/O stack location for the IRP to determine what to do if any of the following conditions hold:

<UL>
	<LI>The dispatch routine handles more than one major I/O function code.</LI>

	<LI>The dispatch routine must handle a set of minor function codes for certain major function codes. IRPs with minor function codes include <A HREF="k113_8ur6.htm">IRP_MJ_PNP</A> and <A HREF="k113_7jjm.htm">IRP_MJ_POWER</A>, as well as certain IRPs that the SCSI port driver and file system drivers must handle.  </LI>

	<LI>The dispatch routine of a device driver or of a closely coupled higher-level driver handles <A HREF="k113_0hiq.htm">IRP_MJ_DEVICE_CONTROL</A> or <A HREF="k113_2yia.htm">IRP_MJ_INTERNAL_DEVICE_CONTROL</A> requests, which have an associated set of I/O control codes. </LI>
</UL>

<P>To get a pointer to a driver's I/O stack location, its dispatch routine calls <A HREF="k104_89pu.htm"><B>IoGetCurrentIrpStackLocation</B></A>. </P>

<P>Higher-level drivers’ dispatch routines always call <B>IoGetCurrentIrpStackLocation</B> and also call <A HREF="k104_6u5u.htm"><B>IoGetNextIrpStackLocation</B></A> to get a pointer to the next-lower driver’s I/O stack location for IRPs that they set up for the next-lower driver, when <A HREF="irps_1oh3.htm">passing IRPs down the driver stack</A>. </P>

<P>The <A HREF="drvrrtns_0zoy.htm"><I>DispatchDeviceControl</I></A> routine or <A HREF="drvrrtns_0cvm.htm"><I>DispatchInternalDeviceControl</I></A> routine of a device driver, or possibly of its closely coupled class driver(s), must determine which I/O control code is set in the driver’s I/O stack location at <B>Parameters.DeviceIoControl.IoControlCode</B> for each request. The I/O control code is contained in the driver's I/O stack location.</P>

<P>In most cases, the <I>DispatchDeviceControl</I> or <I>DispatchInternalDeviceControl</I> routine of a higher-level driver simply passes an IRP_MJ_DEVICE_CONTROL or IRP_MJ_INTERNAL_DEVICE_CONTROL request on to the next-lower driver, after setting up its stack location in the IRP. However, SCSI class drivers must check for certain <A HREF="JavaScript:hhobj_1.Click()">SCSI port I/O control codes</A> so that they can set up the SCSI port driver’s I/O stack location correctly before passing on these requests.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: When%20to%20Check%20the%20Driver's%20I%2FO%20Stack%20Location"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
