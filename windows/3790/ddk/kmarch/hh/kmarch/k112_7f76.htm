<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DEVICE_DESCRIPTION</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DEVICE_DESCRIPTION">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_device_description_kr"></A>DEVICE_DESCRIPTION</H1>

<P>The DEVICE_DESCRIPTION structure describes the attributes of the physical device for which a driver is requesting a DMA object. </P>

<PRE class=syntax>typedef struct _DEVICE_DESCRIPTION {
  ULONG  Version;
  BOOLEAN  Master;
  BOOLEAN  ScatterGather;
  BOOLEAN  DemandMode;
  BOOLEAN  AutoInitialize;
  BOOLEAN  Dma32BitAddresses;
  BOOLEAN  IgnoreCount;
  BOOLEAN  Reserved1;
  BOOLEAN  Dma64BitAddresses;
  ULONG  BusNumber; 
  ULONG  DmaChannel;
  INTERFACE_TYPE  InterfaceType;
  DMA_WIDTH  DmaWidth;
  DMA_SPEED  DmaSpeed;
  ULONG  MaximumLength;
  ULONG  DmaPort;
} DEVICE_DESCRIPTION, *PDEVICE_DESCRIPTION;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Version</B></DT>

<DD>Specifies the version of this structure. The possible values are:

<DL>
<DT>DEVICE_DESCRIPTION_VERSION</DT>

<DD>When DEVICE_DESCRIPTION is passed to <A HREF="k104_93g2.htm"><B>IoGetDmaAdapter</B></A>, the routine ignores the <B>IgnoreCount</B> member, and returns version 1 of the <A HREF="k112_86k2.htm">DMA_ADAPTER</A> structure.</DD>

<DT>DEVICE_DESCRIPTION_VERSION1</DT>

<DD>When DEVICE_DESCRIPTION is passed to <B>IoGetDmaAdapter</B>, the <B>IgnoreCount</B> member is valid, and returns version 1 of the DMA_ADAPTER structure.</DD>

<DT>DEVICE_DESCRIPTION_VERSION2</DT>

<DD>When DEVICE_DESCRIPTION is passed to <B>IoGetDmaAdapter</B>, the <B>IgnoreCount</B> member is valid, and returns version 2 of the DMA_ADAPTER structure. Version 2 is available on Windows XP and later.</DD>
</DL>
</DD>

<DT><B>Master</B></DT>

<DD>Indicates whether the device runs as a bus-master adapter (TRUE) or a slave DMA device (FALSE).</DD>

<DT><B>ScatterGather</B></DT>

<DD>Indicates whether the device supports scatter/gather DMA.</DD>

<DT><B>DemandMode</B></DT>

<DD>Indicates whether to use the system DMA controller's demand mode. Not used for bus-master DMA.</DD>

<DT><B>AutoInitialize</B></DT>

<DD>Indicates whether to use the system DMA controller's autoinitialize mode. Not used for bus-master DMA.</DD>

<DT><B>Dma32BitAddresses</B></DT>

<DD>Specifies the use of 32-bit addresses for DMA operations.</DD>

<DT><B>IgnoreCount</B></DT>

<DD>Indicates whether to ignore the DMA controller's transfer counter. Set to TRUE if the DMA controller in this platform does not maintain an accurate transfer counter, and therefore requires a workaround. If the <B>Version</B> member is DEVICE_DESCRIPTION_VERSION, the value of <B>IgnoreCount</B> is ignored.</DD>

<DT><B>Reserved1</B></DT>

<DD>Reserved for system use. Must be FALSE.</DD>

<DT><B>Dma64BitAddresses</B></DT>

<DD>Specifies the use of 64-bit addresses for DMA operations.</DD>

<DT><B>BusNumber</B></DT>

<DD>Specifies the system-assigned value for the I/O bus. Not used by WDM drivers.</DD>

<DT><B>DmaChannel</B></DT>

<DD>Specifies the channel number to which a slave device is attached.</DD>

<DT><B>InterfaceType</B></DT>

<DD>Specifies the type of I/O bus involved in the DMA operation.</DD>

<DT><B>DmaWidth</B></DT>

<DD>Specifies the DMA data size for system DMA. Possible values are <B>Width8Bits</B>, <B>Width16Bits</B>, and <B>Width32Bits</B>. Not used for bus-master DMA.</DD>

<DT><B>DmaSpeed</B></DT>

<DD>Specifies one of the following speeds for system DMA: <B>Compatible</B>, <B>TypeA</B>, <B>TypeB</B>, <B>TypeC</B>, or <B>TypeF</B>. Not used for bus-master DMA. </DD>

<DT><B>MaximumLength</B></DT>

<DD>Specifies the maximum number of bytes the device can handle in each DMA operation. </DD>

<DT><B>DmaPort</B></DT>

<DD>Specifies the Microchannel-type bus port number. This parameter is obsolete, but is retained in the structure for compatibility with legacy drivers.
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>Drivers of devices that use DMA to transfer data use this structure to pass device information when requesting a DMA object. A driver should first zero-initialize the structure, then fill in the information for its device.</P>

<P>The <B>InterfaceType</B> specifies the bus interface. At present, its value can be one of the following: <B>Internal</B>, <B>Isa</B>, <B>Eisa,</B> or <B>PCIBus</B>. Additional types of buses will be supported in future versions of the operating system. The upper bound on the types of buses supported is always <B>MaximumInterfaceType</B>. </P>

<P>Setting <B>Version</B> to DEVICE_DESCRIPTION_VERSION1 or DEVICE_DESCRIPTION_VERSION2 and <B>IgnoreCount</B> to TRUE indicates that the current platform’s DMA controller cannot be relied on to maintain an accurate transfer counter. In platforms with such a DMA controller, the system ignores the DMA counter but must take extra precautions to maintain data integrity during transfer operations. Using this workaround to compensate for a deficient DMA controller degrades the speed of DMA transfers. </P>

<P>A driver should specify <B>TypeF</B> as the <B>DmaSpeed</B> value only if the machine's ACPI BIOS supports it.</P>

<H4>See Also</H4>

<P><A HREF="k104_93g2.htm"><B>IoGetDmaAdapter</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DEVICE_DESCRIPTION"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
