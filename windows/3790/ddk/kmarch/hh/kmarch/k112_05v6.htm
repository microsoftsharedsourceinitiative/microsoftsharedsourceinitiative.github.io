<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EVENT_TRACE_HEADER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EVENT_TRACE_HEADER">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_event_trace_header_kr"></A>EVENT_TRACE_HEADER</H1>

<P>The EVENT_TRACE_HEADER structure is used to pass a WMI event to the WMI event logger. It is overlaid on the <A HREF="k112_26gi.htm">WNODE_HEADER</A> portion of the <A HREF="k112_45de.htm">WNODE_EVENT_ITEM</A> passed to <A HREF="k104_2uya.htm"><B>IoWMIWriteEvent</B></A>. Information contained in the EVENT_TRACE_HEADER is written to the WMI log file.</P>

<PRE class=syntax>typedef struct _EVENT_TRACE_HEADER {
  USHORT           Size;
  UCHAR            HeaderType;
  UCHAR            MarkerFlags;
  union {
    ULONG         Version;
    struct {
      UCHAR     Type;
      UCHAR     Level;
      USHORT    Version;
    } Class;
  };
  ULONGLONG        ThreadId;
  LARGE_INTEGER    TimeStamp;
  union {
    GUID          Guid;
    ULONGULONG    GuidPtr;
  };
  union {
    struct {
      ULONG     ClientContext;
      ULONG     Flags;
    };
    struct {
      ULONG     KernelTime;
      ULONG     UserTime;
    };
  ULONG64          ProcessorTime;
} EVENT_TRACE_HEADER; *PEVENT_TRACE_HEADER;</PRE>

<H4>Members</H4>

<DL>
<DT><B>Size</B></DT>

<DD>Specifies the size in bytes of this structure. This value should be set to - <B>sizeof(</B>EVENT_TRACE_HEADER<B>)</B> plus the size of any driver data appended to the end of this structure. (Note: The sizeof this member is smaller than the sizeof the <B>Size</B> member of the WNODE_HEADER structure on which this structure is overlaid.)</DD>

<DT><B>HeaderType</B></DT>

<DD>Reserved for internal use.</DD>

<DT><B>MarkerFlags</B></DT>

<DD>Reserved for internal use.</DD>

<DT><B>Version</B></DT>

<DD>Drivers can use this member to store version information. This information is not interpreted by the event logger.</DD>

<DT><B>Class</B></DT>

<DD>

<DL>
<DT><B>Type</B></DT>

<DD>Trace event type. This can be one of the predefined EVENT_TRACE_TYPE_Xxx values contained in evntrace.h or can be a driver defined value. Callers are free to define private event types with values greater than the reserved values in evntrace.h.</DD>

<DT><B>Level</B></DT>

<DD>Trace instrumentation level. A driver defined value meant to represent the degree of detail of the trace instrumentation. Drivers are free to give this value meaning. This value should be 0 by default. More information on how consumers can request different levels of trace information will be provided in a future version of the documentation.  </DD>

<DT><B>Version</B></DT>

<DD>Version of trace record. Version information that can be used by the driver to track different event formats.</DD>
</DL>
</DD>

<DT><B>ThreadId</B></DT>

<DD>Reserved for internal use.</DD>

<DT><B>TimeStamp</B></DT>

<DD>Indicates the time the driver event occurred. This time is indicated in units of 100 nanoseconds since 1/1/1601. If the WNODE_FLAG_USE_TIMESTAMP is set in <B>Flags,</B> the system logger will leave the value of TimeStamp unchanged. Otherwise, the system logger will set the value of <B>TimeStamp</B> at the time it receives the event. A driver can call <B>KeQuerySystemTime</B> to set the value of <B>TimeStamp</B>.</DD>

<DT><B>Guid</B></DT>

<DD>Indicates the GUID that identifies the data block for the event.</DD>

<DT><B>GuidPtr</B></DT>

<DD>If the WNODE_FLAG_USE_GUID_PTR is set in <B>Flags</B>, <B>GuidPtr</B> points to the GUID that identifies the data block for the event.</DD>

<DT><B>ClientContext</B></DT>

<DD>Reserved for internal use.</DD>

<DT><B>Flags</B></DT>

<DD>Provides information about the contents of this structure. For information on EVENT_TRACE_HEADER <B>Flags</B> values, see the <B>Flags</B> description in WNODE_HEADER.</DD>

<DT><B>KernelTime</B></DT>

<DD>Reserved for internal use.</DD>

<DT><B>UserTime</B></DT>

<DD>Reserved.</DD>

<DT><B>ProcessorTime</B></DT>

<DD>Reserved for internal use.</DD>
</DL>

<H4>Comments</H4>

<P>A driver which supports trace events will use this structure to report events to the WMI event logger. Trace events should not be reported until the driver receives a request to enable events and the control GUID is one the driver supports. The driver should initialize an EVENT_TRACE_HEADER structure, fill in any user defined event data at the end and pass a pointer to the EVENT_TRACE_HEADER to <B>IoWmiWriteEvent</B>. The driver should continue reporting trace events until it receives a request to disable the control GUID for the trace events.</P>

<H4>See Also</H4>

<P><A HREF="k112_26gi.htm">WNODE_HEADER</A>, <A HREF="k112_45de.htm">WNODE_EVENT_ITEM</A>, <A HREF="k104_2uya.htm"><B>IoWMIWriteEvent</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EVENT_TRACE_HEADER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
