<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ZwCreateKey</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ZwCreateKey">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_zwcreatekey_kr"></A>ZwCreateKey</H1>

<P>The <B>ZwCreateKey</B> routine opens an existing key or creates a new key in the registry.</P>

<PRE class=syntax><B>NTSTATUS 
</B>  <B>ZwCreateKey(</B>
    <B>OUT PHANDLE</B>  <I>KeyHandle</I><B>,</B>
    <B>IN ACCESS_MASK</B>  <I>DesiredAccess</I><B>,</B>
    <B>IN POBJECT_ATTRIBUTES</B>  <I>ObjectAttributes</I><B>,</B>
    <B>IN ULONG</B>  <I>TitleIndex</I><B>,</B>
    <B>IN PUNICODE_STRING</B>  <I>Class</I>  <B>OPTIONAL,</B>
    <B>IN ULONG</B>  <I>CreateOptions</I><B>,</B>
    <B>OUT PULONG</B>  <I>Disposition</I>  <B>OPTIONAL</B>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>KeyHandle</I></DT>

<DD>Pointer to a returned handle for a newly created or existing key if this call is successful. The driver must close the handle with <A HREF="k111_03aq.htm"><B>ZwClose</B></A> once the handle is no longer in use.</DD>

<DT><I>DesiredAccess</I></DT>

<DD>Specifies the <A HREF="k112_9sfm.htm">ACCESS_MASK</A> value that expresses the type of access that the caller requires to the key. The set of system-defined <I>DesiredAccess</I> flags determines the following specific access rights for key objects.

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>DesiredAccess Flags</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_QUERY_VALUE</TD>
<TD width=52%>Value entries for the key can be read.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_SET_VALUE</TD>
<TD width=52%>Value entries for the key can be written.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_CREATE_SUB_KEY</TD>
<TD width=52%>Subkeys for the key can be created.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_ENUMERATE_SUB_KEYS</TD>
<TD width=52%>All subkeys for the key can be read.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_NOTIFY</TD>
<TD width=52%>This flag is irrelevant to device and intermediate drivers, and to other kernel-mode code.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_CREATE_LINK</TD>
<TD width=52%>A symbolic link to the key can be created. This flag is irrelvant to device and intermediate drivers.</TD>
</TR>
</TABLE><BR>



<P>Callers of <B>ZwCreateKey</B> can specify one or a compatible combination of the following for any key object.


<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>DesiredAccess to Key Values</TH>
<TH align=left width=52%>Maps to <I>DesiredAccess</I> Flags</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_READ</TD>
<TD width=52%>STANDARD_RIGHTS_READ, KEY_QUERY_VALUE, KEY_ENUMERATE_SUB_KEYS, and KEY_NOTIFY</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_WRITE</TD>
<TD width=52%>STANDARD_RIGHTS_WRITE, KEY_SET_VALUE, and KEY_CREATE_SUBKEY</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_EXECUTE</TD>
<TD width=52%>KEY_READ. This value is irrelevant to device and intermediate drivers.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>KEY_ALL_ACCESS</TD>
<TD width=52%>STANDARD_RIGHTS_ALL, KEY_QUERY_VALUE, KEY_SET_VALUE, KEY_CREATE_SUB_KEY, KEY_ENUMERATE_SUBKEY, KEY_NOTIFY and KEY_CREATE_LINK</TD>
</TR>
</TABLE><BR>



<P>The STANDARD_RIGHTS_<I>XXX</I> are predefined system values used to enforce security on system objects.
</DD>

<DT><I>ObjectAttributes</I></DT>

<DD>Pointer to the initialized object attributes of the key being opened or created. An <B>ObjectName</B> string for the key must be specified. If a <B>RootDirectory</B> handle also is supplied, the given name is relative to the key represented by the handle. Any given name must be within the object name space allocated to the registry, meaning that all names must begin with <B>\Registry</B>. <B>RootHandle,</B> if present, must be a handle to the root directory object, to <B>\Registry</B>, or to a key under <B>\Registry</B>. If the caller is not running in the system process context, it must set the OBJ_KERNEL_HANDLE attribute for <I>ObjectAttributes</I>. For more information, see <A HREF="k109_66uq.htm"><B>InitializeObjectAttributes</B></A>.</DD>

<DT><I>TitleIndex</I></DT>

<DD>Device and intermediate drivers should set this parameter to zero.</DD>

<DT><I>Class</I></DT>

<DD>Pointer to the object class of the key. To the Configuration Manager, this is just a Unicode string.</DD>

<DT><I>CreateOptions</I></DT>

<DD>Specifies options to be applied when creating a key, as a compatible combination of the following.

<TABLE>

<TR VALIGN="top">
<TH align=left width=49%>Value</TH>
<TH align=left width=51%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_OPTION_VOLATILE</TD>
<TD width=51%>Key is not to be stored across boots.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_OPTION_NON_VOLATILE</TD>
<TD width=51%>Key is preserved when the system is rebooted.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_OPTION_CREATE_LINK</TD>
<TD width=51%>The created key is a symbolic link. This value is irrelevant to device and intermediate drivers.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>REG_OPTION_BACKUP_RESTORE</TD>
<TD width=51%>Key is being opened or created with special privileges allowing backup/restore operations. This value is irrelevant to device and intermediate drivers.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>Disposition</I></DT>

<DD>Pointer to a variable that receives a value indicating whether a new key was created in the <B>\Registry</B> tree or an existing one opened.

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Value</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>REG_CREATED_NEW_KEY</TD>
<TD width=52%>A new key object was created.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>REG_OPENED_EXISTING_KEY</TD>
<TD width=52%>An existing key object was opened.</TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Return Value</H4>

<P><B>ZwCreateKey</B> returns STATUS_SUCCESS if the given key was created or opened, or the appropriate error status on failure.</P>

<H4>Comments</H4>

<P>If the key specified by <I>ObjectAttributes</I> does not exist, an attempt is made to create it. For this attempt to succeed, the new key must be a direct subkey of the key referred to by <I>KeyHandle</I>, and the given <I>KeyHandle</I> must have been opened for KEY_CREATE_SUB_KEY access.</P>

<P>If the specified key already exists, it is opened and its value is not affected in any way.</P>

<P>The security attributes specified by <I>ObjectAttributes</I> when a key is created determine whether the specified <I>DesiredAccess</I> is granted on subsequent calls to <B>ZwCreateKey</B> and <A HREF="k111_55pu.htm"><B>ZwOpenKey</B></A>.</P>

<P>Driver routines that run in a process context other than that of the system process must set the OBJ_KERNEL_HANDLE attribute for the <I>ObjectAttributes</I> parameter of <B>ZwCreateKey</B>. This restricts the use of the handle returned by <B>ZwCreateKey</B> to processes running only in kernel mode. Otherwise, the handle can be accessed by the process in whose context the driver is running. Drivers can call <A HREF="k109_66uq.htm"><B>InitializeObjectAttributes</B></A> to set the OBJ_KERNEL_HANDLE attribute as follows.</P>

<PRE>InitializeObjectAttributes(&amp;ObjectAttributes, NULL, OBJ_KERNEL_HANDLE, NULL, NULL);
</PRE>

<P>Callers of <B>ZwCreateKey</B> must be running at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k112_9sfm.htm">ACCESS_MASK</A>, <A HREF="k109_66uq.htm"><B>InitializeObjectAttributes</B></A>, <A HREF="k111_03aq.htm"><B>ZwClose</B></A>, <A HREF="k111_550y.htm"><B>ZwDeleteKey</B></A>, <A HREF="k111_3wvm.htm"><B>ZwEnumerateKey</B></A>, <A HREF="k111_9dtf.htm"><B>ZwEnumerateValueKey</B></A>, <A HREF="k111_95wy.htm"><B>ZwFlushKey</B></A>, <A HREF="k111_55pu.htm"><B>ZwOpenKey</B></A>, <A HREF="k111_9qya.htm"><B>ZwQueryValueKey</B></A>, <A HREF="k111_5yya.htm"><B>ZwSetValueKey</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ZwCreateKey"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
