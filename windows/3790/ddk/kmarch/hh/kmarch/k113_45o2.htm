<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP_MJ_WRITE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IRP_MJ_WRITE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_irp_mj_write_kr"></A>IRP_MJ_WRITE</H1>

<P>Every device driver that transfers data from the system to its device must handle write requests in a <A HREF="drvrrtns_6mr6.htm"><I>DispatchWrite</I></A> or <A HREF="drvrrtns_7lbm.htm"><I>DispatchReadWrite</I></A> routine, as must any higher-level driver layered over such a device driver.</P>

<H4>When Sent</H4>

<P>Any time following the successful completion of a create request.</P>

<P>Possibly, a user-mode application or Win32 component with a handle for the file object representing the target device object has requested a data transfer to the device. Possibly, a higher-level driver has created and set up the write IRP.</P>

<H4>Input Parameters</H4>

<P>The driver’s I/O stack location in the IRP indicates how many bytes to transfer at <B>Parameters.Write.Length</B>.</P>

<P>Some drivers use the value at <B>Parameters.Write.Key</B> to sort incoming write requests into a driver-determined order in the device queue or in a driver-managed internal queue of IRPs. Certain types of drivers also use the value at <B>Parameters.Write.ByteOffset</B>, which indicates the starting offset for the transfer operation.</P>

<P>Depending on whether the underlying device driver sets up the target device object’s <B>Flags</B> with DO_BUFFERED_IO or with DO_DIRECT_IO, data is transferred from one of the following:

<UL>
	<LI>The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>, if the driver uses buffered I/O</LI>

	<LI>The buffer described by the MDL at <B>Irp-&gt;MdlAddress</B>, if the underlying device driver uses direct I/O (DMA or PIO)</LI>
</UL>

<H4>Output Parameters</H4>

<P>None</P>

<H4>Operation</H4>

<P>On receipt of a write request, a higher-level driver sets up the I/O stack location in the IRP for the next-lower driver, or it creates and sets up additional IRPs for one or more lower drivers. It can set up its IoCompletion routine, which is optional for the input IRP but required for driver-created IRPs, by calling <A HREF="k104_5w6q.htm"><B>IoSetCompletionRoutine</B></A>. Then, the driver passes the request on to the next-lower driver with <A HREF="k104_1agi.htm"><B>IoCallDriver</B></A>.</P>

<P>On receipt of a write request, a device driver transfers data from system memory to its device. The device driver sets the <B>Information</B> field of the I/O status block to the number of bytes transferred when it completes the IRP.</P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP_MJ_WRITE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
