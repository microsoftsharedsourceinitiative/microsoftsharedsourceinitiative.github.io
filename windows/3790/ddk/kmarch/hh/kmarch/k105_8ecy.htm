<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KeRegisterBugCheckReasonCallback</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KeRegisterBugCheckReasonCallback">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_debugging_tools_for_nt_based_operating_systems_tools">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_keregisterbugcheckreasoncallback_kr"></A>KeRegisterBugCheckReasonCallback</H1>

<P>The <B>KeRegisterBugCheckReasonCallback</B> routine registers <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A> and <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> routines, which execute when the system issues a bug check.</P>

<PRE class=syntax><B>NTKERNELAPI
BOOLEAN
  KeRegisterBugCheckReasonCallback (
    IN PKBUGCHECK_REASON_CALLBACK_RECORD </B><I>CallbackRecord</I><B>,</B>
<B>    IN PKBUGCHECK_REASON_CALLBACK_ROUTINE </B><I>CallbackRoutine</I><B>,</B>
<B>    IN KBUGCHECK_CALLBACK_REASON </B><I>Reason</I><B>,</B>
<B>    IN PUCHAR </B><I>Component</I> 
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>CallbackRecord</I></DT>

<DD>Pointer to a KBUGCHECK_REASON_CALLBACK_RECORD structure that was initialized by <A HREF="k105_0oxe.htm"><B>KeInitializeCallbackRecord</B></A>.</DD>

<DT><I>CallbackRoutine</I></DT>

<DD>Pointer to the <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A> or <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> routine to register.</DD>

<DT><I>Reason</I></DT>

<DD>Specifies a KBUGCHECK_CALLBACK_REASON value that determines when the callback is called. Use <B>KbCallbackDumpIo</B> to specify a <I>BugCheckDumpIoCallback</I> routine, or <B>KbCallbackSecondaryDumpData</B> to specify a <I>BugCheckSecondaryDumpDataCallback</I> routine.</DD>

<DT><I>Component</I></DT>

<DD>Pointer to a zero-terminated ANSI string that identifies the caller. This string usually describes the name of the device driver, or possibly of its device. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>KeRegisterBugCheckReasonCallback</B> returns TRUE if the callback is successfully registered; otherwise, this routine returns FALSE.</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h</I>. Include <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>This routine is only available in Windows&nbsp;XP Service Pack 1 (SP1), Windows Server 2003, and later operating systems.</P>

<P>Drivers can use <B>KeRegisterBugCheckReasonCallback</B> to register routines that execute during a system bug check. <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> routines are called to poll drivers for any device-specific information that should be attached to the crash dump file. <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A> routines are called each time data is written to the crash dump file. Drivers for devices that monitor the system state can register a <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A> routine to copy the crash dump data to the monitoring device.</P>

<P>Drivers can use the <A HREF="k105_0pma.htm"><B>KeDeregisterBugCheckReasonCallback</B></A> routine to remove the callback. Any driver that can be unloaded must remove all of its callbacks in its <A HREF="drvrrtns_7d82.htm"><I>Unload</I></A> routine.</P>

<P>To display secondary dump data, you can use the <B>.enumtag</B> command or the <B>IDebugDataSpaces3::ReadTagged</B> method in a debugger extension. It is also possible to debug the bug check callback routine itself. For information about debuggers and debugger extensions, see <A HREF="JavaScript:hhobj_1.Click()">Debugging Tools for NT-Based Operating Systems</A>.</P>

<P>Callers of <B>KeRegisterBugCheckReasonCallback</B> can be running at any IRQL.</P>

<H4>See Also</H4>

<P><A HREF="k105_0pma.htm"><B>KeDeregisterBugCheckReasonCallback</B></A>, <A HREF="k105_0oxe.htm"><B>KeInitializeCallbackRecord</B></A>, <A HREF="k105_29wy.htm"><B>KeRegisterBugCheckCallback</B></A>, <A HREF="drvrrtns_0m2a.htm"><I>BugCheckCallback</I></A>, <A HREF="drvrrtns_85gy.htm"><I>BugCheckDumpIoCallback</I></A>, <A HREF="drvrrtns_5x2q.htm"><I>BugCheckSecondaryDumpDataCallback</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KeRegisterBugCheckReasonCallback"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
