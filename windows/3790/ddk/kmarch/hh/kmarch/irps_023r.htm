<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Security Issues for I/O Control Codes</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Security Issues for I/O Control Codes">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_security_issues_for_i_o_control_codes_kg"></A>Security Issues for I/O Control Codes</H2>

<P>Secure processing of IRPs that contain I/O control codes depends on defining IOCTL codes properly and on carefully examining parameters that the driver receives with the IRP.</P>

<P>When defining new IOCTL codes, use the following rules:

<UL>
	<LI>Always specify a <I>FunctionCode</I> value that is equal to or greater than 0x800.</LI>

	<LI>Always specify an <I>RequiredAccess</I> value. The I/O Manager does not send IOCTLs if the caller has insufficient access rights.</LI>

	<LI>Do not define IOCTL codes that allow callers to read or write non-specific areas of kernel memory.</LI>
</UL>

<P>When processing IOCTL codes within a driver, use the following rules:

<UL>
	<LI>Whenever a driver's dispatch routines test received IOCTL codes, they must always test the entire 32-bit value.</LI>

	<LI>Drivers can use <A HREF="k104_3oz6.htm"><B>IoValidateDeviceIoControlAccess</B></A> to dynamically perform stricter access checking than that specified by the <I>RequiredAccess</I> value in the definition of the I/O control code. </LI>

	<LI>Never read or write more data than the buffer that is pointed to by <B>Irp-&gt;AssociatedIrp.SystemBuffer</B> can contain. Therefore, always check <B>Parameters.DeviceIoControl.InputBufferLength</B> or <B>Parameters.DeviceIoControl.OutputBufferLength</B> in the IO_STACK_LOCATION structure to determine buffer limits.</LI>

	<LI>Always zero driver-allocated buffers that will contain data intended for an application that originated an IOCTL request. That way, you will not accidentally copy sensitive data to the application.</LI>

	<LI>For METHOD_IN_DIRECT and METHOD_OUT_DIRECT transfers, follow the rules above. Additionally, check for a NULL return value from <A HREF="k106_0nqq.htm"><B>MmGetSystemAddressForMdlSafe</B></A>, which indicates that mapping failed or that a zero-length buffer was supplied.</LI>

	<LI>For METHOD_NEITHER transfers, follow the rules that are provided in <A HREF="iputoput_3cbr.htm">Using Neither Buffered Nor Direct I/O</A>.</LI>
</UL>

<H1></H1>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Security%20Issues%20for%20I%2FO%20Control%20Codes"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
