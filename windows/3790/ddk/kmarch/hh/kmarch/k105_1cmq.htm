<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KeReleaseSemaphore</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KeReleaseSemaphore">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_kereleasesemaphore_kr"></A>KeReleaseSemaphore</H1>

<P>The <B>KeReleaseSemaphore</B> routine releases a given semaphore object. </P>

<PRE class=syntax><B>LONG 
</B>  <B>KeReleaseSemaphore(</B>
<B>    IN PRKSEMAPHORE</B>  <I>Semaphore</I><B>,</B>
<B>    IN KPRIORITY  </B><I>Increment</I><B>,</B>
<B>    IN LONG</B>  <I>Adjustment</I><B>,</B>
<B>    IN BOOLEAN</B>  <I>Wait</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Semaphore</I></DT>

<DD>Pointer to an initialized semaphore object for which the caller provides the storage.</DD>

<DT><I>Increment</I></DT>

<DD>Specifies the priority increment to be applied if releasing the semaphore causes a wait to be satisfied.</DD>

<DT><I>Adjustment</I></DT>

<DD>Specifies a value to be added to the current semaphore count. This value must be positive.</DD>

<DT><I>Wait</I></DT>

<DD>Specifies whether the call to <B>KeReleaseSemaphore</B> is to be followed <I>immediately</I> by a call to one of the <B>KeWait</B><I>Xxx</I>.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the return value is zero, the previous state of the semaphore object is not signaled.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P><B>KeReleaseSemaphore</B> supplies a run-time priority boost for waiting threads. If this call sets the semaphore to the signaled state, the semaphore count is augmented by the given value. The caller can also specify whether it will call one of the <B>KeWait</B><I>Xxx</I> routines as soon as <B>KeReleaseSemaphore</B> returns control.</P>

<P>Releasing a semaphore object causes the semaphore count to be augmented by the value of the <I>Adjustment</I> parameter. If the resulting value is greater than the limit of the semaphore object, the count is not adjusted and an exception, STATUS_SEMAPHORE_COUNT_EXCEEDED, is raised.</P>

<P>Augmenting the semaphore object count causes the semaphore to attain a signaled state, and an attempt is made to satisfy as many waits as possible on the semaphore object.</P>

<P>If the value of the <I>Wait</I> parameter is TRUE, the return to the caller is executed without lowering IRQL or releasing the dispatcher database spin lock. Therefore, the call to <B>KeReleaseSemaphore</B> <I>must</I> be followed <I>immediately</I> by a call to one of the <B>KeWait</B><I>Xxx</I>.</P>

<P>This capability allows the caller to release a semaphore and to wait as one atomic operation, preventing a possibly superfluous context switch. However, the caller cannot wait at raised IRQL nor in an arbitrary thread context for a nonzero interval on a semaphore object.</P>

<P>Callers of <B>KeReleaseSemaphore</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL provided that <I>Wait</I> is set to FALSE. Otherwise, the caller must be running at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k105_4zhu.htm"><B>KeInitializeSemaphore</B></A>, <A HREF="k105_1i5u.htm"><B>KeReadStateSemaphore</B></A>, <A HREF="k105_18oi.htm"><B>KeWaitForMultipleObjects</B></A>, <A HREF="k105_40c2.htm"><B>KeWaitForSingleObject</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KeReleaseSemaphore"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
