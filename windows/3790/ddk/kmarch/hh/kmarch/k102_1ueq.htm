<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ExAcquireFastMutexUnsafe</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ExAcquireFastMutexUnsafe">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_exacquirefastmutexunsafe_kr"></A>ExAcquireFastMutexUnsafe</H1>

<P>The <B>ExAcquireFastMutexUnsafe</B> routine acquires the given fast mutex for the current thread. </P>

<PRE class=syntax><B>VOID 
</B>  <B>ExAcquireFastMutexUnsafe(</B>
  <B>IN PFAST_MUTEX</B>  <I>FastMutex</I>
    <B>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>FastMutex</I></DT>

<DD>Pointer to an initialized fast mutex for which the caller provides the storage. 
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P><B>ExAcquireFastMutexUnsafe</B> puts the caller into a wait state if the given fast mutex cannot be acquired immediately. Otherwise, the caller is given ownership of the fast mutex and exclusive access to the resource it protects until it releases the fast mutex. </P>

<P>Any fast mutex that is acquired using <B>ExAcquireFastMutexUnsafe</B> must be released with <B>ExReleaseFastMutexUnsafe</B>. </P>

<P>Callers of <B>ExAcquireFastMutexUnsafe</B> must ensure that APCs are not delivered to the current thread while the fast mutex is held. This can be accomplished in one of two ways: 

<OL>
	<LI>Callers can set the IRQL&nbsp;= APC_LEVEL before calling <B>ExAcquireFastMutexUnsafe</B>.</LI>

	<LI>Callers can invoke <B>ExAcquireFastMutexUnsafe</B> from within a critical section by calling <B>KeEnterCriticalRegion</B> prior to calling <B>ExAcquireFastMutexUnsafe</B>. </LI>
</OL>

<P>If the caller chooses to invoke <B>ExAcquireFastMutexUnsafe</B> from within a critical section, the caller must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="k102_0m9e.htm"><B>ExAcquireFastMutex</B></A>, <A HREF="k102_2o8i.htm"><B>ExInitializeFastMutex</B></A>, <A HREF="k102_386q.htm"><B>ExReleaseFastMutexUnsafe</B></A>, <A HREF="k105_70du.htm"><B>KeEnterCriticalRegion</B></A>, <A HREF="k105_033m.htm"><B>KeLeaveCriticalRegion</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ExAcquireFastMutexUnsafe"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
