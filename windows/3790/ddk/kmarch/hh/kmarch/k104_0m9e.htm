<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoAllocateErrorLogEntry</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoAllocateErrorLogEntry">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioallocateerrorlogentry_kr"></A>IoAllocateErrorLogEntry</H1>

<P>The <B>IoAllocateErrorLogEntry</B> routine allocates an error log entry, and returns a pointer to the packet that the caller uses to supply information about an I/O error.</P>

<PRE class=syntax><B>PVOID 
</B>  <B>IoAllocateErrorLogEntry(</B>
<B>    IN PVOID</B>  <I>IoObject</I><B>,</B>
<B>    IN UCHAR</B>  <I>EntrySize</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>IoObject</I></DT>

<DD>Pointer to a device object representing the device on which an I/O error occurred, or to a driver object representing the driver that found an error.</DD>

<DT><I>EntrySize</I></DT>

<DD>Specifies the size, in bytes, of the error log entry to be allocated. This value cannot exceed ERROR_LOG_MAXIMUM_SIZE. 


<P class=note><B>Warning:</B>&nbsp;&nbsp;<I>EntrySize</I> is a UCHAR value. If you specify a larger value, the compiler will silently truncate that value to a (wrong) UCHAR.


</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoAllocateErrorLogEntry</B> returns a pointer to the error log entry, or NULL if a log entry could not be allocated.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>The driver must first fill in the packet with information about the error, then call <A HREF="k104_0p82.htm"><B>IoWriteErrorLogEntry</B></A> to post the entry to the error log. The error log entry buffer is automatically freed once the log entry is recorded. Entry buffers that are not going to be written to the log can be freed by using <A HREF="k104_82wi.htm"><B>IoFreeErrorLogEntry</B></A>.</P>

<P>An error log entry consists of a variable-length <A HREF="k112_5vsi.htm">IO_ERROR_LOG_PACKET</A> structure, possibly followed by one or more zero-counted Unicode strings. The Event Viewer inserts these strings into the error message it displays for the entry. IO_ERROR_LOG_PACKET contains one variable-length member, the <B>DumpData</B> member. Thus, the value for <I>EntrySize</I> must be <B>sizeof(</B>IO_ERROR_LOG_PACKET<B>)</B> + size of the <B>DumpData</B> member + combined size of any driver-supplied insertion strings.</P>

<P>Drivers should check that the value for <I>EntrySize</I> is less than ERROR_LOG_MAXIMUM_SIZE before calling <B>IoAllocateErrorLogEntry</B>. Since <I>EntrySize</I> is declared as a UCHAR, and the compiler will silently truncate any value too big to fit into a UCHAR, the routine itself cannot reliably detect if the passed value it too large.</P>

<P>Drivers must not treat <B>IoAllocateErrorLogEntry</B> returning NULL as a fatal error. The driver must continue to function normally, whether or not it can log errors.</P>

<P>Callers of <B>IoAllocateErrorLogEntry</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k112_5vsi.htm">IO_ERROR_LOG_PACKET</A>, <A HREF="k104_82wi.htm"><B>IoFreeErrorLogEntry</B></A>, <A HREF="k104_0p82.htm"><B>IoWriteErrorLogEntry</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoAllocateErrorLogEntry"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
