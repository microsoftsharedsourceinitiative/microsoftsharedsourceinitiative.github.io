<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Address Mappings and MDLs</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Address Mappings and MDLs">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_address_mappings_and_mdls_kr"></A>Address Mappings and MDLs</H2>

<DL>
<DT><A HREF="k106_6ur6.htm"><B>MmGetPhysicalAddress</B></A> </DT>

<DD>Returns the corresponding physical address for a given valid virtual address.</DD>

<DT><A HREF="k106_5nhu.htm"><B>MmGetMdlVirtualAddress</B></A> </DT>

<DD>Returns a (possibly invalid) virtual address for a buffer described by a given MDL; the returned address, used as an index to a physical address entry in the MDL, can be input to <B>MapTransfer</B> for drivers that use DMA.</DD>

<DT><A HREF="k106_0nqq.htm"><B>MmGetSystemAddressForMdlSafe</B></A> </DT>

<DD>Returns a system-space virtual address that maps the physical pages described by a given MDL for drivers whose devices must use programmed I/O (PIO). If no virtual address exists, one is assigned.</DD>

<DT><A HREF="k106_4vua.htm"><B>MmBuildMdlForNonPagedPool</B></A> </DT>

<DD>Fills in the corresponding physical addresses of a given MDL that specifies a range of virtual addresses in nonpaged pool.</DD>

<DT><A HREF="k106_9pv6.htm"><B>MmGetMdlByteCount</B></A> </DT>

<DD>Returns the length in bytes of the buffer mapped by a given MDL.</DD>

<DT><A HREF="k106_3i2a.htm"><B>MmGetMdlByteOffset</B></A> </DT>

<DD>Returns the byte offset within a page of the buffer described by a given MDL.</DD>

<DT><A HREF="k106_3j5e.htm"><B>MmMapLockedPages</B></A> </DT>

<DD>Maps already locked physical pages, described by a given MDL, to a returned virtual address range.</DD>

<DT><A HREF="k106_23oy.htm"><B>MmUnmapLockedPages</B></A> </DT>

<DD>Releases a mapping set up by <B>MmMapLockedPages</B>.</DD>

<DT><A HREF="k106_7bci.htm"><B>MmMapLockedPagesWithReservedMapping</B></A> </DT>

<DD>Maps a virtual address range already reserved with <A HREF="k106_4jle.htm"><B>MmAllocateMappingAddress</B></A>.</DD>

<DT><A HREF="k106_64z6.htm"><B>MmUnmapReservedMapping</B></A> </DT>

<DD>Unmaps a virtual address range mapped by <B>MmMapLockedPagesWithReservedMapping</B>.</DD>

<DT><A HREF="k106_3vle.htm"><B>MmIsAddressValid</B></A> </DT>

<DD>Returns whether a page fault will occur if a read or write operation is done at the given virtual address.</DD>

<DT><A HREF="k106_7p6a.htm"><B>MmSizeOfMdl</B></A> </DT>

<DD>Returns the number of bytes required for an MDL describing the buffer specified by the given virtual address and length in bytes.</DD>

<DT><A HREF="k106_6a0i.htm"><B>MmCreateMdl</B></A> </DT>

<DD>Allocates and initializes an MDL describing a buffer specified by the given virtual address and length in bytes; returns a pointer to the MDL.</DD>

<DT><A HREF="k106_1auq.htm"><B>MmPrepareMdlForReuse</B></A> </DT>

<DD>Reinitializes a caller-created MDL for reuse.</DD>

<DT><A HREF="k106_62pe.htm"><B>MmInitializeMdl</B></A> </DT>

<DD>Initializes a caller-created MDL to describe a buffer specified by the given virtual address and length in bytes.</DD>

<DT><A HREF="k106_9j5e.htm"><B>MmMapIoSpace</B></A> </DT>

<DD>Maps a physical address range to a cached or noncached virtual address range in nonpaged system space.</DD>

<DT><A HREF="k106_16sy.htm"><B>MmUnmapIoSpace</B></A> </DT>

<DD>Unmaps a virtual address range from a physical address range.</DD>

<DT><A HREF="k106_8ble.htm"><B>MmProbeAndLockPages</B></A> </DT>

<DD>Probes the pages specified in an MDL for a particular kind of access, makes the pages resident, and locks them in memory; returns the MDL updated with corresponding physical addresses. (Usually, only highest-level drivers call this routine.)</DD>

<DT><A HREF="k106_0l6a.htm"><B>MmUnlockPages</B></A> </DT>

<DD>Unlocks the previously probed and locked pages specified in an MDL.</DD>

<DT><A HREF="k106_75iq.htm"><B>MmSecureVirtualMemory</B></A> </DT>

<DD>Secures a memory-address range so that it cannot be freed and its page protection cannot be made more restrictive.</DD>

<DT><A HREF="k106_0d6a.htm"><B>MmUnsecureVirtualMemory</B></A> </DT>

<DD>Unsecures a memory-address range secured by <B>MmSecureVirtualMemory</B>.</DD>

<DT><A HREF="k106_4fxu.htm"><B>MmProtectMdlSystemAddress</B></A> </DT>

<DD>Sets the protection type for the memory-address range.</DD>

<DT><A HREF="k104_3c8i.htm"><B>IoAllocateMdl</B></A> </DT>

<DD>Allocates an MDL large enough to map the starting address and length supplied by the caller; optionally associates the MDL with a given IRP.</DD>

<DT><A HREF="k104_96eq.htm"><B>IoBuildPartialMdl</B></A> </DT>

<DD>Builds an MDL for the specified starting virtual address and length in bytes from a given source MDL. Drivers that split large transfer requests into a number of smaller transfers can call this routine.</DD>

<DT><A HREF="k104_7cfm.htm"><B>IoFreeMdl</B></A> </DT>

<DD>Releases a given MDL allocated by the caller.
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Address%20Mappings%20and%20MDLs"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
