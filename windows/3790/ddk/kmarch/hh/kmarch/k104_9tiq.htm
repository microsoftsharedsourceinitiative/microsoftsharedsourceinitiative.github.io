<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoAttachDeviceToDeviceStack</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoAttachDeviceToDeviceStack">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_ioattachdevicetodevicestack_kr"></A>IoAttachDeviceToDeviceStack</H1>

<P>The <B>IoAttachDeviceToDeviceStack</B> routine attaches the caller’s device object to the highest device object in the chain and returns a pointer to the previously highest device object. </P>

<PRE class=syntax><B>PDEVICE_OBJECT 
</B>  <B>IoAttachDeviceToDeviceStack(</B>
<B>    IN PDEVICE_OBJECT</B>  <I>SourceDevice</I><B>,</B>
<B>    IN PDEVICE_OBJECT</B>  <I>TargetDevice</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>SourceDevice</I></DT>

<DD>Pointer to the caller-created device object.</DD>

<DT><I>TargetDevice</I></DT>

<DD>Pointer to another driver’s device object, such as a pointer returned by a preceding call to <A HREF="k104_1os2.htm"><B>IoGetDeviceObjectPointer</B></A>.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>IoAttachDeviceToDeviceStack</B> returns a pointer to the device object to which the <I>SourceDevice</I> was attached. The returned device object pointer can differ from <I>TargetDevice</I> if <I>TargetDevice</I> had additional drivers layered on top of it.</P>

<P><B>IoAttachDeviceToDeviceStack</B> returns NULL if it could not attach the device object because, for example, the target device was being unloaded.</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P><B>IoAttachDeviceToDeviceStack</B> establishes layering between drivers so that the same IRPs are sent to each driver in the chain.</P>

<P>An intermediate driver can use this routine during initialization to attach its own device object to another driver’s device object. Subsequent I/O requests sent to <I>TargetDevice</I> are sent first to the intermediate driver.</P>

<P>This routine sets the <B>AlignmentRequirement</B> in <I>SourceDevice</I>  to the value in the next-lower device object and sets the <B>StackSize</B> to the value in the next-lower-object plus one.</P>

<P>A driver writer must take care to call this routine <I>before</I> any drivers that must layer on top of their driver. <B>IoAttachDeviceToDeviceStack</B> attaches <I>SourceDevice</I> to the highest device object currently layered in the chain and has no way to determine whether drivers are being layered in the correct order.</P>

<P>A driver that acquired a pointer to the target device by calling <A HREF="k104_1os2.htm"><B>IoGetDeviceObjectPointer</B></A> should call <A HREF="k107_6vg2.htm"><B>ObDereferenceObject</B></A> with the file object pointer that was returned by <B>IoGetDeviceObjectPointer</B> to release its reference to the file object before it detaches its own device object, for example, when such a higher-level driver is unloaded.<B> </B></P>

<P>Callers of <B>IoAttachDeviceToDeviceStack</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_3zci.htm"><B>IoAttachDevice</B></A>, <A HREF="k104_4s36.htm"><B>IoDetachDevice</B></A>, <A HREF="k107_6vg2.htm"><B>ObDereferenceObject</B></A>, <A HREF="k104_1os2.htm"><B>IoGetDeviceObjectPointer</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoAttachDeviceToDeviceStack"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
