<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP_MN_REMOVE_DEVICE</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IRP_MN_REMOVE_DEVICE">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_irp_mn_remove_device_dr"></A>IRP_MN_REMOVE_DEVICE</H1>

<P>All PnP drivers must handle this IRP. </P>

<H4>Major Code</H4>

<P><A HREF="k113_8ur6.htm">IRP_MJ_PNP</A> </P>

<H4>When Sent</H4>

<P>The PnP Manager uses this IRP to direct drivers to remove a device's software representation (device objects, and so forth). The PnP Manager sends this IRP when a device has been removed in an orderly fashion (for example, initiated by a user in the Unplug or Eject Hardware program), by surprise (a user pulls the device from its slot without prior warning), or when the user requests to update driver(s). </P>

<P>On Windows&nbsp;2000 and later systems, the PnP Manager also sends this IRP if one of the drivers in the device stack fails an <A HREF="pnp-irps_1gqa.htm">IRP_MN_START_DEVICE</A> request for the device.</P>

<P>For an orderly device removal, the PnP Manager sends an <A HREF="pnp-irps_22k2.htm">IRP_MN_QUERY_REMOVE_DEVICE</A> prior to the remove IRP. In this case, the device is in the remove-pending state when the remove IRP arrives. For a surprise device removal on Microsoft® Windows®&nbsp;2000 or later, the PnP Manager sends an <A HREF="pnp-irps_8e42.htm">IRP_MN_SURPRISE_REMOVAL</A> prior to the remove IRP. In this case, the device is in the surprise-removed state when the remove IRP arrives. Drivers can also receive a remove IRP before a device is started. In this case, the device is in the non-started state when the IRP arrives.</P>

<P>The PnP Manager sends this IRP at IRQL PASSIVE_LEVEL in the context of a system thread.</P>

<H4>Input</H4>

<P>None</P>

<H4>Output</H4>

<P>None</P>

<H4>I/O Status Block</H4>

<P>A driver must set <B>Irp-&gt;IoStatus.Status</B> to STATUS_SUCCESS. Drivers must not fail this IRP.</P>

<H4>Operation</H4>

<P>This IRP is handled first by the driver at the top of the device stack and then by each lower driver in the stack.</P>

<P>In response to this IRP, drivers perform such tasks as powering down the device, removing the device's software representation (device objects, and so forth), and releasing any resources for the device.</P>

<P>For more information about handling this IRP, see <A HREF="plugplay_8693.htm">Handling an IRP_MN_REMOVE_DEVICE Request</A>. For general information about supporting device removal, see <A HREF="plugplay_3fon.htm">Removing a Device</A>.</P>

<H4>Sending This IRP</H4>

<P>Reserved for system use. Drivers must not send this IRP.</P>

<P>If a bus driver detects that one (or more) of its child devices (child PDOs) has been physically removed from the machine, the bus driver calls <A HREF="k104_8t6a.htm"><B>IoInvalidateDeviceRelations</B></A> to report the change to the PnP Manager. The PnP Manager then sends remove IRPs for any devices that have disappeared.</P>

<H4>See Also</H4>

<P><A HREF="k104_8t6a.htm"><B>IoInvalidateDeviceRelations</B></A>, <A HREF="k104_7diq.htm"><B>IoRegisterPlugPlayNotification</B></A>, <A HREF="pnp-irps_7xte.htm">IRP_MN_CANCEL_REMOVE_DEVICE</A>, <A HREF="pnp-irps_22k2.htm">IRP_MN_QUERY_REMOVE_DEVICE</A>, <A HREF="pnp-irps_8e42.htm">IRP_MN_SURPRISE_REMOVAL</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP_MN_REMOVE_DEVICE"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
