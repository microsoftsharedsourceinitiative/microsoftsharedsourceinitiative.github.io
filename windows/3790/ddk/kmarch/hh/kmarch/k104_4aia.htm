<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoSetHardErrorOrVerifyDevice</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoSetHardErrorOrVerifyDevice">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iosetharderrororverifydevice_kr"></A>IoSetHardErrorOrVerifyDevice</H1>

<P>Lower-level drivers call the <B>IoSetHardErrorOrVerifyDevice</B> routine to identify a removable media device that has encountered an error, so that a file system driver can prompt the user to verify that the medium is valid.</P>

<PRE class=syntax><B>VOID 
</B>  <B>IoSetHardErrorOrVerifyDevice(</B>
<B>    IN PIRP</B>  <I>Irp</I><B>,</B>
<B>    IN PDEVICE_OBJECT</B>  <I>DeviceObject</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Irp</I></DT>

<DD>Pointer to the IRP for which the driver encountered a user-induced error.</DD>

<DT><I>DeviceObject</I></DT>

<DD>Pointer to the target device to be verified for the I/O operation.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h</I>. Include <I>ntddk.h.</I></P>

<H4>Comments</H4>

<P>Lower-level drivers for removal media devices must call <B>IoSetHardErrorOrVerifyDevice</B> before completing an IRP, if a call to <A HREF="k104_350y.htm"><B>IoIsErrorUserInduced</B></A> returns TRUE. For more information, see <A HREF="other_5ag7.htm">Supporting Removable Media</A>.</P>

<P>Subsequently, a file system driver will use information supplied in the specified device object to send a popup to the user, who can correct the error and retry the operation or cancel it.</P>

<P>The IRP passed to <B>IoSetHardErrorOrVerifyDevice</B> must be associated with a thread. Therefore, before a driver calls <B>IoSetHardErrorOrVerifyDevice</B>, it must verify that <I>irp</I><B>-&gt;Tail.Overlay.Thread</B> is not NULL. If the value is NULL, <B>IoSetHardErrorOrVerifyDevice</B> must not be called using the current IRP. Instead, the driver should check all IRPs subsequently received and processed, until one is received for which <I>irp</I><B>-&gt;Tail.Overlay.Thread</B> is not NULL. At that point, <B>IoSetHardErrorOrVerifyDevice</B> can be called.</P>

<P>Callers of <B>IoSetHardErrorOrVerifyDevice</B> must be running at IRQL&nbsp;&lt;= DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_350y.htm"><B>IoIsErrorUserInduced</B></A>, <A HREF="k104_4w1e.htm"><B>IoRaiseHardError</B></A>, <A HREF="k104_1cxe.htm"><B>IoRaiseInformationalHardError</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoSetHardErrorOrVerifyDevice"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
