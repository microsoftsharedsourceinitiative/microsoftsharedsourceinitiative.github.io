<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WmiQueryTraceInformation</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="WmiQueryTraceInformation">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_wmiquerytraceinformation_kr"></A>WmiQueryTraceInformation</H1>

<P>The <B>WmiQueryTraceInformation</B> routine returns information about an <A HREF="wmi_3t7r.htm">WMI event trace</A>.</P>

<PRE class=syntax><B>NTKERNELAPI
NTSTATUS
  WmiQueryTraceInformation(
    IN TRACE_INFORMATION_CLASS</B>  <I>TraceInformationClass</I>,
    <B>OUT PVOID</B>  <I>TraceInformation</I>,
    <B>IN ULONG</B>  <I>TraceInformationLength</I>,
    <B>OUT PULONG</B>  <I>RequiredLength</I> OPTIONAL,
    <B>IN PVOID </B> <I>Buffer</I> OPTIONAL
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>TraceInformationClass</I></DT>

<DD>Specifies a <A HREF="k112_0o8i.htm">TRACE_INFORMATION_CLASS</A> enumerator that indicates the type of information to return about an event trace.</DD>

<DT><I>TraceInformation</I></DT>

<DD>Pointer to a caller-allocated output buffer where the routine returns the event trace information specified by <I>TraceInformationClass</I>.</DD>

<DT><I>TraceInformationLength</I></DT>

<DD>Specifies the size, in bytes, of the <I>TraceInformation</I> buffer.</DD>

<DT><I>RequiredLength</I></DT>

<DD>Pointer to the value returned by the routine that specifies the required size, in bytes, of the <I>TraceInformation</I> buffer. The caller should set <I>RequiredLength</I> to NULL if it does not use the required length information.</DD>

<DT><I>Buffer</I></DT>

<DD>Pointer to the query-specific input information that a caller supplies. If caller-supplied information is not required, the caller should set <I>Buffer</I> to NULL.
</DD>
</DL>

<H4>Return Value</H4>

<TABLE>

<TR VALIGN="top">
<TH align=left width=49%>NTSTATUS Value</TH>
<TH align=left width=51%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_SUCCESS</TD>
<TD width=51%>Success</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_INFO_LENGTH_MISMATCH</TD>
<TD width=51%>The size of the <I>TraceInformation</I> buffer is not equal to the required size for the specified event trace information.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_INVALID_HANDLE</TD>
<TD width=51%>The trace handle specified by the <B>HistoricalContext</B> member of the (PWNODE_HEADER)<I>Buffer</I> is not valid.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_INVALID_INFO_CLASS</TD>
<TD width=51%>The specified type of event trace information is not valid.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_INVALID_PARAMETER</TD>
<TD width=51%>The name of the event trace, supplied with a query to return a trace handle given its name, is not valid.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_INVALID_PARAMETER_MIX</TD>
<TD width=51%>The caller did not supply the information required for the specified event trace information.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_MORE_ENTRIES</TD>
<TD width=51%>The <I>TraceInformation</I> buffer is not large enough to hold an array of all the valid event trace handles.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>STATUS_NOT_FOUND</TD>
<TD width=51%>A global logger was not found.</TD>
</TR>
</TABLE><BR>

<H4>Headers</H4>

<P>Declared in <I>ntddk.h</I>. Include<I> ntddk.h</I>.</P>

<H4>Comments</H4>

<P>For each type of event trace information specified by <I>TraceInformationClass</I>, the following table provides:

<UL>
	<LI>Input requirements</LI>

	<LI>Information that <B>WmiQueryTraceInformation</B> returns in the <I>TraceInformation</I> buffer</LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>Value of<I> TraceClassInformation </I></TH>
<TH align=left width=37%>Input Requirements</TH>
<TH align=left width=28%>Information Returned</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><B>TraceIdClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is equal to the value of <B>sizeof</B>(ULONG).
<P>The size, in bytes of the <I>TraceInformation</I> buffer is greater than or equal to the value of <B>sizeof</B>(ULONG).</P>

<P>The <B>HistoricalContext</B> member of (PWNODE_HEADER)<I>Buffer </I>specifies an event trace handle.</P>
</TD>
<TD width=28%>*(PULONG) <I>TraceInformation</I> is set to the logger ID of the event trace handle.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>TraceHandleClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is equal to the value of <B>sizeof</B>(TRACEHANDLE).
<P>The size, in bytes of the <I>TraceInformation</I> buffer must be greater than or equal to the value of <B>sizeof</B>(TRACEHANDLE).</P>

<P>*(PULONG)Buffer is set to a logger ID. </P>
</TD>
<TD width=28%>*(PTRACEHANDLE)<I>TraceInformation</I> is set to an event trace handle for the specified logger. If the specified logger ID is zero, an event trace handle for the kernel logger is returned.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>TraceEnableFlagsClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is greater than or equal to the value of <B>sizeof</B>(ULONG). 
<P>The size, in bytes of the <I>TraceInformation</I> buffer must be greater than or equal to the value of <B>sizeof</B>(ULONG).</P>

<P>The <B>HistoricalContext</B> member of (PWNODE_HEADER)<I>Buffer </I>specifies an event trace handle.</P>
</TD>
<TD width=28%>*(PULONG) <I>TraceInformation</I> is set to the enable flags that are set for the specified event trace handle.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>TraceEnableLevelClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is set greater than or equal to the value of <B>sizeof</B>(ULONG). 
<P>The size, in bytes of the <I>TraceInformation</I> buffer must be greater than or equal to the value of <B>sizeof</B>(ULONG).</P>

<P>The <B>HistoricalContext</B> member of (PWNODE_HEADER)<I>Buffer </I>specifies an event trace handle.</P>
</TD>
<TD width=28%>*(PULONG) <I>TraceInformation</I> is set to the level for the specified event trace handle.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>GlobalLoggerHandleClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is equal to the value of <B>sizeof</B>(TRACEHANDLE).
<P>The size, in bytes of the <I>TraceInformation</I> buffer must be greater than or equal to the value of <B>sizeof</B>(TRACEHANDLE).</P>
</TD>
<TD width=28%>*(PTRACEHANDLE)<I>TraceInformation</I> is set to an event trace handle for the global logger.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>EventLoggerHandleClass</B></TD>
<TD width=37%>For internal use only.</TD>
<TD width=28%>For internal use only.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>AllLoggerHandlesClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is set to the size, bytes, of an array of <I>m</I> TRACEHANDLE values.
<P>The size, in bytes of the <I>TraceInformation</I> buffer must be greater than or equal to the value of (<I>m</I>*<B>sizeof</B>(TRACEHANDLE)).</P>
</TD>
<TD width=28%>The <I>TraceInformation</I> buffer contains an array of <I>n</I> trace handles, where <I>n</I> is the minimum of <I>m</I>, the number of caller-supplied event trace handles, and the number of valid event trace handles. The routine returns a status of STATUS_MORE_ENTRIES if the <I>TraceInformation</I> buffer is too small to hold all trace handles.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>TraceHandleByNameClass</B></TD>
<TD width=37%><I>TraceInformationLength</I> is set to the value of <B>sizeof</B>(TRACEHANDLE).
<P>The size, in bytes, of the <I>TraceInformation</I> buffer must be greater than or equal to the value of <B>sizeof</B>(TRACEHANDLE).</P>

<P>(PUNICODE_STRING)<I>Buffer</I> specifies a friendly trace name in UNICODE format.</P>
</TD>
<TD width=28%>*(PTRACEHANDLE)<I>TraceInformatio</I>) is set to the event trace handle associated with the specified friendly name.</TD>
</TR>
</TABLE><BR>

<P>If the caller supplies a non-NULL <I>RequiredLength</I> pointer, <B>WmiQueryTraceInformation</B> also returns the required length for the specified event trace information.</P>

<P><B>WmiQueryTraceInformation</B> runs at the IRQL of the caller.</P>

<H4>See Also</H4>

<P><A HREF="k104_2uya.htm"><B>IoWmiWriteEvent</B></A>, <A HREF="k112_0o8i.htm">TRACE_INFORMATION_CLASS</A>, <A HREF="k902_43hu.htm"><B>WmiFireEvent</B></A>, <A HREF="k902_8dv6.htm"><B>WmiTraceMessage</B></A>, <A HREF="k902_8khe.htm"><B>WmiTraceMessageVa</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WmiQueryTraceInformation"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
