<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>RtlStringCbPrintf</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="RtlStringCbPrintf">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_rtlstringcbprintf_kr"></A>RtlStringCbPrintf</H1>

<P>The <B>RtlStringCbPrintfW</B> and <B>RtlStringCbPrintfA</B> functions create a byte-counted text string, with formatting that is based on supplied formatting information. </P>

<PRE class=syntax><B>NTSTATUS
  RtlStringCbPrintfW(
    OUT LPWSTR  </B><I>pszDest</I><B>,</B>
<B>    IN size_t  </B><I>cbDest</I><B>,</B>
<B>    IN LPCWSTR  </B><I>pszFormat</I><B>,</B>
<B>    ...</B>
<B>    );</B>

<B>NTSTATUS</B>
<B>  RtlStringCbPrintfA(</B>
<B>    OUT LPSTR  </B><I>pszDest</I><B>,</B>
<B>    IN size_t  </B><I>cbDest</I><B>,</B>
<B>    IN LPCSTR  </B><I>pszFormat</I><B>,</B>
<B>    ...</B>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pszDest</I> </DT>

<DD>Supplies a pointer to a caller-supplied buffer that receives a formatted, null-terminated string. The function creates this string from both the formatting string that is supplied by <I>pszFormat</I> and the function's argument list. </DD>

<DT><I>cbDest</I> </DT>

<DD>Supplies the size of the destination buffer, in bytes. The buffer must be large enough to contain the formatted string plus the terminating NULL character. 

<P>For Unicode strings, the maximum number of bytes is STRSAFE_MAX_CCH * sizeof(char). 


<P>For ANSI strings, the maximum number of bytes is STRSAFE_MAX_CCH * sizeof(WCHAR). 
</DD>

<DT><I>pszFormat</I> </DT>

<DD>Supplies a pointer to a null-terminated text string that contains <B>printf</B>-styled formatting directives.</DD>

<DT><I>...</I> </DT>

<DD>Optional. Supplies a list of arguments that are interpreted by the function based on formatting directives contained in the <I>pszFormat</I> string.</DD>
</DL>

<H4>Return Value</H4>

<P>The function returns one of the NTSTATUS values that are listed in the following table. For information about how to test NTSTATUS values, see <A HREF="other_8hlz.htm">Using NTSTATUS Values</A>.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=51%>Return Value</TH>
<TH align=left width=49%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=51%>STATUS_SUCCESS</TD>
<TD width=49%>This <I>success</I> status means source data was present, the string was created without truncation, and the resultant destination buffer is null-terminated.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>STATUS_BUFFER_OVERFLOW</TD>
<TD width=49%>This <I>warning</I> status means the operation did not complete due to insufficient space in the destination buffer. The destination buffer contains a truncated version of the output string.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>STATUS_INVALID_PARAMETER</TD>
<TD width=49%>This <I>error</I> status means the function received an invalid input parameter. For more information, see the following paragraph.</TD>
</TR>
</TABLE><BR>

<P>The function returns the STATUS_INVALID_PARAMETER value when:

<UL>
	<LI>The value in <I>cbDest</I> is larger than the maximum buffer size.</LI>

	<LI>The destination buffer was already full.</LI>

	<LI>A NULL pointer was present.</LI>

	<LI>The destination buffer's length was zero, but a nonzero length source string was present.</LI>
</UL>

<H4>Headers</H4>

<P>Declared in <I>ntstrsafe.h</I>. Include <I>ntstrsafe.h</I>. Link to <I>ntstrsafe.lib</I>.</P>

<H4>Comments</H4>

<P><B>RtlStringCbPrintfW</B> and <B>RtlStringCbPrintfA</B> should be used instead of the following functions: 

<UL>
	<LI><B>sprintf</B> </LI>

	<LI><B>swprintf</B> </LI>

	<LI>_<B>snprintf</B> </LI>

	<LI>_<B>snwprintf</B> </LI>
</UL>

<P>All of these functions accept a format string and a list of arguments, interpret them, and create a formatted string. The size, in bytes, of the destination buffer is provided to <B>RtlStringCbPrintfW</B> and <B>RtlStringCbPrintfA</B> to ensure that they do not write past the end of the buffer.</P>

<P>Use <B>RtlStringCbPrintfW</B> to handle Unicode strings and <B>RtlStringCbPrintfA</B> to handle ANSI strings. The form you use depends on your data, as shown in the following table.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=33%>String Data Type</TH>
<TH align=left width=27%>String Literal</TH>
<TH align=left width=40%>Function</TH>
</TR>

<TR VALIGN="top">
<TD width=33%>WCHAR</TD>
<TD width=27%>L"string"</TD>
<TD width=40%><B>RtlStringCbPrintfW</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>char</B></TD>
<TD width=27%>"string"</TD>
<TD width=40%><B>RtlStringCbPrintfA</B></TD>
</TR>
</TABLE><BR>

<P>If <I>pszDest</I> and <I>pszFormat</I> point to overlapping string or if any argument strings overlap, the behavior of the function is undefined.</P>

<P>Neither <I>pszFormat</I> nor <I>pszDest</I> can be NULL. If you need to handle null string pointer values, use <A HREF="safestrings_9036.htm"><B>RtlStringCbPrintfEx</B></A>.</P>

<H4>Example</H4>

<P>The following example shows a basic use of <B>RtlStringCbPrintfW</B> using four arguments.</P>

<PRE>int const arraysize = 30;
WCHAR pszDest[arraysize]; 
size_t cbDest = arraysize * sizeof(WCHAR);

LPCWSTR pszFormat = L"%s %d + %d = %d.";
WCHAR* pszTxt = L"The answer is";

NTSTATUS status = RtlStringCbPrintfW(pszDest, cbDest, pszFormat, pszTxt, 1, 2, 3);
</PRE>

<P>The resultant string is "The answer is 1 + 2 = 3." It is contained in the buffer at <I>pszDest</I>.</P>

<P>For more information about the safe string functions, see <A HREF="other_4tgn.htm">Using Safe String Functions</A>.</P>

<H4>See Also</H4>

<P><A HREF="safestrings_9036.htm"><B>RtlStringCbPrintfEx</B></A>, <A HREF="safestrings_8gc2.htm"><B>RtlStringCbVPrintf</B></A><B>, <A HREF="safestrings_5b8y.htm">RtlStringCchPrintf</A> </B></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: RtlStringCbPrintf"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
