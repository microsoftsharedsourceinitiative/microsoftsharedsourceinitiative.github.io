<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ProbeForWrite</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="ProbeForWrite">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_probeforwrite_kr"></A>ProbeForWrite</H1>

<P>The <B>ProbeForWrite</B> routine checks that a user-mode buffer actually resides in the user-mode portion of the address space, is writable, and is correctly aligned. </P>

<PRE class=syntax><B>VOID 
</B>  <B>ProbeForWrite(</B>
    <B>IN CONST </B>VOID  *<I>Address</I>,
    <B>IN SIZE_T </B> <I>Length</I>,
    <B>IN ULONG</B>  <I>Alignment</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Address</I></DT>

<DD>Specifies the beginning of the user-mode buffer. </DD>

<DT><I>Length</I></DT>

<DD>Specifies the length, in bytes, of the user-mode buffer. </DD>

<DT><I>Alignment</I></DT>

<DD>Specifies the required alignment, in bytes, of the beginning of the user-mode buffer. 
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>. </P>

<H4>Comments</H4>

<P>If the specified range of memory is not a valid user-mode address range or is not writable (no access, read-only, and so on), <B>ProbeForWrite</B> raises the STATUS_ACCESS_VIOLATION exception. If the beginning of the address range is not aligned on the byte boundary that is specified by <I>Alignment</I>, <B>ProbeForWrite</B> raises the STATUS_DATATYPE_MISALIGNMENT exception. </P>

<P>Kernel-mode drivers must use <B>ProbeForWrite</B> to validate write access to buffers allocated in user space. It is most commonly used during METHOD_NEITHER I/O to validate the user buffer pointed to by <B>Irp -&gt; UserBuffer</B>. </P>

<P>Drivers must call <B>ProbeForWrite</B> inside a <B>try</B>/<B>except</B> block. If the routine raises an exception, the driver should complete the IRP with the appropriate error. Note that subsequent accesses by the driver to the user-mode buffer must also be encapsulated within a <B>try</B>/<B>except</B> block: a malicious application could have another thread deleting, substituting, or changing the protection of user address ranges at any time (even after or during a call to <B>ProbeForRead</B> or <B>ProbeForWrite</B>).  For more information, see <A HREF="other_23zb.htm">Handling Exceptions</A>.</P>

<P>Do not use this routine on kernel-mode addresses; it will raise an exception. </P>

<P>Callers of <B>ProbeForWrite</B> must be running at IRQL&nbsp;&lt;= APC_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="k102_49bm.htm"><B>ProbeForRead</B></A> </P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ProbeForWrite"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
