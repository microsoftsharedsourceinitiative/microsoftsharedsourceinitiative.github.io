<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KeInitializeTimerEx</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="KeInitializeTimerEx">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_keinitializetimerex_kr"></A>KeInitializeTimerEx</H1>

<P>The <B>KeInitializeTimerEx</B> routine initializes an extended kernel timer object.</P>

<PRE class=syntax><B>VOID 
</B>  <B>KeInitializeTimerEx(</B>
<B>    IN PKTIMER</B>  <I>Timer</I><B>,</B>
<B>    IN TIMER_TYPE</B>  <I>Type</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>Timer</I></DT>

<DD>Pointer to a timer object, for which the caller provides the storage.</DD>

<DT><I>Type</I></DT>

<DD>Specifies the type of the timer object, either <B>NotificationTimer</B> or <B>SynchronizationTimer</B>.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>The timer object is initialized with a not signaled state.</P>

<P>Storage for a timer object must be resident: in the device extension of a driver-created device object, in the controller extension of a driver-created controller object, or in nonpaged pool allocated by the caller.</P>

<P>When a notification timer expires, all waiting threads are released and the timer remains in the signaled state until it is explicitly reset. When a synchronization timer expires, it is set to a signaled state until a single waiting thread is released and then the timer is reset to a not signaled state.</P>

<P>Callers of <B>KeInitializeTimerEx</B> should be running at IRQL&nbsp;= DISPATCH_LEVEL or lower. It is best to initialize timers at IRQL&nbsp;= PASSIVE_LEVEL.</P>

<P>Use <A HREF="k105_9mlu.htm"><B>KeSetTimer</B></A> or <A HREF="k105_57aq.htm"><B>KeSetTimerEx</B></A> to define when the timer will expire.</P>

<H4>See Also</H4>

<P><A HREF="k105_6xf6.htm"><B>KeCancelTimer</B></A>, <A HREF="k105_6asz.htm"><B>KeReadStateTimer</B></A>, <A HREF="k105_9mlu.htm"><B>KeSetTimer</B></A>, <A HREF="k105_57aq.htm"><B>KeSetTimerEx</B></A>, <A HREF="k105_18oi.htm"><B>KeWaitForMultipleObjects</B></A>, <A HREF="k105_40c2.htm"><B>KeWaitForSingleObject</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KeInitializeTimerEx"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
