<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IoDeleteDevice</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IoDeleteDevice">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Kernel-Mode&nbsp;Driver&nbsp;Architecture:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_iodeletedevice_kr"></A>IoDeleteDevice</H1>

<P>The <B>IoDeleteDevice</B> routine removes a device object from the system, for example, when the underlying device is removed from the system.</P>

<PRE class=syntax><B>VOID 
</B>  <B>IoDeleteDevice(</B>
<B>    IN PDEVICE_OBJECT</B>  <I>DeviceObject</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceObject</I></DT>

<DD>Pointer to the device object to be deleted.
</DD>
</DL>

<H4>Return Value</H4>

<P>None</P>

<H4>Headers</H4>

<P>Declared in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Comments</H4>

<P>When handling a PnP IRP_MN_REMOVE_DEVICE request, a PnP driver calls <B>IoDeleteDevice</B> to delete any associated device objects. See <A HREF="plugplay_8693.htm">Handling an IRP_MN_REMOVE_DEVICE Request</A> for details.</P>

<P>A legacy driver should call this routine when it is being unloaded or when its <A HREF="drvrrtns_6r76.htm"><B>DriverEntry</B></A> routine encounters a fatal initialization error, such as being unable to properly initialize a physical device. This routine also is called when a driver reconfigures its devices dynamically. For example, a disk driver called to repartition a disk would call <B>IoDeleteDevice</B> to tear down the device objects representing partitions to be replaced.</P>

<P>A driver must release certain resources for which the driver supplied storage in its device extension before it calls <B>IoDeleteDevice</B>. For example, if the driver stores the pointer to its interrupt object(s) in the device extension, it must call <A HREF="k104_51yq.htm"><B>IoDisconnectInterrupt</B></A> before calling <B>IoDeleteDevice</B>.</P>

<P>A driver can call <B>IoDeleteDevice</B> only once for a given device object.</P>

<P>When a driver calls <B>IoDeleteDevice</B>, the I/O Manager deletes the target device object if there are no outstanding references to it. However, if any outstanding references remain, the I/O Manager marks the device object as "delete pending" and deletes the device object when the references are released. </P>

<P>Callers of <B>IoDeleteDevice</B> must be running at IRQL&nbsp;&lt; DISPATCH_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="k104_8piq.htm"><B>IoCreateDevice</B></A>, <A HREF="k104_51yq.htm"><B>IoDisconnectInterrupt</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IoDeleteDevice"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
