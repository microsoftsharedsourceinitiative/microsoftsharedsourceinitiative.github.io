<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SCARD_READER_CAPABILITIES</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SCARD_READER_CAPABILITIES">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Smart&nbsp;Card&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_ntstruct_scard_reader_capabilities"></A>SCARD_READER_CAPABILITIES</H1>

<P>The SCARD_READER_CAPABILITIES structure holds state information about the reader. </P>

<PRE class=syntax>typedef struct _SCARD_READER_CAPABILITIES {
  struct {
    ULONG  Async;
    ULONG  Sync;
  } SupportedProtocols;
  ULONG  ReaderType;
  ULONG  Reserved;
  ULONG  MechProperties;
  ULONG  CurrentState;
  ULONG  Channel;
  struct {
    ULONG  Default;
    ULONG  Max;
  } CLKFrequency;
  struct {
    ULONG  Default;
    ULONG  Max;
  } DataRate;
  ULONG  MaxIFSD;
  ULONG  PowerMgmtSupport;
  ULONG  CardConfiscated;
  struct _DataRatesSupported {
    PULONG  List;
    UCHAR  Entries;
  } DataRatesSupported;
  struct _CLKFrequenciesSupported {
    PULONG  List;
    UCHAR  Entries;
  } CLKFrequenciesSupported;
  UCHAR Reserved1[
        100 - 
        sizeof(ULONG) - 
        sizeof(struct _DataRatesSupported) - 
        sizeof(struct _CLKFrequenciesSupported)
        ];
} SCARD_READER_CAPABILITIES, *PSCARD_READER_CAPABILITIES;
 </PRE>

<H4>Members</H4>

<DL>
<DT><B>SupportedProtocols.Async</B></DT>

<DD>Must be set to a bitmask that reflects the asynchronous protocols that this driver/reader supports (in hardware <I>and </I>software). Required. </DD>

<DT><B>SupportedProtocols.Sync</B></DT>

<DD>Must be set to a bitmask that reflects the synchronous protocols that this driver/reader supports (in hardware <I>and </I>software). Mandatory. </DD>

<DT><B>ReaderType</B></DT>

<DD>Contains the type of this reader. Mandatory. This member can have one of the following values.

<TABLE>

<TR VALIGN="top">
<TH align=left width=56%>Type</TH>
<TH align=left width=44%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_SERIAL</TD>
<TD width=44%>Serial reader</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_PCMCIA</TD>
<TD width=44%>PCMCIA reader</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_KEYBOARD</TD>
<TD width=44%>Keyboard attached reader</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_USB</TD>
<TD width=44%>USB reader</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_PARALELL</TD>
<TD width=44%>Parallel reader </TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_SCSI</TD>
<TD width=44%>SCSI reader </TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_IDE</TD>
<TD width=44%>IDE reader </TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SCARD_READER_TYPE_VENDOR</TD>
<TD width=44%>Reader that uses a proprietary vendor bus </TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>Reserved</B></DT>

<DD>Reserved for system use. </DD>

<DT><B>MechProperties</B></DT>

<DD>Contains a value formed by taking a bitwise OR of all applicable reader properties in the table that follows. Optional. 

<TABLE>

<TR VALIGN="top">
<TH align=left width=52%>Property</TH>
<TH align=left width=48%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=52%>SCARD_READER_SWALLOWS</TD>
<TD width=48%>Reader has a swallowing mechanism.</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>SCARD_READER_EJECTS</TD>
<TD width=48%>Reader is able to eject the card.</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>SCARD_READER_CONFISCATES</TD>
<TD width=48%>Reader is able to capture the card.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>CurrentState</B></DT>

<DD>Contains the status of the card. Mandatory. 

<TABLE>

<TR VALIGN="top">
<TH align=left width=38%>Status</TH>
<TH align=left width=62%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_UNKNOWN</TD>
<TD width=62%>The reader does not know the status.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_ABSENT</TD>
<TD width=62%>No card is currently inserted.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_PRESENT</TD>
<TD width=62%>A card is inserted.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_SWALLOWED</TD>
<TD width=62%>A card is inserted and the reader has swallowed it.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_POWERED</TD>
<TD width=62%>The card is powered, but the reader does not recognize its mode.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_NEGOTIABLE</TD>
<TD width=62%>A card is inserted and awaits protocol negotiation.</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCARD_SPECIFIC</TD>
<TD width=62%>A card is inserted and a protocol has been selected.</TD>
</TR>
</TABLE><BR>



<P>Access to this field <I>must</I> be sequentialized by using the spinlock pointed to by the <B>OsData-&gt;SpinLock</B> member of <A HREF="scstruct_50a6.htm">SMARTCARD_EXTENSION</A>. 
</DD>

<DT><B>Channel</B></DT>

<DD>Contains the logical channel number. This member is optional. The exact meaning of this member depends on the type of smart card. Its value should be interpreted as follows:


<TABLE>

<TR VALIGN="top">
<TH align=left width=38%>Type of Smart Card</TH>
<TH align=left width=62%>Meaning of Value in Channel Field</TH>
</TR>

<TR VALIGN="top">
<TD width=38%>Serial Reader</TD>
<TD width=62%>Port Number</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>Parallel Reader</TD>
<TD width=62%>Port Number</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>SCSI Reader</TD>
<TD width=62%>SCSI ID</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>Keyboard Reader</TD>
<TD width=62%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=38%>USB Reader</TD>
<TD width=62%>Device Number</TD>
</TR>
</TABLE><BR>



<P>For further information, see Part 3 of the <I>Interoperability Specification for ICCs and Personal Computer Systems</I>. 
</DD>

<DT><B>ClkFrequency.Default</B></DT>

<DD>Contains the standard clock frequency that the reader runs at, in KHz, encoded in little-endian format. For example, 3.58 MHz would be encoded as 3580. Mandatory. </DD>

<DT><B>ClkFrequency.Max</B></DT>

<DD>Contains the maximum clock frequency that the reader can run at, in KHz, encoded in little-endian format. Mandatory. </DD>

<DT><B>DataRate.Default</B></DT>

<DD>Contains the standard data rate of the reader, in units of bits per second, encoded in little-endian format. Mandatory. </DD>

<DT><B>DataRate.Max</B></DT>

<DD>Contains the maximum data rate of the reader, in units of bits per second, encoded in little-endian format. Mandatory. </DD>

<DT><B>MaxIFSD</B></DT>

<DD>Contains the maximum buffer size of the reader. This value is used at the beginning of a T=1 transmission to inform the smart card of the maximum number of bytes that can be received in one packet. Mandatory.  </DD>

<DT><B>PowerMgmtSupport</B></DT>

<DD>Indicates the type of power management the card supports. A value of zero indicates that the smart card does not support power management. </DD>

<DT><B>CardConfiscated</B></DT>

<DD>If TRUE, indicates that the card has been confiscated.</DD>

<DT><B>DataRatesSupported.List</B></DT>

<DD>Contains a list of data rates, in bits per second, supported by the reader. This structure is used with the PTS request. The reader driver usually sets this member to a pointer to a static array of unsigned long values containing the supported data rates. If the reader does not support different data rates, leave this structure empty. Optional. </DD>

<DT><B>DataRatesSupported.Entries</B></DT>

<DD>Contains the number of linked list entries in <B>DataRatesSupported.List</B>. Optional. </DD>

<DT><B>CLKFrequenciesSupported.List</B></DT>

<DD>Contains a list of clock frequencies, in kilohertz, supported by the reader. This structure is used with the PTS request. The driver usually sets this member to a pointer to a static array of unsigned long values containing the supported clock frequencies. If the reader does not support different clock frequencies, leave this structure empty. Optional. </DD>

<DT><B>CLKFrequenciesSupported.Entries</B></DT>

<DD>Contains the number of linked list entries of <B>CLKFrquenciesSupported.List</B>. Optional. </DD>

<DT><B>Reserved1</B></DT>

<DD>Reserved for system use.</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>scmlib.h</I>. Include <I>scmlib.h</I>. </P>

<H4>Comments</H4>

<P>This structure must be maintained by the reader driver. </P>

<H4>See Also</H4>

<P><A HREF="scstruct_2qib.htm">SCARD_CARD_CAPABILITIES</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SCARD_READER_CAPABILITIES"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
