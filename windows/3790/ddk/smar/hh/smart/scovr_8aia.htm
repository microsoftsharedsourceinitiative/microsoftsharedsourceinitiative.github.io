<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VxD Reader Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VxD Reader Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Smart&nbsp;Card&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_ntovr_vxd_reader_driver"></A>VxD Reader Driver</H2>

<P>A VxD driver must call two driver library routines when it initializes: </P>

<P class=indent1><A HREF="scfunc_92an.htm"><B>SmartcardInitialize</B> (VxD)</A> to complete driver initialization. </P>

<P class=indent1><A HREF="scfunc_5fq7.htm"><B>SmartcardCreateLink</B> (VxD)</A> to create a symbolic link for the reader device in the registry. </P>

<P>A VxD driver also requires a main entry point for servicing IOCTL requests from the resource manager or from a smart card-aware user application. The name of this entry point must be named <I>DriverName</I><B>DeviceIoControl</B>, where <I>DriverName</I> is the name of the driver. For example, in the Bull TLP3 smart card driver sample (<I>bulltlp3.sys</I>) included with the Windows DDK, all driver routines have a <B>TLP3</B> prefix, so the device I/O control dispatch routine has the name <B>TLP3DeviceIoControl</B>. </P>

<P>When the operating system delivers an IOCTL to the reader driver's <I>DriverName</I><B>DeviceIoControl</B> routine, <I>DriverName</I><B>DeviceIoControl</B>, in turn, must call the <A HREF="scfuncw_3s7z.htm"><B>SmartcardDeviceControl</B> (WDM)</A> driver library routine. As in the WDM case, <B>SmartcardDeviceControl</B> calls the reader driver's callback routine for unknown IOCTLs if it is unable to service the IOCTL indicated in the request. </P>

<P>The VxD version of the smart card driver library is implemented as a single VxD. To call the library functions, use the <B>VxDCall</B> virtual machine manager macro (VMM) interface. Drivers that use this macro must include the <I>smcvxd.h</I> header file. For an explanation of how to use <B>VxDCall</B>, see the Windows 98/Me documentation in this DDK. </P>

<P>Both the WDM and the VxD versions of the smart card library work with NTSTATUS status values, not with Win32® error values. Therefore, VxD drivers must use the <A HREF="scfunc_9yvz.htm"><B>MapNtStatusToWinError</B> (VxD)</A> function to map NTSTATUS status values to Win32 error values.</P>

<P>In the case of a VxD reader driver, the operating system passes parameters to the driver's device I/O control dispatch routine in a <A HREF="scstruct_4igj.htm">DIOCPARAMETERS</A> structure. The <A HREF="scfuncw_3s7z.htm"><B>SmartcardDeviceControl</B> (WDM)</A> library routine transfers these parameters to the device extension, <A HREF="scstruct_50a6.htm">SMARTCARD_EXTENSION</A> structure. Use this structure to access all parameters.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VxD%20Reader%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
