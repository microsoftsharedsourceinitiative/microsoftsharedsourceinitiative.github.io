<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Smart Card Driver Debugging</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Smart Card Driver Debugging">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_debugging_tools_for_nt_based_operating_systems_tools">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Smart&nbsp;Card&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_ntovr_smart_card_driver_debugging"></A>Smart Card Driver Debugging</H1>

<P>Both the WDM and VxD smart card driver libraries support several debugging features. Each debugging feature is represented by one of the following constants, defined in the header file <I>smclib.h</I>:</P>

<PRE>#define DEBUG_IOCTL     ((ULONG) 0x00000001)
#define DEBUG_ATR       ((ULONG) 0x00000002)
#define DEBUG_PROTOCOL  ((ULONG) 0x00000004)
#define DEBUG_DRIVER    ((ULONG) 0x00000008)
#define DEBUG_TRACE     ((ULONG) 0x00000010)
#define DEBUG_ERROR     ((ULONG) 0x00000020)
#define DEBUG_BREAK     ((ULONG) 0x80000000)
#define DEBUG_ALL       ((ULONG) 0x7FFFFFFF)</PRE>

<P>The combined set of enabled debugging features is represented by a value called the <I>debugging level</I>. You can calculate this value by taking the bitwise OR of the constants that correspond to the features you wish to enable.</P>

<P>There are two ways to set the debugging level. The first is to use the smart card driver test program <I>scdrvtst</I> that comes with the Windows DDK. The second is to use the smart card driver library function <A HREF="scfuncw_1rxb.htm"><B>SmartcardSetDebugLevel</B></A>. </P>

<P>In both cases, you must pass the value for the debugging level you want to the program or routine that sets the debugging level. For instance, to set the debugging level from the driver using a smart card library routine, you would make the following call:</P>

<PRE><B>SmartcardSetDebugLevel(</B><I>DebugLevel</I><B>);</B>
</PRE>

<P>Note that you must install the checked version of the operating system and the checked version of the driver to get debugging messages.</P>

<P>To write debugging messages from a reader driver, the driver must call the following routine: </P>

<PRE><B>SmartcardDebug(
</B>    <B>ULONG</B> <I>DebugLevel</I>,
    <B>PCHAR</B> <I>Message</I>
<B>);</B>
</PRE>

<P>This routine can also be used to write messages to a remote debugger. To write error messages, use the constant DEBUG_ERROR for the <I>DebugLevel</I>. To write standard driver messages, use the constant DEBUG_DRIVER. To write trace messages that indicate when the reader driver enters or exits a function, use DEBUG_TRACE as the <I>DebugLevel</I>.</P>

<P>While developing a driver, you should use the checked version of the smart card driver library and set the debugging level to the maximum using <B>SmartcardSetDebugLevel</B>(DEBUG_ALL) in your <B>DriverEntry</B> routine.</P>

<P>For information on setting up a remote debugging session, see <A HREF="JavaScript:hhobj_1.Click()">Debugging Tools for NT-Based Operating Systems</A>. </P>

<P></P>

<P></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Smart%20Card%20Driver%20Debugging"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
