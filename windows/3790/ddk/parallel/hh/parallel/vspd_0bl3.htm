<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reading and Writing a Parallel Device</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Reading and Writing a Parallel Device">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Parallel&nbsp;Ports&nbsp;and&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_reading_and_writing_a_parallel_device_kg"></A>Reading and Writing a Parallel Device</H2>

<P>A client reads and writes a parallel device by using <A HREF="cisspd_5rg2.htm">IRP_MJ_READ</A> and <A HREF="cisspd_4oqa.htm">IRP_MJ_WRITE</A> requests. A kernel-mode driver can also use the system-supplied <A HREF="cisspd_49bm.htm">PPARALLEL_READ</A> and <A HREF="cisspd_16lu.htm">PPARALLEL_WRITE</A> callback routines. To obtain pointers to the system-supplied read and write callbacks, a kernel-mode driver uses an <A HREF="cisspd_16eq.htm">IOCTL_INTERNAL_PARCLASS_CONNECT</A> request, which returns a <A HREF="cisspd_34xe.htm">PARCLASS_INFORMATION</A> structure. The <B>ParallelRead</B> and <B>ParallelWrite</B> members of the PARCLASS_INFORMATION structure are pointers to the callbacks.</P>

<P>If a client uses read and write I/O requests, the parallel port bus driver queues the requests on the work queue of the parallel device. A client of a parallel device does not have to lock a parallel port before reading and writing a device because the system-supplied bus driver for parallel ports automatically locks and unlocks the port for the client.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Reading%20and%20Writing%20a%20Parallel%20Device"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
