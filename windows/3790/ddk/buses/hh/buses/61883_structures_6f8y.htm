<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GET_UNIT_IDS</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="GET_UNIT_IDS">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_get_unit_ids_kr"></A>GET_UNIT_IDS</H1>

<P>The GET_UNIT_CAPABILITIES structure is used in conjunction with the <A HREF="61883_requests_0xf6.htm">Av61883_GetUnitInfo</A> request to retrieve device identifiers. </P>

<PRE class=syntax>typedef struct _GET_UNIT_IDS {
  OUT LARGE_INTEGER  UniqueID;
  OUT ULONG  VendorID;
  OUT ULONG  ModelID;
  OUT ULONG  ulVendorLength;
  OUT PWSTR  VendorText;
  OUT ULONG  ulModelLength;
  OUT PWSTR  ModelText;
} GET_UNIT_IDS, *PGET_UNIT_IDS;</PRE>

<H4>Members</H4>

<DL>
<DT><B>UniqueID</B></DT>

<DD>The unique ID for the device from the bus information block within the configuration ROM of the unit. </DD>

<DT><B>VendorID</B></DT>

<DD>The vendor ID for the device.</DD>

<DT><B>ModelID</B></DT>

<DD>The model ID for the device. This value is retrieved from the root directory within the device’s Configuration ROM.</DD>

<DT><B>ulVendorLength</B></DT>

<DD>The length, in bytes, of the vendor text string, including the terminating UNICODE_NULL. If <B>ulVendorLength</B> is not zero in the input GET_UNIT_IDS structure, <B>VendorText</B> must point to a buffer whose size is <B>sizeof(ulVendorLength)</B>.</DD>

<DT><B>VendorText</B></DT>

<DD>Points to a buffer that receives the "friendly name" for the vendor as a UNICODE string terminated with a UNICODE_NULL. If <B>ulVendorLength</B> is zero in the input GET_UNIT_IDS structure, <B>VendorText</B> is null. </DD>

<DT><B>ulModelLength</B></DT>

<DD>The length, in bytes, of the model text string, including the terminating UNICODE_NULL. If <B>ulModelLength</B> is not zero in the input GET_UNIT_IDS structure, <B>ModelText</B> must point to a buffer whose size is <B>sizeof(ulModelLength)</B>. </DD>

<DT><B>ModelText</B></DT>

<DD>Points to a buffer to receive the "friendly name" for the model as a UNICODE string terminated with a UNICODE_NULL. If <B>ulModelLength</B> is zero in the input GET_UNIT_IDS structure, <B>ModelText</B> is null. This value is retrieved from the root directory within the device’s Configuration ROM. </DD>

<DT><B>UnitModelID</B></DT>

<DD>The model ID for the device. This value is retrieved from the unit directory within the device’s Configuration ROM. </DD>

<DT><B>ulUnitModelLength</B></DT>

<DD>The length, in bytes, of the model text string, including the terminating UNICODE_NULL. If <B>ulUnitModelLength</B> is not zero in the input GET_UNIT_IDS structure, <B>UnitModelText</B> must point to a buffer whose size is <B>sizeof(ulUnitModelLength)</B>. </DD>

<DT><B>UnitModelText</B></DT>

<DD>Points to a buffer that receives the "friendly name" for the model represented as a UNICODE string terminated with a UNICODE_NULL. If <B>ulUnitModelLength</B> is zero in the input GET_UNIT_IDS structure, <B>UnitModelText</B> will be NULL. This value is retrieved from the unit directory within the device’s Configuration ROM.
</DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>61883.h</I>. Include <I>61883.h</I>.</P>

<H4>See Also</H4>

<P><A HREF="61883_requests_0xf6.htm"><B>Av61883_GetUnitInfo</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: GET_UNIT_IDS"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
