<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Av61883_SetFcpNotify</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Av61883_SetFcpNotify">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_av61883_setfcpnotify_kr"></A>Av61883_SetFcpNotify</H1>

<H4>Operation</H4>

<P>The <B>Av61883_SetFcpNotify</B> request registers a client driver notification of FCP requests or responses, or cancels a prior registration. A driver must register for FCP notifications in order to retrieve requests or responses. The driver is responsible for canceling registration by sending an <B>Av61883_SetFcpNotify</B> request with DEREGISTER_FCP_NOTIFY set in <B>Flags</B> before the system unloads the driver. The relevant members of the <A HREF="61883_structures_3sj6.htm">AV_61883_REQUEST</A> structure for this request are:</P>

<PRE class=syntax>typedef struct _AV_61883_REQUEST {
  ULONG Function;
  union {
    typedef struct _SET_FCP_NOTIFY {
      IN ULONG   Flags;
      IN NODE_ADDRESS  NodeAddress;
    } SET_FCP_NOTIFY, *PSET_FCP_NOTIFY;
    .
    .
    .
  };
} AV_61883_REQUEST, *PAV_61883_REQUEST;</PRE>

<H4>AV_61883_REQUEST Input</H4>

<DL>
<DT><B>Function</B></DT>

<DD><B>Av61883_SetFcpNotify</B></DD>

<DT><B>Flags</B></DT>

<DD>Specifies the notification requested by the driver. The driver can register by setting <B>Flags</B> with either or both of the following: 

<P>REGISTER_FCP_RESPONSE_NOTIFY


<P>REGISTER_FCP_REQUEST_NOTIFY 


<P>The driver can cancel notification by setting <B>Flags</B> with DEREGISTER_FCP_NOTIFY, which clears REGISTER_FCP_RESPONSE_NOTIFY and REGISTER_FCP_REQUEST_NOTIFY.
</DD>

<DT><B>NodeAddress</B></DT>

<DD>Reserved for use by the operating system.
</DD>
</DL>

<H4>I/O Status Block</H4>

<P>If successful, the IEC-61883 protocol driver sets <B>Irp-&gt;IoStatus.Status </B>to STATUS_SUCCESS. </P>

<H4>Headers</H4>

<P>Defined in <I>61883.h</I>. Include <I>61883.h</I>.</P>

<H4>See Also</H4>

<P><A HREF="61883_structures_3sj6.htm">AV_61883_REQUEST</A>, <A HREF="61883_requests_92nm.htm"><B>Av61883_GetFcpRequest</B></A>, <A HREF="61883_requests_5foy.htm"><B>Av61883_GetFcpResponse</B></A>, <A HREF="61883_requests_84s2.htm"><B>Av61883_SendFcpRequest</B></A>, <A HREF="61883_requests_57le.htm"><B>Av61883_SendFcpResponse</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Av61883_SetFcpNotify"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
