<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Initializing and Calling IDE Minidriver Routines</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Initializing and Calling IDE Minidriver Routines">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driverentry_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_dispatchpnp_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_initializing_and_calling_ide_minidriver_routines_kr"></A>Initializing and Calling IDE Minidriver Routines</H1>

<P>All IDE controller minidrivers must provide a series of standard routines that implement hardware-specific functionality. The diagram that follows illustrates how an IDE controller minidriver makes its routines available to the controller driver. Note that the PciIdeX library, though conceptually separate from the IDE controller driver as illustrated in the figure that follows, is contained within the controller driver's executable file, <I>pciidex.sys</I>. When a minidriver calls a PciIdeX library routine, it is in fact calling a routine within the controller driver. </P>

<P><IMG SRC="images/idecallbacks.gif" ALT="" BORDER=0></P>

<P><B>Program Flow for Minidriver Routine Initialization</B>

<OL>
	<LI>The PnP Manager loads the IDE controller driver-minidriver, then calls its <A HREF="JavaScript:hhobj_1.Click()"><B>DriverEntry</B></A> routine passing it a pointer to the driver object for the controller driver. </LI>

	<LI>The minidriver's <B>DriverEntry</B> calls the <A HREF="ide_minikr_9b5e.htm"><B>PciIdeXInitialize</B></A> library routine, passing it a pointer to the minidriver's <B>GetControllerProperties</B> routine. </LI>

	<LI><B>PciIdeXInitialize</B> stores the pointer to <B>GetControllerProperties</B> in the driver object. </LI>

	<LI>PnP Manager dispatches an IRP_MN_START_DEVICE request to the IDE controller driver to start the controller. The IDE controller driver receives the request in its <A HREF="JavaScript:hhobj_2.Click()"><I>DispatchPnP</I></A> routine and calls an internal routine that starts the device. </LI>

	<LI>The controller driver retrieves a pointer to <B>GetControllerProperties</B> that is stored in the driver object. </LI>

	<LI>The controller driver calls <B>GetControllerProperties</B>, passing it a pointer to an <A HREF="ide_struct_8dde.htm">IDE_CONTROLLER_PROPERTIES</A> structure. </LI>

	<LI><B>GetControllerProperties</B> loads pointers for a standard set of minidriver routines into IDE_CONTROLLER_PROPERTIES. </LI>
</OL>

<P>Once the minidriver populates the IDE_CONTROLLER_PROPERTIES structure with function pointers that point to the minidriver's routines, the controller driver can call them.</P>

<P>The routines that every minidriver must provide for the controller to call are as follows:</P>

<P class=indent1><A HREF="ide_minikr_7wdu.htm"><B>HwIdeXChannelEnabled</B></A></P>

<P class=indent2>This routine determines whether the indicated channel is enabled or not.</P>

<P class=indent1><A HREF="ide_minikr_7nea.htm"><B>HwIdeXGetControllerProperties</B></A></P>

<P class=indent2>This routine reports properties of the IDE controller hardware. </P>

<P class=indent1><A HREF="ide_minikr_6i0i.htm"><B>HwIdeXSyncAccessRequired</B></A></P>

<P class=indent2>This routine indicates whether both channels of its controller can be accessed at once. </P>

<P class=indent1><A HREF="ide_minikr_4alu.htm"><B>HwIdeXTransferModeSelect</B></A></P>

<P class=indent2>This routine returns the best PIO mode and the best DMA mode for each device indicated in <I>XferMode</I>. </P>

<P class=indent1><A HREF="ide_minikr_8otu.htm"><B>HwIdeXUdmaModesSupported</B></A></P>

<P class=indent2>This routine indicates which ultra direct memory access (UDMA) transfer mode is current and which is best for the device. </P>

<P class=indent1><A HREF="ide_minikr_19yq.htm"><B>HwIdeXUseDma</B></A></P>

<P class=indent2>This routine determines whether I/O can be done by means of DMA. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Initializing%20and%20Calling%20IDE%20Minidriver%20Routines"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
