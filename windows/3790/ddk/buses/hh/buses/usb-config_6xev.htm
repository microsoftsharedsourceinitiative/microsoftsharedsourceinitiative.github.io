<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Selecting the Configuration for a Multiple-Interface (Composite) USB Device</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Selecting the Configuration for a Multiple-Interface (Composite) USB Device">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_selecting_the_configuration_for_a_multiple_interface_composite_usb_device_kg"></A>Selecting the Configuration for a Multiple-Interface (Composite) USB Device</H2>

<P>If you wish to allow USB clients to programmatically set the device configuration of a device with multiple interfaces you must make substantial changes to the system architecture. The techniques explained in the topic <A HREF="usb-config_7mw7.htm">Selecting the Configuration for a Single-Interface (non-Composite) USB Device</A> will not work if the device has multiple interfaces.</P>

<P>Each interface of a composite device is, in many respects, like a separate device that has its own physical device object (PDO). If a device driver for a particular interface resets the configuration of the device, this changes the configuration for <I>all</I> of the device's interfaces, not just the interface that the driver manages. The operating system does not allow this.</P>

<P>When the system detects that a USB device is composite, it loads the USB common class generic parent driver (<I>usbccgp.sys</I>). From that point forward, <I>usbccgp.sys</I> is responsible for selecting the configuration of the device. Accordingly, device drivers that are higher in the driver stack cannot change the configuration. </P>

<P>To set the configuration of a composite device, you must provide a alternative to <I>usbccgp.sys</I>, and ensure that the system loads your alternative driver instead of <I>usbccgp.sys</I>. To do this, you must install an INF file that not only matches the hardware IDs of the interfaces, but also matches the hardware ID of the device itself. Microsoft does not recommend that you attempt this, because <I>usbccgp.sys</I> is a core component of the Windows USB architecture, and it serves many functions that would be difficult to implement in a vendor-supplied driver. </P>

<P>For more information on <I>usbccgp.sys</I>, see <A HREF="usbsystem_3j8n.htm">USB Common Class Generic Parent Driver</A>.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Selecting%20the%20Configuration%20for%20a%20Multiple-Interface%20(Composite)%20USB%20Device"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
