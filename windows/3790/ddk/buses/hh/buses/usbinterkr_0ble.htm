<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CreateUsbDevice</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="CreateUsbDevice">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_query_interface_dr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mn_query_interface_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_createusbdevice_kr"></A><I>CreateUsbDevice</I></H1>

<P>The <I>CreateUsbDevice </I>routine indicates to the port driver that a new USB device has arrived. </P>

<PRE class=syntax><B>NTSTATUS
CreateUsbDevice(
  IN PVOID  </B><I>BusContext</I>,
<B>  IN OUT PUSB_DEVICE_HANDLE  </B><I>*DeviceHandle</I>,
<B>  IN PUSB_DEVICE_HANDLE  </B><I>*HubDeviceHandle</I>,
<B>  IN USHORT  </B><I>PortStatus</I>,
<B>  IN USHORT  </B><I>PortNumber</I>
<B>  )</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>BusContext</I></DT>

<DD>Contains a handle to the bus context returned in the <I>BusContext</I> member of the interface structure by an <A HREF="JavaScript:hhobj_1.Click()">IRP_MN_QUERY_INTERFACE</A> request. The port driver provides this information when the hub driver queries for the interface. </DD>

<DT><I>DeviceHandle</I></DT>

<DD>On return, contains a handle to the new device structure created by this routine. </DD>

<DT><I>HubDeviceHandle</I></DT>

<DD>Contains a handle to the hub device. </DD>

<DT><I>PortStatus</I></DT>

<DD>On return, contains the status of the port. This parameter can take one of the following values. 


<TABLE>

<TR VALIGN="top">
<TH align=left width=51%>Status</TH>
<TH align=left width=49%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_CONNECT</TD>
<TD width=49%>Indicates that there is a hub device connected to the port.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_ENABLE</TD>
<TD width=49%>Indicates that the port is enabled.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_SUSPEND</TD>
<TD width=49%>Indicates that the port has been suspended. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_OVER_CURRENT</TD>
<TD width=49%>Indicates that an overcurrent condition exists on the port, and that the port is not functioning properly.  </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_RESET</TD>
<TD width=49%>Indicates that the port has been reset. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_POWER</TD>
<TD width=49%>Indicates that the port has power. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_LOW_SPEED</TD>
<TD width=49%>Indicates that the host controller is a low-speed controller.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>PORT_STATUS_HIGH_SPEED</TD>
<TD width=49%>Indicates that the host controller is a USB 2.0-compliant high-speed controller. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>PortNumber</I></DT>

<DD>On return, contains the port number. 
</DD>
</DL>

<H4>Return Value</H4>

<P><I>CreateUsbDevice</I> returns one of the following values:

<DL>
<DT>STATUS_SUCCESS</DT>

<DD>The call completed successfully.</DD>

<DT>STATUS_DEVICE_NOT_CONNECTED</DT>

<DD>The hub device handle is not valid. </DD>

<DT>STATUS_INSUFFICIENT_RESOURCES</DT>

<DD>Internal data structures could not be allocated due to a lack of resources. </DD>

<DT>STATUS_DEVICE_DATA_ERROR</DT>

<DD>Parent hub driver must disable the port. </DD>
</DL>

<H4>Headers</H4>

<P>Declared in <I>usbbusif.h</I>. Include <I>usbbusif.h</I>. </P>

<H4>Comments</H4>

<P>This routine sets up the internal data structures that the port driver uses to keep track of the device and assigns the device an address. The hub driver calls this routine for each new device on the USB bus. </P>

<P>The routine definition that is provided on this reference page is an example routine whose parameters are just placeholder names. The actual prototype of the routine is declared in <I>usbbusif.h</I> as follows:</P>

<PRE>typedef NTSTATUS
  (USB_BUSIFFN *PUSB_BUSIFFN_CREATE_USB_DEVICE) (
    IN PVOID,
    IN OUT PUSB_DEVICE_HANDLE *,
    IN PUSB_DEVICE_HANDLE,
    IN USHORT,
    IN USHORT
  );</PRE>

<P>Callers of this routine must be running at IRQL&nbsp;= PASSIVE_LEVEL</P>

<H4>See Also</H4>

<P><A HREF="usbinterkr_7k4y.htm">USB Interfaces</A></P>

<H1><I>FlushTransfers</I></H1>

<P>The <I>FlushTransfesr</I> routine retrieves flushes any outstanding transfers for the indicated device. </P>

<PRE class=syntax><B>NTSTATUS
FlushTransfers (
  IN PVOID  </B><I>BusContext</I>,
<B>  IN OUT PUSB_DEVICE_HANDLE  </B><I>DeviceHandle</I>,
<B>)</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>BusContext</I></DT>

<DD>Contains a handle to the bus context returned in the <I>BusContext</I> member of the structure by an <A HREF="JavaScript:hhobj_2.Click()">IRP_MN_QUERY_INTERFACE</A> request. The port driver provides this information when the hub driver queries for the interface. </DD>

<DT><I>DeviceHandle</I></DT>

<DD>Contains a handle to the device created by <A HREF="#ddk_createusbdevice_kr"><I>CreateUsbDevice</I></A>
</DD>
</DL>

<H4>Return Value</H4>

<P>None. </P>

<H4>Headers</H4>

<P>Declared in <I>usbbusif.h</I>. Include <I>usbbusif.h</I>. </P>

<H4>Comments</H4>

<DL>
<DT>In addition to flushing outstanding tranfers, this routine also flushes the bad request list. If the caller does not pass a device handle in the <I>DeviceHandle </I>parameter, <I><B>FlushTransfers</B> </I>just flushes all tranfers on the bad request list. The purpose of this function is to complete any transfers that may be pending for client drivers that are about to unload.</DT>
</DL>

<P>The routine definition that is provided on this reference page is an example routine whose parameters are just placeholder names. The actual prototype of the routine is declared in <I>usbbusif.h</I> as follows:</P>

<PRE>typedef VOID
  (USB_BUSIFFN *PUSB_BUSIFFN_FLUSH_TRANSFERS) (
    IN PVOID,
    IN PVOID
  );</PRE>

<P>Callers of this routine must be running at IRQL &lt;= PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="usbinterkr_7k4y.htm">USB Interfaces</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: CreateUsbDevice"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
