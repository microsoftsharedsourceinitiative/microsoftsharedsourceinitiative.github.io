<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Driver Loading Issues in NT-Based Operating Systems</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Driver Loading Issues in NT-Based Operating Systems">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_id_dg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_updatedriverforplugandplaydevices_dr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_driver_loading_issues_in_nt_based_operating_systems_kg"></A>Driver Loading Issues in NT-Based Operating Systems</H3>

<P>Drivers are loaded differently in Microsoft® Windows® 98/Me and in Windows&nbsp;2000 and later operating systems. The difference arises when the end user plugs in a device whose compatible ID is matched in Windows-supplied INF files, but whose device ID is not. (This is precisely the case for a new composite device because the device ID is not matched, but the <I>USB\COMPOSITE</I> compatible ID is.) </P>

<P>In this case, Windows&nbsp;98 opens a dialog window and allows the user to provide a floppy disk from the vendor. If the floppy disk contains an INF file that matches the device ID of the device, Windows loads the vendor’s driver according to the vendor’s INF file. In the same scenario, however, Windows&nbsp;2000 and later operating systems do not give the user a chance to provide a vendor-supplied floppy disk. These operating systems just install a driver according to the compatible ID that is matched in the Microsoft-supplied INF files. </P>

<P>For example, suppose that a vendor ships a new USB composite device, and its <A HREF="JavaScript:hhobj_1.Click()">device ID</A> is not matched in the native INF files. Also suppose that the vendor decides to provide a single driver for all the interfaces and <I>not</I> to use the generic parent driver. The vendor ships the driver, along with an INF file that matches USB\VID_<I>xxxx</I>&amp;PID_<I>yyyy</I>, the device ID of the device. When the user plugs the device into a machine with an NT-based operating system, the generic parent driver loads automatically, and the user does not have a chance to provide the vendor floppy disk. The generic parent driver then enumerates device objects for the interfaces. Because there is no match for either the device ID or compatible IDs anywhere, no drivers are loaded for these devices. They appear as <I>Unknown</I> devices in the device manager.</P>

<P>If you are not using the generic parent driver, you must design you installation software to prevent this from occurring. The installation CD must contain an <I>Autorun.inf</I> file that points to a setup application. The setup application should call <A HREF="JavaScript:hhobj_2.Click()"><B>UpdateDriverForPlugAndPlayDevices</B></A>, passing it the device ID and a path to the relevant INF file.</P>

<P>The best option, however, is to design your interface drivers, so that they work with the generic parent facility. The generic parent facility (either <I>usbhub.sys</I> or <I>usbccgp.sys</I>) creates a separate device object for each interface. The vendor’s INF then matches the device IDs of only those interfaces for which the vendor provides third-party support. The remaining interfaces are supported by Microsoft-supplied drivers.</P>

<P>Because of the scenario just described, vendors are encouraged to use the generic parent driver whenever the interfaces of the composite USB device are sufficiently independent of one another to allow it. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Driver%20Loading%20Issues%20in%20NT-Based%20Operating%20Systems"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
