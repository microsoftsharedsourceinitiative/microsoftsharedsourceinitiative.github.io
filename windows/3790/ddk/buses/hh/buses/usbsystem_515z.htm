<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Loading Client Drivers for Interfaces of Composite Devices</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Loading Client Drivers for Interfaces of Composite Devices">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_device_id_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>System&nbsp;Support&nbsp;for&nbsp;Buses:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_loading_client_drivers_for_interfaces_of_composite_devices_kg"></A>Loading Client Drivers for Interfaces of Composite Devices</H3>

<P>When a new USB composite device is plugged into a Microsoft® Windows® machine, the USB hub driver generates a PnP event. The PnP event reports the creation of a new device object with <A HREF="JavaScript:hhobj_1.Click()">device ID</A> of USB\VID_<I>xxxx</I>&amp;PID_<I>yyyy</I> (<I>xxxx</I> and <I>yyyy</I> are taken directly from <I>idVendor</I> and <I>idProduct</I> fields of the device descriptor, respectively). The device object also has a set of compatible IDs that include <I>USB\COMPOSITE</I>. Windows then searches the INF files in the <I>inf</I> subdirectory of the Windows installation (and, possibly, a vendor-provided floppy disk) for a match. If the device ID is matched, Windows loads the single driver that is indicated by the installation script and the generic parent driver does not come into play. If no device ID match is found, Windows uses a compatible ID, for which it loads the USB generic parent driver .</P>

<P>Suppose that the composite device has three interfaces. The generic parent driver is loaded for a three-interface composite USB device whose primary device ID is USB\VID_<I>xxxx</I>&amp;PID_<I>yyyy</I>&amp;Rev_<I>zzzz</I>. The generic parent driver then generates three PnP events for three new device objects. The new device objects contain device IDs in the USB\VID_<I>xxxx</I>&amp;PID_<I>yyyy</I>&amp;MI_<I>zz</I> format, where <I>zz</I> is taken from the <B>bInterfaceNumber</B> member of the corresponding interface descriptor. Each device object also has three compatible IDs in the form of USB\Class_<I>ii</I>&amp;SubClass_<I>jj</I>&amp;Prot_<I>kk</I>, USB\Class_<I>ii</I>&amp;SubClass_<I>jj</I>, and USB\Class_<I>ii</I>, where <I>ii</I>, <I>jj</I>, and <I>kk</I>, are taken directly from the <B>bInterfaceClass</B>, <B>bInterfaceSubClass</B>, and <B>bInterfaceProtocol</B> members of the corresponding interface descriptor structure <A HREF="usbstrct_7j1u.htm">USB_INTERFACE_DESCRIPTOR</A>. For each new device object, Windows searches the INF files for a device ID or compatible ID match and loads the appropriate driver accordingly, just as it did for the original device object.</P>

<P>The generic parent driver then multiplexes the data flow from each client driver, combining these separate interactions into a single data stream for the driver of composite device. The generic parent deals with all synchronization, PnP, and power management issues.</P>

<P>Suppose the device has interfaces numbered 0, 1, and 2, and interfaces 0 and 1 belong to a class that is supported in Windows-supplied drivers, but interface 2 requires special support by the vendor’s driver. The vendor should ship a floppy disk with a driver for interface 2 and an INF file. The INF file should have an INF <I>DDInstall</I> section for a hardware ID that matches the device ID USB\VID_<I>xxxx</I>&amp;PID_<I>yyyy</I>&amp;Rev_<I>zzzz</I>&amp;MI_02. The INF file must not match USB\VID_<I>xxxx</I>&amp;PID_<I>yyyy</I>, the device ID for the device itself, because this prevents the generic parent driver from loading. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Loading%20Client%20Drivers%20for%20Interfaces%20of%20Composite%20Devices"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
