<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Dispatch Routines Provided by a HID Minidriver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_fdo_dg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_dispatch_routines_provided_by_a_hid_minidriver_kg"></A>Dispatch Routines Provided by a HID Minidriver</H4>

<P>A HID minidriver must supply the following dispatch routines: create, close, internal device control, system control, Plug and Play, and power management. Except for internal device control requests, most of these dispatch routines provide minimal function. When the HID class driver calls these dispatch routines, it passes the minidriver driver object and the functional device object (<A HREF="JavaScript:hhobj_1.Click()">FDO</A>).</P>

<H4>IRP_MJ_CREATE</H4>

<P>In compliance with WDM requirements, the HID class driver and a HID minidriver provide a dispatch routine for create requests. However, the FDO can not be opened. The HID class driver returns STATUS_UNSUCCESSFUL.</P>

<P>A HID minidriver only needs to provide a stub. The create dispatch routine is never called.</P>

<H4>IRP_MJ_CLOSE</H4>

<P>In compliance with WDM requirements, the HID class driver and a HID minidriver must provide a dispatch routine for close requests. However, the FDO can not be opened. The HID class driver returns STATUS_INVALID_PARAMETER_1.</P>

<P>A HID minidriver only needs to provide a stub. The close dispatch routine is never called.</P>

<H4>IRP_MJ_DEVICE_CONTROL</H4>

<P>A HID minidriver does not need a dispatch routine for device control requests. The HID class driver does not pass device control requests to a minidriver.</P>

<H4>IRP_MJ_INTERNAL_DEVICE_CONTROL</H4>

<P>A HID minidriver must provide a dispatch routine for internal device control requests that supports the requests described in <A HREF="hidioreq_1bci.htm">HID Minidriver IOCTLs</A>.</P>

<P>The HID class driver primarily uses internal device control requests to access the underlying input device.</P>

<P>The HID minidriver handles these requests in a device-specific way. </P>

<H4>IRP_MJ_SYSTEM_CONTROL</H4>

<P>A HID minidriver must provide a dispatch routine for system control requests. However, a HID minidriver is only required to pass system control requests down the device stack as follows:

<UL>
	<LI>Skip the current IRP stack location</LI>

	<LI>Send the request down the FDO's device stack</LI>
</UL>

<H4>IRP_MJ_PNP</H4>

<P>A HID minidriver must supply a dispatch routine for Plug and Play requests. </P>

<P>The HID class driver does all the Plug and Play processing associated with the FDO. When the HID class driver processes a Plug and Play request, it calls the HID minidriver Plug and Play dispatch routine. </P>

<P>A HID minidriver Plug and Play dispatch routine does the following:

<UL>
	<LI>Handles sending the request down the FDO's device stack and completing the request on the way back up the device stack, as appropriate for each type of request.</LI>

	<LI>Does device-specific processing associated with certain requests to update information about the state of the FDO. 
<P>For example, the minidriver might update the Plug and Play state of the FDO (in particular, whether the FDO is started, stopped, or in the process of being removed).
</LI>
</UL>

<H4>IRP_MJ_POWER</H4>

<P>The HID minidriver must supply a dispatch routine for power requests. However, the HID class driver handles the power processing for the FDO.</P>

<P>In compliance with WDM requirements, a HID minidriver sends power requests down the FDO's device stack in the following way:

<UL>
	<LI>Skips the current IRP stack location</LI>

	<LI>Starts the next power IRP</LI>

	<LI>Sends the power IRP down the FDO's device stack</LI>
</UL>

<P>Typically, the HID minidriver passes power requests down the device stack without additional processing.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Dispatch%20Routines%20Provided%20by%20a%20HID%20Minidriver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
