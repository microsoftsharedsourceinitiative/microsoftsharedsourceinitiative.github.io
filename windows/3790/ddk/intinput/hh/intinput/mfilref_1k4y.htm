<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MouFilter_IsrHook</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MouFilter_IsrHook">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_moufilter_isrhook_kr"></A>MouFilter_IsrHook</H1>

<P><B>MouFilter_IsrHook</B> is a template for a <A HREF="i8042ref_4r3m.htm">PI8042_MOUSE_ISR</A> callback routine that customizes the operation of the I8042prt mouse ISR.</P>

<PRE class=syntax><B>BOOLEAN
  MouFilter_IsrHook(
    IN PDEVICE_OBJECT  </B><I>DeviceObject</I><B>, 
    IN PMOUSE_INPUT_DATA  </B><I>CurrentInput</I><B>, 
    IN POUTPUT_PACKET  </B><I>CurrentOutput</I><B>,
    IN UCHAR  </B><I>StatusByte</I><B>,
    IN OUT PUCHAR  </B><I>DataByte</I><B>,
    OUT PBOOLEAN  </B><I>ContinueProcessing</I><B>,
    IN PMOUSE_STATE  </B><I>MouseState</I><B>,
    IN PMOUSE_RESET_SUBSTATE  </B><I>ResetSubState</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceObject</I></DT>

<DD>Pointer to the filter device object of the driver that supplies this callback.</DD>

<DT><I>CurrentInput</I></DT>

<DD>Pointer to the input <A HREF="mref_4d6a.htm">MOUSE_INPUT_DATA</A> structure being constructed by the ISR.</DD>

<DT><I>CurrentOutput</I></DT>

<DD>Pointer to the <A HREF="i8042ref_44aa.htm">OUTPUT_PACKET</A> structure that specifies the bytes being written to the hardware device.</DD>

<DT><I>StatusByte</I></DT>

<DD>Specifies a status byte that is read from I/O port 60 when the interrupt occurs.</DD>

<DT><I>DataByte</I></DT>

<DD>Specifies a data byte that is read from I/O port 64 when the interrupt occurs.</DD>

<DT><I>ContinueProcessing</I></DT>

<DD>Specifies, if TRUE, that the I8042prt mouse ISR continues processing after this callback returns. Otherwise, processing is not continued.</DD>

<DT><I>MouseState</I></DT>

<DD>Pointer to a <A HREF="i8042ref_2jhu.htm">MOUSE_STATE</A> enumeration value, which identifies the state of mouse input.</DD>

<DT><I>ResetSubState</I></DT>

<DD>Pointer to MOUSE_RESET_SUBSTATE enumeration value, which identifies the a mouse reset substate. See the Comments section.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>MouFilter_IsrHook</B> returns TRUE if the interrupt service routine should continue; otherwise it returns FALSE.</P>

<H4>Headers</H4>

<P>Declared in <I>moufiltr.h</I>. Include<I> moufiltr.h</I></P>

<H4>Comments</H4>

<P>A <B>MouFilter_IsrHook</B> callback is not needed if the default operation of I8042prt is sufficient.</P>

<P>The I8042prt mouse ISR calls <B>MouFilter_IsrHook</B> after it validates the interrupt.</P>

<P>To reset a mouse, I8042prt goes through a sequence of operational substates, each one of which is identified by an MOUSE_RESET_SUBSTATE enumeration value. For more information about how I8042prt resets a mouse and the corresponding mouse reset substates, see the I8042prt sample code provided in the DDK and the documentation of MOUSE_RESET_SUBSTATE in <I>ntdd8042.h.</I></P>

<P><B>MouFilter_IsrHook</B> runs in kernel mode at the IRQL of the I8042prt mouse ISR.</P>

<H4>See Also</H4>

<P><A HREF="mref_4d6a.htm">MOUSE_INPUT_DATA</A>, <A HREF="i8042ref_2jhu.htm">MOUSE_STATE</A>, <A HREF="i8042ref_44aa.htm">OUTPUT_PACKET</A>, <A HREF="i8042ref_4r3m.htm">PI8042_MOUSE_ISR</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MouFilter_IsrHook"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
