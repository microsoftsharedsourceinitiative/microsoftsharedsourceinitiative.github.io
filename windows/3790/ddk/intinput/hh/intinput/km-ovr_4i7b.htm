<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Connect a Class Service Callback and a Filter Service Callback to a Device</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Connect a Class Service Callback and a Filter Service Callback to a Keyboard and Mouse Device">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_connect_a_class_service_callback_and_a_filter_service_callback_to_a_device_kg"></A>Connect a Class Service Callback and a Filter Service Callback to a Device</H2>

<P>The class drivers must connect their class service to a device before the device can be opened. The class drivers connect their class service after they attach a class DO to a device stack. The function driver uses the class service callback to transfer input data from a device to the class data queue for the device. The function driver's ISR dispatch completion routine for a device calls the class service callback. Kbdclass provides the class service callback <A HREF="kref_0drm.htm"><B>KeyboardClassServiceCallback</B></A>, and Mouclass provides the class service callback <A HREF="mref_8e9e.htm"><B>MouseClassServiceCallback</B></A>.</P>

<P>A vendor can modify the operation of a class service callback by installing an upper-level filter driver for a device. The sample filter driver Kbfiltr defines the <A HREF="kfilref_11yq.htm"><B>KbFilter_ServiceCallback</B></A> callback, and the sample filter driver Moufiltr defines the <A HREF="mfilref_4hte.htm"><B>MouFilter_ServiceCallback</B></A> callback. The sample filter service callbacks can be configured to modify the input data that is transferred from the port input buffer for a device to the class data queue. For example, the filter service callback can delete, transform, or insert data.</P>

<P>The class and filter service callbacks are connected in the following way:

<UL>
	<LI>The class driver sends an internal device connect request down the device stack (<A HREF="i8042ref_95ma.htm">IOCTL_INTERNAL_KEYBOARD_CONNECT</A> or <A HREF="i8042ref_08mq.htm">IOCTL_INTERNAL_MOUSE_CONNECT</A>). The class connect data is specified by a CONNECT_DATA structure that includes a pointer to the class device object, and a pointer to the class service callback.</LI>

	<LI>After the filter driver receives the connect request, it saves a copy of the class connect data, and replaces the request’s connect data with filter connect data. The filter connect data specifies a pointer to the filter device object and a pointer to the filter driver service callback. The filter driver then sends the filtered connect request to the function driver.</LI>
</UL>

<P>The class and filter service callbacks are called in the following way:

<UL>
	<LI>The function driver uses the filter connect data to make the initial callback to the filter service callback. </LI>

	<LI>After filtering the input data, the filter service callback uses the class connect data that it saved to make a callback to the class service callback.</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Connect%20a%20Class%20Service%20Callback%20and%20a%20Filter%20Service%20Callback%20to%20a%20Device"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
