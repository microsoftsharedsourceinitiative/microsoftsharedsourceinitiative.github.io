<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VJREGDRVINFO</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VJREGDRVINFO">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Interactive&nbsp;Input&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_vjregdrvinfo_di"></A>VJREGDRVINFO</H1>

<P>The VJREGDRVINFO structure passes the new style registration information to VJoyD. All of the members of this structure must be filled in, although the version members can be set to zero for unknown, and the last four pointers can be set selectively to none. </P>

<PRE class=syntax>typedef struct VJREGDRVINFO
{
  DWORD  dwSize;
  DWORD  dwFunction;
  DWORD  dwFlags;
  LPSTR  lpszOEMCallout;
  DWORD  dwFirmwareRevision;
  DWORD  dwHardwareRevision;
  DWORD  dwDriverVersion;
  LPVJDEVICEDESC  lpDeviceDesc;
  LPVJPOLLREG  lpPollReg;
  LPVJFORCEREG  lpForceReg;
  LPVJGPEMULREG  lpGPEmulReg;
} VJREGDRVINFO, *LPVJREGDRVINFO;</PRE>

<H4>Members</H4>

<DL>
<DT><B>dwSize</B> </DT>

<DD>Specifies the size, in bytes, of the structure. This member must be initialized before the structure is used. </DD>

<DT><B>dwFunction</B> </DT>

<DD>Indicates the type of registration to be performed. This value can be one of the following: 

<DL>
<DT>VJRT_CHANGE </DT>

<DD>Indicates that anything can change except the driver and initialization parameters. For future use. </DD>

<DT>VJRT_LOADED </DT>

<DD>Indicates that the driver has been loaded. </DD>

<DT>VJRT_PLUG </DT>

<DD>Indicates a new instance of a device. For future use. </DD>

<DT>VJRT_UNPLUG </DT>

<DD>Indicates to VJoyD that a registered device is no longer available. For future use. </DD>
</DL>
</DD>

<DT><B>dwFlags</B> </DT>

<DD>Flags associated with this registration. One or more of the following: 

<DL>
<DT>VJDF_UNUSED </DT>

<DD>Indicates the driver is not in use. 
</DD>
</DL>


<P>The following flags are interface attributes (that is, the result is combination of OEM flag and VJoyD): 


<DL>
<DT>VJDF_UNIT_ID </DT>

<DD>Indicates the unit ID is valid. </DD>

<DT>VJDF_ISHID </DT>

<DD>Indicates that this is an HID device, so refuse polls. </DD>

<DT>VJDF_SENDSNOTIFY </DT>

<DD>Indicates the driver calls <B>VJOYD_DeviceUpdateNotify_Service. </B></DD>

<DT>VJDF_NEWIF </DT>

<DD>Indicates that use new interface may be changed on registration (is set by VJoyD). </DD>

<DT>VJDF_ATTR_MASK </DT>

<DD>Indicates a combination of VJDF_NEWIF, VJDF_UNIT_ID, and VJDF_ISHID. 
</DD>
</DL>


<P>The following flags are interface requirements: 


<DL>
<DT>VJDF_AUTOLOAD </DT>

<DD>Indicates that VxD must not be loaded by VJoyD. </DD>

<DT>VJDF_HOTPLUG </DT>

<DD>Uses PLUG/UNPLUG. </DD>

<DT>VJDF_IF_REQ_MASK </DT>

<DD>Indicates a combination of VJDF_AUTOLOAD and VJDF_HOTPLUG. 
</DD>
</DL>


<P>The following are device node requirement flags: 


<DL>
<DT>VJDF_NODEVNODE </DT>

<DD>Indicates that the device did not get its resources via CFG_MGR. </DD>

<DT>VJDF_ISANALOGPORTDRIVER </DT>

<DD>Indicates that the device plugs into a standard game port. </DD>

<DT>VJDF_NOCHAINING </DT>

<DD>Indicates a limit of one device node per device. </DD>

<DT>VJDF_DN_REQ_MASK </DT>

<DD>Indicates a combination of the attributes signified by the VJDF_NODEVNODE, VJDF_ISANALOGPORTDRIVER, and VJDF_NOCHAINING flags. </DD>
</DL>
</DD>

<DT><B>lpszOEMCallout</B> </DT>

<DD>Points to a string, such as "Msanalog.vxd", that identifies the driver associated with this registration. </DD>

<DT><B>dwFirmwareRevision</B> </DT>

<DD>Specifies the firmware revision of the device. If the revision is unknown, a value of zero should be used. </DD>

<DT><B>dwHardwareRevision</B> </DT>

<DD>Specifies the hardware revision of the device. If the revision is unknown, a value of zero should be used. </DD>

<DT><B>dwDriverVersion</B> </DT>

<DD>Specifies the version number of the device driver. If the revision is unknown, a value of zero should be used. </DD>

<DT><B>lpDeviceDesc</B> </DT>

<DD>Points to a <A HREF="di_ref_0zxl.htm">VJDEVICEDESC</A> structure that describes the configuration properties of the device. This allows drivers to supply the description of the device rather than use the registry for this purpose. If no description is available, this member should be set to NULL. </DD>

<DT><B>lpPollReg</B> </DT>

<DD>Points to a <A HREF="di_ref_69k9.htm">VJPOLLREG</A> structure that contains the most common driver callbacks. In the very rare case that a driver does need to register any of these callbacks, this member should be set to NULL. </DD>

<DT><B>lpForceReg</B> </DT>

<DD>Points to a <A HREF="di_ref_190p.htm">VJFORCEREG</A> structure that contains all of the force feedback specific callbacks. If the ring 0 (kernel mode) driver does not support force feedback, this member should be set to NULL. </DD>

<DT><B>lpGPEmulReg</B> </DT>

<DD>Reserved. This member must be set to NULL. 
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VJREGDRVINFO"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
