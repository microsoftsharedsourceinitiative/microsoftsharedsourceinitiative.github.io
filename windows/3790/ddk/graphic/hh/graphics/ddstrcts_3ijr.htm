<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DD_GETDRIVERINFODATA</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DD_GETDRIVERINFODATA">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pdev_gg_gly">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_vpe_gg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_dd_getdriverinfodata_gg"></A>DD_GETDRIVERINFODATA</H1>

<P>The DD_GETDRIVERINFODATA structure is used to pass data to and from the <I>DdGetDriverInfo</I> callback routine.</P>

<PRE class=syntax>typedef struct _DD_GETDRIVERINFODATA {
  VOID  *dhpdev;
  DWORD  dwSize;
  DWORD  dwFlags;
  GUID  guidInfo;
  DWORD  dwExpectedSize;
  PVOID  lpvData;
  DWORD  dwActualSize;
  HRESULT  ddRVal;
  ULONG_PTR  dwContext;
} DD_GETDRIVERINFODATA, *PDD_GETDRIVERINFODATA;</PRE>

<H4>Members</H4>

<DL>
<DT><B>dhpdev (Windows 2000 and later only)</B></DT>

<DD>Handle to the driver's <A HREF="JavaScript:hhobj_1.Click()">PDEV</A>.</DD>

<DT><B>dwSize</B></DT>

<DD>Specifies the size in bytes of this DD_GETDRIVERINFODATA structure.</DD>

<DT><B>dwFlags</B></DT>

<DD>Currently unused and is set to zero.</DD>

<DT><B>guidInfo</B></DT>

<DD>Specifies the GUID of the DirectX support for which the driver is being queried. In a Windows&nbsp;2000 and later DirectDraw driver, this member can be one of the following values (in alphabetic order): 

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>GUID</TH>
<TH align=left width=52%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_ColorControlCallbacks</TD>
<TD width=52%>Queries whether the driver supports <A HREF="ddfncs_2l9j.htm"><I>DdControlColor</I></A>. If the driver does support it, the driver should initialize and return a <A HREF="ddstrcts_8q07.htm">DD_COLORCONTROLCALLBACKS</A> structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_D3DCallbacks</TD>
<TD width=52%>Queries whether the driver supports any of the functionality specified through the <A HREF="d3dstrct_1yjr.htm">D3DHAL_CALLBACKS</A> structure. If the driver does not provide any of this support, it should initialize and return a D3DHAL_CALLBACKS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_D3DCallbacks2</TD>
<TD width=52%>Obsolete.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_D3DCallbacks3</TD>
<TD width=52%>Queries whether the driver supports any of the functionality specified through the <A HREF="d3dstrct_7hyf.htm">D3DHAL_CALLBACKS3</A> structure. If the driver does provide any of this support, it should initialize and return a D3DHAL_CALLBACKS3 structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_D3DCaps</TD>
<TD width=52%>Obsolete.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_D3DExtendedCaps</TD>
<TD width=52%>Queries whether the driver supports any of the Microsoft® Direct3D® functionality specified through the <A HREF="d3dstrct_2zhj.htm">D3DHAL_D3DEXTENDEDCAPS</A> structure. If the driver does provide any of this support, it should initialize and return a D3DHAL_D3DEXTENDEDCAPS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_D3DParseUnknownCommandCallback</TD>
<TD width=52%>Provides the Direct3D portion of the driver with the Direct3D runtime's <I>D3dParseUnknownCommandCallback</I>. The driver's <A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A> callback calls <I>D3dParseUnknownCommandCallback</I> to parse commands from the command buffer that the driver doesn't understand.DirectDraw passes a pointer to this function in the buffer to which <B>lpvData</B> points. If the driver supports this aspect of Direct3D, it should store the pointer.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_GetHeapAlignment</TD>
<TD width=52%>Queries whether the driver supports surface alignment requirements on a per-heap basis. If the driver does provide this support, it should initialize and return a <A HREF="ddstrcts_2ecn.htm">DD_GETHEAPALIGNMENTDATA</A> structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_KernelCallbacks</TD>
<TD width=52%>Queries whether the driver supports any of the functionality specified through the <A HREF="ddstrcts_6njb.htm">DD_KERNELCALLBACKS</A> structure. If the driver does provide any of this support, it should initialize and return a DD_KERNELCALLBACKS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_KernelCaps</TD>
<TD width=52%>Queries whether the driver supports any of the kernel-mode capabilities specified through the <A HREF="ddstrcts_38kn.htm">DDKERNELCAPS</A> structure. If the driver does provide any of this support, it should initialize and return a DDKERNELCAPS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_MiscellaneousCallbacks</TD>
<TD width=52%>Queries whether the driver supports <A HREF="ddfncs_3xgn.htm"><I>DdGetAvailDriverMemory</I></A>. If the driver does support it, the driver should initialize and return a <A HREF="ddstrcts_4v1j.htm">DD_MISCELLANEOUSCALLBACKS</A> structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_Miscellaneous2Callbacks</TD>
<TD width=52%>Queries whether the driver supports the additional miscellaneous functionality specified in the <A HREF="ddstrcts_4k6f.htm">DD_MISCELLANEOUS2CALLBACKS</A> structure. If the driver does support any of this support, the driver should initialize and return a DD_MISCELLANEOUS2CALLBACKS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_MotionCompCallbacks</TD>
<TD width=52%>Queries whether the driver supports the motion compensation functionality specified through the <A HREF="ddstrcts_0qav.htm">DD_MOTIONCOMPCALLBACKS</A> structure. If the driver does provide any of this support, is should initialize and return a DD_MOTIONCOMPCALLBACKS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_NonLocalVidMemCaps</TD>
<TD width=52%>Queries whether the driver supports any of the nonlocal display memory capabilities specified through the <A HREF="ddstrcts_8kdj.htm">DD_NONLOCALVIDMEMCAPS</A> structure. If the driver does provide any of this support, it should initialize and return a DD_NONLOCALVIDMEMCAPS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_NTCallbacks</TD>
<TD width=52%>Queries whether the driver supports any of the functionality specified through the <A HREF="ddstrcts_5p9j.htm">DD_NTCALLBACKS</A> structure. If the driver does provide any of this support, it should initialize and return a DD_NTCALLBACKS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_NTPrivateDriverCaps</TD>
<TD width=52%>Queries whether the driver supports the Windows&nbsp;98/Me-style surface creation techniques specified through the <A HREF="ddstrcts_35bb.htm">DD_NTPRIVATEDRIVERCAPS</A> structure. If the driver does provide any of this support, it should initialize and return a DD_NTPRIVATEDRIVERCAPS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_UpdateNonLocalHeap</TD>
<TD width=52%>Queries whether the driver supports retrieval of the base addresses of each nonlocal heap in turn. If the driver does provide this support, it should initialize and return a <A HREF="ddstrcts_9hk7.htm">DD_UPDATENONLOCALHEAPDATA</A> structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_VideoPortCallbacks</TD>
<TD width=52%>Queries whether the driver supports the <A HREF="JavaScript:hhobj_2.Click()">video port extensions (VPE)</A>. If the driver does support VPE, it should initialize and return a <A HREF="ddstrcts_0eg7.htm">DD_VIDEOPORTCALLBACKS</A> structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_VideoPortCaps</TD>
<TD width=52%>Queries whether the driver supports any of the VPE object capabilities specified through the <A HREF="ddstrcts_2v1j.htm">DDVIDEOPORTCAPS</A> structure. If the driver does provide any of this support, it should initialize and return a DDVIDEOPORTCAPS structure in the buffer to which <B>lpvData</B> points.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>GUID_ZPixelFormats</TD>
<TD width=52%>Queries the pixel formats supported by the depth buffer. If the driver supports Direct3D, it should allocate and initialize the appropriate members of a DDPIXELFORMAT structure for every z-buffer format that it supports and return these in the buffer to which <B>lpvData</B> points.</TD>
</TR>
</TABLE><BR>



<P><B></B>
</DD>

<DT><B>dwExpectedSize</B></DT>

<DD>Specifies the number of bytes of data that DirectDraw expects the driver to pass back in the buffer to which <B>lpvData</B> points.</DD>

<DT><B>lpvData</B></DT>

<DD>Points to a DirectDraw-allocated buffer into which the driver copies the requested data. This buffer is typically <B>dwExpectedSize</B> bytes in size. The driver must not write more than <B>dwExpectedSize</B> bytes of data in it.</DD>

<DT><B>dwActualSize</B></DT>

<DD>Specifies the location in which the driver returns the number of bytes of data it writes in <B>lpvData</B>. </DD>

<DT><B>ddRVal</B></DT>

<DD>Specifies the driver's return value.</DD>

<DT><B>dwContext (Windows 98/Me only)</B></DT>

<DD>Specifies context information for the driver. This member is filled in by DirectDraw. On Windows&nbsp;98/Me, this is the <B>dwReserved3</B> member of the <A HREF="ddstrcts_4yav.htm">DDRAWI_DIRECTDRAW_GBL</A> structure.
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>ddrawint.h</I>. Include <I>winddi.h</I>.</P>

<H4>Comments</H4>

<P>The data structure passed to the driver for a <I>DdGetDriverInfo</I> call has minor differences between Windows&nbsp;98/Me and Windows&nbsp;2000 and later. On Windows&nbsp;2000 and later the data structure is called DD_GETDRIVERINFODATA and on Windows&nbsp;98/Me the data structure is called DDHAL_GETDRIVERINFODATA. Both data structures include a field for driver specific context information. On Windows&nbsp;2000 and later, DD_GETDRIVERINFODATA includes a field <B>dhpdev</B> that stores the DHPDEV of the driver being called. On Windows&nbsp;98/Me, DDHAL_GETDRIVERINFODATA includes a field <B>dwContext</B> that is copied for the driver reserved <B>dwReserved3</B> field of the DirectDraw global object.</P>

<H4>See Also</H4>

<P><A HREF="ddfncs_0yhz.htm"><I>DdGetDriverInfo</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DD_GETDRIVERINFODATA"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
