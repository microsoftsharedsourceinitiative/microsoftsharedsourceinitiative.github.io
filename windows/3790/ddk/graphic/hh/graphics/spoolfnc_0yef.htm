<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MONITORREG</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="MONITORREG">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_monitorreg_gg"></A>MONITORREG</H1>

<P>The MONITORREG structure supplies print monitors with the address of registry functions to use instead of Win32 registry API functions.</P>

<PRE class=syntax>typedef struct _MONITORREG {
  DWORD cbSize;
  LONG (*fpCreateKey)(
      HANDLE hcKey,
      LPCTSTR pszSubKey,
      DWORD dwOptions,
      REGSAM samDesired,
      PSECURITY_ATTRIBUTES pSecurityAttributes,
      PHANDLE phckResult,
      PDWORD pdwDisposition,
      HANDLE hSpooler
      );
  LONG (*fpOpenKey)(
      HANDLE hcKey,
      LPCTSTR pszSubKey,
      REGSAM samDesired,
      PHANDLE phkResult,
      HANDLE hSpooler
      );
  LONG (*fpCloseKey)(
      HANDLE hcKey,
      HANDLE hSpooler
      );
  LONG (*fpDeleteKey)(
      HANDLE hcKey,
      LPCTSTR pszSubKey,
      HANDLE hSpooler
      );
  LONG (*fpEnumKey)(
      HANDLE hcKey,
      DWORD dwIndex,
      LPTSTR pszName,
      PDWORD pcchName,
      PFILETIME pftLastWriteTime,
      HANDLE hSpooler
      );
  LONG (*fpQueryInfoKey)(
      HANDLE hcKey,
      PDWORD pcSubKeys,
      PDWORD pcbKey,
      PDWORD pcValues,
      PDWORD pcbValue,
      PDWORD pcbData,
      PDWORD pcbSecurityDescriptor,
      PFILETIME pftLastWriteTime,
      HANDLE hSpooler
      );
  LONG (*fpSetValue)(
      HANDLE hcKey,
      LPCTSTR pszValue,
      DWORD dwType,
      const BYTE* pData,
      DWORD cbData,
      HANDLE hSpooler
      );
  LONG (*fpDeleteValue)(
      HANDLE hcKey,
      LPCTSTR pszValue,
      HANDLE hSpooler
      );
  LONG (*fpEnumValue)(
      HANDLE hcKey,
      DWORD dwIndex,
      LPTSTR pszValue,
      PDWORD pcbValue,
      PDWORD pType,
      PBYTE pData,
      PDWORD pcbData,
      HANDLE hSpooler
      );
  LONG (*fpQueryValue)(
      HANDLE hcKey,
      LPCTSTR pszValue,
      PDWORD pType,
      PBYTE pData,
      PDWORD pcbData,
      HANDLE hSpooler
      );
} MONITORREG, *PMONITORREG;</PRE>

<H4>Members</H4>

<DL>
<DT><B>cbSize</B></DT>

<DD>Size, in bytes, of the MONITORREG structure.</DD>

<DT><I>All other structure members</I></DT>

<DD>Addresses of spooler functions that simulate the behavior of similarly-named cluster registry functions. See the <B>Comments</B> section for more information.</DD>
</DL>

<H4>Headers</H4>

<DL>
<DT>Declared in <I>winsplp.h</I>. Include <I>winsplp.h</I>.</DT>
</DL>

<H4>Comments</H4>

<P>The MONITORREG structure's address is supplied in a <A HREF="spoolfnc_1uw7.htm">MONITORINIT</A> structure, which is passed to a print monitor's <A HREF="spoolfnc_4m5j.htm"><B>InitializePrintMonitor2</B></A> function.</P>

<P>When <A HREF="provider_8mxz.htm">storing port configuration information</A>, print monitors must not explicitly call either the Win32 registry API or the cluster registry API. Instead, they must call equivalent spooler registry functions. The MONITORREG structure supplies the addresses of these functions. The following table lists each spooler registry function and its equivalent cluster registry function.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=42%>Spooler Registry Function</TH>
<TH align=left width=58%>Equivalent Cluster Registry Function</TH>
</TR>

<TR VALIGN="top">
<TD width=42%><B>CreateKey</B></TD>
<TD width=58%><B>ClusterRegCreateKey</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>OpenKey</B></TD>
<TD width=58%><B>ClusterRegOpenKey</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>CloseKey</B></TD>
<TD width=58%><B>ClusterRegCloseKey</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>DeleteKey</B></TD>
<TD width=58%><B>ClusterRegDeleteKey</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>EnumKey</B></TD>
<TD width=58%><B>ClusterRegEnumKey</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>QueryInfoKey</B></TD>
<TD width=58%><B>ClusterRegQueryInfoKey</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>SetValue</B></TD>
<TD width=58%><B>ClusterRegSetValue</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>DeleteValue</B></TD>
<TD width=58%><B>ClusterRegDeleteValue</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>EnumValue</B></TD>
<TD width=58%><B>ClusterRegEnumValue</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>QueryValue</B></TD>
<TD width=58%><B>ClusterRegQueryValue</B></TD>
</TR>
</TABLE><BR>

<P>Input and output parameters for these spooler functions match the parameters of the equivalent cluster registry functions (described in the Platform SDK documentation), with the following exceptions:

<UL>
	<LI>Each spooler registry function requires an <I>hSpooler</I> input parameter. This is the spooler handle received in the <A HREF="spoolfnc_1uw7.htm">MONITORINIT</A> structure.</LI>

	<LI>The spooler registry functions use HANDLE and PHANDLE parameter types instead of the HKEY and PHKEY types used by the cluster registry functions. Monitors receive the handle of the root registry location in the <B>hckRegistryRoot</B> member of the <A HREF="spoolfnc_1uw7.htm">MONITORINIT</A> structure.</LI>
</UL>

<H4>See Also</H4>

<P><A HREF="spoolfnc_1uw7.htm">MONITORINIT</A>, <A HREF="spoolfnc_4m5j.htm"><B>InitializePrintMonitor2</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MONITORREG"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
