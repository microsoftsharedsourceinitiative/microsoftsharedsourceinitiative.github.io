<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SINCOS Instruction</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SINCOS Instruction">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_sincos_instruction_gg"></A>SINCOS Instruction</H2>

<P>The SINCOS instruction computes sine and cosine, in radians. The X component of the result contains cos(x); the Y component contains sin(x). </P>

<H4>Format</H4>

<P class=indent1><A HREF="d3denum_62sn.htm">instruction token</A> that contains D3DSIO_SINCOS. Instruction length is 4.</P>

<P class=indent1><A HREF="d3denum_5mp3.htm">destination parameter token</A> using the D3DSPR_TEMP <A HREF="d3denum_9o6f.htm">register type</A>. </P>

<P class=indent1>first <A HREF="d3denum_6jon.htm">source parameter token</A>. Requires explicit use of replicate swizzle, that is, the X, Y, Z, or W swizzle component (or the R, G, B, or A equivalent) must be specified.</P>

<P><B>The following source tokens are for pixel and vertex shader versions earlier than 3_0. That is, for pixel and vertex shader version 3_0 and later, only the first source parameter token is used. </B></P>

<P class=indent1>second source parameter token using the D3DSPR_TEMP register type. </P>

<P class=indent1>third source parameter token using the D3DSPR_TEMP register type. </P>

<H4>Comments</H4>

<P>The second and third sources could be used as temporary registers.</P>

<P>Source register rules:

<UL>
	<LI>src1.w is an angle measured in radians between -Pi and +Pi. </LI>

	<LI>src2 = (1.f/(7!*128), 1.f/(6!*64), 1.f/(4!*16), 1.f/(5!*16) ). </LI>

	<LI>src3 = (1.f/(3!*8), 1.f/(2!*8), 1.f, 0.5f). 
<P>The ordering of the last two numbers in src2 and src3 is specifically chosen to accommodate the pixel shader SINCOS macro. Reversing these numbers means that the macro expansion can use one of the few custom source swizzles that is available to ps_2_0 (vertex shaders have general swizzle so there is no issue). This allows the same custom constants to be used, regardless of where sincos is being used.
</LI>
</UL>

<P>Destination register rules:

<UL>
	<LI>dest.x = cos(src1.selected_channel), dest.y = sin(src1.selected_channel), dest.z is undefined after the instruction. </LI>

	<LI>dest should not be the same register as src1. </LI>

	<LI>Only X and Y are allowed to be in the destination write mask.</LI>
</UL>

<P>The maximum absolute error is 0.002.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SINCOS%20Instruction"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
