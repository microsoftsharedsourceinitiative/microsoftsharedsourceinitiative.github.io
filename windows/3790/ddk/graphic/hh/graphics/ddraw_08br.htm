<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating and Destroying DirectDraw Surfaces</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Creating and Destroying DirectDraw Surfaces">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_creating_and_destroying_directdraw_surfaces_gg"></A>Creating and Destroying DirectDraw Surfaces</H3>

<P>Direct Draw surfaces are created in a four-stage process. These stages are:

<OL>
	<LI><A HREF="ddfncs_9yxz.htm"><I>DdCanCreateSurface</I></A>. The runtime calls the driver’s <I>DdCanCreateSurface</I> to see if the driver allows the creation of a surface of this type, size, and format. The driver can return a failure code that is propagated to the application.</LI>

	<LI><A HREF="ddfncs_6bdz.htm"><I>DdCreateSurface</I></A>. The driver creates the surface, potentially allocating memory for the contents of the surface. Complex surfaces can be created all at once, with one call to <I>DdCreateSurface</I>. Thus, the driver may be required to create many surfaces in one call.</LI>

	<LI>Memory allocation. The DirectDraw runtime allocates memory for any surface that is not allocated by the driver in response to the <A HREF="ddfncs_6bdz.htm"><I>DdCreateSurface</I></A> call. This process is covered in more detail in the following sections.</LI>

	<LI><A HREF="d3dfncs_0gtj.htm"><I>D3dCreateSurfaceEx</I></A>. This function associates a handle with the surface in question for later use in the Direct3D <A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A> token stream. The driver also creates its own copy of the surface structure maintained by DirectDraw at this time. For more information regarding <I>D3dCreateSurfaceEx</I>, see the Direct3D DDK documentation.</LI>
</OL>

<P>Surfaces are destroyed by a single call to the driver’s <A HREF="ddfncs_1c4n.htm"><I>DdDestroySurface</I></A> entry point only if the driver allocated or was involved in allocating the memory for the surface during surface creation. If the DirectDraw runtime allocated the memory and the driver was not involved, the runtime does not call <I>DdDestroySurface</I>.</P>

<P>Surfaces persist only as long as the mode in which they are created persists. Where there is a mode change, all the surfaces under the driver’s control are destroyed, as far as the driver is concerned. There are also other events that can cause all surfaces to be destroyed in this way. It is not necessary for the driver to determine the cause of a <I>DdDestroySurface</I> call.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Creating%20and%20Destroying%20DirectDraw%20Surfaces"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
