<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Getting the DirectDraw Version Information</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_getting_the_directdraw_version_information_gg"></A>Getting the DirectDraw Version Information</H4>

<P><B>This topic applies only to Windows 98/Me.</B></P>

<P>The <B>DDVERSIONINFO</B> escape is sent next. As of DirectDraw 5.0, the <B>DDVERSIONINFO</B> escape call was added to allow DirectDraw to tell the driver which DirectDraw version is currently being run. This is useful for the HAL to know because sometimes it may want to report capabilities — such as AGP, video ports, and so on — that are not supported in older versions of DirectDraw. This also allows the HAL to tell DirectDraw which version of <I>ddrawi.h</I> was used to compile the driver.</P>

<P>Most older HALs fail if the DirectDraw version (DD_VERSION in <I>ddrawi.h</I>) does not match the version they are expecting. Therefore, DD_VERSION cannot change if DirectX 5.0 and above are to run on DirectX 2.0 or DirectX 3.0 HALs. For this reason, a new version call was added that allows the HAL to know the real version of DirectDraw, which is equal to DD_RUNTIME_VERSION (also in <I>ddrawi.h</I>). However, DD_RUNTIME_VERSION is for informational purposes only. HALs should not fail DirectDraw if they receive an unknown DirectDraw run time. </P>

<P>HALs should check this version before accessing members of the internal DirectDraw structures (DDRAWI_DIRECTDRAW_GBL, DDRAWI_DIRECTDRAW_LCL, DDRAWI_DDRAWSURFACE_LCL, DDRAWI_DDRAWSURFACE_GBL, DDRAWI_DDVIDEOPORT_LCL, and so on) that have been added after DirectX 3.0 because nothing guarantees that the driver will run only on DirectDraw versions greater than or equal to the version with which it was compiled. For example, it may run fine on DirectX 3.0 but cause severe problems when accessing a structure member added for DirectX 5.0. </P>

<P>The following sample shows how the <I>Control</I> function in a display GDI driver for Windows&nbsp;98/Me should use the version information: </P>

<PRE>else if( pcmd-&gt;dwCommand == DDVERSIONINFO )
{
    LPDDVERSIONDATA pddver;

    dwDirectDrawVersion = pcmd-&gt;dwParam;
    pddver = (LPDDVERSIONDATA) pout;
    if( !pddver )
        return 0;
    pddver-&gt;dwHALVersion = DD_RUNTIME_VERSION;
}
 </PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Getting%20the%20DirectDraw%20Version%20Information"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
