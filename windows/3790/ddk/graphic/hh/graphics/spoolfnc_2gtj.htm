<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>XcvData</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="XcvData">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_xcvdata_gg"></A>XcvData</H1>

<P>The print spooler's <B>XcvData</B> function is the means by which a <A HREF="provider_897r.htm#ddk_port_monitor_ui_dll_gg">port monitor UI DLL</A> communicates with its associated <A HREF="provider_897r.htm#ddk_port_monitor_server_dll_gg">port monitor server DLL</A>. Win32® applications can also call <B>XcvData</B>.</P>

<PRE class=syntax><B>BOOL WINAPI
  XcvData(
    HANDLE  </B><I>hXcv</I><B>,
    LPCWSTR  </B><I>pszDataName</I><B>,
    PBYTE  </B><I>pInputData</I><B>,
    DWORD  </B><I>cbInputData</I><B>,
    PBYTE  </B><I>pOutputData</I><B>,
    DWORD  </B><I>cbOutputData</I><B>,
    PDWORD  </B><I>pcbOutputNeeded</I><B>,
    PDWORD  </B><I>pdwStatus</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>hXcv</I></DT>

<DD>Caller-supplied printer handle, obtained by calling the Platform SDK <B>OpenPrinter</B> function (described in the Platform SDK documentation).</DD>

<DT><I>pszDataName</I></DT>

<DD>Caller-supplied pointer to a string representing the name of the data being requested. For more information, see <A HREF="spoolfnc_5n6v.htm"><B>XcvDataPort</B></A>.</DD>

<DT><I>pInputData</I></DT>

<DD>Caller-supplied pointer to a buffer containing input data.</DD>

<DT><I>cbInputData</I></DT>

<DD>Caller-supplied size, in bytes, of the buffer pointed to by <I>pInputData</I>.</DD>

<DT><I>pOutputData</I></DT>

<DD>Caller-supplied pointer to a buffer to receive output data.</DD>

<DT><I>cbOutputData</I></DT>

<DD>Caller-supplied size, in bytes, of the buffer pointed to by <I>pOutputData</I>.</DD>

<DT><I>pcbOutputNeeded</I></DT>

<DD>Caller-supplied pointer to a location to receive the minimum size, in bytes, required for the buffer pointed to by <I>pOutputData</I>.</DD>

<DT><I>pdwStatus</I></DT>

<DD>Caller-supplied pointer to a location to receive the status value returned by <A HREF="spoolfnc_5n6v.htm"><B>XcvDataPort</B></A>. The returned value should be an ERROR_-prefixed Win32 error code.
</DD>
</DL>

<H4>Return Value</H4>

<P>If the operation succeeds, the function returns TRUE. Otherwise the function returns FALSE. The caller can obtain an error code by calling <B>GetLastError</B>.</P>

<H4>Headers</H4>

<P>Declared in <I>winsplp.h</I>. Include <I>winsplp.h</I>.</P>

<H4>Comments</H4>

<P>The print spooler's <B>XcvData</B> function is called by port monitor UI DLLs so they can communicate with their associated port monitor server DLLs.</P>

<P>The <B>XcvData</B> function calls the port monitor server DLL's <A HREF="spoolfnc_5n6v.htm"><B>XcvDataPort</B></A> function and returns its result in the location pointed to by the <I>pdwStatus</I> parameter.</P>

<P>The string pointed to by <I>pszDataName</I> must be one that the server DLL's <B>XcvDataPort</B> function recognizes. Contents, if any, of the input and output buffers are dependent on the data name string.</P>

<P>With the exception of <I>pdwStatus</I>, the function parameters for <B>XcvData</B> and <B>XcvDataPort</B> are identical. For more information about <B>XcvData</B> and <B>XcvDataPort</B> parameters, see <A HREF="spoolfnc_5n6v.htm"><B>XcvDataPort</B></A>.</P>

<P>Win32 applications can also call <B>XcvData</B>, to add or delete printer ports without invoking the user interface that the Win32 <B>AddPort</B> function displays. Applications can specify the following standard values for <I>pszDataName</I>:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=28%>Data Name String</TH>
<TH align=left width=72%>Operation</TH>
</TR>

<TR VALIGN="top">
<TD width=28%>L"AddPort"</TD>
<TD width=72%>Notifies the port monitor server DLL that all information about the port has been sent, so the server can add the port.
<P>The <I>pInputData</I> parameter must point to a NULL-terminated port name string.</P>

<P>The <I>pOutputData</I>, <I>cbOutputData</I>, and <I>pcbOutputNeeded</I> parameters are not used.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>L"DeletePort"</TD>
<TD width=72%>Notifies the port monitor server DLL that the port can be deleted.
<P>The <I>pInputData</I> parameter must point to a NULL-terminated port name string.</P>

<P>The <I>pOutputData</I>, <I>cbOutputData</I>, and <I>pcbOutputNeeded</I> parameters are not used.</P>
</TD>
</TR>
</TABLE><BR>

<P>Note that additional, monitor-specific data name strings might be defined. To communicate with a vendor-supplied port monitor, it might be necessary to send additional, customized data name strings before sending "AddPort" or "DeletePort".</P>

<P>The <B>XcvData</B> function can used to communicate with the standard TCP/IP port monitor. See <A HREF="provider_5iuf.htm">TCPMON Xcv Interface</A> for details.</P>

<H4>See Also</H4>

<P><A HREF="spoolfnc_5n6v.htm"><B>XcvDataPort</B></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: XcvData"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
