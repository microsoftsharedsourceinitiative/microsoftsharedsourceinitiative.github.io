<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>D3DBuffer Callbacks</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="D3DBuffer Callbacks">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_d3dbuffer_callbacks_gg"></A>D3DBuffer Callbacks</H2>

<P><B>The D3DBuffer callbacks are used only if the driver manages driver-level command and vertex buffers.</B></P>

<P>To support driver-allocated command and vertex buffers, the driver must support the callback functions reported in the <A HREF="ddstrcts_5b1j.htm">DD_D3DBUFCALLBACKS</A> structure, which is exposed through the <B>lpD3DBufCallbacks</B> pointer member of the <A HREF="ddstrcts_17s7.htm">DD_HALINFO</A> structure. </P>

<P>Each <I>XxxD3DBuffer</I> callback is analogous to the similarly named <I>DdXxxSurface</I> callback; both callbacks have the same prototypes and are called with the same input parameters. The <I>XxxD3DBuffer</I> callbacks are called only when the surface in question has the DDSCAPS_EXECUTEBUFFER flag set in the surface caps. The buffer creation flags are DDSCAPS_WRITEONLY, DDSCAPS2_VERTEXBUFFER and DDSCAPS2_COMMANDBUFFER. </P>

<P>To determine the type of buffer being requested, the driver checks the <B>ddsCaps</B> member of the <A HREF="ddstrcts_1vl4.htm">DD_SURFACE_LOCAL</A> structure, which is passed to <A HREF="d3dfncs_567b.htm"><I>CanCreateD3DBuffer</I></A> and <A HREF="d3dfncs_29bb.htm"><I>CreateD3DBuffer</I></A>. This value may be one (or neither) of the following flags:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Flag</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>DDSCAPS2_COMMANDBUFFER</TD>
<TD width=52%>The driver should allocate a command buffer.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>DDSCAPS2_VERTEXBUFFER</TD>
<TD width=52%>The driver should allocate an explicit vertex buffer.</TD>
</TR>
</TABLE><BR>

<P class=note><B>Note</B>&nbsp;&nbsp;If neither flag is set, the driver should allocate an implicit vertex buffer. Implicit vertex buffers should not be placed in video memory since they are expected to be read/write. Only explicit vertex buffers with the DDSCAPS_WRITEONLY flag set can be safely placed in video memory.</P>

<P>The <I>XxxD3DBuffer</I> callbacks are shown in the following list:</P>

<P class=indent1><A HREF="d3dfncs_567b.htm"><I>CanCreateD3DBuffer</I></A></P>

<P class=indent1><A HREF="d3dfncs_29bb.htm"><I>CreateD3DBuffer</I></A></P>

<P class=indent1><A HREF="d3dfncs_0d5z.htm"><I>DestroyD3DBuffer</I></A></P>

<P class=indent1><A HREF="d3dfncs_1bqf.htm"><I>LockD3DBuffer</I></A></P>

<P class=indent1><A HREF="d3dfncs_41lz.htm"><I>UnlockD3DBuffer</I></A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: D3DBuffer%20Callbacks"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
