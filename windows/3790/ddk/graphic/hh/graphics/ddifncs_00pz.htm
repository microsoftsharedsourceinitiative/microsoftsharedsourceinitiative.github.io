<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DrvAssertMode</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DrvAssertMode">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_drvassertmode_gg"></A><I>DrvAssertMode</I></H1>

<P>The <I>DrvAssertMode</I> function sets the mode of the specified physical device to either the mode specified when the PDEV was initialized or to the default mode of the hardware.</P>

<PRE class=syntax><B>BOOL
  </B><I>DrvAssertMode</I><B>(</B>
    <B>IN DHPDEV</B>  <I>dhpdev</I><B>,</B>
    <B>IN BOOL</B>  <I>bEnable</I>
    <B>)</B>;</PRE>

<H4>Parameters</H4>

<DL>
<DT><I>dhpdev</I></DT>

<DD>Handle to the PDEV describing the hardware mode that should be set when <I>bEnable</I> is TRUE.</DD>

<DT><I>bEnable</I></DT>

<DD>Specifies the mode to which the hardware is to be set. If this parameter is TRUE, the driver should set the hardware to the original mode specified by the initialized PDEV. Otherwise, if this parameter is FALSE, the driver should set the hardware to its default mode so the video miniport driver can assume control.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>DrvAssertMode</I> returns TRUE if it successfully changed the display mode; it returns FALSE if it was unable to change the display mode. A driver is permitted to return FALSE from a <I>DrvAssertMode</I> call with <I>bEnable</I> set to FALSE. A driver <I>must</I> return TRUE from a <I>DrvAssertMode</I> call with <I>bEnable</I> set to TRUE; that is, a driver can not fail enabling a mode that was previously enabled.</P>

<H4>Headers</H4>

<P>Declared in <I>winddi.h</I>. Include <I>winddi.h</I>.</P>

<H4>Comments</H4>

<P>GDI calls <I>DrvAssertMode</I> when it is required to switch among multiple desktops on a single display surface. To switch from one PDEV to another, GDI calls <I>DrvAssertMode</I> with the <I>bEnable</I> parameter set to FALSE for one PDEV, and TRUE for the other. To revert to the original PDEV, <I>DrvAssertMode</I> is called with <I>bEnable</I> set to FALSE, followed by another call to <I>DrvAssertMode</I>, with <I>bEnable</I> set to TRUE and <I>dhpdev</I> set to the original PDEV.</P>

<P>If the physical device is palette-managed, GDI will call <A HREF="ddifncs_9ep3.htm"><I>DrvSetPalette</I></A> to reset the device's palette. The driver does not then need to keep track of the current pointer state because the Window Manager selects the correct pointer shape and moves it to the current position. The Console Manager ensures that desktops are properly redrawn.</P>

<P><I>DrvAssertMode</I> must be implemented in display drivers.</P>

<H4>See Also</H4>

<P><A HREF="ddifncs_0wtj.htm"><I>DrvGetModes</I></A>, <A HREF="ddifncs_9ep3.htm"><I>DrvSetPalette</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DrvAssertMode"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
