<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>D3DHAL_DP2SETSTREAMSOURCEUM</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="D3DHAL_DP2SETSTREAMSOURCEUM">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_d3dhal_dp2setstreamsourceum_gg"></A>D3DHAL_DP2SETSTREAMSOURCEUM</H1>

<P><B>DirectX 8.0 and later versions only.</B></P>

<P>The D3DHAL_DP2SETSTREAMSOURCEUM structure is used to bind a vertex stream source to a user memory buffer for <A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A>.</P>

<PRE class=syntax>typedef struct _D3DHAL_DP2SETSTREAMSOURCEUM {
    DWORD dwStream;
    DWORD dwStride;
} D3DHAL_DP2SETSTREAMSOURCEUM, *LPD3DHAL_DP2SETSTREAMSOURCEUM;</PRE>

<H4>Member</H4>

<DL>
<DT><B>dwStream</B></DT>

<DD>Specifies the stream being bound. For DirectX 8.0 it is always zero.</DD>

<DT><B>dwStride</B></DT>

<DD>Specifies the vertex size in bytes.
</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>d3dhal.h</I>. Include <I>d3dhal.h</I>.</P>

<H4>Comments</H4>

<P>In addition to binding a stream to a vertex buffer, it is possible for the vertex data of stream zero to be supplied in a user memory (UM) buffer. In this case, another DP2 token is used to notify the driver of stream binding. That token is <A HREF="d3denum_0jon.htm#ddk_d3ddp2op_setstreamsourceum_gg">D3DDP2OP_SETSTREAMSOURCEUM</A>.</P>

<P>DirectX 8.0 does not support multiple vertex streams with user supplied buffers rather than vertex buffers. Additionally, it is not possible to mix user memory buffers with vertex buffers. When a user memory buffer is supplied, it is guaranteed to be stream zero and to be the only stream that should be accessed by subsequent drawing primitives. It is possible that other streams have non-NULL vertex buffers bound to them at the time when a user memory buffer is bound to stream. However, those other streams must be ignored by the driver and hardware.</P>

<P>The actual user memory pointer to the vertex data should be extracted from the <A HREF="d3dstrct_47fr.htm">D3DHAL_DRAWPRIMITIVES2DATA</A> passed when actually drawing primitives.</P>

<H4>See Also</H4>

<P><A HREF="d3denum_0jon.htm#ddk_d3ddp2op_setstreamsourceum_gg">D3DDP2OP_SETSTREAMSOURCEUM</A>, <A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A>, <A HREF="d3dstrct_41t3.htm">D3DHAL_DP2SETSTREAMSOURCE</A>, <A HREF="d3dstrct_47fr.htm">D3DHAL_DRAWPRIMITIVES2DATA</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: D3DHAL_DP2SETSTREAMSOURCEUM"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
