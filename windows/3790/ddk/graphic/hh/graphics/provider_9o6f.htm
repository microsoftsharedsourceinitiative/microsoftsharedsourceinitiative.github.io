<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Printing a Print Job</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Printing a Print Job">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_pjl_gg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_printing_a_print_job_gg"></A>Printing a Print Job</H2>

<P>After a port has been opened, as described in <A HREF="provider_3s4n.htm">Opening and Closing a Port</A>, the spooler can send print jobs to the port.</P>

<P>Each print job is delimited by spooler calls to a language or port monitor’s <A HREF="spoolfnc_4ntz.htm"><B>StartDocPort</B></A> and <A HREF="spoolfnc_3gyv.htm"><B>EndDocPort</B></A> functions. The spooler calls these functions when a print processor calls the spooler’s <B>StartDocPrinter</B> and <B>EndDocPrinter</B> functions, which are described in the Platform SDK documentation. Within the scope of a set of <B>StartDocPort</B> and <B>EndDocPort</B> functions, unlimited spooler calls to a monitor’s <A HREF="spoolfnc_319j.htm"><B>WritePort</B></A>, <A HREF="spoolfnc_09bb.htm"><B>ReadPort</B></A>, and <A HREF="spoolfnc_2rs7.htm"><B>GetPrinterDataFromPort</B></A> functions can occur.</P>

<P>Each of these functions requires the port handle returned by <A HREF="spoolfnc_12nb.htm"><B>OpenPortEx</B></A> (or <A HREF="spoolfnc_11yf.htm"><B>OpenPort</B></A>) to be specified as in input argument. Typically, a language monitor implements each of the functions by calling the like-named function in its associated port monitor.</P>

<P>When the spooler calls a language monitor’s <B>WritePort</B> function to send a data stream to the port, the function generally adds language-specific information, such as <A HREF="JavaScript:hhobj_1.Click()">PJL</A> commands, to the received data stream before passing it to the associated port monitor’s <B>WritePort</B> function.</P>

<P>The <B>ReadPort</B> function is used for obtaining status information from bidirectional printer hardware, which a language monitor might send to the spooler by calling <B>SetPort</B>, described in the Platform SDK documentation. The spooler does not call the <B>ReadPort</B> function.</P>

<P>If printing hardware is bidirectional, both its language monitor and its port monitor should support a <B>GetPrinterDataFromPort</B> function. A language monitor’s <B>GetPrinterDataFromPort</B> function should accept a registry value name as input, obtain a value for that name (generally by calling associated port monitor’s <B>WritePort</B> and <B>ReadPort</B> functions), and return the value to the caller. A port monitor’s <B>GetPrinterDataFromPort</B> function should accept an I/O control code as input, call <B>DeviceIoControl</B> (described in the Platform SDK documentation) to pass the control code to the port driver, and return the result.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Printing%20a%20Print%20Job"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
