<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using VflatD</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_using_vflatd_gg"></A>Using VflatD</H4>

<P><B>This topic applies only to Windows 98/Me.</B></P>

<P><I>VflatD</I> is a page-switching DLL that changes an internal pointer when a bank boundary is crossed. VflatD is not necessary unless the memory on your graphics card is bank-switched. When a bank boundary is crossed, a page fault triggers a fault handler that causes VflatD to carry a bank switch, which exposes a new page of memory. Even though a new bank has been shifted to, the memory appears to the applications as linear addressable space. Memory simply continues from a new origin that is tracked by the VflatD memory manager. Normally this happens in the background, without error. </P>

<P>To use VflatD, the driver must

<OL>
	<LI>Call <B>VflatD_Query</B>, which verifies that the correct version of VflatD has been loaded. </LI>

	<LI>Call <B>VflatD_Create_Virtual_Frame_Buffer</B>, which registers the driver, returns a selector identifying the logical frame buffer, and specifies a bank-switch procedure to VflatD. </LI>

	<LI>Call <B>VflatD_Begin_Linear_Access</B>, which provides access to a linear addressable frame buffer. This function should be used when initializing DirectDraw with <A HREF="ddfncs_8jaf.htm"><I>DDCreateDriverObject</I></A>. </LI>

	<LI>Call <B>VflatD_End_Linear_Access</B>. Use this function when exiting DirectDraw with <A HREF="ddfncs_21t3.htm"><I>HALDestroyDriver</I></A>. </LI>
</OL>

<P>The bank-switch procedure must be written using 32-bit code and must be no more than 100 bytes in length. When the procedure is called, the EAX register identifies the new bank to be swapped into the physical frame buffer. The procedure must save all registers except EAX and EDX and must not return a value (that is, EAX and EDX must be the same on exit as they were on entry). </P>

<P><B>VflatD_Begin_Linear_Access</B> starts linear access to the frame buffer. The frame buffer can be accessed through its linear address (by default the frame buffer must be accessed with the default selector). The frame buffer remains in linear access mode until <B>VflatD_End_Linear_Access</B> is called. This call can be nested. </P>

<P>VflatD returns the access count in EAX and clears the carry flag if successful. The access count is incremented each time <B>VflatD_Begin_Linear_Access</B> is called, and is decremented with each call to <B>VflatD_End_Linear_Access</B>. Linear access mode is turned off when the access count is zero. </P>

<P>For more information about VflatD and the VflatD functions, see the Virtual Flat-Frame Buffer Device Reference of the Windows 98/Me section of the Windows DDK documentation.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Using%20VflatD"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
