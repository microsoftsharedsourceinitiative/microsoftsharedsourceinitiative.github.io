<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TCPMON Xcv Commands</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TCPMON Xcv Commands">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_tcpmon_xcv_commands_gg"></A>TCPMON Xcv Commands</H3>

<P>This section describes the commands that can be specified in a call to the <A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> or <A HREF="spoolfnc_5n6v.htm"><B>XcvDataPort</B></A> function, when it is communicating with the standard TCP/IP port monitor (TCPMON). Each command is specified by the <I>pszDataName</I> string in the call to these functions. Certain commands require an input buffer, or an output buffer, or both. The <I>pInputData</I> and <I>pOutputData</I> parameters of these functions hold the addresses of these buffers. </P>

<P>The table that appears in the description of each of the following commands lists the <B>XcvData</B> and <B>XcvDataPort</B> parameters that are used with the commands. Note that the <I>hXcv</I> parameter (common to both functions) is not listed, nor is the <B>XcvData</B> function's <I>pdwStatus</I> parameter.</P>

<H4>AddPort Command</H4>

<P>The <B>AddPort</B> command adds a standard TCP/IP port, which can be either an LPR port or a RAW TCP/IP port. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"AddPort"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>Address of a <A HREF="spoolfnc_3pgn.htm">PORT_DATA_1</A> structure</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%><B>sizeof</B>(PORT_DATA_1)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>NULL</TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it can add the port. In addition to the normal error codes, <B>XcvData</B> returns ERROR_ACCESS_DENIED if the user has insufficient privileges to create a port on the server. This command requires SERVER_ACCESS_ADMINISTER privilege. If the <I>pInputData</I> parameter is NULL, the function returns ERROR_INVALID_DATA. If <I>pInputData</I>—&gt;<B>dwVersion</B> is not equal to 1, the function returns ERROR_INVALID_LEVEL. </P>

<H4>ConfigPort Command</H4>

<P>The <B>ConfigPort</B> command configures an existing standard TCP/IP port monitor port. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"ConfigPort"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>Address of a <A HREF="spoolfnc_3pgn.htm">PORT_DATA_1</A> structure</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%><B>sizeof</B>(PORT_DATA_1)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>NULL</TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it can configure the port. In addition to the normal error codes, <A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns ERROR_ACCESS_DENIED if the caller has insufficient privileges to perform the request. This command requires SERVER_ACCESS_ADMINISTER privilege. If the <I>pInputData</I> parameter is NULL, or the value in <I>cbInputData</I> is smaller than required, the function returns ERROR_INVALID_DATA. If <I>pInputData</I>—&gt;<B>dwVersion</B> is not equal to 1, the function returns ERROR_INVALID_LEVEL. </P>

<H4>DeletePort Command</H4>

<P>The <B>DeletePort</B> command deletes a port from the standard TCP/IP port monitor. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"DeletePort"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>Address of a <A HREF="spoolfnc_1547.htm">DELETE_PORT_DATA_1</A> structure</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%><B>sizeof</B>(DELETE_PORT_DATA_1)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>NULL</TD>
</TR>
</TABLE><BR>

<P><B>XcvData</B> returns NO_ERROR if the port is successfully deleted. In addition to the normal error codes, <B>XcvData</B> returns ERROR_ACCESS_DENIED if the caller has insufficient privileges on the server. This command requires SERVER_ACCESS_ADMINISTER privilege. If the <I>pInputData</I> parameter is NULL, or if the <I>cbInputData</I> parameter is smaller than required, the function returns ERROR_INVALID_DATA. If <I>pInputData</I>—&gt;<B>dwVersion</B> is not equal to 1, the function returns ERROR_INVALID_LEVEL.</P>

<H4>GetConfigInfo Command</H4>

<P>The <B>GetConfigInfo</B> command obtains the configuration information of a particular port. In this case, the Xcv data handle must point to a particular standard TCP/IP port monitor port so that the port can be identified.  </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"GetConfigInfo"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>Address of a <A HREF="spoolfnc_51d3.htm">CONFIG_INFO_DATA_1</A> structure</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%><B>sizeof</B>(CONFIG_INFO_DATA_1)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a <A HREF="spoolfnc_3pgn.htm">PORT_DATA_1</A> structure</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%><B>sizeof</B>(PORT_DATA_1)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD containing the number of bytes needed for the buffer pointed to by <I>pOutputData</I></TD>
</TR>
</TABLE><BR>

<P><B>XcvData</B> returns NO_ERROR if it can obtain the configuration information for the port. If <I>pInputData</I> is NULL, or if <I>cbInputData</I> is smaller than required, the function returns ERROR_INVALID_DATA. If <I>pInputData</I>—&gt;<B>dwVersion</B> is not equal to 1, the function returns ERROR_INVALID_LEVEL. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. </P>

<H4>HostAddress Command</H4>

<P>The <B>HostAddress</B> command gets the printer's host name.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"HostAddress"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a buffer that receives a string containing the printer's host name</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>Size of the buffer pointed to by <I>pOutputData</I></TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD containing the number of bytes needed for the buffer pointed to by <I>pOutputData</I></TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it can obtain the name of the printer's host. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. If <I>pOutputData</I> is NULL, the function returns ERROR_INVALID_PARAMETER. </P>

<H4>IPAddress Command</H4>

<P>The <B>IPAddress</B> command gets the printer's IP address.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"IPAddress"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a buffer that receives a string containing the printer's IP address</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>Size of the buffer pointed to by <I>pOutputData</I></TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD containing the number of bytes needed for the buffer pointed to by <I>pOutputData</I></TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it can obtain the printer's IP address. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. If <I>pOutputData</I> is NULL, the function returns ERROR_INVALID_PARAMETER. </P>

<H4>MonitorUI Command</H4>

<P>The <B>MonitorUI</B> command gets the name of the port monitor UI DLL that provides an interface to TCPMON.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"MonitorUI"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a buffer that receives the name of the port monitor user interface DLL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>Number of bytes in the string containing the name of the port monitor user interface DLL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD containing the number of bytes needed for the buffer pointed to by <I>pOutputData</I></TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it is able to obtain the name of the user interface DLL. In addition to the normal error codes, <B>XcvData</B> returns ERROR_ACCESS_DENIED if the caller has insufficient privileges on the server. This command requires SERVER_ACCESS_ADMINISTER privilege. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. If <I>pOutputData</I> is NULL, the function returns ERROR_INVALID_PARAMETER.</P>

<H4>SNMPCommunity</H4>

<P>The <B>SNMPCommunity</B> command gets the Simple Network Management Protocol (SNMP) community name for a printer.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"SNMPCommunity"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a buffer that receives a string containing the printer's SNMP community</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%>Size of the buffer needed to contain the string pointed to by the <I>pOutputData</I> parameter</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD containing the number of bytes needed for the buffer pointed to by <I>pOutputData</I></TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it can get the printer's SNMP community name. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. If <I>pOutputData</I> is NULL, the function returns ERROR_INVALID_PARAMETER.</P>

<H4>SNMPDeviceIndex</H4>

<P>The <B>SNMPDeviceIndex</B> command gets the Simple Network Management Protocol (SNMP) device index of the printer.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"SNMPDeviceIndex"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a buffer that receives the device index</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%><B>sizeof</B>(DWORD)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD that contains <B>sizeof</B>(DWORD)</TD>
</TR>
</TABLE><BR>

<P><A HREF="spoolfnc_2gtj.htm"><B>XcvData</B></A> returns NO_ERROR if it can get the printer's SNMP device index. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. If <I>pOutputData</I> is NULL, the function returns ERROR_INVALID_PARAMETER.</P>

<H4>SNMPEnabled</H4>

<P>The <B>SNMPEnabled</B> command determines whether the Simple Network Management Protocol (SNMP) is enabled for the current device.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=35%>XcvData Parameter</TH>
<TH align=left width=65%>Value</TH>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pszDataName</I></TD>
<TD width=65%>L"SNMPEnabled"</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pInputData</I></TD>
<TD width=65%>NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbInputData</I></TD>
<TD width=65%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pOutputData</I></TD>
<TD width=65%>Address of a buffer that receives a DWORD value</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>cbOutputData</I></TD>
<TD width=65%><B>sizeof</B>(DWORD)</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><I>pcbOutputNeeded</I></TD>
<TD width=65%>Address of a DWORD that contains <B>sizeof</B>(DWORD)</TD>
</TR>
</TABLE><BR>

<P><B>XcvData</B> returns NO_ERROR if SNMP is enabled for the device. If <I>cbOutputData</I> is smaller than required, the function returns ERROR_INVALID_PARAMETER when <I>pcbOutputNeeded</I> is NULL, and ERROR_INSUFFICIENT_BUFFER when <I>pcbOutputNeeded</I> is nonNULL. If <I>pOutputData</I> is NULL, the function returns ERROR_INVALID_PARAMETER.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TCPMON%20Xcv%20Commands"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
