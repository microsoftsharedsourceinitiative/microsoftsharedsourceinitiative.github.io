<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling Vertex Elements</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H4><A NAME="ddk_handling_vertex_elements_gg"></A>Handling Vertex Elements</H4>

<P>The number of vertex elements in a shader declaration that a DirectX 9.0 version driver can handle depends on whether the driver's device supports fixed-function or programmable vertex processing. For more information on vertex elements in a shader declaration, see <A HREF="d3d_4fjb.htm">Separating Declarations and Code for Vertex Shaders</A>. </P>

<P>If the device supports fixed-function vertex processing, the driver must handle up to 17 vertex elements (FVF codes). </P>

<P>If the device supports programmable vertex processing, the driver must handle up to 64 vertex elements and skip over those elements that it does not use. Because each channel (4 maximum) of an input register (16 maximum) for a device that supports vertex shader 3_0 and later can be declared separately, up to 64 (16 * 4) vertex elements are possible. This maximum number of 64 does not include the end element, which is formed from the D3DDECL_END macro.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20Vertex%20Elements"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
