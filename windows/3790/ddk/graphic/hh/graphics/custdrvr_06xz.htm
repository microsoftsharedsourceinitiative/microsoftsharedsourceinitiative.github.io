<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Non-COM-Based Rendering Plug-Ins</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Non-COM-Based Rendering Plug-Ins">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_non_com_based_rendering_plug_ins_gg"></A>Non-COM-Based Rendering Plug-Ins</H3>

<P>A printer minidriver notifies the core driver of its capabilities by implementing the <A HREF="drvrfnc_0x0n.htm"><I>OEMEnableDriver</I></A> function, which fills in the members of a <A HREF="grstrcts_2c9z.htm">DRVENABLEDATA</A> structure. The <B>pdrvfn</B> member of this structure should be set with the address of an array of <A HREF="grstrcts_2w4n.htm">DRVFN</A> structures. Each element of this array should be initialized with, respectively, a function index, and the address of one of the <I>OEMXxx</I> functions that the IHV is implementing. (For detailed descriptions of each of the <I>OEMXxx</I> functions, see <A HREF="drvrfnc_3wdj.htm">Non-COM-Based DDI Hook-out Functions</A>.) </P>

<P>When an application calls Win32® GDI to perform a rendering task, Win32® GDI in turn calls into the Unidrv or Pscript5 core driver, which usually handles the task. If a printer minidriver has indicated that it is capable of hooking out a specific rendering operation, however, the core driver passes the rendering task along to the IHV rendering plug-in. </P>

<P>For example, suppose that an application makes a call to the Win32® <B>LineTo</B> API (described in the Platform SDK documentation). Ordinarily, this would result in another call to the core driver's <A HREF="ddifncs_7sx3.htm"><I>DrvLineTo</I></A> DDI to draw the line. If the printer minidriver has indicated that it intends to hook out calls to this DDI, however, <I>DrvLineTo</I> immediately forwards the call to the IHV's <A HREF="drvrfnc_2ylj.htm"><I>OEMLineTo</I></A> function.</P>

<P>An IHV can implement <I>OEMLineTo</I>, or any of the other hook-out functions described in <A HREF="drvrfnc_3wdj.htm">Non-COM-Based DDI Hook-out Functions</A>, so that it can completely handle the rendering operation, or it can call back to have the core driver handle that operation. </P>

<P><I>OEMLineTo</I> could be implemented as shown in the following pseudocode example:</P>

<PRE>BOOL APIENTRY
  OEMLineTo(
    SURFOBJ  *pso,
    CLIPOBJ  *pco,
    BRUSHOBJ  *pbo,
    LONG  x1,
    LONG  y1,
    LONG  x2,
    LONG  y2,
    RECTL  *prclBounds,
    MIX  mix
)
{
if ( <I>OEM wants to handle the call</I> ) {
  <I>code to handle the call</I>
}
else
// OEM calls Unidrv's DrvLineTo DDI
  bRetVal = (((PFN_DrvLineTo)(poempdev-&gt;pfnUnidrv[UD_DrvLineTo])) (
            pso,
            pco,
            pbo,
            x1,
            x2,
            y1,
            y2,
            prclBounds,
            mix,));
}
</PRE>

<P>In the preceding example, the expression</P>

<PRE>poempdev-&gt;pfnUnidrv[UD_DrvLineTo]
</PRE>

<P>evaluates to the address of the core driver's <I>DrvLineTo</I> DDI. The (<B>PFN_DrvLineTo</B>) expression that precedes it casts the function pointer to the appropriate type. Each of the hook-out functions listed in this section is associated with its own function pointer. </P>

<P>Note that when an <I>OEMXxx</I> DDI calls back to the Unidrv core driver and the surface involved is a device-managed surface, Unidrv can simply ignore the call by returning FALSE.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Non-COM-Based%20Rendering%20Plug-Ins"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
