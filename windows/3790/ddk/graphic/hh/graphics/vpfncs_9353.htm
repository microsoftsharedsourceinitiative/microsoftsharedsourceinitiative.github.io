<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VideoPortGetDeviceData</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VideoPortGetDeviceData">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_videoportgetdevicedata_gg"></A>VideoPortGetDeviceData</H1>

<P>The <B>VideoPortGetDeviceData</B> function retrieves system-detected configuration information from the <B>..\Machine\Hardware\Description</B> tree in the registry. This information is bus-specific or adapter-specific and stored in the registry by the system loader or the HAL.</P>

<PRE class=syntax><B>VP_STATUS
  VideoPortGetDeviceData(
    IN</B> <B>PVOID</B>  <I>HwDeviceExtension</I><B>,
    IN</B> <B>VIDEO_DEVICE_DATA_TYPE</B>  <I>DeviceDataType</I><B>,
    IN</B> <B>PMINIPORT_QUERY_DEVICE_ROUTINE</B>  <I>CallbackRoutine</I><B>,
    IN</B> <B>PVOID</B>  <I>Context</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the miniport driver's device extension.</DD>

<DT><I>DeviceDataType</I></DT>

<DD>Specifies the type of data being requested as a VIDEO_DEVICE_DATA_TYPE value, typically one of <B>VpBusData</B>, <B>VpControllerData</B>, or <B>VpMonitorData.</B>

<P>The <B>VpControllerData</B> and <B>VpMonitorData</B> values are relevant only on ARC-compliant platforms. Miniport drivers of x86-type video adapters generally specify <B>VpBusData</B>, particularly for adapters on EISA buses. The <B>VpMachineData</B> value is reserved for future use.
</DD>

<DT><I>CallbackRoutine</I></DT>

<DD>Pointer to a driver-supplied <A HREF="vmpfncs_2m93.htm"><I>HwVidQueryDeviceCallback</I></A> function to be called with the requested information.</DD>

<DT><I>Context</I></DT>

<DD>Pointer to a caller-determined context parameter to be passed to the <I>CallbackRoutine</I>. It typically points to the <A HREF="vstrcts_459j.htm">VIDEO_PORT_CONFIG_INFO</A> buffer.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>VideoPortGetDeviceData</B> returns NO_ERROR if it successfully called the miniport driver's <I>HwVidQueryDeviceCallback</I> function with configuration information.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P><B>VideoPortGetDeviceData</B> cannot be called from a miniport driver's <A HREF="vmpfncs_2luv.htm"><I>HwVidInterrupt</I></A> or <A HREF="vmpfncs_8v53.htm"><I>HwVidTimer</I></A> functions, or from <A HREF="vpfncs_6z6v.htm"><B>VideoPortQueueDpc</B></A>, or from a callback to <A HREF="vpfncs_3huv.htm"><B>VideoPortSynchronizeExecution</B></A>.</P>

<P>The registry tree from which <B>VideoPortGetDeviceData</B> retrieves configuration information is <I>volatile</I>; that is, it is re-created by the system loader or HAL every time the system is loaded. Because this information is collected and stored early in the boot process, the bus-relative configuration information returned by <A HREF="vpfncs_5naf.htm"><B>VideoPortGetBusData</B></A> can be more complete.</P>

<P>Callers of <B>VideoPortGetDeviceData</B> must be running at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="vmpfncs_3e3r.htm"><I>HwVidFindAdapter</I></A>, <A HREF="vmpfncs_2m93.htm"><I>HwVidQueryDeviceCallback</I></A>, <A HREF="vstrcts_459j.htm">VIDEO_PORT_CONFIG_INFO</A>, <A HREF="vpfncs_8a07.htm"><B>VideoPortGetRegistryParameters</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VideoPortGetDeviceData"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
