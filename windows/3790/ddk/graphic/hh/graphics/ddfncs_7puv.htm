<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DxApi</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DxApi">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_dxapi_gg"></A>DxApi</H1>

<P>The <B>DxApi</B> function accepts commands from the hardware decoder's video capture driver to access the <A HREF="ddfncs_5y1z.htm">DxApi interface callback functions</A> that are implemented in a <A HREF="vmport_7a1z.htm">video miniport driver</A>.</P>

<PRE class=syntax><B>DWORD
  FAR PASCAL DxApi( </B>
<B>    IN DWORD</B>  <I>dwFunctionNum</I><B>,</B>
<B>    IN LPVOID</B>  <I>lpvInBuffer</I><B>,</B>
<B>    IN DWORD</B>  <I>cbInBuffer</I><B>,</B>
<B>    OUT LPVOID</B>  <I>lpvOutBuffer</I><B>,</B>
<B>    OUT DWORD</B>  <I>cbOutBuffer</I> 
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>dwFunctionNum</I></DT>

<DD>Indicates the behavior of the <B>DxApi</B> function (function identifier). See the Comments section for the list of function identifiers.</DD>

<DT><I>lpvInBuffer</I></DT>

<DD>Points to the input buffer.</DD>

<DT><I>cbInBuffer</I></DT>

<DD>Indicates the size in bytes of the input buffer.</DD>

<DT><I>lpvOutBuffer</I></DT>

<DD>Points to the output buffer.</DD>

<DT><I>cbOutBuffer</I></DT>

<DD>Indicates the size in bytes of the output buffer.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>DxApi</B> returns the number of bytes actually written to the output buffer.</P>

<H4>Headers</H4>

<P>Declared in <I>ddkmapi.h</I>. Include <I>ddkmapi.h</I>.</P>

<H4>Comments</H4>

<P><B>DxApi</B> accepts a function identifier (<I>dwFunctionNum</I>), an input buffer (<I>lpvInBuffer</I>) and its size (<I>cbInBuffer</I>), and an output buffer (<I>lpvOutBuffer</I>) and its size (<I>cbOutBuffer</I>). The behavior of the function and the size and format of the input and output buffers depend on the specified function identifier. The return value is the number of actual bytes written into the output buffer.</P>

<P>The following function identifiers are defined for the <B>DxApi</B> function in the <I>ddkmapi.h</I> header file: </P>

<P class=indent1><A HREF="ddfncs_9vs7.htm">DD_DXAPI_ADDVPCAPTUREBUFFER</A></P>

<P class=indent1><A HREF="ddfncs_3u3r.htm">DD_DXAPI_CLOSEHANDLE</A></P>

<P class=indent1><A HREF="ddfncs_9k13.htm">DD_DXAPI_FLIP_OVERLAY</A></P>

<P class=indent1><A HREF="ddfncs_7fl3.htm">DD_DXAPI_FLIP_VP</A></P>

<P class=indent1><A HREF="ddfncs_31rb.htm">DD_DXAPI_FLUSHVPCAPTUREBUFFERS</A></P>

<P class=indent1><A HREF="ddfncs_6crr.htm">DD_DXAPI_GET_CURRENT_VP_AUTOFLIP_SURFACE</A></P>

<P class=indent1><A HREF="ddfncs_0q07.htm">DD_DXAPI_GET_LAST_VP_AUTOFLIP_SURFACE</A></P>

<P class=indent1><A HREF="ddfncs_6qlj.htm">DD_DXAPI_GET_POLARITY</A></P>

<P class=indent1><A HREF="ddfncs_7u07.htm">DD_DXAPI_GET_SURFACE_STATE</A></P>

<P class=indent1><A HREF="ddfncs_5ijr.htm">DD_DXAPI_GET_VP_FIELD_NUMBER</A></P>

<P class=indent1><A HREF="ddfncs_8kkn.htm">DD_DXAPI_GETKERNELCAPS</A></P>

<P class=indent1><A HREF="ddfncs_9qqv.htm">DD_DXAPI_GETVERSIONNUMBER</A></P>

<P class=indent1><A HREF="ddfncs_497r.htm">DD_DXAPI_LOCK</A></P>

<P class=indent1><A HREF="ddfncs_3i93.htm">DD_DXAPI_OPENDIRECTDRAW</A></P>

<P class=indent1><A HREF="ddfncs_0887.htm">DD_DXAPI_OPENSURFACE</A></P>

<P class=indent1><A HREF="ddfncs_3fs7.htm">DD_DXAPI_OPENVIDEOPORT</A></P>

<P class=indent1><A HREF="ddfncs_7h5z.htm">DD_DXAPI_OPENVPCAPTUREDEVICE</A></P>

<P class=indent1><A HREF="ddfncs_6unb.htm">DD_DXAPI_REGISTER_CALLBACK</A></P>

<P class=indent1><A HREF="ddfncs_4ilj.htm">DD_DXAPI_SET_SURFACE_STATE</A></P>

<P class=indent1><A HREF="ddfncs_9lt3.htm">DD_DXAPI_SET_VP_FIELD_NUMBER</A></P>

<P class=indent1><A HREF="ddfncs_023r.htm">DD_DXAPI_SET_VP_SKIP_FIELD</A></P>

<P class=indent1><A HREF="ddfncs_7yqv.htm">DD_DXAPI_UNREGISTER_CALLBACK</A></P>

<H4>See Also</H4>

<P><A HREF="ddfncs_9vs7.htm">DD_DXAPI_ADDVPCAPTUREBUFFER</A>, <A HREF="ddfncs_3u3r.htm">DD_DXAPI_CLOSEHANDLE</A>, <A HREF="ddfncs_9k13.htm">DD_DXAPI_FLIP_OVERLAY</A>, <A HREF="ddfncs_7fl3.htm">DD_DXAPI_FLIP_VP</A>, <A HREF="ddfncs_31rb.htm">DD_DXAPI_FLUSHVPCAPTUREBUFFERS</A>, <A HREF="ddfncs_6crr.htm">DD_DXAPI_GET_CURRENT_VP_AUTOFLIP_SURFACE</A>, <A HREF="ddfncs_0q07.htm">DD_DXAPI_GET_LAST_VP_AUTOFLIP_SURFACE</A>, <A HREF="ddfncs_6qlj.htm">DD_DXAPI_GET_POLARITY</A>, <A HREF="ddfncs_7u07.htm">DD_DXAPI_GET_SURFACE_STATE</A>, <A HREF="ddfncs_5ijr.htm">DD_DXAPI_GET_VP_FIELD_NUMBER</A>, <A HREF="ddfncs_8kkn.htm">DD_DXAPI_GETKERNELCAPS</A>, <A HREF="ddfncs_9qqv.htm">DD_DXAPI_GETVERSIONNUMBER</A>, <A HREF="ddfncs_497r.htm">DD_DXAPI_LOCK</A>, <A HREF="ddfncs_3i93.htm">DD_DXAPI_OPENDIRECTDRAW</A>, <A HREF="ddfncs_0887.htm">DD_DXAPI_OPENSURFACE</A>, <A HREF="ddfncs_3fs7.htm">DD_DXAPI_OPENVIDEOPORT</A>, <A HREF="ddfncs_7h5z.htm">DD_DXAPI_OPENVPCAPTUREDEVICE</A>, <A HREF="ddfncs_6unb.htm">DD_DXAPI_REGISTER_CALLBACK</A>, <A HREF="ddfncs_4ilj.htm">DD_DXAPI_SET_SURFACE_STATE</A>, <A HREF="ddfncs_9lt3.htm">DD_DXAPI_SET_VP_FIELD_NUMBER</A>, <A HREF="ddfncs_023r.htm">DD_DXAPI_SET_VP_SKIP_FIELD</A>, <A HREF="ddfncs_7yqv.htm">DD_DXAPI_UNREGISTER_CALLBACK</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DxApi"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
