<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>D3DHAL_DP2INDEXEDTRIANGLELIST</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="D3DHAL_DP2INDEXEDTRIANGLELIST">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_d3dhal_dp2indexedtrianglelist_gg"></A>D3DHAL_DP2INDEXEDTRIANGLELIST</H1>

<P>One or more D3DHAL_DP2INDEXEDTRIANGLELIST structures are parsed from the command buffer by the <A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A> callback when the <A HREF="d3dstrct_9w6f.htm">D3DHAL_DP2COMMAND</A> structure's <B>bCommand</B> member is set to <A HREF="d3denum_0jon.htm#ddk_d3ddp2op_indexedtrianglelist_gg">D3DDP2OP_INDEXEDTRIANGLELIST</A>, and are used to render a sequence of unconnected triangles using vertex indices.</P>

<PRE class=syntax>typedef struct _D3DHAL_DP2INDEXEDTRIANGLELIST {
    WORD  wV1;
    WORD  wV2;
    WORD  wV3;
    WORD  wFlags;
} D3DHAL_DP2INDEXEDTRIANGLELIST;</PRE>

<H4>Members</H4>

<DL>
<DT><B>wV1</B></DT>

<DD>Specifies the index into the vertex buffer location containing coordinate data for the first vertex of the triangle.</DD>

<DT><B>wV2</B></DT>

<DD>Specifies the index to the vertex buffer location containing coordinate data for the second vertex of the triangle.</DD>

<DT><B>wV3</B></DT>

<DD>Specifies the index to the vertex buffer location containing coordinate data for the third vertex of the triangle.</DD>

<DT><B>wFlags</B></DT>

<DD>Specifies the flags that describe how the driver should render the triangle. This member can be a bitwise OR of the following values: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Flag</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>D3DTRIFLAG_EDGEENABLE1</TD>
<TD width=52%>The driver should render the triangle edge between <B>wV1</B> and <B>wV2</B> when the fill mode is D3DFILL_WIREFRAME.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>D3DTRIFLAG_EDGEENABLE2</TD>
<TD width=52%>The driver should render the triangle edge between <B>wV2</B> and <B>wV3</B> when the fill mode is D3DFILL_WIREFRAME.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>D3DTRIFLAG_EDGEENABLE3</TD>
<TD width=52%>The driver should render the triangle edge between <B>wV3</B> and <B>wV1</B> when the fill mode is D3DFILL_WIREFRAME.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>D3DTRIFLAG_EDGEENABLETRIANGLE</TD>
<TD width=52%>The driver should render all triangle edges when the fill mode is D3DFILL_WIREFRAME.</TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>d3dhal.h</I>. Include <I>d3dhal.h</I>.</P>

<H4>Comments</H4>

<P><I>D3dDrawPrimitives2</I> should process <B>wPrimitiveCount</B>*3 indexes from the command buffer, processing <B>wPrimitiveCount</B> D3DHAL_DP2INDEXEDTRIANGLELIST structures. The value of <B>wPrimitiveCount</B> is specified in the D3DHAL_DP2COMMAND structure.</P>

<P>The driver should process a total of <B>wPrimitiveCount</B>*3 vertices from the vertex buffer, three vertices per triangle, for the current command. The sequence of triangles rendered is (<B>wV1<SUB>0</SUB></B>, <B>wV2<SUB>0</SUB></B>, <B>wV3<SUB>0</SUB></B>), (<B>wV1<SUB>1</SUB></B>, <B>wV2<SUB>1</SUB></B>, <B>wV3<SUB>1</SUB></B>), …, (<B>wV1<SUB>n</SUB></B>, <B>wV2<SUB>n</SUB></B>, <B>wV3<SUB>n</SUB></B>), where n<B> </B>equals (<B>wPrimitiveCount </B>- 1). The driver should calculate the vertex locations based on the current command as follows:

<UL>
	<LI>When the command is D3DDP2OP_INDEXEDTRIANGLELIST, the indexes into the vertex buffer are relative to the vertex buffer offset specified by the <B>dwVertexOffset</B> member of the <A HREF="d3dstrct_47fr.htm">D3DHAL_DRAWPRIMITIVES2DATA</A> structure.</LI>

	<LI>When the command is D3DDP2OP_INDEXEDTRIANGLELIST2, there is a <A HREF="d3dstrct_88iv.htm">D3DHAL_DP2STARTVERTEX</A> structure that immediately follows the command in the command buffer. The indexes into the vertex buffer are relative to the vertex buffer offset specified by <B>dwVertexOffset</B> plus the base offset obtained from the <B>wVStart</B> member of the D3DHAL_DP2STARTVERTEX structure.</LI>
</UL>

<P>The following figure shows a portion of a sample command buffer containing a D3DDP2OP_INDEXEDTRIANGLELIST command and two D3DHAL_DP2INDEXEDTRIANGLELIST structures. The driver should draw two triangles – with all edges enabled – using the following six vertices from the vertex buffer: (v[3], v[4], v[5]), (v[0], v[1], v[2]).</P>

<P><IMG SRC="images/dp2tlsi.gif" ALT="" BORDER=0></P>

<P>Similarly, the following figure shows a portion of a sample command buffer containing a D3DDP2OP_INDEXEDTRIANGLELIST2 command, a D3DHAL_DP2STARTVERTEX offset, and two D3DHAL_DP2INDEXEDTRIANGLELIST structures. The driver should process six vertices from the vertex buffer, rendering two triangles defined by (v[5], v[6], v[7]), (v[2], v[3], v[4]).</P>

<P><IMG SRC="images/dp2tls2i.gif" ALT="" BORDER=0></P>

<H4>See Also</H4>

<P><A HREF="d3denum_0jon.htm#ddk_d3ddp2op_indexedtrianglelist_gg">D3DDP2OP_INDEXEDTRIANGLELIST</A>, <A HREF="d3dfncs_5usn.htm"><I>D3dDrawPrimitives2</I></A>, <A HREF="d3dstrct_9w6f.htm">D3DHAL_DP2COMMAND</A>, <A HREF="d3dstrct_88iv.htm">D3DHAL_DP2STARTVERTEX</A>, <A HREF="d3dstrct_47fr.htm">D3DHAL_DRAWPRIMITIVES2DATA</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: D3DHAL_DP2INDEXEDTRIANGLELIST"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
