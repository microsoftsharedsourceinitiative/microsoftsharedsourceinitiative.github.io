<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VideoPortGetRomImage</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VideoPortGetRomImage">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_videoportgetromimage_gg"></A>VideoPortGetRomImage</H1>

<P>The <B>VideoPortGetRomImage</B> function reads the device's read-only memory (ROM).</P>

<PRE class=syntax><B>PVOID
  VideoPortGetRomImage(
    IN PVOID</B>  <I>HwDeviceExtension</I><B>,
    IN PVOID</B>  <I>Unused1</I><B>,
    IN ULONG</B>  <I>Unused2</I><B>,
    IN ULONG</B>  <I>Length</I><B>
    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the miniport driver's device extension.</DD>

<DT><I>Unused1</I></DT>

<DD>Is currently ignored by the video port driver; should be set to NULL.</DD>

<DT><I>Unused2</I></DT>

<DD>Is currently ignored by the video port driver; should be set to zero.</DD>

<DT><I>Length</I></DT>

<DD>Specifies either the number of bytes of ROM data that the video port driver should read and return, or zero.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>VideoPortGetRomImage</B> returns a pointer to a buffer containing the device's ROM (BIOS) data on success; otherwise, returns NULL to indicate either there was insufficient memory for the operation, or the device's ROM could not be accessed.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P><B>VideoPortGetRomImage</B> does not read ROM using the legacy 0xC0000 mapping. It reads ROM that can be discovered using the ACPI _ROM method or the ROM base address register.</P>

<P>The video port driver allocates a buffer of <I>Length</I> bytes and fills it with data read from the device's ROM. The video port driver always reads <I>Length</I> bytes from the beginning of the device's ROM.</P>

<P>If a miniport driver calls <B>VideoPortGetRomImage</B> multiple times, the video port driver will free the buffer from a previous call before allocating and returning a buffer in the current call. Consequently, a miniport driver must only reference the pointer returned by this call to <B>VideoPortGetRomImage</B>.</P>

<P>The miniport driver can free the buffer allocated by the video port driver by calling <B>VideoPortGetRomImage</B> with a <I>Length</I> of zero.</P>

<P>Callers of <B>VideoPortGetRomImage</B> must be running at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="vpfncs_6i07.htm"><B>VideoPortScanRom</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VideoPortGetRomImage"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
