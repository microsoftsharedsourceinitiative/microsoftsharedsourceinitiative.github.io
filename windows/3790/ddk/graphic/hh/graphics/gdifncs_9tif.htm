<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>EngSaveFloatingPointState</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="EngSaveFloatingPointState">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_engsavefloatingpointstate_gg"></A>EngSaveFloatingPointState</H1>

<P>The <B>EngSaveFloatingPointState</B> function saves the current Windows&nbsp;2000 (and later) kernel floating point state.</P>

<PRE class=syntax><B>ULONG
  EngSaveFloatingPointState(</B>
<B>    OUT VOID</B>  <I>*pBuffer</I><B>,</B>
<B>    IN ULONG</B>  <I>cjBufferSize</I>
<B>    );</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>pBuffer</I></DT>

<DD>Pointer to the buffer that receives the floating point state. This buffer must be zero-initialized, and must be in nonpaged memory.</DD>

<DT><I>cjBufferSize</I></DT>

<DD>Specifies the size, in bytes, of the buffer to which <I>pBuffer</I> points.
</DD>
</DL>

<H4>Return Value</H4>

<P>If <I>pBuffer</I> is non-NULL, <B>EngSaveFloatingPointState</B> returns TRUE if the state is successfully saved. It returns FALSE if the specified buffer is too small or the state cannot be saved.</P>

<P>If <I>pBuffer</I> is NULL or <I>cjBufferSize</I> is zero, <B>EngSaveFloatingPointState</B> returns the size of the buffer needed to save the floating point state. If the return value is zero, the processor does not have hardware floating point capability. In this case, the driver must not use any floating point instructions.</P>

<H4>Headers</H4>

<P>Declared in <I>winddi.h</I>. Include <I>winddi.h</I>.</P>

<H4>Comments</H4>

<P>The driver must save the current kernel floating point state before using floating point hardware instructions. On Intel architecture systems, this permits the use of MMX instructions if they are supported by the processor. Drivers that do not properly use <B>EngSaveFloatingPointState</B> and <A HREF="gdifncs_9l0n.htm"><B>EngRestoreFloatingPointState</B></A> when using floating point or MMX hardware will cause random floating point or MMX corruption in the calling application.</P>

<P>On every call to the driver, the driver must call <B>EngSaveFloatingPointState</B> once to preserve kernel state before using floating point or MMX operations. It must also call <B>EngRestoreFloatingPointState</B> once after all floating point or MMX operations are complete to reset the kernel state.</P>

<P>GDI automatically saves the floating point state for any calls to a driver's <A HREF="ddifncs_9tev.htm"><I>DrvEscape</I></A> routine when the escape is OPENGL_CMD, OPENGL_GETINFO, or MCDFUNCS.</P>

<H4>See Also</H4>

<P><A HREF="gdifncs_9l0n.htm"><B>EngRestoreFloatingPointState</B></A>, <A HREF="ddifncs_9tev.htm"><I>DrvEscape</I></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: EngSaveFloatingPointState"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
