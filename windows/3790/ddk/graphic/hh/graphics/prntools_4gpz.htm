<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Print Gremlin</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Print Gremlin">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_print_gremlin_gg"></A>Print Gremlin</H1>

<P>Print Gremlin (<I>pGremlin.exe</I>) is a tool intended to provide comprehensive test coverage of Unidrv and Pscript5 printer minidrivers running on Windows&nbsp;2000 and later operating system releases. It is also useful for exercising other kinds of printer minidrivers, although code coverage for these minidrivers varies and is generally not as complete as it is for the Unidrv and Pscript minidrivers. Printer vendors should use this tool to ensure that their printer drivers are robust and that they produce correct output. In the future, WHQL will be using a variant of Print Gremlin as the WHQL logo test requirement, eventually replacing WinPARTy for that purpose. </P>

<P>Print Gremlin was developed to reduce the reliance on pure application testing of printer minidrivers, which seldom exercises all code and data paths in a printer minidriver. Instead, Print Gremlin exercises a large majority of the core driver code, primarily in the rendering module. This coverage includes calls to all of the graphics DDIs exposed by the core drivers. For WHQL testing this is limited to just the graphics DDIs that are called by GDI and the spooler. The rationale for this is that drivers should be responsible only for those graphics DDIs that the operating system actually calls and uses. <B> </B></P>

<P>Print Gremlin exercises some of the user interface module, but is not directly targeted at it. Vendors will still need to perform their own user interface testing, such as ensuring that the constraints are working correctly, settings are sticky, and that turning a feature on produces the expected results. (For example, setting the mode to Duplex should produce duplex output.) Print Gremlin directly creates and alters a DEVMODE structure, and uses the user interface to validate what it creates or modifies in this structure.</P>

<H4>Usage</H4>

<PRE>pGremlin  [<I>name</I>] [<I>option</I>  [<I>option</I> [...]]] 
 </PRE>

<P><I>Name</I> is the name of a printer or server to test.</P>

<P><I>Option</I> is one of the following:</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Option</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>/?</TD>
<TD width=52%>Display usage information.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>/Clean</TD>
<TD width=52%>Remove language packs and printers that may were added in a previous session of Print Gremlin.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>/InstallCoveragePrinters</TD>
<TD width=52%>Install printers used for regression and code coverage.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>/OneJob</TD>
<TD width=52%>Print all EMFs in one job, instead of one EMF per job.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>/Parallel</TD>
<TD width=52%>Print a test to each printer before starting on the next test. </TD>
</TR>

<TR VALIGN="top">
<TD width=48%>/SkipComment:"<I>string</I>"</TD>
<TD width=52%>Skip any printer whose <B>Comment</B> property contains the specified string. For example, the option /SkipComment:"Skip Me"<BR>
causes all printers with the <B>Comment</B> "Skip Me" to be skipped.<BR>
The comparison is case-insensitive.<BR>
Note that there must not be any white space between this option and the following string.</TD>
</TR>
</TABLE><BR>

<P class=note><B>Notes:</B>&nbsp;&nbsp;By default, Print Gremlin prints to currently installed printers, and coverage printers are not installed.</P>

<P class=note>By default, Print Gremlin prints all tests to a given printer before continuing on to the next installed printer. To change this behavior, use the /Parallel option when you start Print Gremlin.</P>

<P class=note>Print Gremlin does not clean up after itself. In its initialization, Print Gremlin installs Arabic, Chinese Simplified, Chinese Traditional, Japanese, Korean, and Thai language packs. When it completes its operations, these language packs will still be installed on the system. Print Gremlin can also leave printers installed that were not installed before it started.</P>

<P class=note>Print Gremlin failures are debugged the same as any other application failures.</P>

<H4>Installing Print Gremlin</H4>

<P>To install Print Gremlin, start the <B>Print Gremlin Setup Wizard</B>, and respond to the dialog boxes that it displays.</P>

<H4>Setting Up Target Devices</H4>

<P>The vendor installs printers that use the print driver models to be tested. For the best coverage, the vendor should install a printer instance for each desired configuration, such as Draft, Better, and Best Quality, or for each different font downloading option. This way, multiple configurations can be covered in one pass of the tool.</P>

<H4>Analyzing Output </H4>

<P>After you run Print Gremlin, examine the printer's output to verify that it appears as expected. Ideally, output produced from EMF should look the same as that in the EMF file that generated it. The EMF files, which are in the same directory as <I>pGremlin.exe</I>, can be viewed with Image Preview. Except for differences in the way a display device and a printer display an image, the display device and printer versions should appear the same, or nearly so.</P>

<P>For some combinations of print device and display device, there might be significant differences. For example, dot matrix devices and pen plotters should not be expected to produce images that closely match the quality of those produced by the display device. Certain printer settings can also affect the quality of output. For example, a printer set at 3 BPP will not produce a gradient fill of the same quality as that of another printer set at 24 BPP. The first printer has at most eight colors to work with, thereby making the gradient fill appear very blocky.</P>

<H4>Common Problems Found with Print Gremlin</H4>

<P>The most common kinds of problems that Print Gremlin finds are:

<UL>
	<LI>Writing beyond the end of a buffer</LI>

	<LI>Accessing a NULL pointer</LI>

	<LI>Passing corrupt data structures to GDI</LI>

	<LI>Using memory after it has been freed</LI>

	<LI>Freeing memory more than once</LI>

	<LI>Ignoring a function's return value</LI>
</UL>

<P><B></B></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Print%20Gremlin"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
