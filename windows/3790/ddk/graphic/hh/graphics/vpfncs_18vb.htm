<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VideoPortMapBankedMemory</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VideoPortMapBankedMemory">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_vrp_gg_gly">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Display&nbsp;and&nbsp;Print&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_videoportmapbankedmemory_gg"></A>VideoPortMapBankedMemory</H1>

<P>The <B>VideoPortMapBankedMemory</B> function is <B>obsolete</B>, and is supported only for Windows NT 4.0 and previous drivers. Windows&nbsp;2000 and later drivers must use <A HREF="vpfncs_4otj.htm"><B>VideoPortMapMemory</B></A>.</P>

<P><B>VideoPortMapBankedMemory</B> remaps a bus-relative physical range of video memory into the corresponding display driver's virtual address space in response to a VRP with the <B>IoControlCode</B> member set to <A HREF="virqs_5hnr.htm">IOCTL_VIDEO_SHARE_VIDEO_MEMORY</A> or <A HREF="virqs_4gx3.htm">IOCTL_VIDEO_MAP_VIDEO_MEMORY</A>. </P>

<PRE class=syntax><B>VP_STATUS
  VideoPortMapBankedMemory(
    IN PVOID</B>  <I>HwDeviceExtension</I><B>,
    IN PHYSICAL_ADDRESS</B>  <I>PhysicalAddress</I><B>,
    IN</B> <B>OUT PULONG</B>  <I>Length</I><B>,
    PULONG</B>  <I>InIoSpace</I><B>,
    PVOID</B>  <I>*VirtualAddress</I><B>,
    ULONG</B>  <I>BankLength</I><B>,
    UCHAR</B>  <I>ReadWriteBank</I><B>,
    PBANKED_SECTION_ROUTINE</B>  <I>BankRoutine</I><B>,
    PVOID</B>  <I>Context</I><B>
    );</B></PRE>

<P><B>VideoPortMapBankedMemory</B> remaps a bus-relative physical range of video memory into the corresponding display driver's virtual address space in response to a VRP with the <B>IoControlCode</B> member set to <A HREF="virqs_5hnr.htm">IOCTL_VIDEO_SHARE_VIDEO_MEMORY</A> or <A HREF="virqs_4gx3.htm">IOCTL_VIDEO_MAP_VIDEO_MEMORY</A>. </P>

<H4>Parameters</H4>

<DL>
<DT><I>HwDeviceExtension</I></DT>

<DD>Pointer to the miniport driver's device extension.</DD>

<DT><I>PhysicalAddress</I></DT>

<DD>Specifies the bus-relative base address of the range to be mapped.</DD>

<DT><I>Length</I></DT>

<DD>Pointer to a variable specifying the total number of bytes of device memory to be mapped (regardless of bank size). <B>VideoPortMapBankedMemory</B> returns the actual size of the memory mapped, which can be rounded to a system-determined alignment boundary, in this parameter. However, the miniport and display drivers cannot access memory outside the range delimited by the input value at <I>Length</I>.</DD>

<DT><I>InIoSpace</I></DT>

<DD>Indicates the location of the range. This parameter can be one of the following values:

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Value</TH>
<TH align=left width=52%>Meaning</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_DENSE</TD>
<TD width=52%>Obsolete</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_IO</TD>
<TD width=52%>The range is in system I/O space rather than in memory space.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_MEMORY</TD>
<TD width=52%>The range is in memory space rather than in system I/O space.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_P6CACHE</TD>
<TD width=52%>The processor aggregates a sequence of write operations and sends them to a given cache line. The processor then flushes the cache. This flag is meaningful only when VIDEO_MEMORY_SPACE_IO is <I>not</I> set.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>VIDEO_MEMORY_SPACE_USER_MODE</TD>
<TD width=52%>Indicates that the address range specified should be mapped into user mode rather than kernel mode. This flag is meaningful only when VIDEO_MEMORY_SPACE_IO is <I>not</I> set.</TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>VirtualAddress</I></DT>

<DD>Is a handle to the process into which the memory must be mapped, or NULL. NULL specifies that the port driver should map the logical memory range at any location in the address space of the current process. Otherwise, this handle can be a value passed in a <A HREF="JavaScript:hhobj_1.Click()">VRP</A> by the miniport driver's corresponding display driver. On return from a successful call, <B>VideoPortMapBankedMemory</B> resets the variable to the base virtual address to which it has mapped the given <I>PhysicalAddress</I>.</DD>

<DT><I>BankLength</I></DT>

<DD>Specifies the size of a bank, in bytes.</DD>

<DT><I>ReadWriteBank</I></DT>

<DD>If set to TRUE the bank is Read\Write; if set to FALSE there are two independent read and write banks. </DD>

<DT><I>BankRoutine</I></DT>

<DD>Pointer to a driver-supplied <A HREF="vmpfncs_3jxj.htm"><I>HwVidBankedMemoryCallback</I></A> function to be called by the Memory Manager when a new bank is accessed by the display driver.</DD>

<DT><I>Context</I></DT>

<DD>Pointer to a miniport driver-supplied context that is passed back to the driver when the <I>BankRoutine</I> is called.
</DD>
</DL>

<H4>Return Value</H4>

<P><B>VideoPortMapBankedMemory</B> returns NO_ERROR if the given logical range was successfully mapped to a user-space virtual range. Otherwise, it can return ERROR_INVALID_PARAMETER.</P>

<H4>Headers</H4>

<P>Declared in <I>video.h</I>. Include <I>video.h</I>.</P>

<H4>Comments</H4>

<P><B>VideoPortMapBankedMemory</B> runs in kernel mode within the same context as the user-mode thread that initiated the call.</P>

<P><B>VideoPortMapBankedMemory</B> is called by miniport drivers to efficiently manage x86 type devices that are limited to mapping a frame buffer in banks. When this routine returns to the caller, the frame buffer managed by the miniport driver is mapped as a linear frame buffer into the address space of the requesting process (see <I>VirtualAddress</I> parameter). When an access is made to an address in that mapped space, the Memory Manager calls the miniport driver to update the Bank Index Register to point to a new bank that contains the currently referenced address. The Bank Index Register is maintained by the miniport driver in <I>BankRoutine</I>. The correct Bank Index is calculated by the Memory Manager transparently to a display driver and passed to the miniport driver in the callback to <I>BankRoutine</I>.</P>

<P>Callers of <B>VideoPortMapBankedMemory</B> must be running at IRQL = PASSIVE_LEVEL.</P>

<H4>See Also</H4>

<P><A HREF="vmpfncs_3jxj.htm"><I>HwVidBankedMemoryCallback</I></A>, <A HREF="virqs_4gx3.htm">IOCTL_VIDEO_MAP_VIDEO_MEMORY</A>, <A HREF="virqs_5hnr.htm">IOCTL_VIDEO_SHARE_VIDEO_MEMORY</A>, <A HREF="virqs_4fjb.htm">IOCTL_VIDEO_UNSHARE_VIDEO_MEMORY</A>, <A HREF="vstrcts_5gvb.htm">VIDEO_REQUEST_PACKET</A>, <A HREF="vpfncs_4otj.htm"><B>VideoPortMapMemory</B></A>, <A HREF="vpfncs_85d3.htm"><B>VideoPortUnmapMemory</B></A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VideoPortMapBankedMemory"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
