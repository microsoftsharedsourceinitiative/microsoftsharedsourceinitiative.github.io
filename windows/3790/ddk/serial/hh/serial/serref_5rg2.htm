<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IRP_MJ_FLUSH_BUFFERS (Serial)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="IRP_MJ_FLUSH_BUFFERS (Serial)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Serial&nbsp;Ports&nbsp;and&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_irp_mj_flush_buffers_serial__kr"></A>IRP_MJ_FLUSH_BUFFERS (Serial)</H1>

<P>The IRP_MJ_FLUSH_BUFFER request flushes COM port's internal write buffer.</P>

<H4>When Sent</H4>

<P>A client uses a flush request to determine when Serial has completed all write requests the client sent before the flush request.</P>

<H4>Input Parameters</H4>

<P>None.</P>

<H4>Output Parameters</H4>

<P>None.</P>

<H4>I/O Status Block</H4>

<P>The <B>Information</B> member is set to zero.</P>

<P>The <B>Status</B> member is set to one of the following status values:

<DL>
<DT>STATUS_SUCCESS</DT>

<DD>The request completed successfully.</DD>

<DT>STATUS_CANCELLED</DT>

<DD>A client canceled the request. Serial also cancels a request if a device error occurs and Serial is configured to cancel a request if there is a device error.</DD>

<DT>STATUS_DELETE_PENDING</DT>

<DD>The driver is in the process of removing the device.</DD>

<DT>STATUS_PENDING</DT>

<DD>Serial queued the request for later processing.</DD>
</DL>

<H4>Headers</H4>

<P>Defined in <I>wdm.h</I> and <I>ntddk.h</I>. Include <I>wdm.h</I> or <I>ntddk.h</I>.</P>

<H4>Operation</H4>

<P>Serial queues and starts processing write and flush requests in the order in which the requests are received. Serial completes a flush request after it calls <B>IoCompleteRequest</B> for all write requests that it received before a flush request. <I>However, completion of the flush request does not indicate that all the previously started write requests are completed by other drivers in the device stack. </I>For example, a filter driver might still be processing a write request. A client must check that a write request is completed by all drivers in the device stack before the client attempts to free or reuse a write request's IRP.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: IRP_MJ_FLUSH_BUFFERS%20(Serial)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
