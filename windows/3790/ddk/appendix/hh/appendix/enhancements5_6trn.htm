<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Windows XP Support for Itanium-based Systems</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Windows XP Support for Itanium-based Systems">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Appendix:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_supp_windows_xp_support_for_itanium_based_systems"></A>Windows XP Support for Itanium-based Systems</H1>

<P>Windows&nbsp;XP for Intel Itanium-based systems is a fully featured 64-bit operating system that is compatible with most existing 32-bit applications. The 64-bit Windows operating system will provide high availability, advanced scalability, and large memory support based on the Intel Itanium chip with its extensive multiprocessing features, powerful floating-point arithmetic extensions, and multimedia-specific instructions. 64-bit Windows and the Itanium microprocessor are designed to address the most demanding business needs of today's Internet-based world including e-commerce, data mining, online transaction-processing, memory-intensive high-end graphics, complex mathematics, and high-performance multimedia applications. </P>

<P>The Microsoft vision is to make a broad portfolio of applications available, including leading Microsoft applications on 64-bit Windows. To achieve this goal, Microsoft will provide a rich set of development tools that will make it easy to write new applications and port existing ones. The 64-bit Windows platform will bring the following benefits to developers and end users: 

<UL>
	<LI>The full advantage of Intel Itanium-based architecture for reliability, high performance, and high availability </LI>

	<LI>Compatibility with Windows&nbsp;2000-compatible applications and existing Win32-based applications</LI>

	<LI>API-level compatibility between the Microsoft Win64™ API and the Win32® API. </LI>

	<LI>Scalability of virtual memory up to 16 terabytes (TB)</LI>

	<LI>Interoperability with systems based on existing 32-bit architectures</LI>
</UL>

<H3>Benefiting from 64-bit Architecture</H3>

<P>A 64-bit operating system supports far more virtual memory than a 32-bit operating system. For example, 32-bit Windows&nbsp;XP supports 4 GB of virtual memory, while 64-bit Windows supports 16 TB of virtual memory. Nonpaged pool increases substantially, up to 128&nbsp;GB for the 64-bit platform compared to 256 MB maximum for the 32-bit platform. With these new higher limits, the scalability that the 64-bit platform offers is enormous in terms of terminal server clients, page pools, network connections, and so on.

<UL>
	<LI>Each application can support more users. All or part of each application must be replicated for each user, which requires additional memory. </LI>

	<LI>Each application has access to larger amounts of memory, which can increase performance in some scenarios. </LI>

	<LI>Each application has more memory for data storage and manipulation. Databases can store more of their data in the physical memory of the system. Data access is faster because disk reads are not necessary. </LI>

	<LI>Applications can manipulate large amounts of data easily and more reliably. Video composition for motion picture work requires 64-bit Windows for this reason. Modeling for scientific and financial applications benefits greatly from memory-resident data structures that are not possible on 32-bit versions of Windows. </LI>
</UL>

<P>There are also important benefits for businesses: 

<UL>
	<LI><B>Increased productivity</B>. Knowledge workers can spend their time thinking and producing, rather than waiting for the software to finish its tasks. </LI>

	<LI><B>Lower cost of ownership</B>. Each server can support larger numbers of users and applications, so your business will require fewer servers. This translates directly into less management overhead—one of the highest costs in any computing environment. </LI>

	<LI><B>New application opportunities</B>. New applications can be designed without the barriers imposed by 32-bit Windows. Data-intensive tasks that are impossible today can be done with 64-bit Windows.</LI>
</UL>

<H3>Designing for 64-Bit Compatible Interfaces</H3>

<P>Porting drivers or software created for 32-bit Windows to 64-bit Windows should not create any problems for distributed applications, whether they use Remote Procedure Calls (RPC) or DCOM. The RPC programming model specifies well-defined data sizes and integer types that are the same size on each end of the connection. In addition, in the LLP64 abstract data model developed for 64-bit Windows, only the pointers expand to 64 bits—all other integer data types remain 32 bit. Because pointers are local to each side of the client/server connection and are usually transmitted as NULL or non-NULL markers, the marshaling engine can handle different pointer sizes on either end of a connection transparently.</P>

<P>However, backward compatibility issues arise when you add new data types or methods to an interface, change old data types, or use data types inappropriately.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Windows%20XP%20Support%20for%20Itanium-based%20Systems"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
