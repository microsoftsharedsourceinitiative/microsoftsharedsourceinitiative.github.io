<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SaDeviceIoctl</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SaDeviceIoctl">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_device_control_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_defining_i_o_control_codes_kg">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_irp_mj_device_control_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Server&nbsp;Appliance&nbsp;High&nbsp;Availability&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_sadeviceioctl_sa"></A><I>SaDeviceIoctl</I></H1>

<P>The <I>SaDeviceIoctl</I> function is a required function that performs an operation as directed by the given function code.</P>

<PRE class=syntax><B>NTSTATUS
  SaDeviceIoctl(
    IN PVOID </B><I>DeviceExtension,<B>
    </B></I><B>IN PIRP </B><I>Irp,
    </I><B>IN PVOID  </B><I>FsContext,
    </I><B>IN ULONG  </B><I>FunctionCode,</I><B>
</B><I>    </I><B>IN PVOID  </B><I>InputBuffer,
    </I><B>IN ULONG  </B><I>InputBufferLength,</I><B>
</B><I>    </I><B>IN OUT PVOID  </B><I>OutputBuffer,
    </I><B>IN ULONG  </B><I>OutputBufferLength,</I><B>
<I>    </I>);</B></PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DeviceExtension</I></DT>

<DD>Pointer to a driver-allocated area in which the miniport driver maintains the state of the device. The <A HREF="samini_55pd.htm"><I>SaHwInitialize</I></A> function sets up this area.</DD>

<DT><I>Irp</I></DT>

<DD>Specifies the IRP that contains the <A HREF="JavaScript:hhobj_1.Click()">IRP_MJ_DEVICE_CONTROL</A> request being handled.</DD>

<DT><I>FsContext</I></DT>

<DD>Pointer to a file-system context area for a handle to the file object that represents the SA device object.</DD>

<DT><I>FunctionCode</I></DT>

<DD>Specifies the function code that directs the miniport driver to perform a specific operation. I/O control (IOCTL) codes are derived from these function codes (see the Comments section). Applications use these IOCTL codes to control SA devices. The following table lists possible function codes and their corresponding I/O control codes. 

<TABLE>

<TR VALIGN="top">
<TH align=left width=48%>Function code</TH>
<TH align=left width=52%>I/O control code</TH>
</TR>

<TR VALIGN="top">
<TD width=48%>FUNC_SA_GET_VERSION</TD>
<TD width=52%><A HREF="saioctl_96ld.htm">IOCTL_SA_GET_VERSION</A></TD>
</TR>

<TR VALIGN="top">
<TD width=48%>FUNC_SA_GET_CAPABILITIES</TD>
<TD width=52%><A HREF="saioctl_5ndt.htm">IOCTL_SA_GET_CAPABILITIES</A></TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>InputBuffer</I></DT>

<DD>Pointer to a buffer that contains the data required to perform the operation. <BR>
If <I>FunctionCode</I> specifies an operation that does not require input data, <I>InputBuffer</I> can be NULL.</DD>

<DT><I>InputBufferLength</I></DT>

<DD>Specifies the size, in bytes, of the data at <I>InputBuffer</I>.</DD>

<DT><I>OutputBuffer</I></DT>

<DD>Pointer to a buffer that receives the operation's output data. <BR>
If <I>FunctionCode</I> specifies an operation that does not produce output data, <I>OutputBuffer</I> can be NULL.</DD>

<DT><I>OutputBufferLength</I></DT>

<DD>Specifies the size, in bytes, of the data at <I>OutputBuffer</I>.
</DD>
</DL>

<H4>Return Value</H4>

<P><I>SaDeviceIoctl</I> returns STATUS_SUCCESS on success; otherwise, it returns one of the error status values defined in <I>ntstatus.h</I>. <BR>
If the <I>FunctionCode</I> parameter specifies an operation that is not supported, <I>SaDeviceIoctl</I> returns STATUS_NOT_SUPPORTED.</P>

<H4>Headers</H4>

<P>The prototype for <I>SaDeviceIoctl</I> is declared in <I>saport.h</I> as (*PSA_DEVICE_IOCTL). Include <I>saport.h.</I></P>

<H4>Comments</H4>

<P>When the SA port driver receives an SA IOCTL code for servicing, the port driver must pass the IOCTL code's corresponding function code in a call to the SA miniport driver's <I>SaDeviceIoctl</I> function. The SA port driver defines SA IOCTL codes from function codes using the following macro:</P>

<PRE>#define SA_IOCTL(FUNC_CODE)  
                          CTL_CODE(FILE_DEVICE_SERVER_AVAILABILITY, 
                                   FUNC_CODE, 
                                   METHOD_OUT_DIRECT, 
                                   FILE_ANY_ACCESS)
</PRE>

<P>For more information on defining IOCTL codes from function codes, see <A HREF="JavaScript:hhobj_2.Click()">Defining I/O Control Codes</A>.</P>

<P>The <I>SaDeviceIoctl</I> function runs at IRQL &lt;= DISPATCH_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="samini_55pd.htm"><I>SaHwInitialize</I></A>, <A HREF="JavaScript:hhobj_3.Click()">IRP_MJ_DEVICE_CONTROL</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SaDeviceIoctl"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
