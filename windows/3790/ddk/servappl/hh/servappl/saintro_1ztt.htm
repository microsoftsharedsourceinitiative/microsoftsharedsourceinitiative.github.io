<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>NVRAM Miniport Driver</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="NVRAM Miniport Driver">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Server&nbsp;Appliance&nbsp;High&nbsp;Availability&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_nvram_miniport_driver_sa"></A>NVRAM Miniport Driver</H1>

<P>The miniport driver for an <A HREF="saintro_2n4x.htm">NVRAM</A> device provides a standard interface for user-mode components in the operating system and the device. The main purpose of the driver is to control values of boot counters that are stored in the NVRAM device. The driver either retrieves the counter value to determine whether a fail over to an alternate operating system occurred or specifies a counter value to force a fail over to occur on a subsequent boot. </P>

<P>The driver also writes system status to, and reads system status from, the NVRAM device across reboots of the operating system. In this way, the operating system can determine whether a previous shutdown was requested or was caused by a failure. The driver never takes action on its own; it only responds to application requests.</P>

<P>The NVRAM miniport driver provides a callback interface to the system-supplied SA port driver and uses the port driver's services. The miniport driver controls low-level communication with the NVRAM device. For more information on the standard architecture for all SA drivers, see <A HREF="saintro_2s2p.htm">Server Availability Driver Architecture</A>. </P>

<P>If the operating system boot loader detects an NVRAM device, the loader loads the NVRAM miniport driver along with the SA port driver. </P>

<P>The following implementation details apply to the NVRAM miniport driver:</P>

<P class=indent1><A HREF="saintro_10dd.htm">Callback Functions Supplied by the NVRAM Miniport Driver</A></P>

<P class=indent1><A HREF="saintro_96ld.htm">Initializing the NVRAM Miniport Driver</A></P>

<P class=indent1><A HREF="saintro_1k0x.htm">Creating the Device Extension for the NVRAM Device</A></P>

<P class=indent1><A HREF="saintro_40ip.htm">Initializing the NVRAM Device</A></P>

<P class=indent1><A HREF="saintro_1pk1.htm">Reporting NVRAM Capabilities</A></P>

<P class=indent1><A HREF="saintro_1qn5.htm">Reading from and Writing to an NVRAM Boot Counter</A></P>

<P class=indent1><A HREF="saintro_31up.htm">Writing Server Status to the NVRAM Device</A></P>

<P class=indent1><A HREF="saintro_363l.htm">Reading Server Status from the NVRAM Device</A></P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: NVRAM%20Miniport%20Driver"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
