<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DriverEntry of SA Miniport Drivers</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DriverEntry of SA Miniport Drivers">
</HEAD>
<BODY TOPMARGIN="0">
<DIV STYLE="display:none;">
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_driver_object_kr">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink,MENU">
	<PARAM NAME="DefaultTopic" VALUE="../notopic_0pk4.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="ddk_unicode_string_kr">
</OBJECT>
</DIV>


<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Server&nbsp;Appliance&nbsp;High&nbsp;Availability&nbsp;Devices:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_driverentry_of_sa_miniport_drivers_sa"></A>DriverEntry of SA Miniport Drivers</H1>

<P>The <B>DriverEntry</B> function is required and is the first function that the system calls in any SA miniport driver. </P>

<PRE class=syntax><B>NTSTATUS</B>
  <B>DriverEntry(</B>
<B>    IN PDRIVER_OBJECT </B><I>DriverObject</I><B>,</B>
<B>    IN PUNICODE_STRING </B><I>RegistryPath</I><B>,</B>
    <B>);</B> </PRE>

<H4>Parameters</H4>

<DL>
<DT><I>DriverObject</I></DT>

<DD>Pointer to a <A HREF="JavaScript:hhobj_1.Click()">DRIVER_OBJECT</A> structure for the SA device driver. This driver object is partially opaque to the SA miniport driver. </DD>

<DT><I>RegistryPath</I></DT>

<DD>Pointer to a <A HREF="JavaScript:hhobj_2.Click()">UNICODE_STRING</A> structure that describes a string of 16-bit characters. This string specifies the <B>\Registry\Machine\System\CurrentControlSet\Services\</B><I>DriverName</I> key, where the value entry of <I>DriverName</I> identifies the driver. 
</DD>
</DL>

<H4>Return Value</H4>

<P><B>DriverEntry</B> returns STATUS_SUCCESS on success; otherwise, it returns one of the error status values defined in <I>ntstatus.h</I>. These error status values are returned by calls to the <A HREF="saport_03a9.htm"><B>SAPortInitialize</B></A> function.</P>

<H4>Headers</H4>

<P>The prototype for <B>DriverEntry</B> must be declared in a header file for the miniport driver. </P>

<H4>Comments</H4>

<P>An SA miniport driver carries out two basic tasks in its <B>DriverEntry</B> function: 

<OL>
	<LI>Fills in an <A HREF="sastruct_9t7l.htm">SAPORT_INITIALIZATION_DATA</A> structure with the appropriate device type and the entry points for driver-supplied functions. </LI>

	<LI>Calls the <B>SaPortInitialize</B> function to provide the SA port driver with this device type and these entry points. </LI>
</OL>

<P>The miniport driver can specify its device type (<B>DeviceType</B> member of SAPORT_INITIALIZATION_DATA) as one of the following constants, which are defined in the <I>saio.h</I> header file:

<UL>
	<LI>SA_DEVICE_DISPLAY</LI>

	<LI>SA_DEVICE_KEYPAD</LI>

	<LI>SA_DEVICE_NVRAM</LI>
</UL>

<P><B>DriverEntry</B> can allocate the SAPORT_INITIALIZATION_DATA structure on the stack because the SA port driver copies the relevant information to its own storage. <B>DriverEntry</B> should clear the memory for this structure before setting any driver-supplied values in its members. In each driver-supplied-function member of the SAPORT_INITIALIZATION_DATA structure, <B>DriverEntry</B> must set the name of a driver-supplied function, or the member must be NULL. </P>

<P>When the miniport driver calls <A HREF="saport_03a9.htm"><B>SaPortInitialize</B></A>, it must be prepared for an immediate call to its <A HREF="samini_55pd.htm"><I>SaHWInitialize</I></A> function because the SA port driver calls <I>SaHwInitialize</I> in the context of <B>SaPortInitialize</B>. </P>

<P>If <B>SaPortInitialize</B> does not return a successful status, <B>DriverEntry</B> must release any resources it allocated. The driver will not be loaded if this occurs. </P>

<P><B>DriverEntry</B> runs at IRQL = PASSIVE_LEVEL. </P>

<H4>See Also</H4>

<P><A HREF="samini_55pd.htm"><I>SaHWInitialize</I></A>, <A HREF="saport_03a9.htm"><B>SaPortInitialize</B></A>, <A HREF="sastruct_9t7l.htm">SAPORT_INITIALIZATION_DATA</A> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DriverEntry%20of%20SA%20Miniport%20Drivers"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
