<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Canceling Events</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_1168"></A>Canceling Events</H3>

<P>Services whose names are of the form Cancel_XX_Event must be used only to cancel events scheduled by the corresponding Schedule_XX_Event or Call_XX_Event service. It is an error to pass (for example) a thread event handle to Cancel_VM_Event. </P>

<P>Services which cancel events also allow zero to be passed as the event handle, which is simply ignored. The standard paradigm for scheduling, processing, and canceling events is as follows: </P>

<P>Scheduling the event: </P>

<PRE>mov         esi, OFFSET32 MyEvent
VMMCall Schedule_Global_Event
mov     hMyEvent, esi            ; Save handle for cancellation
 </PRE>

<P>Processing the event: </P>

<PRE>BeginProc MyEvent
mov     hMyEvent, 0   ; VERY FIRST THING is
                      ; to zero out the handle
;   .
;   .                   Do other event stuff
;   .
ret                   ; Finished with the event
EndProc MyEvent
 </PRE>

<P>Canceling the event: </P>

<PRE>xor      esi, esi             ; Atomically set hMyEvent to 0
xchg     hMyEvent, esi        ; and retrieve previous value
VMMCall  Cancel_Global_Event  ; Cancel if still outstanding
 </PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Canceling%20Events"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
