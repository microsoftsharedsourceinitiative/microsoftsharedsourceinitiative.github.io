<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SendASPI32Command Function</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4125"></A>SendASPI32Command Function</H3>

<P>Prototype: DWORD SendASPI32Command(LPSRB) </P>

<P>Declaration: LPSRB lpSRB; </P>

<P>The SendASPI32Command function handles all SCSI I/O requests. A command code is used to specify the type of I/O requested. SendASPI32Command is called with a pointer to a SCSI Request Block (SRB) structure. While SRB definition can vary depending on the ASPI command code, all SRBs include a standard SRB header: </P>

<PRE>typedef struct {

 BYTE  SRB_Cmd;      // ASPI command code
 BYTE  SRB_Status;   // ASPI command status byte
 BYTE  SRB_HaId;     // ASPI host adapter number
 BYTE  SRB_Flags;    // ASPI request flags
 DWORD SRB_Hdr_Rsvd; // Reserved, MUST = zero

} SRB_Header;
</PRE>

<P>The SRB_Cmd field must contain the command code for the desired SCSI I/O operation. Each of these commands is described in the following sections. Possible values for SRB_Cmd include the following: </P>

<PRE>SC_HA_INQUIRY
SC_GET_DEV_TYPE
SC_EXEC_SCSI_CMD
SC_ABORT_SRB
SC_RESET_DEV
SC_GET_DISK_INFO
</PRE>

<P>The SC_GET_DISK_INFO command is not used with Windows NT/Windows 2000. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SendASPI32Command%20Function"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
