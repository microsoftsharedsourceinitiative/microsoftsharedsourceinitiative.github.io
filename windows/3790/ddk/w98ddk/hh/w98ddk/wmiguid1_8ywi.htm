<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WNODE_HEADER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_wmiguid1_wnode_header"></A>WNODE_HEADER</H1>

<PRE>typedef struct _WNODE_HEADER {
    ULONG BufferSize;     // Size of entire buffer inclusive of this ULONG
    ULONG ProviderId;     // Provider ID of driver returning this buffer
    ULONG Reserved1; Union {
        ULONG Linkage;           // Linkage field reserved for WMI
        ULONG HistoricalContext; // Logger use
    };
    LARGE_INTEGER TimeStamp; // Timestamp as returned in units of 100ns since 1/1/1601
    GUID Guid;               // Guid for data block returned with results
    ULONG Reserved;
    ULONG Flags;             // Flags, see below
} WNODE_HEADER, *PWNODE_HEADER;

// WNODE_HEADER flags are defined as follows:
#define WNODE_FLAG_ALL_DATA        0x00000001 // set for WNODE_ALL_DATA
#define WNODE_FLAG_SINGLE_INSTANCE 0x00000002 // set for WNODE_SINGLE_INSTANCE
#define WNODE_FLAG_SINGLE_ITEM     0x00000004 // set for WNODE_SINGLE_ITEM
#define WNODE_FLAG_EVENT_ITEM      0x00000008 // set for WNODE_EVENT_ITEM

// set if data block size is identical for all instances
// (used with  WNODE_ALL_DATA only)
#define WNODE_FLAG_FIXED_INSTANCE_SIZE   0x00000010

#define WNODE_FLAG_TOO_SMALL           0x00000020 // set for WNODE_TOO_SMALL

// Set when a data provider returns a WNODE_ALL_DATA in which the number of
// instances and their names returned are identical to those returned from the
// previous WNODE_ALL_DATA query. Only data blocks registered with dynamic instance
// names should use this flag.
#define WNODE_FLAG_INSTANCES_SAME  0x00000040

// Instance names are not specified in WNODE_; values specified at
// registration are used instead. Always set for guids registered with static
// instance names
#define WNODE_FLAG_STATIC_INSTANCE_NAMES   0x00000080

#define WNODE_FLAG_INTERNAL      0x00000100  // Used internally by WMI

// timestamp should not be modified by a historical logger
#define WNODE_FLAG_USE_TIMESTAMP 0x00000200

#define WNODE_FLAG_EVENT_REFERENCE 0x00002000

// Set if Instance names are ansi. Only set when returning from
// WMIQuerySingleInstanceA and WMIQueryAllDataA
#define WNODE_FLAG_ANSI_INSTANCENAMES 0x00004000

// Set if WNODE is a method call
#define WNODE_FLAG_METHOD_ITEM     0x00008000

// Set if instance names originated from a PDO
#define WNODE_FLAG_PDO_INSTANCE_NAMES  0x00010000

// The second byte, except the first bit is used exclusively for tracing
#define WNODE_FLAG_TRACED_GUID   0x00020000   // denotes a trace

#define WNODE_FLAG_LOG_WNODE     0x00040000   // request to log Wnode

// Set for events that are WNODE_EVENT_REFERENCE
// Mask for event severity level. Level 0xff is the most severe type of event
#define WNODE_FLAG_SEVERITY_MASK   0xff000000
</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: WNODE_HEADER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
