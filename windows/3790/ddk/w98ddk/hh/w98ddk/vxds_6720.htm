<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reference</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_4748"></A>Reference</H2>

<P>This section is an alphabetical list of the real-mode initialization services. </P>



<H4><A NAME="_pss_4749"></A>LDRSRV_COPY_EXTENDED_MEMORY</H4>

<PRE>mov   ax, 0006h             ; Copy_Extended_Memory
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
 </PRE>

<P>Allocates a block of extended memory in the specified data group (init, locked, or pageable) to the size requested and initializes the block with the given data. 

<UL>
	<LI>If the carry flag is clear, EAX contains the linear address of the memory block. Otherwise, the allocation failed and no memory block is allocated </LI>
</UL>

<DL>
<DT>AX </DT>

<DD>Must be 0006h. </DD>

<DT>CX </DT>

<DD>Number of bytes to allocate. Actual size is rounded up to the nearest DWORD. </DD>

<DT>DX </DT>

<DD>Type of data being allocated. Can be one of these values. 

<TABLE>

<TR VALIGN="top">
<TD width=45%>LDRSRV_COPY_INIT </TD>
<TD width=55%>INIT data </TD>
</TR>

<TR VALIGN="top">
<TD width=45%>LDRSRV_COPY_LOCKED </TD>
<TD width=55%>LOCKED data </TD>
</TR>

<TR VALIGN="top">
<TD width=45%>LDRSRV_COPY_PAGEABLE </TD>
<TD width=55%>PAGEABLE data </TD>
</TR>
</TABLE><BR>

</DD>

<DT>DS:SI </DT>

<DD>Address of data to be copied. 
</DD>
</DL>

<P>This service provides a way for VxDs to pass data to their protected-mode portions. The VxD creates a block of extended memory and passes its linear address through the VxD reference DWORD (that is, the value of EDX on exit from real-mode initialization). Multiple blocks allocated by a single VxD are guaranteed to be contiguous in linear address space, but not necessarily in physical address space. PAGEABLE data may actually be allocated as LOCKED data, at the loader's discretion. Initialization (INIT) data is always locked, and is discarded after all VxD initialization phases are completed. </P>



<H4><A NAME="_pss_4750"></A>LDRSRV_GET_MEMORY_INFO</H4>

<PRE>mov   ax, 0007h                  ; Get_Memory_Info
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
 </PRE>

<P>Retrieves information about computer memory. </P>



<H4><A NAME="_pss_4751"></A>LDRSRV_GET_NEXT_PROFILE_STRING</H4>

<PRE>mov    ax, 0001h         ; Get_Next_Profile_String
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
 </PRE>

<P>Retrieves the address of a null-terminated string representing the next value for a specified setting in the SYSTEM.INI file. This service is used by virtual devices that have multiple entries with the same setting name. Uses EAX, EDX, ES, Flags. 

<UL>
	<LI>If the carry flag is clear, the ES:DX register pair contains the address of a null-terminated string representing the next value of the requested setting. Otherwise, the ES:DX contents are undefined, and no more matching entries are found. </LI>
</UL>

<DL>
<DT>AX </DT>

<DD>Must be 0001h. </DD>

<DT>DS:DI </DT>

<DD>Points to a null-terminated string specifying the name of the setting to search for. </DD>

<DT>ES:DX </DT>

<DD>Contains an address that was previously retrieved using the <B>Get_Profile_String</B> or <B>Get_Next_Profile_String</B> service. 
</DD>
</DL>



<H4><A NAME="_pss_4752"></A>LDRSRV_GET_PROFILE_BOOLEAN</H4>

<PRE>mov    ax, 0003h         ; Get_Profile_Boolean
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
 </PRE>

<P>Returns a Boolean value from the SYSTEM.INI file. Uses ECX, Flags. 

<UL>
	<LI>If the carry flag is clear, the ECX register contains either 0FFFFFFFFh or 0h depending on the value of the setting as follows. </LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TH align=left width=23%>Setting </TH>
<TH align=left width=77%>Value </TH>
</TR>

<TR VALIGN="top">
<TD width=23%>0 </TD>
<TD width=77%>0h </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>1 </TD>
<TD width=77%>0FFFFFFFFh </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>False </TD>
<TD width=77%>0h </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>No </TD>
<TD width=77%>0h </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>Off </TD>
<TD width=77%>0h </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>On </TD>
<TD width=77%>0FFFFFFFFh </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>True </TD>
<TD width=77%>0FFFFFFFFh </TD>
</TR>

<TR VALIGN="top">
<TD width=23%>Yes </TD>
<TD width=77%>0FFFFFFFFh </TD>
</TR>
</TABLE><BR>

<P class=indent1>If both the carry and zero flags are set, the setting has no current value and ECX contains the default value. If just the carry flag is set, the specified setting cannot be found. </P>

<DL>
<DT>AX </DT>

<DD>Must be 0003h. </DD>

<DT>ECX </DT>

<DD>Specifies the default value if the setting has no current value. The default value must be either 0FFFFFFFFh or 0h. </DD>

<DT>DS:SI </DT>

<DD>Points to a null-terminated string specifying the name of the section to search. If the SI register is zero, the service searches the [386Enh] section. </DD>

<DT>DS:DI </DT>

<DD>Points to a null-terminated string specifying the name of the setting to search for. 
</DD>
</DL>



<H4><A NAME="_pss_4753"></A>LDRSRV_GET_PROFILE_DECIMAL_INT</H4>

<PRE>mov    ax, 0004h         ; Get_Profile_Decimal_Int
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
 </PRE>

<P>Returns a decimal integer value from the SYSTEM.INI file. Uses ECX, Flags. 

<UL>
	<LI>If the carry flag is clear, the ECX register contains the value of the specified setting. In the SYSTEM.INI file, the value can optionally begin with a plus (+) or minus (-) sign, but must contain all decimal digits with no embedded spaces or decimal points. 
<P>If both the carry and zero flags are set, the setting has no current value and ECX contains the default value. If just the carry flag is set, the specified setting cannot be found. 
</LI>
</UL>

<DL>
<DT>AX </DT>

<DD>Must be 0004h. </DD>

<DT>ECX </DT>

<DD>Specifies the default value if the setting has no current value. </DD>

<DT>DS:SI </DT>

<DD>Points to a null-terminated string specifying the name of the section to search. If the SI register is zero, the service searches the [386Enh] section. </DD>

<DT>DS:DI </DT>

<DD>Points to a null-terminated string specifying the name of the setting to search for. 
</DD>
</DL>



<H4><A NAME="_pss_4754"></A>LDRSRV_GET_PROFILE_HEX_INT</H4>

<PRE>mov    ax, 0005h         ; Get_Profile_Hex_Int
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
 </PRE>

<P>Returns a hexadecimal integer value from the SYSTEM.INI file. Uses ECX, Flags. 

<UL>
	<LI>If the carry flag is clear, the ECX register contains the value of the specified setting. In the SYSTEM.INI file, the value is zero or more hexadecimal digits (0–9, A-F) followed by a terminating character or an uppercase or lowercase letter H. 
<P>If both the carry and zero flags are set, the setting has no current value, and the ECX register contains the default value. If just the carry flag is set, the specified setting cannot be found. 
</LI>
</UL>

<DL>
<DT>AX </DT>

<DD>Must be 0005h. </DD>

<DT>ECX </DT>

<DD>Specifies the default value if the setting has no current value. </DD>

<DT>DS:SI </DT>

<DD>Points to a null-terminated string specifying the name of the section to search. If the SI register is zero, the service searches the [386Enh] section. </DD>

<DT>DS:DI </DT>

<DD>Points to a null-terminated string specifying the name of the setting to search for. 
</DD>
</DL>



<H4><A NAME="_pss_4755"></A>LDRSRV_GET_PROFILE_STRING</H4>

<PRE>mov    ax, 0000h         ; Get_Profile_String
call  dword ptr [_ServiceEntry]  ; service entry point passed to
                                 ; real-mode initialization procedure
</PRE>

<P>Searches the SYSTEM.INI file for the specified entry, and returns a pointer to a string. Uses EAX, EDX, ES, Flags. 

<UL>
	<LI>If the carry flag is clear, the ES:DX register pair contains the address of a null-terminated string representing the value of the requested setting. Otherwise, the register pair points to the default string. </LI>
</UL>

<DL>
<DT>AX </DT>

<DD>Must be 0000h. </DD>

<DT>DS:SI </DT>

<DD>Points to a null-terminated string specifying the name of the section to search. If the SI register is zero, the service searches the [386Enh] section of the SYSTEM.INI file. </DD>

<DT>DS:DI </DT>

<DD>Points to a null-terminated string specifying the name of the setting to search for. </DD>

<DT>ES:DX </DT>

<DD>Points to null-terminated string specifying the default value if the requested setting is not found. 
</DD>
</DL>

<P>The real-mode initialization procedure must not modify the returned string. The address returned points to the initialization file data area and is read only. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Reference"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
