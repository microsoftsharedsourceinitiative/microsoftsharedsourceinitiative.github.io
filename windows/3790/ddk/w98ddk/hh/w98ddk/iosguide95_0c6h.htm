<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Additional debugging techniques</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Additional debugging techniques">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_additional_debugging_techniques_si"></A>Additional debugging techniques</H2>

<P>The following techniques may be useful when developing an IOS component:

<UL>
	<LI>If you are having problems with your miniport being loaded, or to check for import problems (for example, see Knowledge Base article Q160667, "Miniport Driver Fails Using Certain ScsiPort APIs"), you can copy the debug binary file VXDLDR.VXD into the \system\vmm32<B>\</B> path, and restart the debugger. Errors will appear in the debug monitor window.</LI>

	<LI>You can start up Windows 95 in “Logged” mode (touch the F8 key just as Windows 95 starts, then select “Logged” mode from the Startup Menu). After the system has booted up, inspect \BOOTLOG.TXT to confirm that your miniport and associated VxDs are getting loaded. </LI>

	<LI>Using the debugger, set a breakpoint at the miniport’s <B>DriverEntry</B> to confirm that the driver is getting the initial Inquiry command.</LI>

	<LI>When an IOS device driver fails to load, information about that failure can frequently be found in a file named IOS.LOG. If this file exists on your system, check its contents.</LI>

	<LI>The file IOS.INI contains two sections; the “safe” driver list ([SafeList]) and the “CD-ROM unsafe” driver list ([CDUnsafe]). The [SafeList] section contains a list of real-mode drivers that can safely be bypassed by their 32-bit protected-mode counterparts. The [CDUnsafe] section contains a list of real-mode CD-ROM drivers that cannot be safely bypassed by their 32-bit protected-mode counterparts. If the real-mode driver is not listed in [SafeList] then your protected-mode SCSI miniport driver will not run. 
<P>See also Knowledge Base Article Q130179, “Troubleshooting MS-DOS Compatibility Mode on Hard Disks.”
</LI>

	<LI>Use the Multimon utility located in Stan Mitchell’s book, <I>Inside the Windows 95 File System</I>, as a probing and diagnostic tool to observe IFSMGR traffic, as well as INT21 and other traffic.</LI>

	<LI>If using IFSMGR_Ring0FileIO, use GetVxDServiceOrdinal / VMMCall Hook_Device_Service to monitor the users of IFSMGR_Ring0FileIO. The DDK has documentation and samples that show how to hook a VxD's service. This can help you determine if your problems are caused by multiple users of this service.</LI>

	<LI>Install the DEBUGCMD driver in order to use the .p? commands. These commands allow you to view threads, and so on. This is helpful when debugging blocking. Use of this VxD is further discussed in the latest version of our WDEB386 documentation, found in the Windows 98 DDK documentation, or as a Word document, available through Knowledge Base article Q181302. DEBUGCMD also works with the Soft-Ice kernel-mode debugger.</LI>

	<LI>You can use DebugPrint statements inside Windows 95 miniport drivers. Viewing DebugPrint messages from a SCSI miniport under Windows 95 requires the installation of the debug version of VMM.VXD, IOS.VXD, and SCSIPORT.PDR. Once you have installed the debug DDK components, you should see your DebugPrint statements when you run a Windows system debugger (either WDEB386, or SoftIce/W).</LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Additional%20debugging%20techniques"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
