<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>System State Monitor</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="System State Monitor">
<META NAME="MS-HKWD" CONTENT="SSM">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_system_state_monitor_me"></A>System State Monitor</H1>

<P>System State Monitor (SSM) is a ring 3 memory analysis tool used to aid in tracking down ring 3 or user-mode memory leaks. </P>

<P>System State Monitor uses:

<UL>
	<LI>KERNEL Tool helper library functions to query 32 bit process memory usage</LI>

	<LI>Windows® 3.1 TOOLHELP.DLL library functions to monitor 16 bit tasks and their respective memory usage</LI>

	<LI>LEAKINFO API set for querying the system objects delivered from USER.EXE and GDI.EXE</LI>
</UL>

<P>This is a complete list of objects and the associated applications (if this applies) that generated the object. For example, Window Handles and List Box item (USER), and DC objects and Bitmaps (GDI) among a few of the items we get. </P>

<P>SSM does not have any analysis functions built in. The next major version of this tool will incorporate the most obvious of these, and the possibility of allowing for single app or filtered app monitoring and analysis. The tool is designed as a method for monitoring events over a period of time such that we can go back through any log files and get an idea of how much memory was consumed, who consumed the memory, or, at a minimum, a projection of the application(s) that are consuming the memory. </P>

<P>The tool can be best thought of as an enhanced version of resource meter. It has almost all of the resource monitoring tools wrapped into a single executable so that there is a single application that may be invoked to help identify resource leaks. The main functionality was to have Heap Walk (32 bit) and Heap Walk (16 bit) in one application and to make use of the LEAKINFO API set in the same single application. </P>

<P>This section includes:

<UL>
	<LI><A HREF="ssm_47xh.htm">Using SSM</A></LI>

	<LI><A HREF="ssm_39gl.htm">SSM Command-Line Options</A></LI>

	<LI><A HREF="ssm_1up1.htm">SSM Log Files</A></LI>
</UL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: System%20State%20Monitor"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
