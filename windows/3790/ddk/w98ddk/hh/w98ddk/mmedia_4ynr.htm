<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Compressing the Video</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_2777"></A>Compressing the Video</H3>

<P>The client-application sends ICM_COMPRESS for each frame it wants compressed. It uses <I>dwParam1</I> to point to an ICCOMPRESS structure containing the parameters used for compression. Your driver uses the buffers pointed to by the members of ICCOMPRESS for returning information about the compressed data. </P>

<P>Your driver returns the actual size of the compressed data in the <B>biSizeImage</B> member in the BITMAPINFOHEADER data structure pointed to by the <B>lpbiOutput</B> member of ICCOMPRESS. </P>

<P>The format of the input data is specified in a BITMAPINFOHEADER structure pointed to by the <B>lpbiInput</B> member of ICDECOMPRESS. The input data is in a buffer specified by the <B>lpInput</B> member. The <B>lpbiOutput</B> and <B>lpOutput</B> members contain pointers to the format data and buffer used for the output data. Your driver must indicate the size of the compressed video data in the <B>biSizeImage</B> member in the BITMAPINFO structure specified for <B>lpbiOutput</B>. </P>

<P>The <B>dwFlags</B> member specifies flags used for compression. The client-application sets ICM_COMPRESS_KEYFRAME flag if the input data should be treated as a key frame. (A key frame is one that does not require data from a previous frame for decompression.) When this flag is set, your driver should treat the image as the initial image in a sequence. </P>

<P>The <B>lpckid</B> member specifies a pointer to a buffer used to return the chunk ID for data in the AVI file. Your driver should assign a two-character code for the chunk ID only if it uses a custom chunk ID. </P>

<P>The <B>lpdwFlags</B> member specifies a pointer to a buffer used to return flags for the AVI index. The client-application will add the returned flags to the file index for this chunk. If the compressed frame is a key frame (a frame that does not require a previous frame for decompression), your driver should set the AVIIF_KEYFRAME flag in this member. Your driver can define its own flags but they must be set in the high word only. </P>

<P>The <B>lFrameNum</B> member specifies the frame number of the frame to compress. If your driver is performing fast temporal compression, check this member to see if frames are being sent out of order or if the client-application is having a frame recompressed. </P>

<P>The <B>dwFrameSize</B> member indicates the maximum size (in bytes) desired for the compressed frame. If it specifies zero, your driver determines the size of the compressed image. If it is nonzero, your driver should try to compress the frame to within the specified size. This might require your driver to sacrifice image quality (or make some other trade-off) to obtain the size goal. Your driver should support this if it sets the VIDCF_CRUNCH flag when it responds to the ICM_GETINFO message. </P>

<P>The <B>dwQuality</B> member specifies the compression quality. Your driver should support this if it sets the VIDCF_QUALITY flag when it responds to the ICM_GETINFO message. </P>

<P>The format of the previous data is specified in a BITMAPINFOHEADER structure pointed to by <B>lpbiPrev</B>. The input data is in a buffer specified by <B>lpPrev</B>. Your driver will use this information if it performs temporal compression (that is, it needs the previous frame to compress the current frame). If your driver supports temporal compression, it should set the VIDCF_TEMPORAL flag when it responds to the ICM_GETINFO message. If your driver supports temporal compression and does not need the information in the <B>lpbiPrev</B> and <B>lpPrev</B> members, it should set the VIDCF_FASTTEMPORALC flag when it responds to the ICM_GETINFO message. The VIDCF_FASTEMPORALC flag can decrease the processing time because your driver does not need to access data specified in <B>lpbiPrev</B> and <B>lpPrev</B>. </P>

<P>When your driver has finished compressing the data, it returns ICERR_OK. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Compressing%20the%20Video"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
