<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Driver Writer Support</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_wmi_wp_driver_writer_support"></A>Driver Writer Support</H2>

<P>Any driver that receives IRPs  (IRP_MJ_SYSTEM_CONTROL in particular)  can be a WMI driver. Microsoft will add WMI support to the class or drivers so miniports can effectively benefit from WMI with very little extra work on the part of the miniport driver writer. Thus, the following types of drivers can have WMI code:

<UL>
	<LI>A driver that receives IRPs</LI>

	<LI>A minidriver whose class or port driver has been modified (either by Microsoft or an IHV, ISV, or OEM) to support WMI</LI>
</UL>

<P>Note that IRP_MJ_SYSTEM_CONTROL must be supported by all devices. If a device does not use WMI, it must forward the IRP. If it does use WMI, it should process the IRP.</P>

<P>In Windows&nbsp;98, the core WMI functionality exists. However, WMI support has been integrated into the NDIS class driver only. If a driver receives IRPs, then an OEM/IHV device driver writer can integrate WMI code into his or her driver in Windows&nbsp;98.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Driver%20Writer%20Support"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
