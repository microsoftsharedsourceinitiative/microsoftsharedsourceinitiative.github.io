<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MODM_OPEN</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_2441"></A>MODM_OPEN</H1>

<P>Sent to a MIDI output driver to allocate a specified device for use by a client application. 

<UL>
	<LI>The return value is an error code, or zero (MMSYSERR_NOERROR) if the operation is successful. Possible error codes are: </LI>
</UL>

<TABLE>

<TR VALIGN="top">
<TD width=34%>MMSYSERR_NOTENABLED </TD>
<TD width=66%>The driver failed to load or initialize. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MMSYSERR_ALLOCATED </TD>
<TD width=66%>The device is already allocated by the maximum number of clients the driver supports or the device cannot be opened because of system resource limitations other than memory. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MMSYSERR_NOMEM </TD>
<TD width=66%>The device cannot be opened because of a failure allocating or locking memory. </TD>
</TR>
</TABLE><BR>

<DL>
<DT>DWORD <I>dwParam1</I> </DT>

<DD>Specifies a far pointer to a <B>MIDIOPENDESC</B> structure. This structure contains additional information for the driver such as instance data from the client and a callback for the client. </DD>

<DT>DWORD <I>dwParam2</I> </DT>

<DD>Specifies option flags for opening the device. 

<TABLE>

<TR VALIGN="top">
<TD width=34%>CALLBACK_EVENT </TD>
<TD width=66%>If this flag is specified, <I>dwCallback</I> in the <B>MIDIOPENDESC</B> structure is assumed to be an event handle. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>CALLBACK_FUNCTION </TD>
<TD width=66%>If this flag is specified, <I>dwCallback</I> in the <B>MIDIOPENDESC</B> structure is assumed to be the address of a callback function. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>CALLBACK_THREAD </TD>
<TD width=66%>If this flag is specified, <I>dwCallback</I> in the <B>MIDIOPENDESC</B> structure is assumed to be a handle to a thread. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>CALLBACK_WINDOW </TD>
<TD width=66%>If this flag is specified, <I>dwCallback</I> in the <B>MIDIOPENDESC</B> structure is assumed to be a window handle. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MIDI_IO_COOKED </TD>
<TD width=66%>If this flag is specified, the device is being opened in stream mode. In stream mode, the driver may receive all Windows 3.1 messages as well as the stream messages. The device driver must be able to handle any contingencies which arise; for example, it must be able to play short messages and system exclusive messages asynchronously to the stream. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MIDI_IO_PACKED </TD>
<TD width=66%>If this flag is specified, the driver is being opened in compatibility mode. (Compatibility mode is supported for applications written for the Windows 3.1 platform). </TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<P>It is up to the driver to determine the number of clients allowed to use a particular device. Once a device is opened for the maximum number of clients the driver supports, the driver should return MMSYSERR_ALLOCATED for any additional open requests. If the open operation is successful, the driver should use the <B>DriverCallback</B> function to send the client a <B>MOM_OPEN</B> message. </P>

<H4>See Also</H4>

<P>MODM_CLOSE, MIDIOPENDESC </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MODM_OPEN"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
