<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_SHELL_PostMessage</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_2109"></A>_SHELL_PostMessage</H1>

<PRE>include shell.inc
VxDcall _SHELL_PostMessage, &lt;hwnd, uMsg, wParam, lParam, \
    &lt;OFFSET32 pfnCallback&gt;, dwRefData&gt;
or   eax, eax
jz   not_posted
 </PRE>

<P>Schedules a message for posting to the given window and optionally installs a callback procedure to be notified when the <B>PostMessage</B> function actually posts the message. Uses C calling conventions. 

<UL>
	<LI>Returns nonzero in the EAX register if successful. Otherwise, returns zero indicating an error such as insufficient memory. </LI>
</UL>

<DL>
<DT><I>hwnd</I> </DT>

<DD>Handle of a window. The upper 16 bits are reserved and must be zero. </DD>

<DT><I>uMsg</I> </DT>

<DD>Message value in the lower 16-bits. The upper 16 bits contain scheduling information and can be one of these values: 

<TABLE>

<TR VALIGN="top">
<TD width=34%>SPM_UM_DoNotWaitForCrit </TD>
<TD width=66%>Do not wait for the critical section to become free before posting the message. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>SPM_UM_AlwaysSchedule </TD>
<TD width=66%>Always schedule the postmessage event. See comments below. </TD>
</TR>
</TABLE><BR>



<P>If WM_NULL (0) is given in the lower 16 bits, the service does not post a message but does call the callback procedure indicating success. 
</DD>

<DT><I>wParam</I> </DT>

<DD>16-bit message parameter in the lower 16-bits. The upper 16 bits are reserved and must be zero. </DD>

<DT><I>lParam</I> </DT>

<DD>32-bit message parameter. </DD>

<DT><I>pfnCallback</I> </DT>

<DD>Address of the callback procedure to call when the message has been posted. This parameter can be zero if no callback is needed. For more information about the procedure, see the comments below. </DD>

<DT><I>dwRefData</I> </DT>

<DD>Reference data for the callback procedure. 
</DD>
</DL>

<P>The system calls the callback procedure when the <B>PostMessage</B> function successfully posts the message into the queue of the given window. The system calls the procedure using the C calling conventions as follows: </P>

<PRE>cCall [pfnCallback], &lt;dwRc, dwRefData&gt;
 </PRE>

<P>The <I>dwRefData</I> parameter is the same value as passed to <B>_SHELL_PostMessage</B>. The <I>dwRc</I> parameter is the value returned by the <B>PostMessage</B> function. If this parameter is nonzero, the message was posted; otherwise, it was not posted. </P>

<P>When the callback procedure receives control, the system VM has been boosted by High_Pri_Device_Boost. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _SHELL_PostMessage"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
