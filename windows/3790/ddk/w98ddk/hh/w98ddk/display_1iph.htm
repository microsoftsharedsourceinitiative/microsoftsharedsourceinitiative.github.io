<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ENABLE_TRAPS (Function 13)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_655"></A>ENABLE_TRAPS (Function 13)</H3>

<H4>Call With</H4>

<P>Undefined. </P>

<H4>Return Values</H4>

<P>Save anything that you use. </P>

<H4>Remarks</H4>

<P><B>ENABLE_TRAPS</B> and <B>DISABLE_TRAPS</B> gives the mini-VDD the opportunity to enable or disable traps that it has previously setup I/O handler trapping for (see the S3 mini-VDD's Dynamic_Init routine for an example of how to setup I/O handlers for BLTer registers using <B>Install_IO_Handler</B> and <B>VDD_Register_Virtual_Port</B>). It is an empirical process to decide which ports to trap and which not to. </P>

<P>Notes on BLTer port trapping: </P>

<P>If you plan to support virtualization of 4 plane VGA modes in the background or in a window, you will need to support trapping of all the BLTer and extended register ports that your display driver might use during the course of running Windows. Note that the Main VDD does most of the work in handling the virtualization and all that the mini-VDD needs to do is to use the VDD service <B>VDD_Register_Virtual_Port</B> for each of the BLTer and extended ports that the display driver might use and then respond to <B>ENABLE_TRAPS</B> and <B>DISABLE_TRAPS</B> calls from the Main VDD. Within your <B>ENABLE_TRAPS </B>and <B>DISABLE_TRAPS</B> routines, you must call <B>Enable_Global_Trapping </B>or <B>Disable_Global_Trapping</B> once for each port. </P>

<P>The reason that 4 plane VGA virtualization requires the port trapping is because the Main VDD monitors accesses to the ports to know when to switch the hardware state from 4 plane virtualization mode to Windows hi-res mode. For more information, see <B>GET_VDD_BANK</B>. The Main VDD only traps these ports when a 4 plane VGA application is running (or during a mode change) and then only when the execution focus is set to the 4 plane VGA application. </P>

<P>Again, the Main VDD uses ports registered using the function <B>VDD_Register_Virtual_Port</B> only to be notified when the Windows display driver is accessing the hardware and to tell the mini-VDD to instigate a hardware state change back to the Windows hi-res MemC state. </P>

<P>The main reason for trapping extended ports is to prevent them from being written while a mode change is being virtualized in a window. In this case, your mini-VDD must provide its own I/O handler for these ports. See the S3.VXD's virtualization of port 4AE8h for an example of why and how to trap certain ports. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ENABLE_TRAPS%20(Function%2013)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
