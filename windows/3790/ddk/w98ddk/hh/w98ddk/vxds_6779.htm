<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Interrupt 2Fh Function 1684h</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Interrupt 2Fh Function 1684h">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_4775"></A>Interrupt 2Fh Function 1684h</H1>

<PRE>mov     bx, [DeviceID]  ; Device identifier

mov     ax, 1684h       ; Get Device Entry Point Address
int     2Fh             ; multiplex interrupt

mov     word ptr [DevAddr], di
mov     word ptr [DevAddr+2], es    ; es:di contains entry point address
 </PRE>

<P>Get Device Entry Point Address (Interrupt 2Fh Function 1684h) retrieves the entry point address for a virtual device's service functions. MS-DOS device drivers or TSRs typically use this function to communicate with virtual devices they have explicitly loaded. 

<DL>
<DT><I>DeviceID</I>  </DT>

<DD>Identifies a virtual device. If this value is zero, then the ES:DI registers point to an 8 character space-padded case-sensitive device name (Windows 95).
</DD>
</DL>

<P>The return value is the entry-point address contained in the ES:DI register pair if the function is supported. Otherwise, ES:DI contain zero. </P>

<P>Any virtual device can provide service functions to be used by MS-DOS programs. For example, the virtual-display device provides services that the Windows old application program uses to display MS-DOS programs in a window. It is the responsibility of the MS-DOS program to provide the appropriate virtual-device identifier. The function returns a valid address if the virtual device supports the entry point. </P>

<P>MS-DOS programs call the entry point using a far <B>call</B> instruction. The services provided by the virtual device depend on the device. It is the responsibility of the MS-DOS program to set registers to values that are appropriate to the specific virtual device. </P>

<P>For versions of Windows prior to version 3.0, the program must set the ES:DI register pair to zero before calling this function. </P>

<P><B>Examples</B> </P>

<P>The following example retrieves the entry point address for the virtual device identified by <B>My_Device_ID</B>: </P>

<PRE>xor     di, di              ; set es:di to zero for version 2.x
mov     es, di
mov     bx, My_Device_ID

mov     ax, 1684h
int     2Fh

mov     ax, es
or      ax, di
jz      API_Is_Not_Supported

 </PRE>

<P>The following Windows 95 example retrieves the entry point address for the virtual device identified by specifying an 8-character space padded device name:</P>

<PRE>xor   bx, bx      ; bx = 0 indicates name-based
les   di, lpName  ; Name of device being queried
int   2Fh

mov   word ptr [DevAddr], di
mov   word ptr [DevAddr+2], es ; ES:DI contains entry point addr
or    di, word ptr [DevAddr+2] ; or contains 0:0 on error
jz    Error
 </PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Interrupt%202Fh%20Function%201684h"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
