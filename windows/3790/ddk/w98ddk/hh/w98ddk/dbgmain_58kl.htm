<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Setting up the Windows System Debugger</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Setting up the Windows System Debugger">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="ddk_setting_up_the_windows_system_debugger_me"></A>Setting up the Windows System Debugger</H2>

<P>This section is a list of frequently asked questions about setting up kernel debugging for Windows 9x. You'll find answers here about getting started with the System Debugger (<I>debugger.exe</I>). Additional information can be found in the MSDN® Library CD.

<DL>
<DT><B>Q: How do I get started? </B></DT>

<DD>A: You need a computer with a 1394 or serial port. For 1394 many of the serial port issues discussed here do not pertain and may be skipped, including: making the cable, handshaking issues, and transmission speeds. </DD>

<DT><B>Q: What are 1394 debugging limitations?</B></DT>

<DD>A: The 1394 debugger is limited in a couple of respects. It doesn’t become active until the VxD portion of the debugger gets loaded. This means that some issues that may need to be debugged before this time will be unable to be debugged. This is a result of limited space and other limitations of the 16-bit portion of the debugger. Also, when multiple 1394 controllers are present in a system, the first controller found is used for 1394. There is no way to specify which controller to use at this time.</DD>

<DT><B>Q: What cables do I need?</B></DT>

<DD>A: For 1394 debugging any 1394 cable will do. If you use a serial port, you'll need to buy or make a null-modem cable. You only need a three-line null modem cable (transmit, receive, and ground). You don't need one with handshaking lines because <I>debugger.exe</I> doesn't use handshaking. You should also disable handshaking on your computer. (Handshaking allows slower receivers to keep up with the amount of data being transmitted by requiring the transmitter to stop sending data until it has a chance to catch up.) </DD>

<DT><B>Q: How do I handle transmission speed issues without handshaking? </B></DT>

<DD>A: 1394 protocols will handle all speed and transmission issues. For the serial port, because handshaking is disabled, it is possible that <I>debugger.exe</I> could send characters to the terminal faster than the terminal can display them. If you find that characters are dropped, you should increase the delay between lines (often a terminal drops characters while scrolling). Use the <B>y CRDELAY=delay</B> debugger command where "value" ranges from zero (no delay) to FFFF (maximum delay). Increase the delay until your terminal stops dropping characters. 

<P>You can also lower the speed of the connection. To do this, edit wdeb.ini (located in the root of the boot drive) and change the /r:XXXXX to reflect the new baud rate. For example /r:57600 would use a baud rate of 57600. If the debugger is being loaded from system.ini, edit the debugbaud= line in the [386Enh] section for the same effect.
</DD>

<DT><B>Q: How do I change the communications port? </B></DT>

<DD>A: Edit wdeb.ini (located in the root of the boot drive) and change the /c:X setting to point to the proper COM port. For legacy free machines, use /c:4. If loading the debugger from system.ini, modify the debugcom= setting in the [386Enh] section of system.ini. For 1394, the option is /c:fX, where X is the broadcast channel to use for communications. Each target machine must be on a separate broadcast channel. Channel numbers may range from 0 to 30. (Future drivers may support 0-62.)</DD>

<DT><B>Q: What is a null-modem serial cable? </B></DT>

<DD>A: Typically with serial ports, you connect a computer to something like a modem. This is how serial ports are designed: you connect a computer, or Data Terminal Equipment (DTE), to a modem, or Data Communication Equipment (DCE). When you connect a computer to another computer, or DTE to DTE, you need a null-modem cable. <I>Debugger.exe</I> requires only the most basic null-modem cable, the three-line null-modem cable. The following illustration shows the null-modem cable's connectors. (The pin numbering would be backwards if you were looking at the computer's ports.) </DD>
</DL>

<P><IMG SRC="images/nullmdm.gif" ALT="" BORDER=0></P>

<P>The following table shows the pin numbers and names of the cable's three lines: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=11%>Pin </TH>
<TH align=left width=89%>Name </TH>
</TR>

<TR VALIGN="top">
<TD width=11%>Pin 2 </TD>
<TD width=89%>Receive </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>Pin 3 </TD>
<TD width=89%>Transmit </TD>
</TR>

<TR VALIGN="top">
<TD width=11%>Pin 5 </TD>
<TD width=89%>Ground </TD>
</TR>
</TABLE><BR>

<DL>
<DT><B>Q: Can I use a Laplink V serial cable with <I>debugger.exe</I>? </B></DT>

<DD>A: Yes. The blue Laplink cable works fine. Remember to disable handshaking.</DD>

<DT><B>Q: How do I disable handshaking on Windows 9x? </B></DT>
</DL>

<OL>
	<LI>Using your right mouse button, click My Computer, and then click Properties. </LI>

	<LI>In the <B>System Properties</B> dialog box, click the <B>Device Manager</B> tab. </LI>

	<LI>In the list of device types, double-click Ports (COM &amp; LPT). </LI>

	<LI>Double-click the name of the port the cable is connected to, usually Communications Port (COM2). </LI>

	<LI>In the <B>Communications Port Properties</B> dialog box, click the <B>Port Settings</B> tab. </LI>

	<LI>In the <B>Flow Control</B> list, click None. </LI>

	<LI>Click <B>OK</B>. </LI>
</OL>

<DL>
<DT><B>Q: How do I set up <I>debugger.exe</I>? </B></DT>
</DL>

<OL>
	<LI>Install the Windows 9x Device Driver Kit (DDK). </LI>

	<LI>At the command prompt, go to the <I>/debug</I> subdirectory of the directory you installed the DDK in. </LI>

	<LI>Follow the instructions in <A HREF="dbgmain_3y5h.htm">Installing Debug Environment</A>. </LI>
</OL>

<DL>
<DT><B>Q: How do I set up Rterm for 1394 debugging?</B></DT>

<DD>A: For debugging with 1394 Rterm you will need to install a driver in Windows the first time it is run. This can be accomplished by selecting <B>Install 1394 Driver</B> from the <B>Communications </B>tab on the <B>Options</B> screen. This will start off a driver installation wizard that will need to be directed to the 1394vdbg driver location. This location should contain two files called <I>1394vdbg.sys</I> and <I>1394vdbg.inf</I>. Rterm will report an error opening the channel until the driver is finished installing. This is expected. Once this driver is installed, go back to the <B>Communications</B> tab and select the appropriate channel for your setup.</DD>

<DT><B>Q: Where can I find out about <I>debugger.exe</I> commands? </B></DT>

<DD>A: See <A HREF="refmain_5nvp.htm">Reference for Debugger Commands</A>.</DD>

<DT><B>Q: I'm a Windows&nbsp;2000 and later versions developer. Can I use WinDbg for kernel debugging on Windows 9x? </B></DT>

<DD>A: No, you can use only <I>debugger.exe</I> or a third-party debugger such as SoftIce/W for kernel debugging. </DD>

<DT><B>Q: What should I do if I can't get <I>debugger.exe</I> to work? </B></DT>
</DL>

<UL>
	<LI>Make sure you are using the <I>debugger.exe</I> contained in the Windows DDK. You need this version to work with the retail version of Windows 9x. </LI>

	<LI>Run Direct Cable Connection (DCC) to make sure your null-modem cable works. DCC is optionally installed with Windows 9x. To see if it is installed, click the <B>Start</B> button, point to <B>Accessories</B>, and then look for Direct Cable Connection in the menu. If it is not there, use the <B>Add/Remove Programs</B> in Control Panel to install it. </LI>

	<LI>Make sure handshaking is disabled on your computer.</LI>

	<LI>If the debugger stops responding partway through boot, this could be because you have a debugcom or debugbaud line in your system.ini file. These entries override the values provided in wdeb.ini.</LI>

	<LI>If the debugger is dropping characters or if you see garbage characters when doing large output, type y crdelay=8000 to slow down the delay between lines. The value of crdelay is a hexadecimal value from 0000 to FFFF. You may have to experiment with the crdelay value.</LI>

	<LI>If you are running out of memory with the debugger, use the wdeb.ini option /L, which will have the effect of shrinking symbol files by a factor of three.</LI>
</UL>

<DL>
<DT><B>Q: Can I use <I>debugger.exe</I> as a VxD? </B></DT>

<DD>A: Yes and no. This is not supported for 1394 debugging. For serial debugging you'll save about 90 KB of conventional memory. You won't, however, be able to access symbols until after the Device_Init message is sent to your VxDs (during Windows 9x startup). So if you use the /b option in the wdeb.ini file to break in VMM32 initialization, the debugger will have no knowledge of symbols until Device_Init is sent. </DD>

<DT><B>Q: How do I set up <I>debugger.exe</I> as a VxD? </B></DT>

<DD>A: Use the<I> w9xdebug.exe</I> package to do this automatically. To configure this manually, edit system.ini with the following lines:

<PRE>device=debugger.exe
LoadDebugOnlyObjs=YES
; add debugsym lines for every symbol you want to load
debugsym=C:\WINDOWS\SYSTEM\myapp.sym
debugcom=1
debugbaud=115200
</PRE>
</DD>
</DL>

<P>The above example uses COM 1 and a baud rate of 115200.

<DL>
<DT><B>Q: How do I change the baud rate or COM port with the VxD version of <I>debugger.exe</I>? </B></DT>

<DD>A: To change the COM port, change the value in the debugcom= line in the [386Enh] section of System.ini. The following entry sets the COM port to COM2: 

<P>debugcom=2


<P>To change the baud rate, change the value in the debugbaud= line. The following entry sets the baud rate to 57,600: 


<P>debugbaud=57600


<P>Note that the values in System.ini will override prior <I>debugger.exe</I> command-line settings for the baud rate and COM port.

</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Setting%20up%20the%20Windows%20System%20Debugger"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
