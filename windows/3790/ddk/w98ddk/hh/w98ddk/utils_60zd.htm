<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Parameters</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4599"></A>Parameters</H3>

<P>You can separate command parameters with delimiters (spaces or commas), but a delimiter is required only between two consecutive hexadecimal values. The following commands are equivalent: </P>

<PRE>dCS:100 110
d CS:100 110
d,CS:100,110
 </PRE>

<P>Following are the parameters you can use with commands: </P>

<TABLE>

<TR VALIGN="top">
<TD width=10%><I>addr</I> </TD>
<TD width=90%>Represents an address parameter in one of four forms. For more information about the operators shown in the following address forms, see <I>Binary and Unary Operators</I>. </TD>
</TR>
</TABLE><BR>

<TABLE>

<TR VALIGN="top">
<TD width=17%></TD>
<TD width=20%>#1f:02C0 </TD>
<TD width=63%>Protected-mode address (selector:offset) </TD>
</TR>

<TR VALIGN="top">
<TD width=17%> </TD>
<TD width=20%>%31020 </TD>
<TD width=63%>Linear address </TD>
</TR>

<TR VALIGN="top">
<TD width=17%> </TD>
<TD width=20%>%%31020 </TD>
<TD width=63%>Physical address </TD>
</TR>

<TR VALIGN="top">
<TD width=17%> </TD>
<TD width=20%>&amp;0100:02FF </TD>
<TD width=63%>Real-mode address (segment:offset) </TD>
</TR>
</TABLE><BR>

<TABLE>

<TR VALIGN="top">
<TD width=15%>&nbsp;</TD>
<TD width=85%>Any of these specified address forms overrides the current address type. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>byte</I> </TD>
<TD width=85%>Specifies a two-digit hexadecimal value. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>cmds</I> </TD>
<TD width=85%>Specifies an optional set of debugger commands to be executed with the <B>bp</B> (Breakpoint) or <B>j</B> (Conditional) command. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>count</I> </TD>
<TD width=85%>Specifies a count. Valid values depend on the command with which this parameter is being used. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>dword</I> </TD>
<TD width=85%>Represents an eight-digit (four-byte) hexadecimal value. The <B>DWORD</B> data type is most commonly used as a physical address. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>expr</I> </TD>
<TD width=85%>Represents a combination of parameters and operators that evaluates to an 8-bit, 16-bit, or 32-bit value. An <I>expr</I> parameter can be used as a value in any command. An <I>expr</I> parameter can combine any symbol, number, or address with any of the binary and unary operators. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>flags</I> </TD>
<TD width=85%>Specifies one or more conditions. Valid conditions depend on the command with which this parameter is being used. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>group-name</I> </TD>
<TD width=85%>Specifies the name of a group that contains the map symbols you want to display. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>list</I> </TD>
<TD width=85%>Specifies a series of byte values or a string. The list parameter must be the last parameter on the command line. Following is an example of the <B>f</B> (Fill) command with a list parameter: 
<PRE>fCS:100 42 45 52 54 41
 </PRE>
</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>map-name</I> </TD>
<TD width=85%>Specifies the name of a symbol map file. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>name-chars</I> </TD>
<TD width=85%>Specifies one or more characters. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>number</I> </TD>
<TD width=85%>Specifies a numeric value. Valid values depend on the command with which this parameter is being used. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>object</I> </TD>
<TD width=85%>Specifies a handle, a selector, or a heap address. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>option</I> </TD>
<TD width=85%>Specifies an option. Valid options depend on the command with which this parameter is being used. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>range</I> </TD>
<TD width=85%>Specifies the block of memory on which the command should operate. The <I>range</I> parameter can be two addresses (<I>addr addr</I>); or it can be one address and a length (<I>addr</I> <B>L</B> <I>word</I>, where <I>word</I> is the number of items on which the command should operate; 80h is the default value). Following are three valid examples: 
<PRE>CS:100 110
CS:100 L 10
CS:100
 </PRE>

<P>The limit for <I>range</I> is 10000h. To specify a word of 10000h using only four digits, use 0000h or 0h. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>reg</I> </TD>
<TD width=85%>Specifies the name of a microprocessor register. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>string</I> </TD>
<TD width=85%>Represents any number of characters enclosed in single quotation marks (') or double quotation marks ("). For quotation marks that must appear within <I>string</I>, you must use two sets of quotation marks. For example, the following strings are valid: 
<PRE>'This ''string'' is OK.'
\"This \"\"string\"\" is OK.\"

However, the following strings are not valid: 
\"This \"string\" is not OK.\"
\"This 'string' is not OK.\"
 </PRE>

<P>The ASCII values of the characters in the string are used as a list of byte values. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><I>word</I> </TD>
<TD width=85%>Specifies a four-digit (2-byte) hexadecimal value. </TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Parameters"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
