<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TdiDispatchTable</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="TdiDispatchTable">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_vxdtdi_tdidispatchtable"></A>TdiDispatchTable</H1>

<P>The <B>TdiDispatchTable</B> is a structure that the client gets from the VTDI VxD. This structure is a table of entry points into the TCP VxD. An entry point may be called by calling indirectly through the corresponding function pointer in the <B>TdiDispatchTable</B>. The table is defined in TDIVXD.H. </P>

<PRE>struct TDIDispatchTable {
    TDI_STATUS    (*TdiOpenAddressEntry)(PTDI_REQUEST, PTRANSPORT_ADDRESS, uint, 
                PVOID);
    TDI_STATUS    (*TdiCloseAddressEntry)(PTDI_REQUEST);
    TDI_STATUS    (*TdiOpenConnectionEntry)(PTDI_REQUEST, PVOID);
    TDI_STATUS    (*TdiCloseConnectionEntry)(PTDI_REQUEST);
    TDI_STATUS    (*TdiAssociateAddressEntry)(PTDI_REQUEST, HANDLE);
    TDI_STATUS    (*TdiDisAssociateAddressEntry)(PTDI_REQUEST);
    TDI_STATUS    (*TdiConnectEntry)(PTDI_REQUEST, PVOID, 
                PTDI_CONNECTION_INFORMATION, 
                PTDI_CONNECTION_INFORMATION);
    TDI_STATUS    (*TdiDisconnectEntry)(PTDI_REQUEST, PVOID, ushort,
                PTDI_CONNECTION_INFORMATION, 
                PTDI_CONNECTION_INFORMATION);
    TDI_STATUS    (*TdiListenEntry)(PTDI_REQUEST, ushort, 
                PTDI_CONNECTION_INFORMATION, 
                PTDI_CONNECTION_INFORMATION);
    TDI_STATUS    (*TdiAcceptEntry)(PTDI_REQUEST, PTDI_CONNECTION_INFORMATION,
                PTDI_CONNECTION_INFORMATION);
    TDI_STATUS    (*TdiReceiveEntry)(PTDI_REQUEST, ushort *, uint *, PNDIS_BUFFER);
    TDI_STATUS    (*TdiSendEntry)(PTDI_REQUEST, ushort, uint, PNDIS_BUFFER);
    TDI_STATUS    (*TdiSendDatagramEntry)(PTDI_REQUEST, 
                PTDI_CONNECTION_INFORMATION,
                uint, uint *, PNDIS_BUFFER);
    TDI_STATUS    (*TdiReceiveDatagramEntry)(PTDI_REQUEST, 
                PTDI_CONNECTION_INFORMATION,
                PTDI_CONNECTION_INFORMATION, uint, uint *, PNDIS_BUFFER);
    TDI_STATUS    (*TdiSetEventEntry)(PVOID, int, PVOID, PVOID);
    TDI_STATUS    (*TdiQueryInformationEntry)(PTDI_REQUEST, uint, 
                PNDIS_BUFFER, uint *, uint);
    TDI_STATUS    (*TdiSetInformationEntry)(PTDI_REQUEST, uint, 
                PNDIS_BUFFER, uint, uint);
    TDI_STATUS    (*TdiActionEntry)(PTDI_REQUEST, uint, 
                PNDIS_BUFFER, uint);
    TDI_STATUS    (*TdiQueryInformationExEntry)(PTDI_REQUEST, 
                struct TDIObjectID *, PNDIS_BUFFER, uint *, void *);
    TDI_STATUS    (*TdiSetInformationExEntry)(PTDI_REQUEST, 
                struct TDIObjectID *, void *, uint);
};
typedef struct TDIDispatchTable TDIDispatchTable;</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: TdiDispatchTable"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
