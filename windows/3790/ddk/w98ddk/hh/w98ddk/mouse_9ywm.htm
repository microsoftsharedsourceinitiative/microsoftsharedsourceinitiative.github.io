<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Handling Mouse Interrupts</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_3096"></A>Handling Mouse Interrupts</H2>

<P>A mouse minidriver installs an interrupt handler to process hardware interrupts from the mouse. To install an interrupt handler, a mouse minidriver must use services provided by the virtual programmable interrupt controller device (VPICD). </P>

<P>After installing the interrupt handler, the mouse minidriver must call the <B>VMD_Set_Mouse_Data</B> service to provide VMOUSE with information about the mouse, including the mouse-type identifier, the number of the interrupt request (IRQ) the mouse is using, the number of the port the mouse is using, and the number of buttons on the mouse. VMOUSE uses this information to respond to various Interrupt 33H functions. </P>

<P>The interrupt handler translates the raw data from the mouse into messages and posts them to VMOUSE by calling the <B>VMD_Post_Pointer_Message </B>service. Each message includes the horizontal and vertical delta values and a value indicating the status of the mouse buttons. The <I>horizontal</I> and <I>vertical delta values</I> indicate the amount, in mickeys, of horizontal and vertical mouse movement that occurred since posting the last message to VMOUSE. A <I>mickey</I> is the distance the mouse must move to generate a mouse-movement signal. </P>

<P>The button-status value is a byte-size array of bits that indicate the status of each mouse button; that is, whether each is pressed or released. A bit is 1 if the corresponding button is pressed; otherwise, it is 0. The button status value has the following form: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=41%>Bit </TH>
<TH align=left width=59%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=41%>0, 1 </TD>
<TD width=59%>Undefined </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>2 </TD>
<TD width=59%>Status of button 4 </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>3 </TD>
<TD width=59%>Status of button 2 </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>4 </TD>
<TD width=59%>Status of button 3 </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>5 </TD>
<TD width=59%>Status of button 1 </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>6, 7 </TD>
<TD width=59%>Undefined </TD>
</TR>
</TABLE><BR>

<P>VMOUSE interprets the data in the mouse messages based on user-defined settings such as the rotation angle, acceleration, and sensitivity and then passes the data to the appropriate VM. If the system VM has the mouse focus, VMOUSE passes the data to the <B>Mouse_Event</B> function in the Windows USER module. If an application in a non-system VM has the mouse focus, VMOUSE passes the data to the application's mouse callback function. The application installs the callback function by calling Interrupt 33h, Function 0Ch. </P>

<P>See also <B>Mouse_Event</B>, <B>VMD_Post_Pointer_Message</B>, <B>VMD_Set_Mouse_Data</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Handling%20Mouse%20Interrupts"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
