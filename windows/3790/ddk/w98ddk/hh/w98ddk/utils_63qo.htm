<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>br (Breakpoint Register)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="br (Breakpoint Register)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_4610"></A>br (Breakpoint Register)</H1>

<PRE>br [number] flags [addr] [count] ["cmds"]
 </PRE>

<P>The Pentium processor contains four “hardware debug registers” that support hardware address breakpoints. Hardware debug registers allow the user to instruct the processor hardware to interrupt processor execution when specified addresses are read, written or executed. This is a very useful tool, for example, to find out what procedures are accessing or changing a specified memory variable.</P>

<P>The <B>br</B> command sets a Pentium debug register breakpoint, in order to “break” on data reads, writes and instruction execution. Up to four debug registers can be set and enabled at one time. </P>

<P>Hardware breakpoints take precedence over faults.</P>

<P>Since the four debug registers are global to the system, they should typically only be touched by a kernel mode debugger. See Knowledge Base Article Q137199, “ PRB: Debuggers Cannot Reliably Use Debug Register Breakpoints” for more information.</P>

<P>See also the following MSDN Library CD article: Q105275, “Using the ‘BR’ Command in WDEB386.EXE”.

<DL>
<DT><I>number</I> </DT>

<DD>Specifies which breakpoint is being created. No space is allowed between the <B>br</B> command and the <I>number</I> parameter. If <I>number</I> is omitted, the first available breakpoint number is used. </DD>

<DT><I>flags</I> </DT>

<DD>Specifies the length and break conditions for the breakpoint. This parameter can be some combination of the following values: 

<TABLE>

<TR VALIGN="top">
<TD width=7%><B>1</B> </TD>
<TD width=93%>Set 1-byte length (default value). </TD>
</TR>

<TR VALIGN="top">
<TD width=7%><B>2</B> </TD>
<TD width=93%>Set word length on word boundary. </TD>
</TR>

<TR VALIGN="top">
<TD width=7%><B>4</B> </TD>
<TD width=93%>Set doubleword length on doubleword boundary. </TD>
</TR>

<TR VALIGN="top">
<TD width=7%><B>E</B> </TD>
<TD width=93%>Break on instruction execution only (1-byte length only). </TD>
</TR>

<TR VALIGN="top">
<TD width=7%><B>W</B> </TD>
<TD width=93%>Break on writes only. </TD>
</TR>

<TR VALIGN="top">
<TD width=7%><B>R</B> </TD>
<TD width=93%>Break on reads and writes. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>addr</I></DT>

<DD>Specifies the address to be watched.</DD>

<DT><I>count</I> </DT>

<DD>Specifies the number of times the breakpoint is to be ignored before being executed. It can be any 16-bit value. </DD>

<DT><I>cmds</I> </DT>

<DD>Specifies an optional list of debugger commands to be executed in place of the default command when the breakpoint is reached. You must enclose the group of optional commands in quotation marks and separate optional commands with semicolons (;). 
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: br%20(Breakpoint%20Register)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
