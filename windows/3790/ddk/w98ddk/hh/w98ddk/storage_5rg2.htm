<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ISP</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4282"></A>ISP</H3>

<PRE>#include &lt;isp.h&gt;

typedef struct ISP {
    USHORT ISP_func;    // function; see below
    USHORT ISP_result;  // result; zero if successful
} ISP, *PISP;
 </PRE>

<P>Contains information for an IOS service request. 

<DL>
<DT><B>ISP_func</B> </DT>

<DD>Function to perform. Can be one of these values: 

<TABLE>

<TR VALIGN="top">
<TD width=43%>ISP_CREATE_DDB </TD>
<TD width=57%>Creates a device descriptor block (DDB). This is typically called by a port driver to create a per controller data structure when processing the AEP_INITIALIZE function. Uses <B>ISP_ddb_create</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_CREATE_DCB </TD>
<TD width=57%>Creates a device control block (DCB) for a physical device. Uses <B>ISP_dcb_create</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_CREATE_IOP </TD>
<TD width=57%>Creates an input and output packet (IOP). Uses <B>ISP_IOP_create</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_ALLOC_MEM </TD>
<TD width=57%>Allocates memory. Uses <B>ISP_mem_alloc</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DEALLOC_MEM </TD>
<TD width=57%>Deallocates memory. Uses <B>ISP_mem_dealloc</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_INSERT_CALLDOWN </TD>
<TD width=57%>Inserts entry in calldown table. Typically used by a layer driver to insert its request entry point into the DCB call down list. This ensures that the driver will see all input and output requests to that device. The driver can also allocate a per I/O request packet area called the expansion area. This becomes part of the IOP and can be accessed when the request is being processed by each layer. Uses <B>ISP_calldown_insert</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_ASSOCIATE_DCB </TD>
<TD width=57%>Associates DCB with a relative drive number. This service is usually called by a TSD. The TSD is responsible for determining the logical drives associated with a physical drive. This service associates a logical drive letter with a logical DCB or an INT 13h drive number with a physical. In the case of logical association, this service calls IFSMGR and sends out a WM_DEVICECHANGE/DBT_DEVICEARRIVAL broadcast to notify the system of a volume arrival. Value add drivers also may need to make this call. For instance, a compression layer would call this service as and when it determines a compressed volume that is associated with a host. Uses <B>ISP_dcb_associate</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_GET_DCB </TD>
<TD width=57%>Returns the DCB for the given logical volume. Uses <B>ISP_dcb_get</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_GET_FIRST_NEXT_DCB </TD>
<TD width=57%>Returns the first or next DCB. Uses ISP_GET_FRST_NXT_DCB structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DEALLOC_DDB </TD>
<TD width=57%>Deallocates a DDB. Used typically by a port driver when the controller associated with the DDB is removed. The IOS sends an AEP_UNINITIALIZE function at this time and port drivers typically deallocate any resources that they may have allocated to handle I/O to the controller represented by that DDB. For instance, the driver frees IRQ, removes port trapping, and so on. Uses ISP_DDB_DEALLOC structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DESTROY_DCB </TD>
<TD width=57%>Destroys a DCB. Used when a device is removed, this service should be called at application time (Appy time) only. This service broadcasts an AEP_PEND_UNCONFIG_DCB to all the layer drivers to direct the drivers to stop generating new requests for this device. Execution blocks until all pending I/O to the device is complete; subsequent I/O requests to this DCB generate errors. For all logical drives associated with this physical device, the IFSMGR is notified of the volume removal. Also a WM_DEVICECHANGE/DBT_DEVICEREMOVECOMPLETE message is broadcast. The IOS sends an AEP_UNCONFIG_DCB function to all the layer drivers. The drivers do any necessary processing at this point. All VRPs and calldown nodes associated with the DCB are freed. Finally the DCB itself is freed. Uses ISP_DCB_DESTROY structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_QUERY_MATCHING_DCBS </TD>
<TD width=57%>Determines whether matching logical and physical DCBs exist. Intended for use by the TSD to find any relationships it is unable to deduce. For example, in order to associate compressed volumes to a particular physical DCB, the DiskTSD queries all the layer drivers using this function. The function sends an AEP_ASSOCIATE_DCB function to all the layer drivers. The TSD then associates the additional logical volumes to the physical if the real mode mapper has not already claimed that logical volume. The real mode mapper may claim a logical volume if there is an unsafe device driver hooking the real mode driver chain for that volume. Uses ISP_QUERY_MATCH structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_QUERY_REMOVE_DCB </TD>
<TD width=57%>Determines whether a device can be removed. Broadcasts a DBT_DEVICEQUERYREMOVE message and also queries the IFSMGR by calling the IFSMGR service QueryVolumeRemoval. This call can be failed by any application or the IFSMGR if they believe that this volume cannot be removed. This is an Appy time only service. Uses ISP_QUERY_REMOVE structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DEVICE_REMOVED </TD>
<TD width=57%>Indicates that a device has been removed. Broadcasts a DBT_DEVICEREMOVECOMPLETE message for all the logical volumes associated with the physical DCB. This is typically called if the media is ejected from the drive in which case ISP_DEV_REMOVED_FL_MEDIA_ONLY should be set. This is an Appy time only service. Uses ISP_DEV_REMOVED structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DEVICE_ARRIVED </TD>
<TD width=57%>Indicates that a device has arrived. Broadcasts a DBT_DEVICEARRIVAL message for all the logical volumes associated with the physical DCB. This is typically called if the media is inserted in the drive in which case ISP_DEV_REMOVED_FL_MEDIA_ONLY should be set. This is an Appy time only service. Uses ISP_DEV_ARRIVED structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DISASSOCIATE_DCB </TD>
<TD width=57%>Disassociates the logical drive number from the DCB that is currently associated to it. The IFSMGR is also notified of a volume removal. This is typically called by a value added driver when the volumes that it associated by using ISP_QUERY_MATCH are going away. Uses ISP_DISASSOC_DCB structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DRIVE_LETTER_PICK </TD>
<TD width=57%>Picks a drive letter. Uses <B>ISP_pick_drive_letter</B> structure. Provides a drive letter for a potential logical volume. This volume cannot be a volume that is visible in real mode, as the protect mode drive letter for that volume will match the real mode drive. The criteria for the search are specified in <B>ISP_p_d_l_flags</B>. If nothing is specified, the UserDriveLetterAssignment value in the registry for this DCB is read and a drive letter that falls in this range is provided. If there is no registry entry the next available drive letter is picked. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>&nbsp;</TD>
<TD width=57%>If the ISP_PDL_FL_USE_RANGE flag is set, the caller provides a search range starting with the letter in <B>ISP_p_d_l_letter</B>[0] and ending with the letter in <B>ISP_p_d_l_letter</B>[1]. The registry is read and a drive letter in the range that is an intersection of the registry range and the user range is picked. If all the letters in this range are used the next available drive letter is picked unless the ISP_PDL_FL_USER_ONLY flag is set in which case the call is failed. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>&nbsp;</TD>
<TD width=57%>In the case where a registry range is specified, when scanning for drive letters in this range, if a drive letter is already used then the following two flags provide additional directions to the service: ISP_PDL_FL_OK_RM_CD specifies that it is OK to pick the already used drive letter if it was a real mode CD drive; ISP_PDL_FL_OK_INVALID_RM specifies that it is OK to pick the already used drive letter if it is an invalid drive in real mode. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_REGISTRY_READ </TD>
<TD width=57%>Reads registry information corresponding with the physical DCB provided. The parameter definitions are identical to those of VMM service _RegQueryValueEX. Other common registry values for devnodes, like class name, can also be read using this service for that DCB. Uses <B>ISP_read_registry</B> structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_FIND_LDM_ENTRY </TD>
<TD width=57%>Finds an LDM entry for the specified drive. Uses ISP_FIND_LDM structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_DELETE_LDM_ENTRY </TD>
<TD width=57%>Deletes an LDM entry for the specified drive. Deletion is accomplished by compacting the LDM table to copy over the deleted entry. Therefore, clients should not rely on a pointer to an LDM entry after yielding. Uses <B>I</B>SP_FIND_LDM structure. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>ISP_BROADCAST_AEP </TD>
<TD width=57%>Broadcasts the given AEP to the entire driver architecture. Uses ISP_AEP_BROADCAST structure. </TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<H4>See Also</H4>

<P><B>DCB</B>, <B>DDB</B>, <B>IOP</B>, <B>AEP</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: ISP"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
