<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Set_NMI_Handler_Addr</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1496"></A>Set_NMI_Handler_Addr</H1>

<PRE>include vmm.inc

mov     esi, OFFSET32 nmi       ; points to new NMI handler
VMMCall Set_NMI_Handler_Addr
 </PRE>

<P>Sets the Non-Maskable Interrupt (NMI) vector to the address of the specified NMI handler. Uses Flags. 

<UL>
	<LI>No return value. </LI>
</UL>

<DL>
<DT><I>nmi</I></DT>

<DD>Address of the new NMI handler. 
</DD>
</DL>

<P>To install an NMI handler, a virtual device must retrieve and save the current NMI handler address using the <B>Get_NMI_Handler_Addr</B> service, and set the new address using <B>Set_NMI_Handler_Addr</B>. </P>

<P>The NMI handler must <I>not</I> call VMM or virtual device services. This restriction includes calls to asynchronous VMM services. The NMI handler can examine and modify local data in the VxD_LOCKED_DATA_SEG segment, but it must not attempt to access any other memory, including virtual machine and V86 memory. If a virtual device needs to use VMM services in response to an NMI, it should install an NMI event handler using the <B>Hook_NMI_Event</B> service. </P>

<P>The NMI handler must not execute the <B>iret</B> instruction. Instead, it must jump to the address of the previous NMI handler (retrieved using the <B>Get_NMI_Handler_Addr</B> service). The CPU ignores additional NMIs until it executes the <B>iret</B> instruction. Because no NMI handlers in the chain execute this instruction, the handlers are guaranteed not to be re-entered. </P>

<P>Some computers require the latch at port 70h be reset to enable further NMIs. To simplify NMI processing for other NMI handlers, the virtual-parity device (PARITY) automatically resets this latch. </P>

<H4>See Also</H4>

<P><B>Get_NMI_Handler_Addr</B>, <B>Hook_NMI_Event</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Set_NMI_Handler_Addr"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
