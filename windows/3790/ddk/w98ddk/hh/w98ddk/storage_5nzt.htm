<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Get Device Type Command</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_4129"></A>Get Device Type Command</H3>

<P>Prototype: DWORD SendASPI32Command(LPSRB) </P>

<P>Declaration: LPSRB lpSRB; </P>

<P>The SendASPI32Command function with command code SC_GET_DEV_TYPE enables you to identify the devices available on the SCSI bus. A Win32 tape backup package, for example, can scan each target/LUN on each installed host adapter looking for a device type corresponding to sequential access devices. This eliminates the need for each Win32 application to duplicate the effort of scanning the SCSI bus for devices. </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=14%>Parameter </TH>
<TH align=left width=86%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=14%>lpSRB </TD>
<TD width=86%>Points to the following SCSI request block </TD>
</TR>
</TABLE><BR>

<PRE>typedef struct {

 BYTE  SRB_Cmd;    // ASPI command code = SC_GET_DEV_TYPE
 BYTE  SRB_Status;   // ASPI command status byte
 BYTE  SRB_HaId;    // ASPI host adapter number
 BYTE  SRB_Flags;   // Reserved
 DWORD  SRB_Hdr_Rsvd;  // Reserved
 BYTE  SRB_Target;   // Target's SCSI ID
 BYTE  SRB_Lun;    // Target's LUN number
 BYTE  SRB_DeviceType;  // Target's peripheral device type
 BYTE  SRB_Rsvd1;   // Reserved for alignment

} SRB_GDEVBlock, *PSRB_GDEVBlock;
</PRE>

<P>Table 4-4. Get Device Type Command </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=25%>Member </TH>
<TH align=left width=75%>Description </TH>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_Cmd </TD>
<TD width=75%>[IN] This field must contain SC_GET_DEV_TYPE. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_Status </TD>
<TD width=75%>[OUT] On return, this field will be the same as the return status defined in the following. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_HaId </TD>
<TD width=75%>[IN] This field specifies which installed host adapter the request is intended for. Host adapter numbers are always assigned by the ASPI manager layer beginning with zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_Flags </TD>
<TD width=75%>[IN] Reserved = zero</TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_Hdr_Rsvd </TD>
<TD width=75%>Reserved = zero</TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_Target </TD>
<TD width=75%>[IN] SCSI ID of target device. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_Lun </TD>
<TD width=75%>[IN] Logical Unit Number (LUN) of device. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SRB_DeviceType </TD>
<TD width=75%>[OUT] The ASPI manager fills this field with the peripheral device type. This is derived from the Peripheral Device Type returned by the SCSI Inquiry command. Refer to the SCSI specification to learn more about the SCSI Inquiry command. </TD>
</TR>
</TABLE><BR>

<P><B>Table 4-5. Return Values from Get Device Type Command </B></P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=25%>Value </TH>
<TH align=left width=75%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=25%>SS_COMP </TD>
<TD width=75%>SCSI/ASPI request has completed without error. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SS_INVALID_HA </TD>
<TD width=75%>Invalid host adapter number. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>SS_NO_DEVICE </TD>
<TD width=75%>SCSI device not installed. </TD>
</TR>
</TABLE><BR>

<P><B>Example</B> </P>

<P>This example gets the peripheral device type from host adapter #0, target ID #4, and LUN #0. </P>

<PRE> SRB_GDEVBlock MySRB;
 DWORD ASPIStatus;
   .
   .
 MySRB.SRB_Cmd    = SC_GET_DEV_TYPE;
 MySRB.SRB_HaId   = 0;
 MySRB.SRB_Flags   = 0;
 MySRB.SRB_Hdr_Rsvd  = 0;
 MySRB.SRB_Target   = 4;
 MySRB.SRB_Lun   = 0;
 ASPIStatus    = SendASPI32Command ( (LPSRB) &amp;MySRB );
   .
 /****************************************************************/
 /* If MySRB.SRB_Status == SS_COMP, MySRB.SRB_DeviceType
 /* will contain the peripheral device type.
 /****************************************************************/
   .
   .
</PRE>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Get%20Device%20Type%20Command"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
