<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_SHELL_HookSystemBroadcast</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_2108"></A>_SHELL_HookSystemBroadcast </H1>

<PRE>include shell.inc
VxDcall SHELL_HookSystemBroadcast, &lt;&lt;OFFSET32 pfnHandler&gt;, \
    dwRef, dwCallOrder&gt;
mov [Handle], eax  ; handle of broadcast callback procedure
 </PRE>

<P>Installs a callback procedure into the broadcast notification chain. The chain monitors calls to the <B>_SHELL_BroadcastSystemMessage</B> service and to the Windows <B>BroadcastSystemMessage</B> function. Uses C calling conventions. 

<UL>
	<LI>Returns the handle of the installed callback procedure in the EAX register if successful. Otherwise, returns zero. </LI>
</UL>

<DL>
<DT><I>pfnHandler</I> </DT>

<DD>Address of the callback procedure. For more information about the procedure, see the comments below. </DD>

<DT><I>dwRef</I> </DT>

<DD>Reference data for the callback procedure. </DD>

<DT><I>dwCallOrder</I> </DT>

<DD>Call order. Must be zero for non-zero virtual devices. If more than one callback procedure is installed to monitor the broadcast service, the call order specifies the order in which the given callback procedure is called relative to the other callback procedures. Procedures with equal call orders are called in an unspecified (but consistent) order. 
</DD>
</DL>

<P>The system calls the callback procedure whenever a VxD calls the <B>_SHELL_BroadcastSystemMessage</B> service. The system calls the procedure using the C calling conventions as follows: </P>

<PRE>VxDcall [pfnHandler], &lt;uMsg, wParam, lParam, dwRef&gt;
 </PRE>

<P>The <I>uMsg</I> parameter is the message number and <I>wParam</I> is the 16-bit message parameter. For both <I>uMsg</I> and <I>wParam</I>, the low 16 bits contain the parameter value and the high 16 bits are reserved. The <I>lParam</I> parameter is the 32-bit message parameter and <I>dwRef</I> is the same reference data value passed to <B>_SHELL_HookSystemBroadcast</B>. </P>

<P>The return value from the callback procedure is ignored if the broadcast is not a BSF_QUERY. Otherwise, the procedure should return a nonzero value to allow the broadcast to continue, or zero to fail the message and halt the broadcast. The procedure should return 1 for any messages it does not understand. </P>

<P>If the callback procedure is installed while a broadcast in progress, it is unspecified whether the hook will receive that broadcast. It will, regardless, receive all subsequent broadcasts. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _SHELL_HookSystemBroadcast"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
