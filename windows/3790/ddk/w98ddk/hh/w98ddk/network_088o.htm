<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Installation/Configuration</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_3368"></A>Installation/Configuration</H1>

<P>The NPs are registered with the MPR by putting entries in the registry. </P>

<P>A REG_SZ value named <I>Order</I> is placed on the following key to list the NPs: </P>

<PRE>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\NetworkProvider\Order
 </PRE>

<P><I>Order</I> has a list of named values beneath it in the registry hierarchy, one for each NP. The MPR will load networks (NPs) in the order that the values are enumerated from the registry, which cannot be guaranteed to be any specific order. For example: </P>

<PRE>Order
  NetworkA
  NetworkB
  NetworkX
 </PRE>

<P>Each entry in the list corresponds to another key in the registry, specifically for that network. The subkey can be obtained from the MPR when the NP is loading by calling the <B>NPSGetSectionName</B> service. The entry is a subkey from the registry key: </P>

<PRE>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services
 </PRE>

<P>Beneath the network specific key, there is a subkey called <I>NetworkProvider</I> under which named values define the NP. </P>

<P>An example network description for the layout of the values is as follows: </P>

<PRE>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NetworkA\NetworkProvider  Name=network name
  ProviderPath=provider DLL filename
  Description=network full description
  NetID=network identifier
  CallOrder=MPR order to call
 </PRE>

<P>Other network specific entries may be placed in the section, but the first two letters of the names of such values should be <I>SP</I> to avoid conflict with future standard value names. </P>

<P>Each value has the following meaning: </P>

<P><I>Name</I> - (REG_SZ) the name of the network being provided by the NP. This should be a short name (recommended to be 24 characters or less) that is unique to the network. It is the resource name returned by the MPR when enumerating networks. </P>

<P><I>ProviderPath</I> - (REG_EXPAND_SZ) the name of the DLL that the NP is implemented within. The MPR will load this DLL and expect the NP functions to be exported from it. </P>

<P><I>Description</I> - (REG_SZ) a long text description for the network. This is the comment returned by the MPR when enumerating networks, and is displayed as additional information when useful (for example, when installing networks). </P>

<P><I>NetID - </I>(REG_DWORD) The identifier for the network. It is the high word of the provider type in the network capabilities returned by the NP, represented in hex. It is noted here so that the network does not have to be running to run multi-network aware configuration software (for example, to de-install a network, or to offer installation options when the user is not currently on the network). </P>

<P><I>Windows31DLL</I> - (REG_DWORD) Set to 1 if the DLL is a (16 bit) Windows 3.1 Winnet Driver. If this value is not present then the DLL defaults to a 32 bit NP implementation as described throughout this documentation. </P>

<P><I>CallOrder - </I>(REG_DWORD) A number indicating the order that the provider should be called relative to other NPs. Lower numbered providers are called before higher numbered providers. This value defaults to 0x80000000 for 32 bit NP implementations and to 0xc0000000 for Windows 3.1 Winnet driver implementations. Network providers with the same number are called in the opposite order to which they were loaded. After loading all of the network provider DLLs, MPR calls NPGetCaps for each DLL (for the first time since the DLL was loaded), honoring this call order. </P>

<P><I>PrinterRedirectionRequired - </I>(REG_DWORD) Set to 1 if a network provider DLL requires a local printer port redirection to use a network printer queue. </P>

<P><I>ValidPrinters - </I>(REG_DWORD) A 32 bit mask indicating the valid print numbers for redirecting local printer devices, with the lowest order bit corresponding to LPT1. If the NP supports <B>NPValidLocalDevice</B>, then this registry value will be ignored. If the NP does not support NPValidLocalDevice and this field is not present, then the system will assume that all non-used devices can be redirected. </P>

<P><I>DiskRedirectionRequired - </I>(REG_DWORD) Set to 1 if a network provider DLL requires a local disk drive redirection to access file systems on network servers. </P>

<P><I>ValidDrives - </I>(REG_DWORD) A 32 bit mask indicating the valid local disk devices for redirecting disk drives, with the lowest order bit corresponding to A:. If the NP supports <B>NPValidLocalDevice</B>, then this registry value will be ignored. If the NP does not support NPValidLocalDevice and this field is not present, then the system will assume that all non-used devices can be redirected. </P>

<P><I>NetLotLoading</I> - (REG_DWORD) At startup, MPR sets this value to 1 if a network provider DLL fails to load, and deletes the value from the registry if the DLL does load successfully. MPR will not try to load NPs with this value set to 1 after startup, so installers that require a restart for a network to become active should set this value to 1 when installing the network. </P>

<P><I>ConnectButtonName</I> - (REG_SZ) This is used for a (16 bit) Windows 3.1 Winnet driver that has its own connect or browse dialog boxes. When the network is run in conjunction with 32 bit networks, the common connect dialog box will have a button that brings up the network specific connect or browse dialog box exported from the Winnet driver. This should be a short name (recommended to be 10 characters or less) that fits within the connect dialog box's button. If this field is omitted, then the button text defaults to the value of the <I>Name</I> registry entry above. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Installation%2FConfiguration"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
