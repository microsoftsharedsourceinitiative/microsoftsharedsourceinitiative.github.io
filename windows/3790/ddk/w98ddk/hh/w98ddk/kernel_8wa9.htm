<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_AddFreePhysPage</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1211"></A>_AddFreePhysPage</H1>

<PRE>include vmm.inc

VMMCall _AddFreePhysPage, &lt;PhysPgNum, nPages, flags&gt;

mov     [PagesAdded], eax       ; 0 = none, 1 = some, 2 = all
 </PRE>

<P>Adds one or more physical pages to the free memory pool. Virtual devices use this service to add pages that the Windows loader could not find, but that the virtual device did find. For example, the V86MMGR device adds any unused physical pages it finds when using the Global EMM Import function of a 386 LIMulator. Uses EAX, ECX, EDX, and Flags. </P>

<P>This service is only available during initialization, and only in Windows version 3.1 and later. </P>

<P>Returns with one of these values in the EAX register: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=13%>Value </TH>
<TH align=left width=87%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=13%>0 </TD>
<TD width=87%>None of the specified physical pages were added to the free pool. </TD>
</TR>

<TR VALIGN="top">
<TD width=13%>1 </TD>
<TD width=87%>Some, but not all, of the specified physical pages were added. </TD>
</TR>

<TR VALIGN="top">
<TD width=13%>2 </TD>
<TD width=87%>All of the specified physical pages were added. </TD>
</TR>
</TABLE><BR>

<DL>
<DT><I>PhysPgNum</I></DT>

<DD>Physical page number of the first page to add. The page number must be greater than or equal to 110h; only extended memory pages may be added to the pool. The specified pages must be read/write physical memory pages, and must be available for use at any time. </DD>

<DT><I>nPages</I></DT>

<DD>Number of physical pages to add. </DD>

<DT><I>flags</I></DT>

<DD>Operation flags. Can be zero or the following value: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=20%>Value </TH>
<TH align=left width=80%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=20%>AFPP_RECEXIT </TD>
<TD width=80%>The physical memory being added will be automatically restored to its original state (original contents, and in an unused and unmapped state) immediately before System_Exit. No more than 32 pages can be added per call using this feature; to add more than 32 pages, make multiple calls. </TD>
</TR>
</TABLE><BR>


</DD>
</DL>

<P>A virtual device must <I>not</I> attempt to use pages once it has added them to the free pool, or attempt to add pages that are already available to the system. </P>

<P>This service returns an error if the number of pages to add exceeds the limit of the internal data structure the system uses to manage the free pool. The internal data structure is allocated during initialization and cannot be modified. </P>

<P>Most virtual devices do not need to use this service. </P>

<H4>See Also</H4>

<P><B>_GetFreePageCount</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _AddFreePhysPage"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
