<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>VMMCreateThreadEx</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="VMMCreateThreadEx">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_vxd98_vmmcreatethreadex"></A>VMMCreateThreadEx</H1>

<P><B>VMMCreateThreadEx</B> creates a protected mode thread in the system VM and then starts it executing at the ring 3 cs:eip passed in. This service initiates the following:

<OL>
	<LI>Sends the <B>Create_Thread</B> message to all VXDs to allow them to create and initialize any data structures necessary to support another thread. This message passes the new thread handle in EDI. Interrupt simulation is not yet permitted in the new thread. The call can be failed by returning the carry set. In this case, no system resources should have been allocated.</LI>

	<LI>The client registers are initialized to the values specified by the parameter list.</LI>

	<LI>The timeslicer is notified to start scheduling the thread.</LI>

	<LI>The new thread sends a <B>Thread_Init</B> system control message to all the VXDs. The VXDs can then complete any initialization that must take place in the context of the new thread. The new thread handle is in EDI, as well as being the current thread handle. Interrupt simulation is not permitted since interrupt simulation is not permitted in noninitial threads. The call cannot be failed.</LI>
</OL>

<PRE class=syntax><B>NTSTATUS VMMCreateThreadEx(
</B>  <B>DWORD</B>   <I>ClientSS</I><B>,</B>
  <B>DWORD</B>   <I>ClientESP</I><B>,</B>
  <B>DWORD</B>   <I>ClientCS</I><B>,</B>
  <B>DWORD</B>   <I>ClientEIP</I><B>,</B>
  <B>DWORD</B>   <I>ClientDS</I><B>,</B>
  <B>DWORD</B>   <I>ClientES</I><B>,</B>
  <B>DWORD</B>   <I>ThreadType</I><B>,</B>
  <B>DWORD</B>   <I>InitCallback</I><B>,</B>
  <B>DWORD</B>   <I>RefData</I> 
 <B>);</B>
</PRE>

<H4>Parameters</H4>

<DL>
<DT><I>ClientSS</I></DT>

<DD>Ring 3 protected mode registers used to start the thread.</DD>

<DT><I>ClientESP</I></DT>

<DD>Ring 3 protected mode registers used to start the thread.</DD>

<DT><I>ClientCS</I></DT>

<DD>Ring 3 protected mode registers used to start the thread.</DD>

<DT><I>ClientEIP</I></DT>

<DD>Ring 3 protected mode registers used to start the thread.</DD>

<DT><I>ClientDS</I></DT>

<DD>Ring 3 protected mode registers used to start the thread.</DD>

<DT><I>ClientES</I></DT>

<DD>Ring 3 protected mode registers used to start the thread.</DD>

<DT><I>ThreadType</I></DT>

<DD>Any arbitrary DWORD value the creator can use to uniquely identify threads it creates from the threads that another VxD creates. The <I>ThreadType</I> can be a pointer to the DDB of the creator VxD, because this will always be unique between two different VxDs. <I>ThreadType</I> may also be zero if the type is irrelevant to the usage. This value is stored in the <B>TCB_ThreadType</B> field in the thread's control block.</DD>

<DT><I>InitCallback</I></DT>

<DD>A ring 0 initialization routine that will be called if nonzero. After the <B>Thread_Init </B>broadcast, the <I>RefData</I> will be passed in the EDX register. The return address from the callback will be Return_To_VM. Thus, once initialization is complete, the thread will start executing ring 3 code. It is possible to block the thread in this initialization routine so it never returns from this initialization routine, if the thread is only used to execute ring 0 code.</DD>

<DT><I>RefData</I></DT>

<DD>Handle of the created thread. This is zero if a thread cannot be created (from resources).</DD>
</DL>

<H4>Return Values</H4>

<P>The return value is NTSUCCESS. if successful. Otherwise, the appropriate error code is returned.</P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: VMMCreateThreadEx"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
