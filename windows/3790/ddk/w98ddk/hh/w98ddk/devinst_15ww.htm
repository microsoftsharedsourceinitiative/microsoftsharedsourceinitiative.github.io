<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DEVICE_INFO</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="DEVICE_INFO">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_220"></A>DEVICE_INFO</H1>

<P>This is the basic data structure for most Device installation APIs. A DEVICE_INFO represents a device that is being installed on the system, or an installed device that is being modified in some way. </P>

<PRE class=syntax>typedef struct {
  UINT  cbSize;
  struct  _DEVICE_INFO FAR *lpNextDi;
  char  szDescription[LINE_LEN];
  DWORD  dnDevnode;
  HKEY  hRegKey;
  char  szRegSubkey[MAX_DEVNODE_ID_LEN];
  char  szClassName[MAX_CLASS_NAME_LEN];
  DWORD  Flags;
  HWND  hwndParent;
  LPDRIVER_NODE  lpCompatDrvList;
  LPDRIVER_NODE  lpClassDrvList;
  LPDRIVER_NODE  lpSelectedDriver;
  ATOM  atDriverPath;
  ATOM  atTempInfFile;
  HINSTANCE  hinstClassInstaller;
  HINSTANCE  hinstClassPropProvidor;
  HINSTANCE  hinstDevicePropProvidor;
  HINSTANCE  hinstBasicPropProvidor;
  FARPROC  fpClassInstaller;
  FARPROC  fpClassEnumPropPages;
  FARPROC  fpDeviceEnumPropPages;
  FARPROC  fpEnumBasicProperties;
  DWORD  dwSetupReserved;
  DWORD  dwClassInstallReserved;
  GENCALLBACKPROC  gicpGenInstallCallBack;
  LPARAM  gicplParam;
  UINT  InfType;
  HINSTANCE  hinstPrivateProblemHandler;
  FARPROC  fpPrivateProblemHandler;
  LPARAM  lpClassInstallParams;
  struct _DEVICE_INFO FAR  *lpdiChildList;
  DWORD  dwFlagsEx;
  LPDRIVER_INFO  lpCompatDrvInfoList;
  LPDRIVER_INFO  lpClassDrvInfoList;
} DEVICE_INFO;</PRE>

<H4>Members</H4>

<DL>
<DT><B>cbSize</B> </DT>

<DD>Size of the DEVICE_INFO structure. </DD>

<DT><B>*lpNextDi</B> </DT>

<DD>Pointer to the next DEVICE_INFO structure in a linked list. </DD>

<DT><B>szDescription[LINE_LEN]</B> </DT>

<DD>Buffer containing the description of the device. </DD>

<DT><B>dnDevnode</B> </DT>

<DD>If set, this contains the address of the DevNode associated with the device. </DD>

<DT><B>hRegKey</B> </DT>

<DD>An opened registry key that contains the device's registry subkey. This is usually HKEY_LOCAL_MACHINE. </DD>

<DT><B>szRegSubkey[MAX_DEVNODE_ID_LEN]</B> </DT>

<DD>Buffer containing the device's hardware registry subkey. This is key is rooted in hRegKey, and is ususally some place in the \ENUM branch. </DD>

<DT><B>szClassName[MAX_CLASS_NAME_LEN]</B> </DT>

<DD>Buffer containing the device's class name. </DD>

<DT><B>Flags</B> </DT>

<DD>Flags for controlling installation and U/I functions. Some flags can be set prior to calling device installer APIs, and other are set automatically during the processing of some APIs. 

<TABLE>

<TR VALIGN="top">
<TD width=43%>DI_SHOWOEM </TD>
<TD width=57%>Set if OEM disk support should be allowed </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_SHOWCOMPAT </TD>
<TD width=57%>Will be set if only a compatible driver list is being displayed by DiSelectDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_SHOWCLASS </TD>
<TD width=57%>Will be set if only a Class driver list is is being displayed by DiSelectDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_SHOWALL </TD>
<TD width=57%>Will be set if both a compatible driver list and a class driver list are being shown by DiSelectDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NOVCP </TD>
<TD width=57%>Set if no VCP (Virtual Copy Procedure) is desired during DiInstallDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_DIDCOMPAT </TD>
<TD width=57%>Will be set if DiBuildCompatDrvList has been done, and lpCompatDrvList points to this device's compatible driver list. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_DIDCLASS </TD>
<TD width=57%>Will be set if DiBuildClassDrvList has been done, and lpClassDrvList points to this device's class driver list. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_AUTOASSIGNRES </TD>
<TD width=57%>Unused. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NEEDRESTART </TD>
<TD width=57%>Will be set if the device requires a restart of Windows after installation or a state change. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NEEDREBOOT </TD>
<TD width=57%>Will be set if the device requires a reboot of the machine after installation or a state change. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NOBROWSE </TD>
<TD width=57%>Set to disable browsing when selecting an OEM disk path. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_MULTMFGS </TD>
<TD width=57%>Will be set if a class driver list, or class info list contains multiple manufactures. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_DISABLED </TD>
<TD width=57%>Unused. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_GENERALPAGE_ADDED </TD>
<TD width=57%>Set by a property page provider if a general properties page has been added to the device's property sheet. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_RESOURCEPAGE_ADDED </TD>
<TD width=57%>Set by a property page provider if a resource properties page has been added to the device's property sheet. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_PROPERTIES_CHANGE </TD>
<TD width=57%>Set if a device's properties have been changed and require an update of the Device Manager's U/I. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_INF_IS_SORTED </TD>
<TD width=57%>Set if the INF containing drivers for this device is in sorted order. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_ENUMSINGLEINF </TD>
<TD width=57%>Set if DiBuildCompatDrvList and DiBuildlassDrvList should only search the INF file specified by atDriverPath. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_DONOTCALLCONFIGMG </TD>
<TD width=57%>Set if the configuration manager should not be called during DiInstallDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_INSTALLDISABLED </TD>
<TD width=57%>Set if the device should be installed in a disabled state by default. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_CLASSONLY </TD>
<TD width=57%>Set if this DEVICE_INFO structure contains only a class name. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_CLASSINSTALLPARAMS </TD>
<TD width=57%>Set if the lpClassIntallParams field points to a class install parameter block. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NODI_DEFAULTACTION </TD>
<TD width=57%>Set if DiCallClassInstaller should not perform any default action if the class installer return ERR_DI_DO_DEFAULT, or there is not class installer. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_QUIETINSTALL </TD>
<TD width=57%>Set if device install API should be as silent as possible using default choices wherever possible. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NOFILECOPY </TD>
<TD width=57%>Set if DiInstallDevice should skip file copying. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FORCECOPY </TD>
<TD width=57%>Set if DiInstallDevice should always copy file, even if they are present on the system. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_DRIVERPAGE_ADDED </TD>
<TD width=57%>Set by a property page provider if a driver properties page has been added to the device's property sheet. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_USECI_SELECTSTRINGS </TD>
<TD width=57%>Set if class installer provided strings should be used during DiSelectDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_OVERRIDE_INFFLAGS </TD>
<TD width=57%>Unused. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_PROPS_NOCHANGEUSAGE </TD>
<TD width=57%>Set if there should be no Enable/Disable capability on the device's general property page. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NOSELECTICONS </TD>
<TD width=57%>Set if no small icons should be used during DiSelectDevice. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_NOWRITE_IDS </TD>
<TD width=57%>Set if DiInstallDevice should not write the device's hardware and compatible IDs to the registry. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>hwndParent</B> </DT>

<DD>Window handle that will own U/I dialogs related to this device. </DD>

<DT><B>lpCompatDrvList</B> </DT>

<DD>Pointer to a linked list of DRIVER_NODES representing the compatible drivers for this device. </DD>

<DT><B>lpClassDrvList</B> </DT>

<DD>Pointer to a linked list of DRIVER_NODES representing all drivers of this device's class. </DD>

<DT><B>lpSelectedDriver</B> </DT>

<DD>Pointer to a single DRIVER_NODE that has been selected as the driver for this device. </DD>

<DT><B>atDriverPath</B> </DT>

<DD>Global ATOM containing the path to this device's INF file. This is set only of the driver came from an OEM INF file. This will be zero if the INF is a standard Windows INF file. </DD>

<DT><B>atTempInfFile</B> </DT>

<DD>Global ATOM containing the name of a temporary INF file for this device's drivers. This is set if the drivers came from an old style INF file and have been converted. </DD>

<DT><B>hinstClassInstaller</B> </DT>

<DD>Class installer module instance. </DD>

<DT><B>hinstClassPropProvidor</B> </DT>

<DD>Class Property Provider module instance. </DD>

<DT><B>hinstDevicePropProvidor</B> </DT>

<DD>Device Property Provider module instance. </DD>

<DT><B>hinstBasicPropProvidor</B> </DT>

<DD>Basic Property Provider module instance. </DD>

<DT><B>fpClassInstaller</B> </DT>

<DD>Procedure address of class install function. </DD>

<DT><B>fpClassEnumPropPages</B> </DT>

<DD>Procedure address of the Class property provider page enumeration function. </DD>

<DT><B>fpDeviceEnumPropPages</B> </DT>

<DD>Procedure address of the Device property provider page enumeration function. </DD>

<DT><B>fpEnumBasicProperties</B> </DT>

<DD>Procedure address of the Basic device property provider page enumeration function. </DD>

<DT><B>dwSetupReserved</B> </DT>

<DD>Reserved for use by Setup. </DD>

<DT><B>dwClassInstallReserved</B> </DT>

<DD>Reserved for use by Class Installers. </DD>

<DT><B>gicpGenInstallCallBack</B> </DT>

<DD>Procedure address of a GenInstall call back function. This would be set if the class installer wanted to handle GenInstall callbacks during DiInstallDevice. </DD>

<DT><B>gicplParam</B> </DT>

<DD>lParam for the GenInstall Callback. </DD>

<DT><B>InfType</B> </DT>

<DD>The type of INF file being used. This will be INFTYPE_TEXT or INFTYPE_EXECUTABLE. </DD>

<DT><B>hinstPrivateProblemHandler</B> </DT>

<DD>Module handle for the device's private problem procedure. </DD>

<DT><B>fpPrivateProblemHandler</B> </DT>

<DD>Procedure address of the device's private problem handler. </DD>

<DT><B>lpClassInstallParams</B> </DT>

<DD>Pointer to a class install parameter block. Class installer parameters are specific to the class install functions. </DD>

<DT><B>*lpdiChildList</B> </DT>

<DD>Pointer to a linked list of DRIVER_INFO structures representing children of this device. </DD>

<DT><B>dwFlagsEx</B> </DT>

<DD>Additional control flags. 

<TABLE>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_USEOLDINFSEARCH </TD>
<TD width=57%>Set if INF Search functions should not use indexed searching. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_AUTOSELECTRANK0 </TD>
<TD width=57%><B>Obsolete for Windows 9x/Me. Do not use. </B>Set if DiSelectDevice should automatically select rank zero match drivers. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_CI_FAILED </TD>
<TD width=57%>Will be set internally if there was a failure to load or call a class installer. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_FILTERCLASSES </TD>
<TD width=57%>If set, DiBuildClassDrvList will check for Class inclusion filters. This means devices will not be included in the list, if their class is marked as a NoInstallClass class. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_SETFAILEDINSTALL </TD>
<TD width=57%>If set, then if DiInstallDevice installs a NULL driver, it will also set the FAILEDINSTALL configuration flag </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_DEVICECHANGE </TD>
<TD width=57%>If set, the device manager will rebuild its tree of devices after the device property sheet is closed. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_ALWAYSWRITEIDS </TD>
<TD width=57%>If set, and the flag, DI_NOWRITE_ID is clear (for example, that flag takes higher precedence) then always write Hardware and Compat IDs, even if they already exist </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DI_FLAGSEX_ALLOWEXCLUDEDDRVS </TD>
<TD width=57%>If set, DiSelectDevice will display drivers that have the Exclude From Select state </TD>
</TR>
</TABLE><BR>

</DD>

<DT><B>lpCompatDrvInfoList</B> </DT>

<DD>Pointer to a linked list of DRIVER_INFO structures that are compatible with this device. </DD>

<DT><B>lpClassDrvInfoList</B> </DT>

<DD>Pointer to a linked list of DRIVER_INFO structures representing all drivers for this device's class. 
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DEVICE_INFO"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
