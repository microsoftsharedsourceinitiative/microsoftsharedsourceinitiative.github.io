<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>.m (Memory)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT=".m (Memory)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="ddk_.m_memory__me"></A>.m (Memory) </H1>

<P>.m[struct][link] [expression [L count]]</P>

<P>Displays information about memory and memory objects. 

<DL>
<DT><I>struct </I></DT>

<DD>Command option. Can be one of these letters. 

<TABLE>

<TR VALIGN="top">
<TH align=left width=15%>Option</TH>
<TH align=left width=85%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=15%><B>a </B></TD>
<TD width=85%>Display arena record. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>c </B></TD>
<TD width=85%>Display context descriptor </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>d </B></TD>
<TD width=85%>Display page directory entry </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>e </B></TD>
<TD width=85%>Toggle stopping in the debugger for memory manager errors (parameter validation errors as well as fatal errors).</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>f </B></TD>
<TD width=85%>With no arguments, dump page fault log. With arguments, set to log faults in a specific range (syntax: .MF &lt;address&gt; L&lt;lengh in bytes&gt;). </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>fb </B></TD>
<TD width=85%>Toggle stopping for each logged page fault. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>ff </B></TD>
<TD width=85%>Toggle logging page faults to debug terminal. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>g </B></TD>
<TD width=85%>Display pager descriptor </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>h</B> [handle] </TD>
<TD width=85%>Displays heap information for the given handle or global information if no handle is given. Displays heap information. This was originally intended for debugging the VMM's memory manager, but may be useful for looking at heap allocations that a device driver makes. This command accepts an optional parameter that specifies the heap allocation handle whose information should be dumped.</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>hs</B> [handle] </TD>
<TD width=85%>Dump statistics about a given heap. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>hw</B> </TD>
<TD width=85%>Toggle paranoid VMM32 heap checking. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>hx</B> [handle] </TD>
<TD width=85%>Check for corruption on given heap defaults to VMM32 fixed heap. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>i </B></TD>
<TD width=85%>Display Instance Data information. The first section lists which pages of V86 memory contain instance data. The second section lists the regions of instance data. A typical entry looks like:
<P>VMAddr 00000413, Lead Byt 01, Algn Byt 29</P>

<P>This means that the instance region starts at 413h in V86 memory, that 1 byte exists before a DWORD boundary and 29h bytes exist after a DWORD boundary, for a total region length of 2Ah bytes. This command is useful for determining if a device has claimed instance data properly, or to just see what data is currently instanced.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>l</B></TD>
<TD width=85%>Display (physical) page table info for a given linear address</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>m</B> [address [l page-count]]</TD>
<TD width=85%>Attempts to force memory present. The address defaults to last page faulted upon (contents of cr2 register). </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>n </B></TD>
<TD width=85%>Force all unlocked memory not present </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>p</B></TD>
<TD width=85%>Display ALL Linear addresses that map the given PhysAddr. This command requires a physical address, so page A0h would be address A0000.</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>r </B></TD>
<TD width=85%>Display arena header </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>s </B></TD>
<TD width=85%>Dumps global memory manager statistics such as how system memory is being used, what sort of pager is being used etc.</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>t </B></TD>
<TD width=85%>Displays page table entry </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>u </B></TD>
<TD width=85%>Toggles computing checksums for page-outs and page-ins </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>v</B></TD>
<TD width=85%>Displays memory handle information for the memory handles that are allocated to the current VM. Originally used in debugging the VMM's memory manager. Also dumps out the list of routines that have used the global _Assign_Device_v86_Pages service.</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>w </B></TD>
<TD width=85%>Dumps allocators of all committed pages. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>x </B></TD>
<TD width=85%>Displays all memory structures for an address. </TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>y </B></TD>
<TD width=85%>Displays valid physical memory ranges. </TD>
</TR>
</TABLE><BR>



<P>If no letter is given, the command displays all the structures associated with a given linear address. 
</DD>

<DT><I>link </I></DT>

<DD>Direction to walk structures if dumping more than one. Can be b to walk backward or <B>f</B> to walk forward. If link is not given, the default is to walk adjacent entries. </DD>

<DT><I>expression </I></DT>

<DD>An expression identifying the structure to display. Can be a linear address, handle, array index, or other value as specified by the struct parameter. </DD>

<DT><I>count </I></DT>

<DD>Number of structures to display if the specified structures are linked. </DD>
</DL>

<P>The default address for the <B>.m</B> and <B>.mx</B> commands is the contents of the cr2 register (the last page fault) and for the other commands it is the first structure in the list. For example,<B> .m</B> displays information about the page that most recently faulted. </P>

<P>A word of caution about the <B>.mm</B>, <B>.mhx</B>, and <B>.mhs</B> commands. If you invoke these commands at the wrong time, you can crash your system. The only time it can be guaranteed safe is if you are currently executing ring 3 code. At other times we may be in the middle of another file system or memory manager operation. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: .m%20(Memory)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
