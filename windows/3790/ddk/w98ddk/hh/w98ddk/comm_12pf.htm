<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>_PORTDATA</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_113"></A>_PORTDATA</H3>

<PRE>include vcomm.inc

_PortData STRUC
PDLength            DW  ?  ; size of this structure
PDVersion           DW  ?  ; version of this structure
PDfunctions         DD  ?  ; address of _PORTFUNCTIONS
PDNumFunctions      DD  ?  ; last supported function
dwLastError         DD  ?  ; see below
dwClientEventMask   DD  ?  ; see below
lpClientEventNotify DD  ?  ; see below
lpClientReadNotify  DD  ?  ; see below
lpClientWriteNotify DD  ?  ; see below
dwClientRefData     DD  ?  ; see below
dwWin31Req          DD  ?  ; reserved
dwClientEvent       DD  ?  ; see below
dwCallerVMID        DD  ?  ; reserved
dwDetectedEvents    DD  ?  ; see below
dwCommError         DD  ?  ; detected I/O errors; see below
bMSRShadow          DB  ?  ; see below
wFlags              DW  ?  ; reserved
LossByte            DB  ?  ; reserved
QInAddr             DD  ?  ; base address of receive queue
QInSize             DD  ?  ; size of receive queue
QOutAddr            DD  ?  ; base address of transmit queue
QOutSize            DD  ?  ; size of transmit queue
QInCount            DD  ?  ; num. bytes in receive queue
QInGet              DD  ?  ; see below
QInPut              DD  ?  ; see below
QOutCount           DD  ?  ; num. bytes in transmit queue
QOutGet             DD  ?  ; see below
QOutPut             DD  ?  ; see below
ValidPortData       DD  ?  ; reserved
lpLoadHandle        DD  ?  ; see below
cmto COMMTIMEOUTS &lt;&gt;       ; see below
lpReadRequestQueue  DD  ?  ; reserved
lpWriteRequestQueue DD  ?  ; reserved
dwLastReceivedTime  DD  ?  ; time of last reception of data
dwReserved1         DD  ?  ; reserved
dwReserved2         DD  ?  ; reserved
_PortData ENDS
 </PRE>

<P>Contains information about an open port. Some of the information in this structure is used by VCOMM, and some by the port driver. The port driver is responsible for initializing the fields whose names begin with <I>PD</I>. </P>

<H4>Members</H4>

<DL>
<DT><B>dwLastError</B> </DT>

<DD>Error value for the last operation. The port driver sets this value during each call to a port-driver function. </DD>

<DT><B>dwClientEventMask</B> </DT>

<DD>Zero or more values specifying enabled communications events. VCOMM sets this value when the <B>_VCOMM_SetCommEventMask</B> service is called. For a list of events, see the <B>PortGetEventMask</B> function. </DD>

<DT><B>lpClientEventNotify</B>, <B>lpClientReadNotify</B>, and <B>lpClientWriteNotify</B> </DT>

<DD>Addresses of client-defined callback functions for event notification, receive-queue threshold notification, and transmit-queue threshold notification. </DD>

<DT><B>dwClientRefData</B> </DT>

<DD>Reference data for event notification (not for threshold notifications). The port driver sets this value when the <B>PortEnableNotification</B> function is called. </DD>

<DT><B>dwClientEvent</B> </DT>

<DD>One or more values specifying detected events that VCOMM is waiting to sent to a non-VxD client. Port drivers should ignore this field. </DD>

<DT><B>dwDetectedEvents</B> </DT>

<DD>One or more values specifying enabled events that were detected. The port driver maintains this value. For a list of events, see the <B>PortGetEventMask</B> function. </DD>

<DT><B>dwCommError</B> </DT>

<DD>Value specifying detected I/O errors. The port driver maintains this value. For a list of possible values, see the <B>_VCOMM_ClearCommError</B> service. </DD>

<DT><B>bMSRShadow</B> </DT>

<DD>The initial location of the modem status shadow. The port driver must update this value whenever the register changes. The <B>PortSetModemStatusShadow</B> function sets the location of the modem status shadow. </DD>

<DT><B>QInGet</B> and <B>QInPut</B> </DT>

<DD>Current read and write offsets within the receive queue. The first character in the queue is at the location specified by <B>QInGet</B>. Additional characters are added to the queue starting at the location specified by <B>QInPut</B>. Both VCOMM and the port driver modify these values. </DD>

<DT><B>QOutGet</B> and <B>QOutPut</B> </DT>

<DD>Current read and write offsets within the transmit queue. The first character in the queue is at the location specified by <B>QInGet</B>. Additional characters are added to the queue starting at the location specified by <B>QInPut</B>. Both VCOMM and the port driver modify these values. </DD>

<DT><B>lpLoadHandle</B> </DT>

<DD>Load handle of the port-driver VxD. This field is used by VCOMM only. </DD>

<DT><B>cmto</B> </DT>

<DD>A <B>COMMTIMEOUTS</B> structure specifying the read and write time-outs for the communications port. 
</DD>
</DL>

<H4>See Also</H4>

<P><B>commtimeouts</B>, <B>PortEnableNotification</B>, <B>_PORTFUNCTIONS</B>, <B>PortGetEventMask</B>, <B>PortSetModemStatusShadow</B>, <B>_VCOMM_ClearCommError</B>, <B>_VCOMM_SetCommEventMask</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: _PORTDATA"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
