<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>KS_BITMAPINFOHEADER</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_wdmvcap_ks_bitmapinfoheader"></A>KS_BITMAPINFOHEADER</H3>

<P>The <B>KS_BITMAPINFOHEADER</B> structure contains all the details about the video stream, including the actual image dimensions and the pixel depth. This is the same structure as the user mode, GDI bitmap header (<B>BITMAPINFOHEADER</B>) structure. A source filter can request that the sink take only a section of the video by providing a clipping rectangle in <B>rcSource</B>. In the worst case, where the sink filter forgets to check this on connection, it will simply render all of it, without consequence.</P>

<P>Ideally, a sink filter will check the <B>rcSource</B> and if it does not support image extraction and the rectangle is not empty, then it will reject the connection. A filter should use <B>SetRectEmpty</B> to reset a rectangle to all zeroes (and <B>IsRectEmpty</B> to later check the rectangle). The <B>rcTarget</B> specifies the destination rectangle for the video. For most source filters, they will set this to all zeroes. A downstream filter may request that the video be placed in a particular area of the buffers it supplies. In this case, it will call <B>QueryAccept</B> with a nonempty target.</P>

<PRE class=syntax>typedef struct tagKS_BITMAPINFOHEADER{
  DWORD  biSize;
  LONG   biWidth;
  LONG   biHeight;
  WORD   biPlanes;
  WORD   biBitCount;
  DWORD  biCompression;
  DWORD  biSizeImage;
  LONG  biXPelsPerMeter;
  LONG  biYPelsPerMeter;
  DWORD  biClrUsed;
  DWORD  biClrImportant;
} KS_BITMAPINFOHEADER, *PKS_BITMAPINFOHEADER;</PRE>

<H4>Members</H4>

<DL>
<DT><B>biSize</B></DT>

<DD>Specifies the size of the structure in bytes.</DD>

<DT><B>biWidth</B></DT>

<DD>Specifies the width of the bitmap in pixels.</DD>

<DT><B>biHeight</B></DT>

<DD>Specifies the height of the bitmap in pixels.</DD>

<DT><B>biPlanes</B></DT>

<DD>Specifies the number of planes. This is always set to 1.</DD>

<DT><B>BiBitCount</B></DT>

<DD>Specifies the color bits per pixel (1, 4, 8, 24).</DD>

<DT><B>BiCompression</B></DT>

<DD>Specifies the compression scheme.</DD>

<DT><B>BiSizeImage</B></DT>

<DD>Specifies the size of bitmap bits in bytes. (Only required if using compression.)</DD>

<DT><B>BiXPelsPerMeter</B></DT>

<DD>Specifies the horizontal resolution in pixels per meter.</DD>

<DT><B>BiYPelsPerMeter</B></DT>

<DD>Specifies the vertical resolution in pixels per meter.</DD>

<DT><B>BiClrUsed</B></DT>

<DD>Specifies the number of colors used in the image.</DD>

<DT><B>BiClrImportant</B></DT>

<DD>Specifies the number of important colors in the image.
</DD>
</DL>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: KS_BITMAPINFOHEADER"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
