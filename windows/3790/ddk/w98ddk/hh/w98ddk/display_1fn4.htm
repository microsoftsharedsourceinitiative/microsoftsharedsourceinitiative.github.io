<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>DIB_RealizeObjectExt</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_570"></A>DIB_RealizeObjectExt</H3>

<PRE>WORD DIB_RealizeObjectExt(LPPDEVICE lpDestDev, WORD wStyle, 
    LPVOID lpInObj, LPVOID lpOutObj, LPTEXTXFORM lpTextXForm, 
    LPPDEVICE lpDisplayDev);
 </PRE>

<P>Creates or deletes a physical object. The function creates a physical object by filling a structure provided by the minidriver with device-specific data that corresponds to the attributes of a given logical pen, brush, bitmap, or font; it deletes the physical object by removing any memory or resources it allocated when creating the object. </P>

<P>If successful and if <B>lpOutObj</B> is NULL, returns the size in bytes of the physical object. If successful and if <B>lpOutObj</B> is not NULL, returns one of the following values.</P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=52%>Condition </TH>
<TH align=left width=48%>Return Value </TH>
</TR>

<TR VALIGN="top">
<TD width=52%>For solid brushes for a monochrome <B>PDEVICE</B> </TD>
<TD width=48%>8001h </TD>
</TR>

<TR VALIGN="top">
<TD width=52%>For solid brushes for a color <B>PDEVICE</B> </TD>
<TD width=48%>8002h </TD>
</TR>

<TR VALIGN="top">
<TD width=52%>For all other brush styles and objects </TD>
<TD width=48%>8000h </TD>
</TR>
</TABLE><BR>

<P>If unsuccessful, returns zero. 

<DL>
<DT><I>lpDestDev</I> </DT>

<DD>Address of a <B>PDEVICE</B> or <B>PBITMAP</B> structure specifying the device or bitmap to create the physical object for. </DD>

<DT><I>wStyle</I> </DT>

<DD>A negative value to delete an object, or one of the following values. 

<TABLE>

<TR VALIGN="top">
<TH align=left width=18%>Value </TH>
<TH align=left width=82%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=18%>OBJ_PEN </TD>
<TD width=82%>Realize a physical pen. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>OBJ_BRUSH </TD>
<TD width=82%>Realize a physical brush. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>OBJ_FONT </TD>
<TD width=82%>Realize a device font. If the device has no device fonts or cannot realize the requested font, the <B>RealizeObject</B> function returns zero. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>OBJ_PBITMAP </TD>
<TD width=82%>Realize a device bitmap. GDI passes this value only if the RC_DEVBITS value is set in the <B>dpRaster</B> member of the driver's <B>GDIINFO</B> structure. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>lpInObj</I> </DT>

<DD>Address of a <B>LPEN</B>, <B>LBRUSH</B>, <B>LFONT</B>, or <B>PBITMAP</B> structure (depending on the <I>wStyle</I> parameter). The structure describes the logical attributes of the object to be realized. 

<P>If <I>wStyle</I> is negative, the <I>lpInObj</I> parameter points to the <B>PPEN</B>, <B>PBRUSH</B>, <B>FONTINFO</B>, or <B>PBITMAP</B> structure identifying the physical object to be deleted. 
</DD>

<DT><I>lpOutObj</I> </DT>

<DD>Address of a buffer to receive the realized object, or points to the physical object to delete, depending on the value of the <I>wStyle</I> parameter. 

<P>If <I>wStyle</I> is positive, the <I>lpOutObj</I> parameter points to a buffer. The function fills the buffer with device-specific data that defines a physical object corresponding to the logical object pointed to by the <I>lpInBuf</I> parameter. If <I>lpOutObj</I> is NULL, the function returns the size (in bytes) of the physical object. 


<P>If <I>wStyle</I> is negative, <I>lpOutBuf</I> points to the physical object to delete. Although GDI frees the memory pointed to by <I>lpOutBuf</I> when the function returns, the <B>RealizeObject</B> function must free any other memory or resources associated with the physical object. 
</DD>

<DT><I>lpTextXForm</I> </DT>

<DD>Address of a <B>TEXTXFORM</B> structure or specifies a <B>POINT</B> structure, depending on the <I>wStyle</I> parameter. </DD>

<DT><I>lpDisplayDev</I> </DT>

<DD>Address of <B>PDEVICE</B> structure that specifies color data for the display surface. 
</DD>
</DL>

<P>If <I>wStyle</I> is OBJ_BRUSH, the <I>lpTextXForm</I> parameter is a <B>POINT</B> structure containing the x- and y-coordinates (relative to an 8-bit boundary) on which to align the start of the brush's pattern. </P>

<P>If <I>wStyle</I> is OBJ_FONT, <I>lpTextXForm</I> points to a <B>TEXTXFORM</B> structure containing information about the appearance of a realized font. Both the realized font and the contents of the <B>TEXTXFORM</B> structure are later passed to the <B>ExtTextOut</B> function, allowing more capable devices to make changes to the standard font. </P>

<P>The export ordinal for this function is 400. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: DIB_RealizeObjectExt"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
