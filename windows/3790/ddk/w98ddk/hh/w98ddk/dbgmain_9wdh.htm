<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Starting from Boot</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="Starting from Boot">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_starting_from_boot_me"></A>Starting from Boot </H3>

<P>You can start the debugger at boot by using the debug version of io.sys and the wdeb.ini initialization file. An example wdeb.ini file looks like this: </P>

<PRE>/x /c:1 /r:57600
/s:c:\windows\explorer.sym
/s:c:\windows\system\dibeng.sym
/s:c:\windows\system\gdi32.sym
/s:c:\windows\system\gdif.sym
/s:c:\windows\system\kernel32.sym
/s:c:\windows\system\krnl386.sym
/s:c:\windows\system\ifsmgr.sym
/s:c:\windows\system\ios.sym
/s:c:\windows\system\mshtml.sym
/s:c:\windows\system\ndis.sym
/s:c:\windows\system\ntkern.sym
</PRE>

<P>This wdeb.ini file loads the debugger in XMS memory (recommended) using COM 1 and a baudrate of 57,600. It also loads symbol files for several components.</P>

<P>Following are the command-line options and parameters: </P>

<TABLE>

<TR VALIGN="top">
<TH align=left width=19%>Options</TH>
<TH align=left width=81%>Parameters</TH>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/A </B></TD>
<TD width=81%>Specifies that symbol files should not be automatically loaded. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/B </B></TD>
<TD width=81%>Specifies that the debugger should stop just prior to VMM initialization, after all virtual devices have been loaded and the processor is running in protected mode. This option is useful if you want to install breakpoints early. Also, if you use the debugger’s .VMM s command at this stop point, you can turn on verbose device tracing which displays the name of each VxD before it is called, and OK when the VxD returns.</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/C:</B>comport </TD>
<TD width=81%>Specifies a COM port for debugger output. You can specify "1", "2", "3", or "4" for comport. Machines with a Legacy Free COM port should specify COM 4.</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/D:</B>"commands" </TD>
<TD width=81%>Carries out the debugger command line specified by the string enclosed in quotation marks. Spaces, semicolons (;), and other punctuation can be included in the command string. To use a single quote (') on the command line, use double quotation marks (") before and after the single quotation mark.
<P>The commands specified in this option are carried out after symbols are loaded. This means you can set breakpoints in code even before the code has been loaded. Before a segment or module has been loaded or defined, breakpoints can be set on the logical address (a combination of map number and group number) until the segment or module is defined, at which point the breakpoint turns into a real breakpoint.  </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/H</B></TD>
<TD width=81%>Specifies that the debugger should be loaded as a VxD. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/L</B> </TD>
<TD width=81%>Specifies that the debugger should be invisible to int 41. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/R:</B>dddd </TD>
<TD width=81%>Sets the baud rate for the debugging terminal. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/S:</B> symfile </TD>
<TD width=81%>Specifies a symbol file to be loaded. This option can be repeated to load more than one symbol file. If the symbol files are not in your current directory, you must supply a full path, because the debugger does not use the PATH environment variable to locate any of the files supplied on the command line. 
<P>When memory is low, you can use more symbol files by running the Debugger in the Windows directory and specifying the full path of VMM32.VXD (such as \WINDOWS\SYSTEM\VMM32.VXD) instead of WIN.COM. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/T:</B>hhhh </TD>
<TD width=81%>Sets the port number for the timing card (The default number is 250h.). See MSDN® Library CD: Q85897, “Debugger.exe-Compatible Timing Card Available.”</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/V</B> </TD>
<TD width=81%>Enables verbose mode, which displays messages indicating which segments are being loaded. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/VP</B> </TD>
<TD width=81%>Enables verbose mode, which displays messages indicating which segments are being loaded. This option displays the messages for applications only. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/X </B></TD>
<TD width=81%>Causes symbols to be loaded into Extended Memory Specification (XMS) memory. </TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/P</B></TD>
<TD width=81%>Specifies that debug text will be sent in packet form, with timeouts. This is slightly slower than raw serial data, but serial “line noise” is virtually eliminated.</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>/PX</B></TD>
<TD width=81%>Specifies that debug text will be sent in packet form, with infinite retries. This is slightly slower than raw serial data, but serial “line noise” is virtually eliminated.</TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Starting%20from%20Boot"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
