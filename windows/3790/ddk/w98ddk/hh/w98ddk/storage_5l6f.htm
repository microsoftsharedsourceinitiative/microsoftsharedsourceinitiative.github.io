<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>I/O Request Processing</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_4097"></A>I/O Request Processing</H2>

<P>A VSD receives I/O requests through its I/O request routine, that is, the routine the driver inserted in the calldown list when processing the AEP_CONFIG_DCB function. </P>

<P>When the driver receives a request, the <B>IOP</B> structure for the request is on the stack. The driver must check the <B>IOR_func</B> member to determine whether it should process the request. If the VSD does not recognize the request or does not include code to process the request, it must pass the request to the next driver in the calldown chain. Before the VSD passes a request to the next driver, the VSD must install its own callback procedure in the <B>IOP</B> structure. This ensures that the VSD receives notification when the request is complete and permits the VSD to pass this notification to drivers in layers above it. </P>

<P>A VSD that processes a request can do so in a variety of ways, such as: 

<UL>
	<LI>Modify the request data before passing it to the next driver </LI>

	<LI>Process the request without passing it to lower layers </LI>

	<LI>Generate new requests and passing them through the calldown chain </LI>
</UL>

<P>If a VSD passes a modified request to the next driver in the calldown chain, the VSD must install its own callback procedure in the <B>IOP</B> structure to make sure that the VSD receives notification when the request is complete. </P>

<P>A VSD typically processes a request without passing it to lower layers if it can complete the request without accessing the device. In such cases, the VSD must set the <B>IOR_result</B> member to an appropriate value and call the callback procedure whose address is pointed to by the <B>IOP_callback_ptr</B> member. </P>

<P>If a VSD generates new I/O requests in response to a given request, the VSD must use I/O services such as the IOP_CREATE_IOP and IOP_DEALLOC_MEM functions to allocate and free memory for the corresponding <B>IOP</B> structures. A VSD can initiate an synchronous internal I/O request by calling the <B>ILB_internal_request</B> routine. </P>

<H4>See Also</H4>

<P><B>AEP</B>, <B>ILB_internal_request</B>, <B>IOP</B>, <B>IOR</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: I%2FO%20Request%20Processing"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
