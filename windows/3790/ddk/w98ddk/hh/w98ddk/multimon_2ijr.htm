<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Implementing Multimonitor Support for DirectX Programming</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_multimon_implementing_multimonitor_support_for_directx_programming"></A>Implementing Multimonitor Support for DirectX Programming</H1>

<P>Applications do not need to be rewritten to work with multimonitor support. Full emulation is provided in the operating system. Full-screen applications work in the manner that 3-Dfx applications currently do. No functions were added to DirectDraw for multimonitor support— <B>DirectDrawEnumerate</B> does it all. For windowed applications, however, the application needs to be aware of multimonitor support to take advantage of the new hardware. The changes include the following:

<UL>
	<LI>The application must use different DirectDraw objects and capability bits.</LI>

	<LI>The application cannot share surfaces and it cannot blit between the displays.</LI>

	<LI>The application must use device coordinates, not screen coordinates, as these are no longer the same.</LI>

	<LI>The application must use emulation for windowed applications. This only applies to <B>DirectDrawCreate</B>(NULL) and is based on the first call to <B>IDirectDraw::SetCooperativeLevel</B>. The driver writer must use a GUID to use hardware.</LI>
</UL>

<P><B>DirectDrawEnumerate</B> enumerates every active display in the system. It enumerates the primary display twice — once as NULL and once as a GUID — just as <B>DirectSoundEnumerate</B> does, but it will not do this on single monitor systems. DDCAPS_GDI is set for GDI drivers.</P>

<P>Win32 functions use device names, while DirectX functions use GUIDs. <B>DirectDrawEnumerate</B> enumerates the GUID and device name. For an example of how this works, see the sample STRETCH2 in the DirectX SDK. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Implementing%20Multimonitor%20Support%20for%20DirectX%20Programming"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
