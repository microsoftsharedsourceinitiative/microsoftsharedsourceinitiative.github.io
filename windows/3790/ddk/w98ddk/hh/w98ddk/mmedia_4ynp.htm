<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Specifying the Input Format and Determining the Compression Format</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="_pss_2775"></A>Specifying the Input Format and Determining the Compression Format</H3>

<P>The client-application uses the ICM_COMPRESS_GET_FORMAT or ICM_COMPRESS_QUERY message to specify the input format and determine the compression (output) format. The client-application sends ICM_COMPRESS_GET_FORMAT if it wants your driver to suggest the compressed format. The client-application sends ICM_COMPRESS_QUERY to determine if your driver supports a format it is suggesting. </P>

<P>Both messages have a pointer to a BITMAPINFO data structure in <I>dwParam1</I>. This structure specifies the format of the incoming uncompressed data. The contents of <I>dwParam2</I> depends on the message. </P>

<P>If the client-application wants your driver to suggest the format, it determines the size of the buffer needed for the compressed data format by sending ICM_COMPRESS_GET_FORMAT. When requesting the buffer size, the client-application uses <I>dwParam1</I> to point to a BITMAPINFO structure and sets <I>dwParam2</I> to NULL. Based on the input format, your driver should return the number of bytes needed for the format buffer. Return a buffer size at least large enough to hold a BITMAPINFOHEADER data structure and a color table. </P>

<P>The client-application gets the output format by sending ICM_COMPRESS_GET_FORMAT with valid pointers to BITMAPINFO structures in both <I>dwParam1</I> and <I>dwParam2</I>. Your driver should return the output format in the buffer pointed to by <I>dwParam2</I>. If your driver can produce multiple formats, the format selected by your driver should be the one that preserves the greatest amount of information rather than one that compresses to the most compact size. This will preserve image quality if the video data is later edited and recompressed. </P>

<P>The output format data becomes the 'strf' chunk in the AVI RIFF file. The data must start out like a BITMAPINFOHEADER data structure. You can include any additional information required to decompress the file after the BITMAPINFOHEADER data structure. A color table (if used) follows this information. </P>

<P>If you have format data following the BITMAPINFOHEADER structure, update the <B>biSize</B> member to specify the number of bytes used by the structure and your additional data. If a color table is part of the BITMAPINFO information, it follows immediately after your additional information. </P>

<P>If your driver cannot handle the input format, it returns ICMERR_BADFORMAT to fail the message. </P>

<P>If your driver gets ICM_COMPRESS_QUERY, the <I>dwParam1</I> parameter points to a BITMAPINFO data structure containing the input format data. The <I>dwParam2</I> parameter will either be NULL or contain a pointer to a BITMAPINFO structure describing the compressed format the client-application wants to use. If <I>dwParam2</I> is NULL, your compression driver can use any output format. (The client-application just wants to know if your driver can handle the input.) If <I>dwParam2</I> points to a BITMAPINFO structure, the client-application is suggesting the output format. </P>

<P>If your driver supports the specified input and output format, or it supports the specified input with NULL specified for <I>dwParam2</I>, return ICERR_OK to indicate the driver accepts the formats. Your driver does not have to accept the suggested format. If you fail the message by returning ICERR_BADFORMAT, the client-application suggests alternate formats until your driver accepts one. If your driver exhausts the list of formats normally used, the client-application requests a format with ICM_COMPRESS_GET_FORMAT. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Specifying%20the%20Input%20Format%20and%20Determining%20the%20Compression%20Format"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
