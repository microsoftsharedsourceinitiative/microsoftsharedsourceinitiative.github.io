<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MM_MCINOTIFY</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_2592"></A>MM_MCINOTIFY</H1>

<P>This message is sent to a window to notify an application that an MCI device has completed an operation. MCI devices send this message only when the MCI_NOTIFY flag is used with an MCI command message or when the notify flag is used with an MCI command string. 

<UL>
	<LI>Returns zero if successful. Otherwise, it returns an MCI error code. </LI>
</UL>

<DL>
<DT>UINT <I>wParam</I> </DT>

<DD>Contains one of the following message: 

<TABLE>

<TR VALIGN="top">
<TD width=34%>MCI_NOTIFY_ABORTED </TD>
<TD width=66%>Specifies that the device received a command that prevented the current conditions for initiating the callback from being met. If a new command interrupts the current command and it also requests notification, the device will send only this message and not MCI_NOTIFY_SUPERSEDED. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MCI_NOTIFY_SUCCESSFUL </TD>
<TD width=66%>Specifies that the conditions initiating the callback have been met. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MCI_NOTIFY_SUPERSEDED </TD>
<TD width=66%>Specifies that the device received another command with the MCI_NOTIFY flag set and the current conditions for initiating the callback have been superseded. </TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MCI_NOTIFY_FAILURE </TD>
<TD width=66%>Specifies that a device error occurred while the device was executing the command. </TD>
</TR>
</TABLE><BR>

</DD>

<DT>LPARAM <I>lParam</I> </DT>

<DD>The low-order word specifies the ID of the device initiating the callback. 
</DD>
</DL>

<P>A device returns the flag MCI_NOTIFY_SUCCESSFUL with MM_MCINOTIFY when the action for a command finishes. For example, a CD audio device uses this flag for notification for MCI_PLAY when the device finishes playing. The MCI_PLAY command completes successfully only when it reaches the specified end position or reaches the end of the media. Similarly, MCI_SEEK and MCI_RECORD do not return MCI_NOTIFY_SUCCESSFUL until they reach the specified end position or reach the end of the media. </P>

<P>A device returns the flag MCI_NOTIFY_ABORTED with MM_MCINOTIFY only when it receives a command that prevents it from meeting the notification conditions. For example, the command MCI_PLAY would not abort notification for a previous play command provided that the new command does not change the play direction or change the ending position for the play command with an active notify. The MCI_RECORD and MCI_SEEK commands behave similarly. </P>

<P>MCI also does not send MCI_NOTIFY_ABORTED when MCI_PLAY or MCI_RECORD is paused with MCI_PAUSE. Sending the MCI_RESUME command will let them continue to meet the callback conditions. </P>

<P>When your application requests notification for a command, check the error return of <B>mciSendMessage</B> or <B>mciSendCommand</B>. If these functions encounter an error and return a nonzero value, MCI will not set notification for the command. </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: MM_MCINOTIFY"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
