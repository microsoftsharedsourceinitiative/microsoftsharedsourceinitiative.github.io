<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Events</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1165"></A>Events</H1>

<P>The Windows 95 virtual machine manager (VMM) is a multiple threaded, non-reentrant operating system. Because it is non-reentrant, virtual devices (VxDs) that process hardware interrupts must have some method of synchronizing their calls to the VMM. For this reason, Windows 95 has the concept of "event" processing. </P>

<P>Events are requests from VxDs that a callback procedure be called at a more propitious time. An event is made of the following pieces of information: 

<UL>
	<LI>The procedure to be called (the event callback procedure).</LI>

	<LI>An arbitrary 32-bit reference data to pass to the event callback procedure.</LI>

	<LI>Information describing the conditions under which the event callback procedure may be called.</LI>

	<LI>An optional priority boost associated with the event.</LI>

	<LI>An optional timeout associated with the event.</LI>
</UL>

<P>If one of the prerequisites for an event is that it be called when the current virtual machine or current thread is a particular thread, it is said that the event is scheduled 'for' that thread or virtual machine. The act of calling the event callback procedure is referred to as 'processing' the event. </P>

<P>When a VxD is entered because of an asynchronous interrupt such as a hardware interrupt, the VxD can call only a small subset of services. The VxD can: 

<UL>
	<LI>Call any Virtual PIC Device (VPICD) service. </LI>

	<LI>Call any asynchronous VMM service. </LI>

	<LI>Schedule events. </LI>
</UL>

<P>Devices that service hardware interrupts often need to use services other than those referred to above. When this is the case, the VxD must schedule an event. That is, the VxD calls an event service such as <B>Schedule_VM_Event</B>, specifying a callback function that the VMM calls when it is safe to call synchronous services. </P>

<P>You can schedule global events or events that a specific to a VM or thread. The callback function for a global event may be called at any time. However, a VM event callback function is always called with the specified VM as the current VM. Similarly a thread event callback function is always called with the specified thread as the current thread. </P>

<P>Certain services can only be called if no VM owns the critical section. To schedule an event such that the callback function is only called when the critical section is not owned, you can use the <B>Call_Restricted_Event</B> service with the PEF_WAIT_NOT_CRIT flag.  You can schedule a critical section callback function by using the <B>Call_When_Not_Critical</B> service. For more information about critical sections, see <I>Synchronization</I>. </P>

<P>VM events are often useful for virtual devices that do not service hardware interrupts and can be scheduled at any time except during a Non-Maskable Interrupt (NMI). </P>

<P>Restricted events, which are the most general type of event, are new for Windows 95. When scheduling a restricted event, you can specify a number of "restrictions", or conditions that must be met before the event callback will be called. </P>

<P>Services whose names are of the form Call_XX_Event have the option either to schedule an event or to call the event callback procedure immediately without scheduling an event. The event will be scheduled if the VMM is processing a hardware interrupt that interrupted the VMM, or if the event is virtual machine-specific or thread-specific and the requested virtual machine or thread is not the current virtual machine or thread. The event will also be scheduled if the PEF_ALWAYS_SCHED bit is set, assuming the service supports such a bit. (Not all do.) This list of conditions is intended to be informative and not comprehensive. The VMM reserves the right to choose to schedule the event under conditions not explicitly listed above. </P>

<H4>See Also</H4>

<P><B>Call_Priority_VM_Event</B>, <B>Call_When_Not_Critical</B>,<B> Call_Restricted_Event</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Events"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
