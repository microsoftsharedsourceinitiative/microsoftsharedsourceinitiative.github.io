<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>List_Create</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H1><A NAME="_pss_1379"></A>List_Create</H1>

<PRE>include vmm.inc

mov     eax, Flags      ; creation flags
mov     ecx, NodeSize   ; size in bytes of each node in list
VMMCall List_Create

jc      error           ; carry flag set if error
mov     [List], esi     ; list handle
 </PRE>

<P>Creates a new list and returns a list handle that virtual devices use in subsequent calls to other list services. Uses ESI, Flags. 

<UL>
	<LI>Returns with the carry flag clear and the list handle in the ESI register, if successful. The carry flag is set if an error occurs. </LI>
</UL>

<DL>
<DT><I>Flags</I></DT>

<DD>Creation flags. Can be zero or more of these values: 

<TABLE>

<TR VALIGN="top">
<TH align=left width=20%>Value </TH>
<TH align=left width=80%>Meaning </TH>
</TR>

<TR VALIGN="top">
<TD width=20%>LF_Alloc_Error </TD>
<TD width=80%>Directs the <B>List_Allocate</B> service to returns with carry flag set if new node could not be allocated. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>LF_Async </TD>
<TD width=80%>Creates an asynchronous list that can be used while processing interrupts. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>LF_Use_Heap </TD>
<TD width=80%>Allocates nodes on the system heap. This value must not be used in combination with the LF_Async value. </TD>
</TR>

<TR VALIGN="top">
<TD width=20%>LF_Swap </TD>
<TD width=80%>Allocates nodes from the swappable system heap. This value must not be used in combination with the LF_Async value. </TD>
</TR>
</TABLE><BR>

</DD>

<DT><I>NodeSize</I></DT>

<DD>Size, in bytes, of each node in the list. 
</DD>
</DL>

<P>If a virtual device requires large nodes, it should specify the LF_Use_Heap value to force the nodes to be allocated from the system heap. All allocate and deallocate calls for lists created in this way use the <B>_HeapAlloc</B> and <B>_HeapFree</B> services to create and destroy nodes. </P>

<P>To access a list during hardware interrupts, a virtual device must set the LF_Async value when creating the list. This forces list operations to be atomic operations which cannot be re-entered. When using an asynchronous list, the virtual device must disable interrupts before calling the list services. The virtual device must disable interrupts even if when not calling during an interrupt. The virtual device must use the <B>pushf</B>, <B>cli</B>, and <B>popf</B> instructions to disable and re-enable interrupts. It must not use the <B>sti</B> instruction to enable interrupts unless other documentation states that this is permitted. </P>

<P>If the LF_Alloc_Error value is not specified, the system crashes the current virtual machine if the <B>List_Allocate</B> service fails. If this value is specified, <B>List_Allocate</B> returns with the carry flag set when an allocation fails. </P>

<P>If the LF_Swap value is specified, then list nodes are allocated from the swappable system heap. Consequently, all list services related to swappable list nodes become subject to constraints on accessing swappable memory. </P>

<H4>See Also</H4>

<P><B>List_Allocate</B>, <B>List_Deallocate</B>, <B>List_Destroy</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: List_Create"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
