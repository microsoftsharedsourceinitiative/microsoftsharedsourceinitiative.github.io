<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SRB (SCSI_REQUEST_BLOCK)</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT><META NAME="MS-HKWD" CONTENT="SRB (SCSI_REQUEST_BLOCK)">
</HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H3><A NAME="ddk_srb_scsi_request_block__si"></A>SRB (SCSI_REQUEST_BLOCK)</H3>

<TABLE border=1 frame=box rules=all>

<TR VALIGN="top">
<TD width=8%><B>Offset</B></TD>
<TD width=37%>
<PRE><B>Element</B></PRE>
</TD>
<TD width=55%><B>Comments</B></TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 0</B></TD>
<TD width=37%><B>USHORT Length</B></TD>
<TD width=55%>IN: Size SCSI_REQUEST_BLOCK.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 2</B></TD>
<TD width=37%><B>UCHAR Function</B></TD>
<TD width=55%>IN: Function. </TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 3</B></TD>
<TD width=37%><B>UCHAR SrbStatus</B></TD>
<TD width=55%>OUT: Status from HBA.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 4</B></TD>
<TD width=37%><B>UCHAR ScsiStatus</B></TD>
<TD width=55%>OUT: Status from HBA.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 5</B></TD>
<TD width=37%><B>UCHAR PathId</B></TD>
<TD width=55%>IN: Set to DCB_bus_number (geometry).</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 6</B></TD>
<TD width=37%><B>UCHAR TargetId</B></TD>
<TD width=55%>IN: Set to DCB_scsi_target_id.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 7</B></TD>
<TD width=37%><B>UCHAR Lun</B></TD>
<TD width=55%>IN: Set to DCB_scsi_lun.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 8</B></TD>
<TD width=37%><B>UCHAR QueueTag</B></TD>
<TD width=55%>IN: 0. Used by SCSIPORT to enqueue the SRB on the adapter's input queue. Also see MultipleRequestPerLu in HW_INITIALIZATION_DATA structure.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 9</B></TD>
<TD width=37%><B>UCHAR QueueAction</B></TD>
<TD width=55%>IN: 0 (Not used in SCSIPORT).</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> a</B></TD>
<TD width=37%><B>UCHAR CdbLength</B></TD>
<TD width=55%>IN: Length of CDB e.g. 6 for Inquiry.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> b</B></TD>
<TD width=37%><B>UCHAR SenseInfoBufferLength</B></TD>
<TD width=55%>IN: Length of SenseInfoBuffer. Postcall: miniport driver updates this field if it supports auto-sense request (transfers sense-request information).</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> c</B></TD>
<TD width=37%><B>ULONG SrbFlags</B></TD>
<TD width=55%>IN; e.g. SRB_FLAGS_DATA_IN + SRB_FLAGS_DISABLE_DISCONNECT</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 10</B></TD>
<TD width=37%><B>ULONG DataTransferLength</B></TD>
<TD width=55%>IN:Size of DataBuffer, e.g. SIZE_OF_INQUIRYDATA. 
<P>OUT: miniport driver updates this field if an under-run or over-run occurs. Caution: This field, combined with DataBuffer, is used by Windows 95 ScsiPort(xxx)Buffer(xxx) (SGD emulation) routines when searching for the SRB corresponding to the memory buffer address desired. In such cases, if this SRB is being accessed by the miniport driver, never modify these fields. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 14</B></TD>
<TD width=37%><B>ULONG TimeOutValue</B></TD>
<TD width=55%>IN: Must set this prerequest, if SCSI PASSTHROUGH. SCSIPORT puts this into IOP_timer and IOP_timer_orig (500ms intervals)</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 18</B></TD>
<TD width=37%><B>PVOID DataBuffer</B></TD>
<TD width=55%>IN: Point to memory created using the ILB_Service_rtn() ISP_Alloc_Mem, e.g. SIZE_OF_INQUIRYDATA, and so on. SCSIPORT sets this to the value in IOP_ior.buffer_ptr, if SRB_flags indicate data transfer in or out.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 1c</B></TD>
<TD width=37%><B>PVOID SenseInfoBuffer</B></TD>
<TD width=55%>IN: Pointer to sense information buffer; which is typically located just past our SrbExtension. Make large enough to accommodate worst-case sense data from drive. Set to null to disable auto-sense.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 20</B></TD>
<TD width=37%><B>struct _SCSI_REQUEST_BLOCK *NextSrb</B></TD>
<TD width=55%>IN: Set to 0. SCSIPORT uses this field to link the enqueued SRBs in a chain (see QueueTag above)</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 24</B></TD>
<TD width=37%><B>PVOID OriginalRequest</B></TD>
<TD width=55%>IN: 0. Not used by SCSIPORT.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 28</B></TD>
<TD width=37%><B>PVOID SrbExtension</B></TD>
<TD width=55%>IN: Pointer to extension area (just past this SRB, and the _PORT_SRB extension). Length of this extension area is DCB_srb_ext_size. Set up by ScsiPortInitialize() to supply miniport requested/defined per-request state information storage.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 2c</B></TD>
<TD width=37%><B>ULONG QueueSortKey</B></TD>
<TD width=55%>Used in SCSIPORT as a temporary to hold a pointer to an APE structure if paging drive is having problems and drive retries are required.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 30</B></TD>
<TD width=37%><B>UCHAR Cdb[16]</B></TD>
<TD width=55%>IN: Contains desired CDB to issue to HBA. Actual command length is CdbLength. If communicating with an ATAPI device (through ESDI_506.PDR), length can be set to (a maximum of) 12, even if an actual command uses fewer bytes. If communicating with a SCSI device, the length must correspond to the expected length of the command.</TD>
</TR>
</TABLE><BR>

<P>_PORT_SRB </P>

<P>(Windows 9x Miniport SRB extension)</P>

<TABLE border=1 frame=box rules=all>

<TR VALIGN="top">
<TD width=8%><B>Offset</B></TD>
<TD width=37%>
<PRE><B>Element</B></PRE>
</TD>
<TD width=55%><B>Comments</B></TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 00</B></TD>
<TD width=37%><B>SCSI_REQUEST_BLOCK  BaseSrb</B></TD>
<TD width=55%>_PORT_SRB IS AN EXTENSION OF SCSI_REQUEST_BLOCK; not present under  NT-based operating systems.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 40</B></TD>
<TD width=37%><B>PVOID SrbIopPointer</B></TD>
<TD width=55%>IN: Pointer to the IOP. This is a means for the SCSI miniport driver to gain access to the IOP (not compatible with the miniport model used in NT-based operating systems).</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 44</B></TD>
<TD width=37%><B>SCSI_REQUEST_BLOCK *SrbNextSrb</B></TD>
<TD width=55%>This pointer chains pending SRBs together. Used by SCSIPORT.PDR to manage SRBs.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 48</B></TD>
<TD width=37%><B>SCSI_REQUEST_BLOCK *SrbNextActiveSrb</B></TD>
<TD width=55%>IN:  Allows SCSIPORT to keep a list of all active SRBs (SRBs that have been submitted to a miniport and are still under its control).</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 4C</B></TD>
<TD width=37%><B>UCHAR SrbRetryCount</B></TD>
<TD width=55%>Internal variable to keep track of hardware retries. Used by DISKVSD / CDVSD.</TD>
</TR>

<TR VALIGN="top">
<TD width=8%><B> 4D</B></TD>
<TD width=37%><B>UCHAR Filler[3]</B></TD>
<TD width=55%>&nbsp;</TD>
</TR>
</TABLE><BR>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: SRB%20(SCSI_REQUEST_BLOCK)"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
