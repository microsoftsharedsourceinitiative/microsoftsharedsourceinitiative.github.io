<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Driver Initialization and Registration</TITLE>
<SCRIPT SRC="../scripts/linkcss.js"></SCRIPT><SCRIPT SRC="../scripts/langref.js"></SCRIPT></HEAD>
<BODY TOPMARGIN="0">

<TABLE CLASS="buttonbarshade" CELLSPACING=0><TR><TD>&nbsp;</TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING=0>
<TR ID="hdr"><TD CLASS="runninghead" NOWRAP>Windows&nbsp;98/Me:&nbsp;Windows&nbsp;DDK</TD></TR>
</TABLE>
<H2><A NAME="_pss_4058"></A>Driver Initialization and Registration</H2>

<P>The IOS initializes a device driver that has not been previously loaded by sending a SYS_DYNAMIC_DEVICE_INIT message to the driver's control procedure. It sends the message once for each load group to which the driver belongs. When the driver receives the message, it registers itself with the IOS by setting the <B>DRP_aer</B> and <B>DRP_ilb</B> members of its <B>DRP</B> structure and passing the address of the structure to the <B>IOS_Register</B> service. The IOS uses the <B>DRP</B> structure to register the driver and initialize internally maintained structures, such as the <B>DVT</B> structure, for the driver. </P>

<P>The driver must set the <B>DRP_aer</B> field to the address of the driver's asynchronous event routine. The IOS calls this routine, passing it asynchronous event packets (AEPs), when it wants the driver to carry out specific tasks. For example, to complete driver registration, the IOS calls the routine with a packet for an AEP_INITIALIZE function. This occurs before the <B>IOS_Register</B> service returns, so the driver must be prepared to process the call as part of its registration. </P>

<P>The driver also must set the <B>DRP_ilb</B> field to the address of a <B>ILB</B> structure for the driver. The IOS sets several members in the <B>ILB</B> structure, such as <B>ILB_service_rtn</B>, which the driver can use to call the corresponding IOS service routines to carry out useful tasks. </P>

<P>Because a driver needs the <B>DRP</B> structure only during initialization, the structure is typically defined in the driver's IDATA segment and is discarded after initialization. The <B>ILB</B> structure should not be discarded. </P>

<P>To manage the device drivers, the IOS creates a chain of <B>DVT</B> structures that contain information about the device driver, such as its file name and the address of its asynchronous event routine. The IOS initially adds a <B>DVT</B> structure to the chain for itself. Thereafter, the IOS adds a new <B>DVT</B> structure whenever a new driver or client first registers with the IOS. The IOS places the address of the <B>DVT</B> structure for a driver in the <B>ILB</B> structure, however, drivers should avoid modifying the <B>DVT</B>. </P>

<P>The IOS indicates whether the registration succeeded by setting the <B>DRP_reg_result</B> member. When the <B>IOS_Register</B> service returns, the driver must check the value of this member. If the registration is successful, the driver clears the carry flag and returns from processing the SYS_DYNAMIC_DEVICE_INIT message. Otherwise, the driver must set the carry flag and return. </P>

<H4>See Also</H4>

<P><B>DRP</B>, <B>DVT</B>, <B>ILB</B>, <B>IOS_Register</B> </P>
<DIV CLASS="footer"><A HREF="mailto:ddksurv1@microsoft.com?subject=DDK Topic Feedback&body=Build date: Thursday, January 16, 2003     Topic Title: Driver%20Initialization%20and%20Registration"> Send feedback on this topic.</A> / Built on Thursday, January 16, 2003 </DIV>
</BODY>
</HTML>
